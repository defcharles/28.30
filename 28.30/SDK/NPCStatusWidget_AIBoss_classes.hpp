#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCStatusWidget_AIBoss

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NPCStatusWidget_AIBoss.NPCStatusWidget_AIBoss_C
// 0x0088 (0x0348 - 0x02C0)
class UNPCStatusWidget_AIBoss_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNPCStatusWidgetBar_C*                  Bar_Health;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNPCStatusWidgetBar_C*                  Bar_Shield;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Health;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           VisibiltyTimer;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool bVisible)> VisibilityChanged;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        StatusWidgetVisibleDuration;                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHealthPercent;                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentShieldPercent;                              // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Health;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PipAmount;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumPipAmount;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumHealthPips;                                     // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxShield;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumShieldPips;                                     // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeWidgetVisibleDuration(double StatusWidgetVisibleDuration_0);
	void Construct();
	void EventHideStatus();
	void EventUpdateStatus(double Health, double Shield, double MaxHealth, double MaxShield_0, bool ShowShield);
	void ExecuteUbergraph_NPCStatusWidget_AIBoss(int32 EntryPoint);
	void SetMaxHealth(double MaxHealth);
	void SetMaxShield(double MaxShield_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPCStatusWidget_AIBoss_C">();
	}
	static class UNPCStatusWidget_AIBoss_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCStatusWidget_AIBoss_C>();
	}
};
static_assert(alignof(UNPCStatusWidget_AIBoss_C) == 0x000008, "Wrong alignment on UNPCStatusWidget_AIBoss_C");
static_assert(sizeof(UNPCStatusWidget_AIBoss_C) == 0x000348, "Wrong size on UNPCStatusWidget_AIBoss_C");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, UberGraphFrame) == 0x0002C0, "Member 'UNPCStatusWidget_AIBoss_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, Background) == 0x0002C8, "Member 'UNPCStatusWidget_AIBoss_C::Background' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, Bar_Health) == 0x0002D0, "Member 'UNPCStatusWidget_AIBoss_C::Bar_Health' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, Bar_Shield) == 0x0002D8, "Member 'UNPCStatusWidget_AIBoss_C::Bar_Shield' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, SizeBox_Health) == 0x0002E0, "Member 'UNPCStatusWidget_AIBoss_C::SizeBox_Health' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, VisibiltyTimer) == 0x0002E8, "Member 'UNPCStatusWidget_AIBoss_C::VisibiltyTimer' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, VisibilityChanged) == 0x0002F0, "Member 'UNPCStatusWidget_AIBoss_C::VisibilityChanged' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, StatusWidgetVisibleDuration) == 0x000300, "Member 'UNPCStatusWidget_AIBoss_C::StatusWidgetVisibleDuration' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, CurrentHealthPercent) == 0x000308, "Member 'UNPCStatusWidget_AIBoss_C::CurrentHealthPercent' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, CurrentShieldPercent) == 0x000310, "Member 'UNPCStatusWidget_AIBoss_C::CurrentShieldPercent' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, Max_Health) == 0x000318, "Member 'UNPCStatusWidget_AIBoss_C::Max_Health' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, PipAmount) == 0x000320, "Member 'UNPCStatusWidget_AIBoss_C::PipAmount' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, MinimumPipAmount) == 0x000328, "Member 'UNPCStatusWidget_AIBoss_C::MinimumPipAmount' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, NumHealthPips) == 0x000330, "Member 'UNPCStatusWidget_AIBoss_C::NumHealthPips' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, MaxShield) == 0x000338, "Member 'UNPCStatusWidget_AIBoss_C::MaxShield' has a wrong offset!");
static_assert(offsetof(UNPCStatusWidget_AIBoss_C, NumShieldPips) == 0x000340, "Member 'UNPCStatusWidget_AIBoss_C::NumShieldPips' has a wrong offset!");

}

