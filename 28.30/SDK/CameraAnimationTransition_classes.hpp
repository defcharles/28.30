#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraAnimationTransition

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CameraAnimationTransition.CameraAnimationTransition_C
// 0x0028 (0x02B8 - 0x0290)
class ACameraAnimationTransition_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortnitePartyBackdrop_Camera_C*        CameraBR;                                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AFortnitePartyBackdrop_Camera_C*        CameraBR16Player;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	EFrontEndCamera                               CameraState;                                       // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void MoveCameraUp();
	void ExecuteUbergraph_CameraAnimationTransition(int32 EntryPoint);
	void CanChangeCamera(EFrontEndCamera FromCamera, EFrontEndCamera ToCamera, bool* CanChangeCamera_0);
	void MoveCameraDown();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CameraAnimationTransition_C">();
	}
	static class ACameraAnimationTransition_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraAnimationTransition_C>();
	}
};
static_assert(alignof(ACameraAnimationTransition_C) == 0x000008, "Wrong alignment on ACameraAnimationTransition_C");
static_assert(sizeof(ACameraAnimationTransition_C) == 0x0002B8, "Wrong size on ACameraAnimationTransition_C");
static_assert(offsetof(ACameraAnimationTransition_C, UberGraphFrame) == 0x000290, "Member 'ACameraAnimationTransition_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACameraAnimationTransition_C, DefaultSceneRoot) == 0x000298, "Member 'ACameraAnimationTransition_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACameraAnimationTransition_C, CameraBR) == 0x0002A0, "Member 'ACameraAnimationTransition_C::CameraBR' has a wrong offset!");
static_assert(offsetof(ACameraAnimationTransition_C, CameraBR16Player) == 0x0002A8, "Member 'ACameraAnimationTransition_C::CameraBR16Player' has a wrong offset!");
static_assert(offsetof(ACameraAnimationTransition_C, CameraState) == 0x0002B0, "Member 'ACameraAnimationTransition_C::CameraState' has a wrong offset!");

}

