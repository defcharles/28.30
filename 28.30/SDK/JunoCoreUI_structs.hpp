#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoCoreUI

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum JunoCoreUI.EJunoPlayerCardStatus
// NumValues: 0x0003
enum class EJunoPlayerCardStatus : uint8
{
	InWorld                                  = 0,
	NotInWorld                               = 1,
	Count                                    = 2,
};

// Enum JunoCoreUI.EJunoContextMenuAction
// NumValues: 0x0011
enum class EJunoContextMenuAction : uint8
{
	None                                     = 0,
	Swap                                     = 1,
	Drop                                     = 2,
	Craft                                    = 3,
	Equip                                    = 4,
	Unequip                                  = 5,
	Split                                    = 6,
	DepositStack                             = 7,
	Deposit                                  = 8,
	TakeStack                                = 9,
	Take                                     = 10,
	MoveToInventory                          = 11,
	MoveToMainHand                           = 12,
	MoveToOffHand                            = 13,
	OpenInventory                            = 14,
	Spawn                                    = 15,
	SpawnMultiple                            = 16,
};

// Enum JunoCoreUI.EJunoContextMenuActionState
// NumValues: 0x0003
enum class EJunoContextMenuActionState : uint8
{
	Shown                                    = 0,
	Disabled                                 = 1,
	Hidden                                   = 2,
};

// Enum JunoCoreUI.EJunoWorldSettingCategory
// NumValues: 0x0003
enum class EJunoWorldSettingCategory : uint8
{
	None                                     = 0,
	Basic                                    = 1,
	Advanced                                 = 2,
};

// Enum JunoCoreUI.EJunoWorldSanctionType
// NumValues: 0x0003
enum class EJunoWorldSanctionType : uint8
{
	MultiplayerBan                           = 0,
	CompleteBan                              = 1,
	None                                     = 2,
};

// Enum JunoCoreUI.EMatchmakingErrorType
// NumValues: 0x0004
enum class EMatchmakingErrorType : uint8
{
	NotEnoughWorldSpotsForParty              = 0,
	NotAllPartyMembersHaveWorldAccess        = 1,
	LookingForPartyIsEnabled                 = 2,
	None                                     = 3,
};

// Enum JunoCoreUI.ESanctionType
// NumValues: 0x0005
enum class ESanctionType : uint8
{
	OwnerWithoutPartyMultiplayerBan          = 0,
	OwnerWithPartyMultiplayerBan             = 1,
	KeyHolderBan                             = 2,
	CompleteBan                              = 3,
	None                                     = 4,
};

// ScriptStruct JunoCoreUI.JunoContextMenuInfo
// 0x0008 (0x0008 - 0x0000)
struct FJunoContextMenuInfo final
{
public:
	EJunoContextMenuAction                        MenuAction;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuantityCount;                                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoContextMenuInfo) == 0x000004, "Wrong alignment on FJunoContextMenuInfo");
static_assert(sizeof(FJunoContextMenuInfo) == 0x000008, "Wrong size on FJunoContextMenuInfo");
static_assert(offsetof(FJunoContextMenuInfo, MenuAction) == 0x000000, "Member 'FJunoContextMenuInfo::MenuAction' has a wrong offset!");
static_assert(offsetof(FJunoContextMenuInfo, QuantityCount) == 0x000004, "Member 'FJunoContextMenuInfo::QuantityCount' has a wrong offset!");

// ScriptStruct JunoCoreUI.JunoContextMenuQuantityChange
// 0x0008 (0x0008 - 0x0000)
struct FJunoContextMenuQuantityChange final
{
public:
	EJunoContextMenuAction                        MenuAction;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuantityCount;                                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoContextMenuQuantityChange) == 0x000004, "Wrong alignment on FJunoContextMenuQuantityChange");
static_assert(sizeof(FJunoContextMenuQuantityChange) == 0x000008, "Wrong size on FJunoContextMenuQuantityChange");
static_assert(offsetof(FJunoContextMenuQuantityChange, MenuAction) == 0x000000, "Member 'FJunoContextMenuQuantityChange::MenuAction' has a wrong offset!");
static_assert(offsetof(FJunoContextMenuQuantityChange, QuantityCount) == 0x000004, "Member 'FJunoContextMenuQuantityChange::QuantityCount' has a wrong offset!");

// ScriptStruct JunoCoreUI.JunoSettingOptionRow
// 0x0038 (0x0038 - 0x0000)
struct FJunoSettingOptionRow final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name;                                              // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0020(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoSettingOptionRow) == 0x000008, "Wrong alignment on FJunoSettingOptionRow");
static_assert(sizeof(FJunoSettingOptionRow) == 0x000038, "Wrong size on FJunoSettingOptionRow");
static_assert(offsetof(FJunoSettingOptionRow, ID) == 0x000000, "Member 'FJunoSettingOptionRow::ID' has a wrong offset!");
static_assert(offsetof(FJunoSettingOptionRow, Name) == 0x000008, "Member 'FJunoSettingOptionRow::Name' has a wrong offset!");
static_assert(offsetof(FJunoSettingOptionRow, Description) == 0x000020, "Member 'FJunoSettingOptionRow::Description' has a wrong offset!");

// ScriptStruct JunoCoreUI.JunoSettingDataRow
// 0x0048 (0x0050 - 0x0008)
struct FJunoSettingDataRow final : public FTableRowBase
{
public:
	class FText                                   SettingName;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EJunoWorldSettingCategory                     Category;                                          // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 DefaultOptionPerMode;                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJunoSettingOptionRow>          Options;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bCanBeLocked;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoSettingDataRow) == 0x000008, "Wrong alignment on FJunoSettingDataRow");
static_assert(sizeof(FJunoSettingDataRow) == 0x000050, "Wrong size on FJunoSettingDataRow");
static_assert(offsetof(FJunoSettingDataRow, SettingName) == 0x000008, "Member 'FJunoSettingDataRow::SettingName' has a wrong offset!");
static_assert(offsetof(FJunoSettingDataRow, Category) == 0x000020, "Member 'FJunoSettingDataRow::Category' has a wrong offset!");
static_assert(offsetof(FJunoSettingDataRow, DefaultOptionPerMode) == 0x000028, "Member 'FJunoSettingDataRow::DefaultOptionPerMode' has a wrong offset!");
static_assert(offsetof(FJunoSettingDataRow, Options) == 0x000038, "Member 'FJunoSettingDataRow::Options' has a wrong offset!");
static_assert(offsetof(FJunoSettingDataRow, bCanBeLocked) == 0x000048, "Member 'FJunoSettingDataRow::bCanBeLocked' has a wrong offset!");

// ScriptStruct JunoCoreUI.JunoWorldImageDataRow
// 0x0020 (0x0028 - 0x0008)
struct FJunoWorldImageDataRow final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              WorldImage;                                        // 0x0008(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoWorldImageDataRow) == 0x000008, "Wrong alignment on FJunoWorldImageDataRow");
static_assert(sizeof(FJunoWorldImageDataRow) == 0x000028, "Wrong size on FJunoWorldImageDataRow");
static_assert(offsetof(FJunoWorldImageDataRow, WorldImage) == 0x000008, "Member 'FJunoWorldImageDataRow::WorldImage' has a wrong offset!");

}

