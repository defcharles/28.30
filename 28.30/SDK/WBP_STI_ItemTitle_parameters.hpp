#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_STI_ItemTitle

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_STI_ItemTitle.WBP_STI_ItemTitle_C.ExecuteUbergraph_WBP_STI_ItemTitle
// 0x0008 (0x0008 - 0x0000)
struct WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle) == 0x000004, "Wrong alignment on WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle");
static_assert(sizeof(WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle) == 0x000008, "Wrong size on WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle");
static_assert(offsetof(WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle, EntryPoint) == 0x000000, "Member 'WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_STI_ItemTitle_C_ExecuteUbergraph_WBP_STI_ItemTitle::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_STI_ItemTitle.WBP_STI_ItemTitle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_STI_ItemTitle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTitle_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_STI_ItemTitle_C_PreConstruct");
static_assert(sizeof(WBP_STI_ItemTitle_C_PreConstruct) == 0x000001, "Wrong size on WBP_STI_ItemTitle_C_PreConstruct");
static_assert(offsetof(WBP_STI_ItemTitle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_STI_ItemTitle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_STI_ItemTitle.WBP_STI_ItemTitle_C.Update Subheading
// 0x0030 (0x0030 - 0x0000)
struct WBP_STI_ItemTitle_C_Update_Subheading final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Index_0;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x001C(0x0014)()
};
static_assert(alignof(WBP_STI_ItemTitle_C_Update_Subheading) == 0x000008, "Wrong alignment on WBP_STI_ItemTitle_C_Update_Subheading");
static_assert(sizeof(WBP_STI_ItemTitle_C_Update_Subheading) == 0x000030, "Wrong size on WBP_STI_ItemTitle_C_Update_Subheading");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subheading, Text) == 0x000000, "Member 'WBP_STI_ItemTitle_C_Update_Subheading::Text' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subheading, Index_0) == 0x000018, "Member 'WBP_STI_ItemTitle_C_Update_Subheading::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subheading, Temp_bool_Variable) == 0x000019, "Member 'WBP_STI_ItemTitle_C_Update_Subheading::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subheading, K2Node_Select_Default) == 0x00001C, "Member 'WBP_STI_ItemTitle_C_Update_Subheading::K2Node_Select_Default' has a wrong offset!");

// Function WBP_STI_ItemTitle.WBP_STI_ItemTitle_C.Update Subscribed Tag
// 0x0060 (0x0060 - 0x0000)
struct WBP_STI_ItemTitle_C_Update_Subscribed_Tag final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
};
static_assert(alignof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag) == 0x000008, "Wrong alignment on WBP_STI_ItemTitle_C_Update_Subscribed_Tag");
static_assert(sizeof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag) == 0x000060, "Wrong size on WBP_STI_ItemTitle_C_Update_Subscribed_Tag");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag, Index_0) == 0x000000, "Member 'WBP_STI_ItemTitle_C_Update_Subscribed_Tag::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag, Temp_bool_Variable) == 0x000001, "Member 'WBP_STI_ItemTitle_C_Update_Subscribed_Tag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag, Temp_text_Variable) == 0x000008, "Member 'WBP_STI_ItemTitle_C_Update_Subscribed_Tag::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_STI_ItemTitle_C_Update_Subscribed_Tag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag, CallFunc_Format_ReturnValue) == 0x000030, "Member 'WBP_STI_ItemTitle_C_Update_Subscribed_Tag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTitle_C_Update_Subscribed_Tag, K2Node_Select_Default) == 0x000048, "Member 'WBP_STI_ItemTitle_C_Update_Subscribed_Tag::K2Node_Select_Default' has a wrong offset!");

}

