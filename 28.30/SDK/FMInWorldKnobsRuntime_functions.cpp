#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMInWorldKnobsRuntime

#include "Basic.hpp"

#include "FMInWorldKnobsRuntime_classes.hpp"
#include "FMInWorldKnobsRuntime_parameters.hpp"


namespace SDK
{

// Function FMInWorldKnobsRuntime.FabricChildActorComponent.CreateModulatorPortIfNeeded
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFMDeviceCableModulatorPortComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFMDeviceCableModulatorPortComponent* UFabricChildActorComponent::CreateModulatorPortIfNeeded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateModulatorPortIfNeeded");

	Params::FabricChildActorComponent_CreateModulatorPortIfNeeded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricChildActorComponent.OnModulatorPortConnected
// (Final, Native, Private)
// Parameters:
// class UFMDeviceCablePortComponent*      ConnectedPort                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricChildActorComponent::OnModulatorPortConnected(class UFMDeviceCablePortComponent* ConnectedPort)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnModulatorPortConnected");

	Params::FabricChildActorComponent_OnModulatorPortConnected Parms{};

	Parms.ConnectedPort = ConnectedPort;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricChildActorComponent.OnModulatorPortDisconnected
// (Final, Native, Private)
// Parameters:
// class UFMDeviceCablePortComponent*      DisconnectedPort                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricChildActorComponent::OnModulatorPortDisconnected(class UFMDeviceCablePortComponent* DisconnectedPort)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnModulatorPortDisconnected");

	Params::FabricChildActorComponent_OnModulatorPortDisconnected Parms{};

	Parms.DisconnectedPort = DisconnectedPort;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricChildActorComponent.GetChildActorAsFabricButton
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFabricButtonBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFabricButtonBase* UFabricChildActorComponent::GetChildActorAsFabricButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetChildActorAsFabricButton");

	Params::FabricChildActorComponent_GetChildActorAsFabricButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricChildActorComponent.GetChildActorAsFabricInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IFabricInteractable>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IFabricInteractable> UFabricChildActorComponent::GetChildActorAsFabricInteractable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetChildActorAsFabricInteractable");

	Params::FabricChildActorComponent_GetChildActorAsFabricInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricChildActorComponent.GetChildActorAsInWorldKnobActorBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFMInWorldKnobActorBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFMInWorldKnobActorBase* UFabricChildActorComponent::GetChildActorAsInWorldKnobActorBase() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetChildActorAsInWorldKnobActorBase");

	Params::FabricChildActorComponent_GetChildActorAsInWorldKnobActorBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricChildActorComponent.GetKnobOptionKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFabricChildActorComponent::GetKnobOptionKey() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetKnobOptionKey");

	Params::FabricChildActorComponent_GetKnobOptionKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetComponent*                 InScreenWidgetComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InWidth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFabricScreenLayoutDataAsset*     ScreenLayout                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricScreenComponent::Initialize(class UWidgetComponent* InScreenWidgetComponent, int32 InWidth, int32 InHeight, class UFabricScreenLayoutDataAsset* ScreenLayout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Initialize");

	Params::FabricScreenComponent_Initialize Parms{};

	Parms.InScreenWidgetComponent = InScreenWidgetComponent;
	Parms.InWidth = InWidth;
	Parms.InHeight = InHeight;
	Parms.ScreenLayout = ScreenLayout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.OnCopiedKnobActorSet
// (Final, Native, Private)
// Parameters:
// class UFMInWorldKnobActorCopyComponent* CopyComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFMInWorldKnobActorBase*          NewKnobActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricScreenComponent::OnCopiedKnobActorSet(class UFMInWorldKnobActorCopyComponent* CopyComponent, class AFMInWorldKnobActorBase* NewKnobActor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCopiedKnobActorSet");

	Params::FabricScreenComponent_OnCopiedKnobActorSet Parms{};

	Parms.CopyComponent = CopyComponent;
	Parms.NewKnobActor = NewKnobActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.SetScreenSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InWidth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricScreenComponent::SetScreenSize(int32 InWidth, int32 InHeight)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetScreenSize");

	Params::FabricScreenComponent_SetScreenSize Parms{};

	Parms.InWidth = InWidth;
	Parms.InHeight = InHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.ConvertGridPositionToUnrealLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        GridPosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFabricScreenComponent::ConvertGridPositionToUnrealLocation(const struct FVector2D& GridPosition) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConvertGridPositionToUnrealLocation");

	Params::FabricScreenComponent_ConvertGridPositionToUnrealLocation Parms{};

	Parms.GridPosition = std::move(GridPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.ConvertUnrealLocationToGridPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          UnrealPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UFabricScreenComponent::ConvertUnrealLocationToGridPosition(const struct FVector& UnrealPosition) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConvertUnrealLocationToGridPosition");

	Params::FabricScreenComponent_ConvertUnrealLocationToGridPosition Parms{};

	Parms.UnrealPosition = std::move(UnrealPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.GetScreenGridHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFabricScreenComponent::GetScreenGridHeight() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetScreenGridHeight");

	Params::FabricScreenComponent_GetScreenGridHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.GetScreenGridWidth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFabricScreenComponent::GetScreenGridWidth() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetScreenGridWidth");

	Params::FabricScreenComponent_GetScreenGridWidth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricScreenComponent.SnapUnrealLocationToScreenGrid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          UnrealPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFabricScreenComponent::SnapUnrealLocationToScreenGrid(const struct FVector& UnrealPosition) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SnapUnrealLocationToScreenGrid");

	Params::FabricScreenComponent_SnapUnrealLocationToScreenGrid Parms{};

	Parms.UnrealPosition = std::move(UnrealPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.IsApplyingOverrides
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFabricUserOptionSaveComponent::IsApplyingOverrides()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsApplyingOverrides");

	Params::FabricUserOptionSaveComponent_IsApplyingOverrides Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.OnAnyOptionUpdated
// (Final, Native, Private)

void UFabricUserOptionSaveComponent::OnAnyOptionUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAnyOptionUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.SetMusicClock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicClockComponent*             MusicClockComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricUserOptionSaveComponent::SetMusicClock(class UMusicClockComponent* MusicClockComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMusicClock");

	Params::FabricUserOptionSaveComponent_SetMusicClock Parms{};

	Parms.MusicClockComponent = MusicClockComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.SetPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PresetIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricUserOptionSaveComponent::SetPreset(int32 PresetIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPreset");

	Params::FabricUserOptionSaveComponent_SetPreset Parms{};

	Parms.PresetIndex = PresetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.SetSaveSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SaveSlotIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFabricUserOptionSaveComponent::SetSaveSlot(int32 SaveSlotIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSaveSlot");

	Params::FabricUserOptionSaveComponent_SetSaveSlot Parms{};

	Parms.SaveSlotIndex = SaveSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.GetOverrideForParam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Param                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFabricUserOptionSaveComponent::GetOverrideForParam(const class FString& Param) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOverrideForParam");

	Params::FabricUserOptionSaveComponent_GetOverrideForParam Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FabricUserOptionSaveComponent.HasOverrideForParam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Param                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFabricUserOptionSaveComponent::HasOverrideForParam(const class FString& Param) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasOverrideForParam");

	Params::FabricUserOptionSaveComponent_HasOverrideForParam Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldCableOptionsComponent.OnAnyOptionChanged
// (Final, Native, Protected)

void UFMInWorldCableOptionsComponent::OnAnyOptionChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAnyOptionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldCableOptionsComponent.OnCableConnected
// (Final, Native, Protected)
// Parameters:
// class UFMDeviceCablePortComponent*      SourcePort                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFMDeviceCablePortComponent*      ConnectedPort                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldCableOptionsComponent::OnCableConnected(class UFMDeviceCablePortComponent* SourcePort, class UFMDeviceCablePortComponent* ConnectedPort)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCableConnected");

	Params::FMInWorldCableOptionsComponent_OnCableConnected Parms{};

	Parms.SourcePort = SourcePort;
	Parms.ConnectedPort = ConnectedPort;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldCableOptionsComponent.OnCableDisconncted
// (Final, Native, Protected)
// Parameters:
// class UFMDeviceCablePortComponent*      SourcePort                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFMDeviceCablePortComponent*      DisconnectedPort                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldCableOptionsComponent::OnCableDisconncted(class UFMDeviceCablePortComponent* SourcePort, class UFMDeviceCablePortComponent* DisconnectedPort)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCableDisconncted");

	Params::FMInWorldCableOptionsComponent_OnCableDisconncted Parms{};

	Parms.SourcePort = SourcePort;
	Parms.DisconnectedPort = DisconnectedPort;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldCableOptionsComponent.OnOptionsLoaded
// (Final, Native, Protected)

void UFMInWorldCableOptionsComponent::OnOptionsLoaded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnOptionsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.CopyAttributesFromOtherKnob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFMInWorldKnobActorBase*          OtherKnob                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::CopyAttributesFromOtherKnob(class AFMInWorldKnobActorBase* OtherKnob)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CopyAttributesFromOtherKnob");

	Params::FMInWorldKnobActorBase_CopyAttributesFromOtherKnob Parms{};

	Parms.OtherKnob = OtherKnob;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.CopyAttributesFromOtherKnobInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AFMInWorldKnobActorBase*          OtherKnob                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::CopyAttributesFromOtherKnobInternal(class AFMInWorldKnobActorBase* OtherKnob)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CopyAttributesFromOtherKnobInternal");

	Params::FMInWorldKnobActorBase_CopyAttributesFromOtherKnobInternal Parms{};

	Parms.OtherKnob = OtherKnob;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.EnsureProperCollision
// (Final, Native, Public, BlueprintCallable)

void AFMInWorldKnobActorBase::EnsureProperCollision()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnsureProperCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueLabel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFMInWorldKnobActorBase::GetCurrentValueLabel()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueLabel");

	Params::FMInWorldKnobActorBase_GetCurrentValueLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.HitComponentUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USceneComponent*                  NewHitComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::HitComponentUpdated(class USceneComponent* NewHitComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HitComponentUpdated");

	Params::FMInWorldKnobActorBase_HitComponentUpdated Parms{};

	Parms.NewHitComponent = NewHitComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.KnobValueChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SnapToSelection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::KnobValueChanged(int32 NewIndex, bool SnapToSelection, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("KnobValueChanged");

	Params::FMInWorldKnobActorBase_KnobValueChanged Parms{};

	Parms.NewIndex = NewIndex;
	Parms.SnapToSelection = SnapToSelection;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.OnFloatProviderFloatUpdated
// (Final, Native, Private)
// Parameters:
// float                                   NewFloat                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::OnFloatProviderFloatUpdated(float NewFloat)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnFloatProviderFloatUpdated");

	Params::FMInWorldKnobActorBase_OnFloatProviderFloatUpdated Parms{};

	Parms.NewFloat = NewFloat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.OnKnobIsVisible
// (Final, Native, Protected)
// Parameters:
// bool                                    bInIsVisible                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::OnKnobIsVisible(bool bInIsVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnKnobIsVisible");

	Params::FMInWorldKnobActorBase_OnKnobIsVisible Parms{};

	Parms.bInIsVisible = bInIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.OnReceiveFloatProvidersFromPort
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class UFabricFloatProviderBase*> FloatProvider                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::OnReceiveFloatProvidersFromPort(const TArray<class UFabricFloatProviderBase*>& FloatProvider)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnReceiveFloatProvidersFromPort");

	Params::FMInWorldKnobActorBase_OnReceiveFloatProvidersFromPort Parms{};

	Parms.FloatProvider = std::move(FloatProvider);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.ReceiveOnWidgetViewModelSet
// (Event, Public, BlueprintEvent)

void AFMInWorldKnobActorBase::ReceiveOnWidgetViewModelSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReceiveOnWidgetViewModelSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.ResetToDefaultValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::ResetToDefaultValue(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetToDefaultValue");

	Params::FMInWorldKnobActorBase_ResetToDefaultValue Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetCurrentKnobPosition
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   KnobPosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetCurrentKnobPosition(float KnobPosition)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentKnobPosition");

	Params::FMInWorldKnobActorBase_SetCurrentKnobPosition Parms{};

	Parms.KnobPosition = KnobPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetKnobDisplayOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisplayOnly                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetKnobDisplayOnly(bool bDisplayOnly)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetKnobDisplayOnly");

	Params::FMInWorldKnobActorBase_SetKnobDisplayOnly Parms{};

	Parms.bDisplayOnly = bDisplayOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetKnobEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetKnobEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetKnobEnabled");

	Params::FMInWorldKnobActorBase_SetKnobEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetNumberOptions
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumberOptions                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetNumberOptions(int32 NumberOptions)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNumberOptions");

	Params::FMInWorldKnobActorBase_SetNumberOptions Parms{};

	Parms.NumberOptions = NumberOptions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetOverrideOptionLabels
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FText>                     Labels                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetOverrideOptionLabels(const TArray<class FText>& Labels)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetOverrideOptionLabels");

	Params::FMInWorldKnobActorBase_SetOverrideOptionLabels Parms{};

	Parms.Labels = std::move(Labels);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetSelectedIndex
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SnapToSelection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetSelectedIndex(int32 Index_0, bool SnapToSelection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSelectedIndex");

	Params::FMInWorldKnobActorBase_SetSelectedIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.SnapToSelection = SnapToSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetTitle
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetTitle(const class FText& Title)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTitle");

	Params::FMInWorldKnobActorBase_SetTitle Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.SetWidgetViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFabricInteractableViewModel*     ViewModel                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::SetWidgetViewModel(class UFabricInteractableViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetWidgetViewModel");

	Params::FMInWorldKnobActorBase_SetWidgetViewModel Parms{};

	Parms.ViewModel = ViewModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.StartTrackingInput
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::StartTrackingInput(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartTrackingInput");

	Params::FMInWorldKnobActorBase_StartTrackingInput Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.StopTrackingInput
// (Event, Protected, BlueprintEvent)

void AFMInWorldKnobActorBase::StopTrackingInput()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopTrackingInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.UpdateDisplayOnlyVisuals
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplayOnly                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::UpdateDisplayOnlyVisuals(bool bDisplayOnly)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateDisplayOnlyVisuals");

	Params::FMInWorldKnobActorBase_UpdateDisplayOnlyVisuals Parms{};

	Parms.bDisplayOnly = bDisplayOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.UpdateEnabledVisuals
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::UpdateEnabledVisuals(bool bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateEnabledVisuals");

	Params::FMInWorldKnobActorBase_UpdateEnabledVisuals Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.UpdateFocusVisuals
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFocused                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::UpdateFocusVisuals(bool bFocused)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateFocusVisuals");

	Params::FMInWorldKnobActorBase_UpdateFocusVisuals Parms{};

	Parms.bFocused = bFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.UpdateInteractableVisuals
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInteractable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFMInWorldKnobActorBase::UpdateInteractableVisuals(bool bInteractable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateInteractableVisuals");

	Params::FMInWorldKnobActorBase_UpdateInteractableVisuals Parms{};

	Parms.bInteractable = bInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetConsumeInteractionFromChildInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFMInWorldKnobActorBase::GetConsumeInteractionFromChildInteractable(class APlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetConsumeInteractionFromChildInteractable");

	Params::FMInWorldKnobActorBase_GetConsumeInteractionFromChildInteractable Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCopyClassInternal
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* AFMInWorldKnobActorBase::GetCopyClassInternal() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCopyClassInternal");

	Params::FMInWorldKnobActorBase_GetCopyClassInternal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCopyWidgetClassInternal
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class UUserWidget>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UUserWidget> AFMInWorldKnobActorBase::GetCopyWidgetClassInternal() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCopyWidgetClassInternal");

	Params::FMInWorldKnobActorBase_GetCopyWidgetClassInternal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentOptionIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFMInWorldKnobActorBase::GetCurrentOptionIndex() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentOptionIndex");

	Params::FMInWorldKnobActorBase_GetCurrentOptionIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueAsBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFMInWorldKnobActorBase::GetCurrentValueAsBool() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueAsBool");

	Params::FMInWorldKnobActorBase_GetCurrentValueAsBool Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueAsEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AFMInWorldKnobActorBase::GetCurrentValueAsEnum() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueAsEnum");

	Params::FMInWorldKnobActorBase_GetCurrentValueAsEnum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueAsFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFMInWorldKnobActorBase::GetCurrentValueAsFloat() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueAsFloat");

	Params::FMInWorldKnobActorBase_GetCurrentValueAsFloat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueAsInt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFMInWorldKnobActorBase::GetCurrentValueAsInt() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueAsInt");

	Params::FMInWorldKnobActorBase_GetCurrentValueAsInt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueAsName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AFMInWorldKnobActorBase::GetCurrentValueAsName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueAsName");

	Params::FMInWorldKnobActorBase_GetCurrentValueAsName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetCurrentValueAsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AFMInWorldKnobActorBase::GetCurrentValueAsString() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentValueAsString");

	Params::FMInWorldKnobActorBase_GetCurrentValueAsString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetHitComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* AFMInWorldKnobActorBase::GetHitComponent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHitComponent");

	Params::FMInWorldKnobActorBase_GetHitComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetInteractingController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* AFMInWorldKnobActorBase::GetInteractingController() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInteractingController");

	Params::FMInWorldKnobActorBase_GetInteractingController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetNumberOptions
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFMInWorldKnobActorBase::GetNumberOptions() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumberOptions");

	Params::FMInWorldKnobActorBase_GetNumberOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.GetWidgetViewModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFabricInteractableViewModel*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFabricInteractableViewModel* AFMInWorldKnobActorBase::GetWidgetViewModel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetWidgetViewModel");

	Params::FMInWorldKnobActorBase_GetWidgetViewModel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.HasActiveFloatProvider
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFMInWorldKnobActorBase::HasActiveFloatProvider() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasActiveFloatProvider");

	Params::FMInWorldKnobActorBase_HasActiveFloatProvider Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorBase.IsOverriddenByPort
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFMInWorldKnobActorBase::IsOverriddenByPort() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsOverriddenByPort");

	Params::FMInWorldKnobActorBase_IsOverriddenByPort Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.ClearCopiedInWorldKnob
// (Final, Native, Public, BlueprintCallable)

void UFMInWorldKnobActorCopyComponent::ClearCopiedInWorldKnob()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearCopiedInWorldKnob");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.OnInWorldKnobFloatProviderConnectionChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bConnected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ModulatorObject                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobActorCopyComponent::OnInWorldKnobFloatProviderConnectionChanged(bool bConnected, class UObject* ModulatorObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInWorldKnobFloatProviderConnectionChanged");

	Params::FMInWorldKnobActorCopyComponent_OnInWorldKnobFloatProviderConnectionChanged Parms{};

	Parms.bConnected = bConnected;
	Parms.ModulatorObject = ModulatorObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.OnInWorldKnobModulatedPropertyValueChanged
// (Final, Native, Private)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ModulatorObject                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobActorCopyComponent::OnInWorldKnobModulatedPropertyValueChanged(const class FString& Value, class UObject* ModulatorObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInWorldKnobModulatedPropertyValueChanged");

	Params::FMInWorldKnobActorCopyComponent_OnInWorldKnobModulatedPropertyValueChanged Parms{};

	Parms.Value = std::move(Value);
	Parms.ModulatorObject = ModulatorObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.OnInWorldKnobRuntimeValueChanged
// (Final, Native, Private)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaylistUserOptionBase*          Option                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobActorCopyComponent::OnInWorldKnobRuntimeValueChanged(const class FString& Value, class UPlaylistUserOptionBase* Option)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInWorldKnobRuntimeValueChanged");

	Params::FMInWorldKnobActorCopyComponent_OnInWorldKnobRuntimeValueChanged Parms{};

	Parms.Value = std::move(Value);
	Parms.Option = Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.OnInWorldKnobSerializedValueChanged
// (Final, Native, Private)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaylistUserOptionBase*          Option                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobActorCopyComponent::OnInWorldKnobSerializedValueChanged(const class FString& Value, class UPlaylistUserOptionBase* Option, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInWorldKnobSerializedValueChanged");

	Params::FMInWorldKnobActorCopyComponent_OnInWorldKnobSerializedValueChanged Parms{};

	Parms.Value = std::move(Value);
	Parms.Option = Option;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.SetCopiedInWorldKnob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldKnobObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobActorCopyComponent::SetCopiedInWorldKnob(class UObject* InWorldKnobObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCopiedInWorldKnob");

	Params::FMInWorldKnobActorCopyComponent_SetCopiedInWorldKnob Parms{};

	Parms.InWorldKnobObject = InWorldKnobObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent.GetCurrentKnobValueBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFMInWorldKnobActorCopyComponent::GetCurrentKnobValueBP() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentKnobValueBP");

	Params::FMInWorldKnobActorCopyComponent_GetCurrentKnobValueBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.ActorHasValidControllerBP
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  OutFortPlayerPawn                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                OutPlayerController                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMInWorldKnobOptionsComponent::ActorHasValidControllerBP(class AActor* Actor, class AFortPlayerPawn** OutFortPlayerPawn, class APlayerController** OutPlayerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ActorHasValidControllerBP");

	Params::FMInWorldKnobOptionsComponent_ActorHasValidControllerBP Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutFortPlayerPawn != nullptr)
		*OutFortPlayerPawn = Parms.OutFortPlayerPawn;

	if (OutPlayerController != nullptr)
		*OutPlayerController = Parms.OutPlayerController;

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnAnyOptionUpdated
// (Final, Native, Private)

void UFMInWorldKnobOptionsComponent::OnAnyOptionUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAnyOptionUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnInWorldKnobRuntimeOptionChanged
// (Final, Native, Private)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaylistUserOptionBase*          Option                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobOptionsComponent::OnInWorldKnobRuntimeOptionChanged(const class FString& Value, class UPlaylistUserOptionBase* Option)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInWorldKnobRuntimeOptionChanged");

	Params::FMInWorldKnobOptionsComponent_OnInWorldKnobRuntimeOptionChanged Parms{};

	Parms.Value = std::move(Value);
	Parms.Option = Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnInWorldKnobSerializedOptionChanged
// (Final, Native, Private)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaylistUserOptionBase*          Option                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMInWorldKnobOptionsComponent::OnInWorldKnobSerializedOptionChanged(const class FString& Value, class UPlaylistUserOptionBase* Option, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInWorldKnobSerializedOptionChanged");

	Params::FMInWorldKnobOptionsComponent_OnInWorldKnobSerializedOptionChanged Parms{};

	Parms.Value = std::move(Value);
	Parms.Option = Option;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnOptionsLoaded
// (Final, Native, Private)

void UFMInWorldKnobOptionsComponent::OnOptionsLoaded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnOptionsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnRep_ReplicatedFabricInteractableObjects
// (Final, Native, Private)

void UFMInWorldKnobOptionsComponent::OnRep_ReplicatedFabricInteractableObjects()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ReplicatedFabricInteractableObjects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnRep_ReplicatedInWorldKnobInterfaceObjects
// (Final, Native, Private)

void UFMInWorldKnobOptionsComponent::OnRep_ReplicatedInWorldKnobInterfaceObjects()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ReplicatedInWorldKnobInterfaceObjects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnRep_ReplicatedModulatorPorts
// (Final, Native, Private)

void UFMInWorldKnobOptionsComponent::OnRep_ReplicatedModulatorPorts()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ReplicatedModulatorPorts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OnSaveOverridesChanged
// (Final, Native, Private)

void UFMInWorldKnobOptionsComponent::OnSaveOverridesChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSaveOverridesChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.AreAllKnobsLoadedForNotify
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMInWorldKnobOptionsComponent::AreAllKnobsLoadedForNotify() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AreAllKnobsLoadedForNotify");

	Params::FMInWorldKnobOptionsComponent_AreAllKnobsLoadedForNotify Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.CanMakeUserOptionChanges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMInWorldKnobOptionsComponent::CanMakeUserOptionChanges() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanMakeUserOptionChanges");

	Params::FMInWorldKnobOptionsComponent_CanMakeUserOptionChanges Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent.OwnsInWorldKnobObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          InWorldKnobObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMInWorldKnobOptionsComponent::OwnsInWorldKnobObject(class UObject* InWorldKnobObject) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OwnsInWorldKnobObject");

	Params::FMInWorldKnobOptionsComponent_OwnsInWorldKnobObject Parms{};

	Parms.InWorldKnobObject = InWorldKnobObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

