#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Ascender_Ascent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCNL_Ascender_Ascent.GCNL_Ascender_Ascent_C.ExecuteUbergraph_GCNL_Ascender_Ascent
// 0x03B0 (0x03B0 - 0x0000)
struct GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_2;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_2;                         // 0x0010(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_2;                 // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_2;                    // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     K2Node_Event_BurstCameraShakeInstance_1;           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance_1;                 // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0118(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_1;                 // 0x01E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x01F8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     K2Node_Event_BurstCameraShakeInstance;             // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0220(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents;                   // 0x02F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x0300(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A[0x2];                                      // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0370(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0388(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULegacyCameraShake*                     CallFunc_Conv_LegacyCameraShake_ReturnValue;       // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShake_Scale_ImplicitCast;      // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent) == 0x000008, "Wrong alignment on GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent");
static_assert(sizeof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent) == 0x0003B0, "Wrong size on GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, EntryPoint) == 0x000000, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_MyTarget_2) == 0x000008, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_MyTarget_2' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_Parameters_2) == 0x000010, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_Parameters_2' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_ParticleComponents_2) == 0x0000E0, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_ParticleComponents_2' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_AudioComponents_2) == 0x0000F0, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_AudioComponents_2' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_BurstCameraShakeInstance_1) == 0x000100, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_BurstCameraShakeInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_BurstDecalInstance_1) == 0x000108, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_BurstDecalInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_MyTarget_1) == 0x000110, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_Parameters_1) == 0x000118, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_ParticleComponents_1) == 0x0001E8, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_AudioComponents_1) == 0x0001F8, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_BurstCameraShakeInstance) == 0x000208, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_BurstDecalInstance) == 0x000210, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_MyTarget) == 0x000218, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_Parameters) == 0x000220, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_ParticleComponents) == 0x0002F0, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_Event_AudioComponents) == 0x000300, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000310, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_DynamicCast_bSuccess) == 0x000318, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_IsValid_ReturnValue) == 0x000319, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_GetController_ReturnValue) == 0x000320, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_GetVelocity_ReturnValue) == 0x000328, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000340, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_VSize_ReturnValue) == 0x000348, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_DynamicCast_AsPlayer_Controller) == 0x000350, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_DynamicCast_bSuccess_1) == 0x000358, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_IsValid_ReturnValue_1) == 0x000359, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_GetValueAtLevel_ReturnValue) == 0x00035C, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000360, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000368, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, K2Node_CreateDelegate_OutputDelegate) == 0x000370, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_FMax_ReturnValue) == 0x000380, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000388, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_StartCameraShake_ReturnValue) == 0x000390, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_Conv_LegacyCameraShake_ReturnValue) == 0x000398, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_Conv_LegacyCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0003A0, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent, CallFunc_StartCameraShake_Scale_ImplicitCast) == 0x0003A8, "Member 'GCNL_Ascender_Ascent_C_ExecuteUbergraph_GCNL_Ascender_Ascent::CallFunc_StartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function GCNL_Ascender_Ascent.GCNL_Ascender_Ascent_C.OnApplicationGeneric
// 0x0108 (0x0108 - 0x0000)
struct GCNL_Ascender_Ascent_C_OnApplicationGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Ascender_Ascent_C_OnApplicationGeneric) == 0x000008, "Wrong alignment on GCNL_Ascender_Ascent_C_OnApplicationGeneric");
static_assert(sizeof(GCNL_Ascender_Ascent_C_OnApplicationGeneric) == 0x000108, "Wrong size on GCNL_Ascender_Ascent_C_OnApplicationGeneric");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnApplicationGeneric, MyTarget) == 0x000000, "Member 'GCNL_Ascender_Ascent_C_OnApplicationGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnApplicationGeneric, Parameters) == 0x000008, "Member 'GCNL_Ascender_Ascent_C_OnApplicationGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnApplicationGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Ascender_Ascent_C_OnApplicationGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnApplicationGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Ascender_Ascent_C_OnApplicationGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnApplicationGeneric, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_Ascender_Ascent_C_OnApplicationGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnApplicationGeneric, BurstDecalInstance) == 0x000100, "Member 'GCNL_Ascender_Ascent_C_OnApplicationGeneric::BurstDecalInstance' has a wrong offset!");

// Function GCNL_Ascender_Ascent.GCNL_Ascender_Ascent_C.OnLoopingStartGeneric
// 0x00F8 (0x00F8 - 0x0000)
struct GCNL_Ascender_Ascent_C_OnLoopingStartGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_Ascender_Ascent_C_OnLoopingStartGeneric) == 0x000008, "Wrong alignment on GCNL_Ascender_Ascent_C_OnLoopingStartGeneric");
static_assert(sizeof(GCNL_Ascender_Ascent_C_OnLoopingStartGeneric) == 0x0000F8, "Wrong size on GCNL_Ascender_Ascent_C_OnLoopingStartGeneric");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnLoopingStartGeneric, MyTarget) == 0x000000, "Member 'GCNL_Ascender_Ascent_C_OnLoopingStartGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnLoopingStartGeneric, Parameters) == 0x000008, "Member 'GCNL_Ascender_Ascent_C_OnLoopingStartGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnLoopingStartGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Ascender_Ascent_C_OnLoopingStartGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnLoopingStartGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Ascender_Ascent_C_OnLoopingStartGeneric::AudioComponents' has a wrong offset!");

// Function GCNL_Ascender_Ascent.GCNL_Ascender_Ascent_C.OnRemovalGeneric
// 0x0108 (0x0108 - 0x0000)
struct GCNL_Ascender_Ascent_C_OnRemovalGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Ascender_Ascent_C_OnRemovalGeneric) == 0x000008, "Wrong alignment on GCNL_Ascender_Ascent_C_OnRemovalGeneric");
static_assert(sizeof(GCNL_Ascender_Ascent_C_OnRemovalGeneric) == 0x000108, "Wrong size on GCNL_Ascender_Ascent_C_OnRemovalGeneric");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnRemovalGeneric, MyTarget) == 0x000000, "Member 'GCNL_Ascender_Ascent_C_OnRemovalGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnRemovalGeneric, Parameters) == 0x000008, "Member 'GCNL_Ascender_Ascent_C_OnRemovalGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnRemovalGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Ascender_Ascent_C_OnRemovalGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnRemovalGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Ascender_Ascent_C_OnRemovalGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnRemovalGeneric, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_Ascender_Ascent_C_OnRemovalGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Ascender_Ascent_C_OnRemovalGeneric, BurstDecalInstance) == 0x000100, "Member 'GCNL_Ascender_Ascent_C_OnRemovalGeneric::BurstDecalInstance' has a wrong offset!");

}

