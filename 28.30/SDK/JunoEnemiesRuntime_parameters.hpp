#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoEnemiesRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function JunoEnemiesRuntime.JunoEnemiesBlueprintLibrary.GetCurvedPath
// 0x0028 (0x0028 - 0x0000)
struct JunoEnemiesBlueprintLibrary_GetCurvedPath final
{
public:
	TArray<struct FVector>                        ControlPoints;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         NumSegments;                                       // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoEnemiesBlueprintLibrary_GetCurvedPath) == 0x000008, "Wrong alignment on JunoEnemiesBlueprintLibrary_GetCurvedPath");
static_assert(sizeof(JunoEnemiesBlueprintLibrary_GetCurvedPath) == 0x000028, "Wrong size on JunoEnemiesBlueprintLibrary_GetCurvedPath");
static_assert(offsetof(JunoEnemiesBlueprintLibrary_GetCurvedPath, ControlPoints) == 0x000000, "Member 'JunoEnemiesBlueprintLibrary_GetCurvedPath::ControlPoints' has a wrong offset!");
static_assert(offsetof(JunoEnemiesBlueprintLibrary_GetCurvedPath, NumSegments) == 0x000010, "Member 'JunoEnemiesBlueprintLibrary_GetCurvedPath::NumSegments' has a wrong offset!");
static_assert(offsetof(JunoEnemiesBlueprintLibrary_GetCurvedPath, ReturnValue) == 0x000018, "Member 'JunoEnemiesBlueprintLibrary_GetCurvedPath::ReturnValue' has a wrong offset!");

// Function JunoEnemiesRuntime.JunoCheatManager_Enemies.JunoSpawnCreature
// 0x0018 (0x0018 - 0x0000)
struct JunoCheatManager_Enemies_JunoSpawnCreature final
{
public:
	class FString                                 CreatureName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JunoCheatManager_Enemies_JunoSpawnCreature) == 0x000008, "Wrong alignment on JunoCheatManager_Enemies_JunoSpawnCreature");
static_assert(sizeof(JunoCheatManager_Enemies_JunoSpawnCreature) == 0x000018, "Wrong size on JunoCheatManager_Enemies_JunoSpawnCreature");
static_assert(offsetof(JunoCheatManager_Enemies_JunoSpawnCreature, CreatureName) == 0x000000, "Member 'JunoCheatManager_Enemies_JunoSpawnCreature::CreatureName' has a wrong offset!");
static_assert(offsetof(JunoCheatManager_Enemies_JunoSpawnCreature, Count) == 0x000010, "Member 'JunoCheatManager_Enemies_JunoSpawnCreature::Count' has a wrong offset!");

}

