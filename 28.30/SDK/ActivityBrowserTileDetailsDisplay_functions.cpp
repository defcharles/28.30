#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserTileDetailsDisplay

#include "Basic.hpp"

#include "ActivityBrowserTileDetailsDisplay_classes.hpp"
#include "ActivityBrowserTileDetailsDisplay_parameters.hpp"


namespace SDK
{

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnItemExpansionChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnItemSelectionChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ColumnSizeToTileSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   NewColumnSize                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        NewTileSize                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::ColumnSizeToTileSize(int32 NewColumnSize, struct FVector2D* NewTileSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ColumnSizeToTileSize");

	Params::ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize Parms{};

	Parms.NewColumnSize = NewColumnSize;

	UObject::ProcessEvent(Func, &Parms);

	if (NewTileSize != nullptr)
		*NewTileSize = std::move(Parms.NewTileSize);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::Construct()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.DisableClickTimerExpired
// (BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::DisableClickTimerExpired()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DisableClickTimerExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ExecuteUbergraph_ActivityBrowserTileDetailsDisplay
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::ExecuteUbergraph_ActivityBrowserTileDetailsDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_ActivityBrowserTileDetailsDisplay");

	Params::ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Grow Tile on Select for Non Hero Rows
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::Grow_Tile_on_Select_for_Non_Hero_Rows()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Grow Tile on Select for Non Hero Rows");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnDetailsUpdated
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::OnDetailsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDetailsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnFriendsPlayingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumPlaying                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnFriendsPlayingChanged(int32 NumPlaying)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnFriendsPlayingChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged Parms{};

	Parms.NumPlaying = NumPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnIsFavoriteChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFavorite                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnIsFavoriteChanged(const bool bIsFavorite)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIsFavoriteChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged Parms{};

	Parms.bIsFavorite = bIsFavorite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnListItemObjectSet");

	Params::ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnLocalPlayerDemoted
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::OnLocalPlayerDemoted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLocalPlayerDemoted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnLocalPlayerPromotedToLeader
// (Event, Protected, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::OnLocalPlayerPromotedToLeader()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLocalPlayerPromotedToLeader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnLogoImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Texture                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnLogoImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLogoImageChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnPartySizeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   PartySize                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnPartySizeChanged(const int32 PartySize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPartySizeChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged Parms{};

	Parms.PartySize = PartySize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Texture                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewImageChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnRequiresPurchaseChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bRequiresPurchase                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnRequiresPurchaseChanged(const bool bRequiresPurchase)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRequiresPurchaseChanged");

	Params::ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged Parms{};

	Parms.bRequiresPurchase = bRequiresPurchase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileActiveSet");

	Params::ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnUpdateColumnSize
// (BlueprintEvent)
// Parameters:
// int32                                   NewColumnSize                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::OnUpdateColumnSize(int32 NewColumnSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateColumnSize");

	Params::ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize Parms{};

	Parms.NewColumnSize = NewColumnSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::ActivityBrowserTileDetailsDisplay_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ResetOnHoverSelectAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::ResetOnHoverSelectAnimation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetOnHoverSelectAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ResetOnImageLoadedAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLoaded                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::ResetOnImageLoadedAnimation(bool IsLoaded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetOnImageLoadedAnimation");

	Params::ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation Parms{};

	Parms.IsLoaded = IsLoaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Set Game Mode Text Size
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FontSize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::Set_Game_Mode_Text_Size(int32 FontSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Set Game Mode Text Size");

	Params::ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size Parms{};

	Parms.FontSize = FontSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Set Game Mode Text Size Override
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::Set_Game_Mode_Text_Size_Override()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Set Game Mode Text Size Override");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetBannerColorAnimator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::SetBannerColorAnimator(double NewParam)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBannerColorAnimator");

	Params::ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetDetailsButtonAvailable
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::SetDetailsButtonAvailable()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDetailsButtonAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetDisabledText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::SetDisabledText()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDisabledText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetDisabledThumbnailOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::SetDisabledThumbnailOverlay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDisabledThumbnailOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetExtraVerticalPaddingOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InVerticalTilePadding                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::SetExtraVerticalPaddingOffset(double InVerticalTilePadding)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetExtraVerticalPaddingOffset");

	Params::ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset Parms{};

	Parms.InVerticalTilePadding = InVerticalTilePadding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetFavoriteVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFavorited                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::SetFavoriteVisibility(bool IsFavorited)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFavoriteVisibility");

	Params::ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility Parms{};

	Parms.IsFavorited = IsFavorited;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetFirstTimeModalStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::SetFirstTimeModalStyle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFirstTimeModalStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetHideDetails
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide_Details                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::SetHideDetails(bool Hide_Details)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHideDetails");

	Params::ActivityBrowserTileDetailsDisplay_C_SetHideDetails Parms{};

	Parms.Hide_Details = Hide_Details;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetIsPromotedHero
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPromotedHeroCarousel                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::SetIsPromotedHero(bool IsPromotedHeroCarousel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsPromotedHero");

	Params::ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero Parms{};

	Parms.IsPromotedHeroCarousel = IsPromotedHeroCarousel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetTileSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::SetTileSize(const struct FVector2D& Size)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTileSize");

	Params::ActivityBrowserTileDetailsDisplay_C_SetTileSize Parms{};

	Parms.Size = std::move(Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ShouldPlayTileVideo
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bOutResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::ShouldPlayTileVideo(bool* bOutResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldPlayTileVideo");

	Params::ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutResult != nullptr)
		*bOutResult = Parms.bOutResult;
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.TestActivityTileRequirePurchaseFalse
// (BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::TestActivityTileRequirePurchaseFalse()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TestActivityTileRequirePurchaseFalse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.TestActivityTileRequirePurchaseTrue
// (BlueprintCallable, BlueprintEvent)

void UActivityBrowserTileDetailsDisplay_C::TestActivityTileRequirePurchaseTrue()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TestActivityTileRequirePurchaseTrue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateCCU
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CCUCount                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::UpdateCCU(const int32 CCUCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCCU");

	Params::ActivityBrowserTileDetailsDisplay_C_UpdateCCU Parms{};

	Parms.CCUCount = CCUCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateEpicActivityStyling
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CreatorDisplayName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::UpdateEpicActivityStyling(const class FString& CreatorDisplayName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateEpicActivityStyling");

	Params::ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling Parms{};

	Parms.CreatorDisplayName = std::move(CreatorDisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateRequiresPurchase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPurchaseRequired_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::UpdateRequiresPurchase(bool IsPurchaseRequired_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateRequiresPurchase");

	Params::ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase Parms{};

	Parms.IsPurchaseRequired_0 = IsPurchaseRequired_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateSqueegeeWidgets
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortGameActivity*                GameActivity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserTileDetailsDisplay_C::UpdateSqueegeeWidgets(class UFortGameActivity* GameActivity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateSqueegeeWidgets");

	Params::ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets Parms{};

	Parms.GameActivity = GameActivity;

	UObject::ProcessEvent(Func, &Parms);
}

}

