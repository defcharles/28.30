#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActiveAugments_List

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.CreateActiveAugmentList
// 0x0028 (0x0028 - 0x0000)
struct WBP_ActiveAugments_List_C_CreateActiveAugmentList final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActiveAugments_ListEntry_C*        CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_CreateActiveAugmentList) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_CreateActiveAugmentList");
static_assert(sizeof(WBP_ActiveAugments_List_C_CreateActiveAugmentList) == 0x000028, "Wrong size on WBP_ActiveAugments_List_C_CreateActiveAugmentList");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, Count) == 0x000000, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::Count' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, CurrentIndex) == 0x000004, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, Temp_int_Variable) == 0x00000C, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_CreateActiveAugmentList, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WBP_ActiveAugments_List_C_CreateActiveAugmentList::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.ExecuteUbergraph_WBP_ActiveAugments_List
// 0x0098 (0x0098 - 0x0000)
struct WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortPlayerAugmentItemDefinition*> K2Node_Event_ActiveAugments;                       // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActiveAugments_ListEntry_C*        CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActiveAugments_ListEntry_C*        K2Node_DynamicCast_AsWBP_Active_Augments_List_Entry; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumAugmentGrantRounds_NumAugmentsForRound; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List");
static_assert(sizeof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List) == 0x000098, "Wrong size on WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, EntryPoint) == 0x000000, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, K2Node_Event_ActiveAugments) == 0x000010, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::K2Node_Event_ActiveAugments' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, Temp_int_Variable) == 0x000020, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_AddChild_ReturnValue) == 0x000048, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_GetEndTime_ReturnValue) == 0x000058, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_GetAllChildren_ReturnValue) == 0x000068, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, K2Node_DynamicCast_AsWBP_Active_Augments_List_Entry) == 0x000088, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::K2Node_DynamicCast_AsWBP_Active_Augments_List_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List, CallFunc_GetNumAugmentGrantRounds_NumAugmentsForRound) == 0x000094, "Member 'WBP_ActiveAugments_List_C_ExecuteUbergraph_WBP_ActiveAugments_List::CallFunc_GetNumAugmentGrantRounds_NumAugmentsForRound' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.OnAugmentsUpdated
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActiveAugments_List_C_OnAugmentsUpdated final
{
public:
	TArray<class UFortPlayerAugmentItemDefinition*> ActiveAugments;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_ActiveAugments_List_C_OnAugmentsUpdated) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_OnAugmentsUpdated");
static_assert(sizeof(WBP_ActiveAugments_List_C_OnAugmentsUpdated) == 0x000010, "Wrong size on WBP_ActiveAugments_List_C_OnAugmentsUpdated");
static_assert(offsetof(WBP_ActiveAugments_List_C_OnAugmentsUpdated, ActiveAugments) == 0x000000, "Member 'WBP_ActiveAugments_List_C_OnAugmentsUpdated::ActiveAugments' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActiveAugments_List_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ActiveAugments_List_C_PreConstruct");
static_assert(sizeof(WBP_ActiveAugments_List_C_PreConstruct) == 0x000001, "Wrong size on WBP_ActiveAugments_List_C_PreConstruct");
static_assert(offsetof(WBP_ActiveAugments_List_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ActiveAugments_List_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.RefreshArrows
// 0x0038 (0x0038 - 0x0000)
struct WBP_ActiveAugments_List_C_RefreshArrows final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_RefreshArrows) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_RefreshArrows");
static_assert(sizeof(WBP_ActiveAugments_List_C_RefreshArrows) == 0x000038, "Wrong size on WBP_ActiveAugments_List_C_RefreshArrows");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000015, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000030, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshArrows, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x000034, "Member 'WBP_ActiveAugments_List_C_RefreshArrows::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.RefreshCurrentAugmentList
// 0x0068 (0x0068 - 0x0000)
struct WBP_ActiveAugments_List_C_RefreshCurrentAugmentList final
{
public:
	int32                                         CurrentAugmentIndex;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActiveAugments_ListEntry_C*        AugmentEntry;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPlayerAugmentItemDefinition*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActiveAugments_ListEntry_C*        K2Node_DynamicCast_AsWBP_Active_Augments_List_Entry; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_RefreshCurrentAugmentList");
static_assert(sizeof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList) == 0x000068, "Wrong size on WBP_ActiveAugments_List_C_RefreshCurrentAugmentList");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CurrentAugmentIndex) == 0x000000, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CurrentAugmentIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, AugmentEntry) == 0x000008, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::AugmentEntry' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, Temp_int_Variable) == 0x000028, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_GetAllChildren_ReturnValue) == 0x000038, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, K2Node_DynamicCast_AsWBP_Active_Augments_List_Entry) == 0x000058, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::K2Node_DynamicCast_AsWBP_Active_Augments_List_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_RefreshCurrentAugmentList, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'WBP_ActiveAugments_List_C_RefreshCurrentAugmentList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.ResetFocusedEntry
// 0x0028 (0x0028 - 0x0000)
struct WBP_ActiveAugments_List_C_ResetFocusedEntry final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActiveAugments_ListEntry_C*        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActiveAugments_ListEntry_C*        CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_ResetFocusedEntry) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_ResetFocusedEntry");
static_assert(sizeof(WBP_ActiveAugments_List_C_ResetFocusedEntry) == 0x000028, "Wrong size on WBP_ActiveAugments_List_C_ResetFocusedEntry");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ResetFocusedEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_ActiveAugments_List_C_ResetFocusedEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.ScrollDown
// 0x0020 (0x0020 - 0x0000)
struct WBP_ActiveAugments_List_C_ScrollDown final
{
public:
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_ScrollDown) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_ScrollDown");
static_assert(sizeof(WBP_ActiveAugments_List_C_ScrollDown) == 0x000020, "Wrong size on WBP_ActiveAugments_List_C_ScrollDown");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_IsUsingTouch_ReturnValue) == 0x000000, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_IsMobileGame_ReturnValue) == 0x000001, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollDown, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ActiveAugments_List_C_ScrollDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.ScrollUp
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActiveAugments_List_C_ScrollUp final
{
public:
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_ScrollUp) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_ScrollUp");
static_assert(sizeof(WBP_ActiveAugments_List_C_ScrollUp) == 0x000010, "Wrong size on WBP_ActiveAugments_List_C_ScrollUp");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollUp, CallFunc_SpawnSound2D_ReturnValue) == 0x000000, "Member 'WBP_ActiveAugments_List_C_ScrollUp::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollUp, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ActiveAugments_List_C_ScrollUp::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_ScrollUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ActiveAugments_List_C_ScrollUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.SetFocusedEntry
// 0x0020 (0x0020 - 0x0000)
struct WBP_ActiveAugments_List_C_SetFocusedEntry final
{
public:
	int32                                         NewFocusedEntryIndex;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActiveAugments_ListEntry_C*        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActiveAugments_ListEntry_C*        CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_SetFocusedEntry) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_SetFocusedEntry");
static_assert(sizeof(WBP_ActiveAugments_List_C_SetFocusedEntry) == 0x000020, "Wrong size on WBP_ActiveAugments_List_C_SetFocusedEntry");
static_assert(offsetof(WBP_ActiveAugments_List_C_SetFocusedEntry, NewFocusedEntryIndex) == 0x000000, "Member 'WBP_ActiveAugments_List_C_SetFocusedEntry::NewFocusedEntryIndex' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_SetFocusedEntry, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_ActiveAugments_List_C_SetFocusedEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_SetFocusedEntry, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'WBP_ActiveAugments_List_C_SetFocusedEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_SetFocusedEntry, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_ActiveAugments_List_C_SetFocusedEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.UpdateScrollBoundAction
// 0x002C (0x002C - 0x0000)
struct WBP_ActiveAugments_List_C_UpdateScrollBoundAction final
{
public:
	ECommonInputType                              InputType_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction) == 0x000004, "Wrong alignment on WBP_ActiveAugments_List_C_UpdateScrollBoundAction");
static_assert(sizeof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction) == 0x00002C, "Wrong size on WBP_ActiveAugments_List_C_UpdateScrollBoundAction");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, InputType_0) == 0x000000, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::InputType_0' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, Temp_bool_Variable) == 0x000001, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, Temp_name_Variable) == 0x000004, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, Temp_name_Variable_1) == 0x000008, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, Temp_name_Variable_2) == 0x00000C, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, Temp_name_Variable_3) == 0x000014, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, K2Node_Select_Default) == 0x000018, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, Temp_bool_Variable_1) == 0x00001D, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, K2Node_Select_Default_1) == 0x000024, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_UpdateScrollBoundAction, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'WBP_ActiveAugments_List_C_UpdateScrollBoundAction::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_ActiveAugments_List.WBP_ActiveAugments_List_C.GetNumAugmentGrantRounds
// 0x0018 (0x0018 - 0x0000)
struct WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds final
{
public:
	int32                                         NumAugmentsForRound;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds) == 0x000008, "Wrong alignment on WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds");
static_assert(sizeof(WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds) == 0x000018, "Wrong size on WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds");
static_assert(offsetof(WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds, NumAugmentsForRound) == 0x000000, "Member 'WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds::NumAugmentsForRound' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds, CallFunc_GetValueAtLevel_ReturnValue) == 0x000004, "Member 'WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds, CallFunc_FTrunc_A_ImplicitCast) == 0x000010, "Member 'WBP_ActiveAugments_List_C_GetNumAugmentGrantRounds::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

}

