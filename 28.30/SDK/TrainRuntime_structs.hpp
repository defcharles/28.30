#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrainRuntime

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct TrainRuntime.TrainCarRuntimeData
// 0x00E0 (0x00E0 - 0x0000)
struct alignas(0x10) FTrainCarRuntimeData final
{
public:
	class ATrainCar*                              Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConnectorLength;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0xD0];                                      // 0x0010(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTrainCarRuntimeData) == 0x000010, "Wrong alignment on FTrainCarRuntimeData");
static_assert(sizeof(FTrainCarRuntimeData) == 0x0000E0, "Wrong size on FTrainCarRuntimeData");
static_assert(offsetof(FTrainCarRuntimeData, Actor) == 0x000000, "Member 'FTrainCarRuntimeData::Actor' has a wrong offset!");
static_assert(offsetof(FTrainCarRuntimeData, Length) == 0x000008, "Member 'FTrainCarRuntimeData::Length' has a wrong offset!");
static_assert(offsetof(FTrainCarRuntimeData, ConnectorLength) == 0x00000C, "Member 'FTrainCarRuntimeData::ConnectorLength' has a wrong offset!");

// ScriptStruct TrainRuntime.TrainRailKeyframe
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x04) FTrainRailKeyframe final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTrainRailKeyframe) == 0x000004, "Wrong alignment on FTrainRailKeyframe");
static_assert(sizeof(FTrainRailKeyframe) == 0x000018, "Wrong size on FTrainRailKeyframe");

// ScriptStruct TrainRuntime.TrainMovementData
// 0x0010 (0x0010 - 0x0000)
struct FTrainMovementData final
{
public:
	float                                         Timestamp;                                         // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceAlongRail;                                 // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeAlongRail;                                     // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReverseDirection;                                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTrainMovementData) == 0x000004, "Wrong alignment on FTrainMovementData");
static_assert(sizeof(FTrainMovementData) == 0x000010, "Wrong size on FTrainMovementData");
static_assert(offsetof(FTrainMovementData, Timestamp) == 0x000000, "Member 'FTrainMovementData::Timestamp' has a wrong offset!");
static_assert(offsetof(FTrainMovementData, DistanceAlongRail) == 0x000004, "Member 'FTrainMovementData::DistanceAlongRail' has a wrong offset!");
static_assert(offsetof(FTrainMovementData, TimeAlongRail) == 0x000008, "Member 'FTrainMovementData::TimeAlongRail' has a wrong offset!");
static_assert(offsetof(FTrainMovementData, bReverseDirection) == 0x00000C, "Member 'FTrainMovementData::bReverseDirection' has a wrong offset!");

}

