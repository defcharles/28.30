#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LocomotionInitiativeRuntime

#include "Basic.hpp"

#include "LocomotionInitiativeRuntime_classes.hpp"
#include "LocomotionInitiativeRuntime_parameters.hpp"


namespace SDK
{

// Function LocomotionInitiativeRuntime.FortLocomotionLayerMaskDataAsset.ApplyTo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortLocomotionLayerMaskDataSet  DataAsset                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortLocomotionLayerMaskDataAsset::ApplyTo(struct FFortLocomotionLayerMaskDataSet* DataAsset) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplyTo");

	Params::FortLocomotionLayerMaskDataAsset_ApplyTo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DataAsset != nullptr)
		*DataAsset = std::move(Parms.DataAsset);
}


// Function LocomotionInitiativeRuntime.FortPlayerMotionMatchingLocomotionAnimInstance.OnUpdateMotionMatching
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortPlayerMotionMatchingLocomotionAnimInstance::OnUpdateMotionMatching(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateMotionMatching");

	Params::FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LocomotionInitiativeRuntime.FortPlayerMotionMatchingLocomotionAnimInstance.OnUpdateMotionMatchingState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortPlayerMotionMatchingLocomotionAnimInstance::OnUpdateMotionMatchingState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateMotionMatchingState");

	Params::FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LocomotionInitiativeRuntime.FortPlayerMotionMatchingLocomotionAnimInstance.GetMotionMatchingBlendProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendProfile*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlendProfile* UFortPlayerMotionMatchingLocomotionAnimInstance::GetMotionMatchingBlendProfile() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMotionMatchingBlendProfile");

	Params::FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

