#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_RewardTile

#include "Basic.hpp"

#include "WBP_LinedNotebook_RewardTile_classes.hpp"
#include "WBP_LinedNotebook_RewardTile_parameters.hpp"


namespace SDK
{

// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");

	Params::WBP_LinedNotebook_RewardTile_C_BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");

	Params::WBP_LinedNotebook_RewardTile_C_BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.ExecuteUbergraph_WBP_LinedNotebook_RewardTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::ExecuteUbergraph_WBP_LinedNotebook_RewardTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_LinedNotebook_RewardTile");

	Params::WBP_LinedNotebook_RewardTile_C_ExecuteUbergraph_WBP_LinedNotebook_RewardTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.GetTileTextBaseOpacity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UWBP_LinedNotebook_RewardTile_C::GetTileTextBaseOpacity()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTileTextBaseOpacity");

	Params::WBP_LinedNotebook_RewardTile_C_GetTileTextBaseOpacity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.OnButtonUnhovered_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::OnButtonUnhovered_Event(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnButtonUnhovered_Event");

	Params::WBP_LinedNotebook_RewardTile_C_OnButtonUnhovered_Event Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.OnEventScreenDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortEventScreenData*             InEventScreenData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::OnEventScreenDataSet(const class UFortEventScreenData* InEventScreenData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEventScreenDataSet");

	Params::WBP_LinedNotebook_RewardTile_C_OnEventScreenDataSet Parms{};

	Parms.InEventScreenData = InEventScreenData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.OnInputMethodChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        NewInputType                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::OnInputMethodChanged(const ECommonInputType NewInputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputMethodChanged");

	Params::WBP_LinedNotebook_RewardTile_C_OnInputMethodChanged Parms{};

	Parms.NewInputType = NewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.OnRewardWidgetReset
// (Event, Public, BlueprintEvent)

void UWBP_LinedNotebook_RewardTile_C::OnRewardWidgetReset()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardWidgetReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.OnSetRewardItem
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RequiredProgress                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RemainingProgress                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RewardProgressPercent_0                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PreviewProgressPercent                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverallProgressPercent                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInPreviewMode                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::OnSetRewardItem(const int32 RequiredProgress, const int32 RemainingProgress, const float RewardProgressPercent_0, const float PreviewProgressPercent, const float OverallProgressPercent, const bool bInPreviewMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetRewardItem");

	Params::WBP_LinedNotebook_RewardTile_C_OnSetRewardItem Parms{};

	Parms.RequiredProgress = RequiredProgress;
	Parms.RemainingProgress = RemainingProgress;
	Parms.RewardProgressPercent_0 = RewardProgressPercent_0;
	Parms.PreviewProgressPercent = PreviewProgressPercent;
	Parms.OverallProgressPercent = OverallProgressPercent;
	Parms.bInPreviewMode = bInPreviewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.PlayHoverAnims
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::PlayHoverAnims(bool Forward)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayHoverAnims");

	Params::WBP_LinedNotebook_RewardTile_C_PlayHoverAnims Parms{};

	Parms.Forward = Forward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::WBP_LinedNotebook_RewardTile_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetAllRewardsCollected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bAllCollected                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetAllRewardsCollected(const bool bAllCollected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAllRewardsCollected");

	Params::WBP_LinedNotebook_RewardTile_C_SetAllRewardsCollected Parms{};

	Parms.bAllCollected = bAllCollected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetAllRewardsCollectedVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllCollected                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetAllRewardsCollectedVisuals(const bool AllCollected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAllRewardsCollectedVisuals");

	Params::WBP_LinedNotebook_RewardTile_C_SetAllRewardsCollectedVisuals Parms{};

	Parms.AllCollected = AllCollected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetCustomItemIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       CustomItemIcon                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetCustomItemIcon(const class UTexture2D* CustomItemIcon)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomItemIcon");

	Params::WBP_LinedNotebook_RewardTile_C_SetCustomItemIcon Parms{};

	Parms.CustomItemIcon = CustomItemIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetDoubleWidth
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDoubleWidth                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetDoubleWidth(const bool bDoubleWidth)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDoubleWidth");

	Params::WBP_LinedNotebook_RewardTile_C_SetDoubleWidth Parms{};

	Parms.bDoubleWidth = bDoubleWidth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetEventScreenData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortEventScreenData*             EventScreenData                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetEventScreenData(class UFortEventScreenData* EventScreenData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetEventScreenData");

	Params::WBP_LinedNotebook_RewardTile_C_SetEventScreenData Parms{};

	Parms.EventScreenData = EventScreenData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetInPremiumUpgradeState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHighlighted                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetInPremiumUpgradeState(const bool bHighlighted)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInPremiumUpgradeState");

	Params::WBP_LinedNotebook_RewardTile_C_SetInPremiumUpgradeState Parms{};

	Parms.bHighlighted = bHighlighted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetInPreviewedState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPreviewed                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetInPreviewedState(const bool bPreviewed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInPreviewedState");

	Params::WBP_LinedNotebook_RewardTile_C_SetInPreviewedState Parms{};

	Parms.bPreviewed = bPreviewed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetInPreviewSelectedState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetInPreviewSelectedState(const bool bSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInPreviewSelectedState");

	Params::WBP_LinedNotebook_RewardTile_C_SetInPreviewSelectedState Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetInSelectedState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetInSelectedState(const bool bSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInSelectedState");

	Params::WBP_LinedNotebook_RewardTile_C_SetInSelectedState Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetIsBannerItem
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsBanner                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetIsBannerItem(const bool bIsBanner)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsBannerItem");

	Params::WBP_LinedNotebook_RewardTile_C_SetIsBannerItem Parms{};

	Parms.bIsBanner = bIsBanner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ProgressPercent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetProgress(float ProgressPercent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetProgress");

	Params::WBP_LinedNotebook_RewardTile_C_SetProgress Parms{};

	Parms.ProgressPercent = ProgressPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetProgressPercent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetProgressPercent(const float Percent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetProgressPercent");

	Params::WBP_LinedNotebook_RewardTile_C_SetProgressPercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetRewardItemVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RequiredProgress                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RemainingProgress                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RewardProgressPercent_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverallProgressPercent                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InPreviewMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetRewardItemVisuals(const int32 RequiredProgress, const int32 RemainingProgress, double RewardProgressPercent_0, const float OverallProgressPercent, bool InPreviewMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRewardItemVisuals");

	Params::WBP_LinedNotebook_RewardTile_C_SetRewardItemVisuals Parms{};

	Parms.RequiredProgress = RequiredProgress;
	Parms.RemainingProgress = RemainingProgress;
	Parms.RewardProgressPercent_0 = RewardProgressPercent_0;
	Parms.OverallProgressPercent = OverallProgressPercent;
	Parms.InPreviewMode = InPreviewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.SetTrackData
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FEventScreenTrackData            TrackData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bIsOwned                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_RewardTile_C::SetTrackData(const struct FEventScreenTrackData& TrackData, const bool bIsOwned)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTrackData");

	Params::WBP_LinedNotebook_RewardTile_C_SetTrackData Parms{};

	Parms.TrackData = std::move(TrackData);
	Parms.bIsOwned = bIsOwned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C.UpdateBackgroundColor
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_RewardTile_C::UpdateBackgroundColor()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateBackgroundColor");

	UObject::ProcessEvent(Func, nullptr);
}

}

