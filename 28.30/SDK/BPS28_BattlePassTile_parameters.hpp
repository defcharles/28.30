#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS28_BattlePassTile

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePassBase_structs.hpp"


namespace SDK::Params
{

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.BP_OnHoldEnded
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassTile_C_BP_OnHoldEnded final
{
public:
	float                                         HoldPercentage;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInUseSecondaryHoldAnimation;                      // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_BP_OnHoldEnded) == 0x000004, "Wrong alignment on BPS28_BattlePassTile_C_BP_OnHoldEnded");
static_assert(sizeof(BPS28_BattlePassTile_C_BP_OnHoldEnded) == 0x000008, "Wrong size on BPS28_BattlePassTile_C_BP_OnHoldEnded");
static_assert(offsetof(BPS28_BattlePassTile_C_BP_OnHoldEnded, HoldPercentage) == 0x000000, "Member 'BPS28_BattlePassTile_C_BP_OnHoldEnded::HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_BP_OnHoldEnded, bInUseSecondaryHoldAnimation) == 0x000004, "Member 'BPS28_BattlePassTile_C_BP_OnHoldEnded::bInUseSecondaryHoldAnimation' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.BP_OnHoldStarted
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassTile_C_BP_OnHoldStarted final
{
public:
	float                                         HoldPercentage;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInUseSecondaryHoldAnimation;                      // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_BP_OnHoldStarted) == 0x000004, "Wrong alignment on BPS28_BattlePassTile_C_BP_OnHoldStarted");
static_assert(sizeof(BPS28_BattlePassTile_C_BP_OnHoldStarted) == 0x000008, "Wrong size on BPS28_BattlePassTile_C_BP_OnHoldStarted");
static_assert(offsetof(BPS28_BattlePassTile_C_BP_OnHoldStarted, HoldPercentage) == 0x000000, "Member 'BPS28_BattlePassTile_C_BP_OnHoldStarted::HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_BP_OnHoldStarted, bInUseSecondaryHoldAnimation) == 0x000004, "Member 'BPS28_BattlePassTile_C_BP_OnHoldStarted::bInUseSecondaryHoldAnimation' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.BP_OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassTile_C_BP_OnInputMethodChanged final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_BP_OnInputMethodChanged) == 0x000001, "Wrong alignment on BPS28_BattlePassTile_C_BP_OnInputMethodChanged");
static_assert(sizeof(BPS28_BattlePassTile_C_BP_OnInputMethodChanged) == 0x000001, "Wrong size on BPS28_BattlePassTile_C_BP_OnInputMethodChanged");
static_assert(offsetof(BPS28_BattlePassTile_C_BP_OnInputMethodChanged, CurrentInputType) == 0x000000, "Member 'BPS28_BattlePassTile_C_BP_OnInputMethodChanged::CurrentInputType' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.ExecuteUbergraph_BPS28_BattlePassTile
// 0x06E0 (0x06E0 - 0x0000)
struct BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0094(0x0014)()
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpProfileAthena*                  CallFunc_GetAthenaProfile_ReturnValue;             // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPurchasedSeasonBook_ReturnValue;       // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0237(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       K2Node_Event_Currency;                             // 0x0241(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Price;                                // 0x0244(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0248(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasEnougCurrency;                    // 0x0262(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFreeTrack;                         // 0x0263(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOwnsBattlePass;                      // 0x0264(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_267[0x1];                                      // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattlePassTileAvailabilityStates             Temp_byte_Variable_9;                              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattlePassTileAvailabilityStates             CallFunc_GetState_ReturnValue;                     // 0x0298(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x02AC(0x0014)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x02C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentlyOwnedRewards;                // 0x02CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NeededRewards;                        // 0x02D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D7[0x1];                                      // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HoldPercentage_1;                     // 0x0308(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInUseSecondaryHoldAnimation_1;       // 0x030C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HoldPercentage;                       // 0x0310(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInUseSecondaryHoldAnimation;         // 0x0314(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317[0x1];                                      // 0x0317(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_OwnsBattlePass;                       // 0x0328(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ParentUnlocked;                       // 0x0329(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasRemainingPrerequisites;            // 0x032A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsDelayed;                           // 0x032B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x032F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_7;                           // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_8;                           // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_9;                           // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_4;         // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_5;         // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_6;         // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_7;         // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_8;         // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_9;         // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_10;        // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAffordable_ReturnValue;                 // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A[0x6];                                      // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_10;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_11;                          // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0428(0x0014)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_12;                          // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_13;                          // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0454(0x0014)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_11;        // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_12;        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_13;        // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_4;       // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_14;                          // 0x04AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_15;                          // 0x04BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_14;        // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_16;                          // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_15;        // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_16;        // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_17;                          // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_18;                          // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_17;        // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_19;                          // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_18;        // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_20;                          // 0x055C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_19;        // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAffordable_ReturnValue_1;               // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_21;                          // 0x0584(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_22;                          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_2;     // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_23;                          // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_24;                          // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_5;       // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_5;       // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_20;        // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_25;                          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAnyGrantedItemsEquipped_ReturnValue;   // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default_26;                          // 0x05F8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Event_CurrentInputType;                     // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_11;                             // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_6;       // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassTileAvailabilityStates             K2Node_Event_NewState;                             // 0x0620(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_27;                          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_28;                          // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A[0x2];                                      // 0x063A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_29;                          // 0x063C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast; // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile) == 0x000008, "Wrong alignment on BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile");
static_assert(sizeof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile) == 0x0006E0, "Wrong size on BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, EntryPoint) == 0x000000, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable) == 0x000004, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable) == 0x000008, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_1) == 0x000010, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_2) == 0x000018, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_1) == 0x000020, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable) == 0x000021, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_1) == 0x000022, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_2) == 0x000023, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_3) == 0x000024, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_4) == 0x000025, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_2) == 0x000026, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_3) == 0x000027, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_5) == 0x000028, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_6) == 0x000029, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable) == 0x00002C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_1) == 0x00003C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_7) == 0x00004C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_2) == 0x000050, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_3) == 0x000060, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_8) == 0x000070, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_4) == 0x000074, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default) == 0x000084, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_MakeStruct_SlateColor) == 0x000094, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_5) == 0x0000A8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_9) == 0x0000B8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_6) == 0x0000BC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_7) == 0x0000CC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_10) == 0x0000DC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_1) == 0x0000DD, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_3) == 0x0000E0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_4) == 0x0000E8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_11) == 0x0000F0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_8) == 0x0000F4, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_9) == 0x000104, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_12) == 0x000114, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_10) == 0x000118, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_13) == 0x000128, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_4) == 0x000129, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_5) == 0x00012A, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_14) == 0x00012B, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_11) == 0x00012C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_15) == 0x00013C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_12) == 0x000140, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_16) == 0x000150, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000158, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_17) == 0x000160, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_13) == 0x000164, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_14) == 0x000174, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_18) == 0x000184, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_15) == 0x000188, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_16) == 0x000198, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_19) == 0x0001A8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_17) == 0x0001AC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_18) == 0x0001BC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_20) == 0x0001CC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_19) == 0x0001D0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_20) == 0x0001E0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_21) == 0x0001F0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_21) == 0x0001F4, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_struct_Variable_22) == 0x000204, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetContext_ReturnValue) == 0x000218, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_22) == 0x000220, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetAthenaProfile_ReturnValue) == 0x000228, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetAthenaProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_6) == 0x000230, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_HasPurchasedSeasonBook_ReturnValue) == 0x000231, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_HasPurchasedSeasonBook_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_7) == 0x000232, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_23) == 0x000233, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_8) == 0x000234, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_2) == 0x000235, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_24) == 0x000236, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_IsValid_ReturnValue) == 0x000237, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000238, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_IsPlaying_ReturnValue) == 0x000240, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_Currency) == 0x000241, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_Currency' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_Price) == 0x000244, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_Price' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Conv_IntToText_ReturnValue) == 0x000248, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000260, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000261, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_bHasEnougCurrency) == 0x000262, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_bHasEnougCurrency' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_bIsFreeTrack) == 0x000263, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_bIsFreeTrack' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_bOwnsBattlePass) == 0x000264, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_bOwnsBattlePass' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Not_PreBool_ReturnValue) == 0x000265, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BooleanAND_ReturnValue) == 0x000266, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000268, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000270, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_byte_Variable_9) == 0x000278, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000280, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000288, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue) == 0x000290, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetState_ReturnValue) == 0x000298, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000299, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BooleanAND_ReturnValue_1) == 0x00029A, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00029B, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_3) == 0x00029C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_MakeStruct_SlateColor_1) == 0x0002AC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x0002C0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_Progress) == 0x0002C8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_CurrentlyOwnedRewards) == 0x0002CC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_CurrentlyOwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_NeededRewards) == 0x0002D0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Greater_IntInt_ReturnValue) == 0x0002D4, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002D5, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_4) == 0x0002D6, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_5) == 0x0002D8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_6) == 0x0002E8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_int_Variable) == 0x0002F8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_int_Variable_1) == 0x0002FC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000300, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_HoldPercentage_1) == 0x000308, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_HoldPercentage_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_bInUseSecondaryHoldAnimation_1) == 0x00030C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_bInUseSecondaryHoldAnimation_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_HoldPercentage) == 0x000310, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_bInUseSecondaryHoldAnimation) == 0x000314, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_bInUseSecondaryHoldAnimation' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000315, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000316, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000318, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000320, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_OwnsBattlePass) == 0x000328, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_OwnsBattlePass' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_ParentUnlocked) == 0x000329, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_ParentUnlocked' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_HasRemainingPrerequisites) == 0x00032A, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_HasRemainingPrerequisites' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_bIsDelayed) == 0x00032B, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_bIsDelayed' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Not_PreBool_ReturnValue_1) == 0x00032C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Not_PreBool_ReturnValue_2) == 0x00032D, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_25) == 0x00032E, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BooleanOR_ReturnValue) == 0x00032F, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BooleanOR_ReturnValue_1) == 0x000330, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_7) == 0x000334, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BooleanOR_ReturnValue_2) == 0x000338, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_8) == 0x000340, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_9) == 0x000348, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetEndTime_ReturnValue) == 0x000350, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetEndTime_ReturnValue_1) == 0x000354, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000358, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_5) == 0x000360, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000368, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000370, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000378, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000380, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000388, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimation_ReturnValue) == 0x000390, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x000398, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x0003A0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x0003A8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimation_ReturnValue_1) == 0x0003B0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimation_ReturnValue_2) == 0x0003B8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_4) == 0x0003C0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_5) == 0x0003C8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_6) == 0x0003D0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0003D8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_6) == 0x0003E0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_7) == 0x0003E8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_8) == 0x0003F0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_9) == 0x0003F8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_10) == 0x000400, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_26) == 0x000408, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_IsAffordable_ReturnValue) == 0x000409, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_IsAffordable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_10) == 0x000410, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_11) == 0x000418, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_MakeStruct_SlateColor_2) == 0x000428, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Not_PreBool_ReturnValue_3) == 0x00043C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_12) == 0x000440, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_13) == 0x000450, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_MakeStruct_SlateColor_3) == 0x000454, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000468, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_11) == 0x000470, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_12) == 0x000478, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_7) == 0x000480, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x000488, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_13) == 0x000490, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_4) == 0x000498, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0004A0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Round_ReturnValue) == 0x0004A4, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Conv_IntToBool_ReturnValue) == 0x0004A8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_14) == 0x0004AC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_15) == 0x0004BC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_14) == 0x0004D0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_8) == 0x0004D8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BreakVector2D_X) == 0x0004E0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BreakVector2D_Y) == 0x0004E8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0004F0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0004F1, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_BooleanAND_ReturnValue_2) == 0x0004F2, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_27) == 0x0004F3, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_16) == 0x0004F8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_15) == 0x000500, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000508, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_16) == 0x000510, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_17) == 0x000518, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_18) == 0x000528, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_17) == 0x000538, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_19) == 0x000540, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_18) == 0x000550, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000558, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_20) == 0x00055C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_9) == 0x000570, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_19) == 0x000578, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_IsAffordable_ReturnValue_1) == 0x000580, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_IsAffordable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_21) == 0x000584, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_22) == 0x000598, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicFontMaterial_ReturnValue_2) == 0x0005A0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicFontMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_10) == 0x0005A8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_23) == 0x0005B0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0005B1, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_24) == 0x0005B8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_IsDesignTime) == 0x0005C0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_5) == 0x0005C8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_5) == 0x0005D0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_bool_Variable_28) == 0x0005D8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_20) == 0x0005E0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_25) == 0x0005E8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_AreAnyGrantedItemsEquipped_ReturnValue) == 0x0005F0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_AreAnyGrantedItemsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_26) == 0x0005F8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_CurrentInputType) == 0x000600, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_CurrentInputType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_11) == 0x000608, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_6) == 0x000610, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, Temp_real_Variable_12) == 0x000618, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Event_NewState) == 0x000620, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_27) == 0x000628, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_28) == 0x000630, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000638, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_SwitchEnum_CmpSuccess) == 0x000639, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, K2Node_Select_Default_29) == 0x00063C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00064C, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000650, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000658, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000660, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000668, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000670, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000678, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000680, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000688, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000690, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000698, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0006A0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0006A8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x0006B0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast) == 0x0006B4, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0006B8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_Round_A_ImplicitCast) == 0x0006C0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_Round_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0006C8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0006CC, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x0006D0, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x0006D4, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x0006D8, "Member 'BPS28_BattlePassTile_C_ExecuteUbergraph_BPS28_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.FadeOutSound
// 0x000C (0x000C - 0x0000)
struct BPS28_BattlePassTile_C_FadeOutSound final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast_1;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_FadeOutSound) == 0x000004, "Wrong alignment on BPS28_BattlePassTile_C_FadeOutSound");
static_assert(sizeof(BPS28_BattlePassTile_C_FadeOutSound) == 0x00000C, "Wrong size on BPS28_BattlePassTile_C_FadeOutSound");
static_assert(offsetof(BPS28_BattlePassTile_C_FadeOutSound, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPS28_BattlePassTile_C_FadeOutSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_FadeOutSound, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BPS28_BattlePassTile_C_FadeOutSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_FadeOutSound, CallFunc_FadeOut_FadeOutDuration_ImplicitCast) == 0x000004, "Member 'BPS28_BattlePassTile_C_FadeOutSound::CallFunc_FadeOut_FadeOutDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_FadeOutSound, CallFunc_FadeOut_FadeOutDuration_ImplicitCast_1) == 0x000008, "Member 'BPS28_BattlePassTile_C_FadeOutSound::CallFunc_FadeOut_FadeOutDuration_ImplicitCast_1' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnAffordabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassTile_C_OnAffordabilityChanged final
{
public:
	bool                                          bHasEnougCurrency;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_OnAffordabilityChanged) == 0x000001, "Wrong alignment on BPS28_BattlePassTile_C_OnAffordabilityChanged");
static_assert(sizeof(BPS28_BattlePassTile_C_OnAffordabilityChanged) == 0x000001, "Wrong size on BPS28_BattlePassTile_C_OnAffordabilityChanged");
static_assert(offsetof(BPS28_BattlePassTile_C_OnAffordabilityChanged, bHasEnougCurrency) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnAffordabilityChanged::bHasEnougCurrency' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct BPS28_BattlePassTile_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(BPS28_BattlePassTile_C_OnFocusReceived) == 0x000008, "Wrong alignment on BPS28_BattlePassTile_C_OnFocusReceived");
static_assert(sizeof(BPS28_BattlePassTile_C_OnFocusReceived) == 0x0001B0, "Wrong size on BPS28_BattlePassTile_C_OnFocusReceived");
static_assert(offsetof(BPS28_BattlePassTile_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'BPS28_BattlePassTile_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'BPS28_BattlePassTile_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'BPS28_BattlePassTile_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnLockedProgressUpdated
// 0x000C (0x000C - 0x0000)
struct BPS28_BattlePassTile_C_OnLockedProgressUpdated final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentlyOwnedRewards;                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeededRewards;                                     // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_OnLockedProgressUpdated) == 0x000004, "Wrong alignment on BPS28_BattlePassTile_C_OnLockedProgressUpdated");
static_assert(sizeof(BPS28_BattlePassTile_C_OnLockedProgressUpdated) == 0x00000C, "Wrong size on BPS28_BattlePassTile_C_OnLockedProgressUpdated");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedProgressUpdated, Progress) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnLockedProgressUpdated::Progress' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedProgressUpdated, CurrentlyOwnedRewards) == 0x000004, "Member 'BPS28_BattlePassTile_C_OnLockedProgressUpdated::CurrentlyOwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedProgressUpdated, NeededRewards) == 0x000008, "Member 'BPS28_BattlePassTile_C_OnLockedProgressUpdated::NeededRewards' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnLockedStateUpdated
// 0x0004 (0x0004 - 0x0000)
struct BPS28_BattlePassTile_C_OnLockedStateUpdated final
{
public:
	bool                                          OwnsBattlePass;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParentUnlocked;                                    // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRemainingPrerequisites;                         // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDelayed;                                        // 0x0003(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_OnLockedStateUpdated) == 0x000001, "Wrong alignment on BPS28_BattlePassTile_C_OnLockedStateUpdated");
static_assert(sizeof(BPS28_BattlePassTile_C_OnLockedStateUpdated) == 0x000004, "Wrong size on BPS28_BattlePassTile_C_OnLockedStateUpdated");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedStateUpdated, OwnsBattlePass) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnLockedStateUpdated::OwnsBattlePass' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedStateUpdated, ParentUnlocked) == 0x000001, "Member 'BPS28_BattlePassTile_C_OnLockedStateUpdated::ParentUnlocked' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedStateUpdated, HasRemainingPrerequisites) == 0x000002, "Member 'BPS28_BattlePassTile_C_OnLockedStateUpdated::HasRemainingPrerequisites' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnLockedStateUpdated, bIsDelayed) == 0x000003, "Member 'BPS28_BattlePassTile_C_OnLockedStateUpdated::bIsDelayed' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnSetCurrencyAndPrice
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassTile_C_OnSetCurrencyAndPrice final
{
public:
	EBattlePassCurrencyType                       Currency;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Price;                                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_OnSetCurrencyAndPrice) == 0x000004, "Wrong alignment on BPS28_BattlePassTile_C_OnSetCurrencyAndPrice");
static_assert(sizeof(BPS28_BattlePassTile_C_OnSetCurrencyAndPrice) == 0x000008, "Wrong size on BPS28_BattlePassTile_C_OnSetCurrencyAndPrice");
static_assert(offsetof(BPS28_BattlePassTile_C_OnSetCurrencyAndPrice, Currency) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnSetCurrencyAndPrice::Currency' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnSetCurrencyAndPrice, Price) == 0x000004, "Member 'BPS28_BattlePassTile_C_OnSetCurrencyAndPrice::Price' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnSetTrack
// 0x0002 (0x0002 - 0x0000)
struct BPS28_BattlePassTile_C_OnSetTrack final
{
public:
	bool                                          bIsFreeTrack;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOwnsBattlePass;                                   // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_OnSetTrack) == 0x000001, "Wrong alignment on BPS28_BattlePassTile_C_OnSetTrack");
static_assert(sizeof(BPS28_BattlePassTile_C_OnSetTrack) == 0x000002, "Wrong size on BPS28_BattlePassTile_C_OnSetTrack");
static_assert(offsetof(BPS28_BattlePassTile_C_OnSetTrack, bIsFreeTrack) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnSetTrack::bIsFreeTrack' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_OnSetTrack, bOwnsBattlePass) == 0x000001, "Member 'BPS28_BattlePassTile_C_OnSetTrack::bOwnsBattlePass' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.OnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassTile_C_OnStateChanged final
{
public:
	EBattlePassTileAvailabilityStates             NewState;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_OnStateChanged) == 0x000001, "Wrong alignment on BPS28_BattlePassTile_C_OnStateChanged");
static_assert(sizeof(BPS28_BattlePassTile_C_OnStateChanged) == 0x000001, "Wrong size on BPS28_BattlePassTile_C_OnStateChanged");
static_assert(offsetof(BPS28_BattlePassTile_C_OnStateChanged, NewState) == 0x000000, "Member 'BPS28_BattlePassTile_C_OnStateChanged::NewState' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.PlaySoundHold
// 0x0028 (0x0028 - 0x0000)
struct BPS28_BattlePassTile_C_PlaySoundHold final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeInDuration_ImplicitCast;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_PlaySoundHold) == 0x000008, "Wrong alignment on BPS28_BattlePassTile_C_PlaySoundHold");
static_assert(sizeof(BPS28_BattlePassTile_C_PlaySoundHold) == 0x000028, "Wrong size on BPS28_BattlePassTile_C_PlaySoundHold");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHold, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPS28_BattlePassTile_C_PlaySoundHold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHold, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BPS28_BattlePassTile_C_PlaySoundHold::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHold, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BPS28_BattlePassTile_C_PlaySoundHold::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHold, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000018, "Member 'BPS28_BattlePassTile_C_PlaySoundHold::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHold, CallFunc_FadeIn_FadeInDuration_ImplicitCast) == 0x000020, "Member 'BPS28_BattlePassTile_C_PlaySoundHold::CallFunc_FadeIn_FadeInDuration_ImplicitCast' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.PlaySoundHoldComplete
// 0x0010 (0x0010 - 0x0000)
struct BPS28_BattlePassTile_C_PlaySoundHoldComplete final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_PlaySoundHoldComplete) == 0x000008, "Wrong alignment on BPS28_BattlePassTile_C_PlaySoundHoldComplete");
static_assert(sizeof(BPS28_BattlePassTile_C_PlaySoundHoldComplete) == 0x000010, "Wrong size on BPS28_BattlePassTile_C_PlaySoundHoldComplete");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHoldComplete, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPS28_BattlePassTile_C_PlaySoundHoldComplete::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_PlaySoundHoldComplete, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BPS28_BattlePassTile_C_PlaySoundHoldComplete::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_PreConstruct) == 0x000001, "Wrong alignment on BPS28_BattlePassTile_C_PreConstruct");
static_assert(sizeof(BPS28_BattlePassTile_C_PreConstruct) == 0x000001, "Wrong size on BPS28_BattlePassTile_C_PreConstruct");
static_assert(offsetof(BPS28_BattlePassTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPS28_BattlePassTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.StopSoundHold
// 0x0018 (0x0018 - 0x0000)
struct BPS28_BattlePassTile_C_StopSoundHold final
{
public:
	double                                        HoldPercentage;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_StopSoundHold) == 0x000008, "Wrong alignment on BPS28_BattlePassTile_C_StopSoundHold");
static_assert(sizeof(BPS28_BattlePassTile_C_StopSoundHold) == 0x000018, "Wrong size on BPS28_BattlePassTile_C_StopSoundHold");
static_assert(offsetof(BPS28_BattlePassTile_C_StopSoundHold, HoldPercentage) == 0x000000, "Member 'BPS28_BattlePassTile_C_StopSoundHold::HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_StopSoundHold, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BPS28_BattlePassTile_C_StopSoundHold::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_StopSoundHold, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BPS28_BattlePassTile_C_StopSoundHold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_StopSoundHold, CallFunc_IsPlaying_ReturnValue) == 0x00000A, "Member 'BPS28_BattlePassTile_C_StopSoundHold::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_StopSoundHold, CallFunc_SpawnSound2D_ReturnValue) == 0x000010, "Member 'BPS28_BattlePassTile_C_StopSoundHold::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BPS28_BattlePassTile.BPS28_BattlePassTile_C.UpdateTileColors
// 0x0050 (0x0050 - 0x0000)
struct BPS28_BattlePassTile_C_UpdateTileColors final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassTile_C_UpdateTileColors) == 0x000008, "Wrong alignment on BPS28_BattlePassTile_C_UpdateTileColors");
static_assert(sizeof(BPS28_BattlePassTile_C_UpdateTileColors) == 0x000050, "Wrong size on BPS28_BattlePassTile_C_UpdateTileColors");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000028, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Map_Find_Value) == 0x000038, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassTile_C_UpdateTileColors, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BPS28_BattlePassTile_C_UpdateTileColors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

