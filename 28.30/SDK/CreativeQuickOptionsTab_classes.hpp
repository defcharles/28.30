#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeQuickOptionsTab

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class CreativeQuickOptionsTab.FortCreativeQuickOptionsTab
// 0x01A0 (0x05A0 - 0x0400)
class UFortCreativeQuickOptionsTab final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x30];                                     // 0x0400(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAthenaMapScreenContainerTabInfo       MapScreenContainerTabInfo;                         // 0x0430(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FName                                   QuickOptionsTabNameId;                             // 0x0478(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                TabButtonLabelInfo;                                // 0x0480(0x0110)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          bIsDefaultActiveTab;                               // 0x0590(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_591[0xF];                                      // 0x0591(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCreativeQuickOptionsTab">();
	}
	static class UFortCreativeQuickOptionsTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCreativeQuickOptionsTab>();
	}
};
static_assert(alignof(UFortCreativeQuickOptionsTab) == 0x000010, "Wrong alignment on UFortCreativeQuickOptionsTab");
static_assert(sizeof(UFortCreativeQuickOptionsTab) == 0x0005A0, "Wrong size on UFortCreativeQuickOptionsTab");
static_assert(offsetof(UFortCreativeQuickOptionsTab, MapScreenContainerTabInfo) == 0x000430, "Member 'UFortCreativeQuickOptionsTab::MapScreenContainerTabInfo' has a wrong offset!");
static_assert(offsetof(UFortCreativeQuickOptionsTab, QuickOptionsTabNameId) == 0x000478, "Member 'UFortCreativeQuickOptionsTab::QuickOptionsTabNameId' has a wrong offset!");
static_assert(offsetof(UFortCreativeQuickOptionsTab, TabButtonLabelInfo) == 0x000480, "Member 'UFortCreativeQuickOptionsTab::TabButtonLabelInfo' has a wrong offset!");
static_assert(offsetof(UFortCreativeQuickOptionsTab, bIsDefaultActiveTab) == 0x000590, "Member 'UFortCreativeQuickOptionsTab::bIsDefaultActiveTab' has a wrong offset!");

}

