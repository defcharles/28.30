#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoWorldManagement

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "McpProfileSys_classes.hpp"


namespace SDK
{

// Class JunoWorldManagement.JunoWorldManagementHandler
// 0x0000 (0x0028 - 0x0028)
class UJunoWorldManagementHandler : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorldManagementHandler">();
	}
	static class UJunoWorldManagementHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorldManagementHandler>();
	}
};
static_assert(alignof(UJunoWorldManagementHandler) == 0x000008, "Wrong alignment on UJunoWorldManagementHandler");
static_assert(sizeof(UJunoWorldManagementHandler) == 0x000028, "Wrong size on UJunoWorldManagementHandler");

// Class JunoWorldManagement.JunoWorld
// 0x0108 (0x0130 - 0x0028)
class UJunoWorld : public UObject
{
public:
	uint8                                         Pad_28[0x108];                                     // 0x0028(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorld">();
	}
	static class UJunoWorld* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorld>();
	}
};
static_assert(alignof(UJunoWorld) == 0x000008, "Wrong alignment on UJunoWorld");
static_assert(sizeof(UJunoWorld) == 0x000130, "Wrong size on UJunoWorld");

// Class JunoWorldManagement.JunoUserWorldView
// 0x0028 (0x0158 - 0x0130)
class UJunoUserWorldView final : public UJunoWorld
{
public:
	uint8                                         Pad_130[0x28];                                     // 0x0130(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoUserWorldView">();
	}
	static class UJunoUserWorldView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoUserWorldView>();
	}
};
static_assert(alignof(UJunoUserWorldView) == 0x000008, "Wrong alignment on UJunoUserWorldView");
static_assert(sizeof(UJunoUserWorldView) == 0x000158, "Wrong size on UJunoUserWorldView");

// Class JunoWorldManagement.JunoWorldManagerSubsystem
// 0x0048 (0x0078 - 0x0030)
class UJunoWorldManagerSubsystem final : public UWorldSubsystem
{
public:
	bool                                          bEnableWorldManager;                               // 0x0030(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableWorldManagerInPIE;                          // 0x0031(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WorldPersistenceCompatibilityVersion;              // 0x0034(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DeviceProfileSuffix;                               // 0x0038(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x28];                                      // 0x0048(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoWorldManagementHandler*            WorldManagementHandler;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorldManagerSubsystem">();
	}
	static class UJunoWorldManagerSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorldManagerSubsystem>();
	}
};
static_assert(alignof(UJunoWorldManagerSubsystem) == 0x000008, "Wrong alignment on UJunoWorldManagerSubsystem");
static_assert(sizeof(UJunoWorldManagerSubsystem) == 0x000078, "Wrong size on UJunoWorldManagerSubsystem");
static_assert(offsetof(UJunoWorldManagerSubsystem, bEnableWorldManager) == 0x000030, "Member 'UJunoWorldManagerSubsystem::bEnableWorldManager' has a wrong offset!");
static_assert(offsetof(UJunoWorldManagerSubsystem, bEnableWorldManagerInPIE) == 0x000031, "Member 'UJunoWorldManagerSubsystem::bEnableWorldManagerInPIE' has a wrong offset!");
static_assert(offsetof(UJunoWorldManagerSubsystem, WorldPersistenceCompatibilityVersion) == 0x000034, "Member 'UJunoWorldManagerSubsystem::WorldPersistenceCompatibilityVersion' has a wrong offset!");
static_assert(offsetof(UJunoWorldManagerSubsystem, DeviceProfileSuffix) == 0x000038, "Member 'UJunoWorldManagerSubsystem::DeviceProfileSuffix' has a wrong offset!");
static_assert(offsetof(UJunoWorldManagerSubsystem, WorldManagementHandler) == 0x000070, "Member 'UJunoWorldManagerSubsystem::WorldManagementHandler' has a wrong offset!");

// Class JunoWorldManagement.JunoWorldManagerSubsystemData
// 0x0018 (0x0048 - 0x0030)
class UJunoWorldManagerSubsystemData final : public UPrimaryDataAsset
{
public:
	TArray<TSubclassOf<class UJunoWorldManagementHandler>> AvailableWorldManagementHandlerClasses;            // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UJunoWorldManagementHandler> DefaultWorldManagementHandlerClass;                // 0x0040(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorldManagerSubsystemData">();
	}
	static class UJunoWorldManagerSubsystemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorldManagerSubsystemData>();
	}
};
static_assert(alignof(UJunoWorldManagerSubsystemData) == 0x000008, "Wrong alignment on UJunoWorldManagerSubsystemData");
static_assert(sizeof(UJunoWorldManagerSubsystemData) == 0x000048, "Wrong size on UJunoWorldManagerSubsystemData");
static_assert(offsetof(UJunoWorldManagerSubsystemData, AvailableWorldManagementHandlerClasses) == 0x000030, "Member 'UJunoWorldManagerSubsystemData::AvailableWorldManagementHandlerClasses' has a wrong offset!");
static_assert(offsetof(UJunoWorldManagerSubsystemData, DefaultWorldManagementHandlerClass) == 0x000040, "Member 'UJunoWorldManagerSubsystemData::DefaultWorldManagementHandlerClass' has a wrong offset!");

// Class JunoWorldManagement.JunoPersistenceFeatureWorldMetadataCorrespondentInterface
// 0x0000 (0x0028 - 0x0028)
class IJunoPersistenceFeatureWorldMetadataCorrespondentInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoPersistenceFeatureWorldMetadataCorrespondentInterface">();
	}
	static class IJunoPersistenceFeatureWorldMetadataCorrespondentInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IJunoPersistenceFeatureWorldMetadataCorrespondentInterface>();
	}
};
static_assert(alignof(IJunoPersistenceFeatureWorldMetadataCorrespondentInterface) == 0x000008, "Wrong alignment on IJunoPersistenceFeatureWorldMetadataCorrespondentInterface");
static_assert(sizeof(IJunoPersistenceFeatureWorldMetadataCorrespondentInterface) == 0x000028, "Wrong size on IJunoPersistenceFeatureWorldMetadataCorrespondentInterface");

// Class JunoWorldManagement.JunoWorldManagementHandler_MCPProto
// 0x0008 (0x0030 - 0x0028)
class UJunoWorldManagementHandler_MCPProto final : public UJunoWorldManagementHandler
{
public:
	class UJunoWorldMCPProto_Profile*             ProfilePtr;                                        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorldManagementHandler_MCPProto">();
	}
	static class UJunoWorldManagementHandler_MCPProto* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorldManagementHandler_MCPProto>();
	}
};
static_assert(alignof(UJunoWorldManagementHandler_MCPProto) == 0x000008, "Wrong alignment on UJunoWorldManagementHandler_MCPProto");
static_assert(sizeof(UJunoWorldManagementHandler_MCPProto) == 0x000030, "Wrong size on UJunoWorldManagementHandler_MCPProto");
static_assert(offsetof(UJunoWorldManagementHandler_MCPProto, ProfilePtr) == 0x000028, "Member 'UJunoWorldManagementHandler_MCPProto::ProfilePtr' has a wrong offset!");

// Class JunoWorldManagement.JunoWorldMCPProto_Profile
// 0x0080 (0x01C0 - 0x0140)
class UJunoWorldMCPProto_Profile final : public UMcpProfile
{
public:
	uint8                                         Pad_140[0x30];                                     // 0x0140(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UJunoUserWorldView*> WorldViewMap;                                      // 0x0170(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void ProtoJuno_CreateWorld(const struct FJsonObjectWrapper& world_metadata, struct FClientUrlContext* Context);
	void ProtoJuno_DeleteAllWorlds(struct FClientUrlContext* Context);
	void ProtoJuno_DeleteWorld(const class FString& WorldId, struct FClientUrlContext* Context);
	void ProtoJuno_MarkWorldDeleted(const class FString& WorldId, struct FClientUrlContext* Context);
	void ProtoJuno_SetWorldName(const class FString& WorldId, const class FString& Name_0, struct FClientUrlContext* Context);
	void ProtoJuno_UpdateWorldLastAccessTime(const class FString& WorldId, struct FClientUrlContext* Context);
	void ProtoJuno_UpdateWorldMetadata(const class FString& WorldId, const struct FJsonObjectWrapper& WorldMetadata, struct FClientUrlContext* Context);
	void ProtoJuno_UpdateWorldSysMetadata(const class FString& WorldId, const struct FJsonObjectWrapper& SysMetadata, struct FDedicatedServerUrlContext* Context);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorldMCPProto_Profile">();
	}
	static class UJunoWorldMCPProto_Profile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorldMCPProto_Profile>();
	}
};
static_assert(alignof(UJunoWorldMCPProto_Profile) == 0x000010, "Wrong alignment on UJunoWorldMCPProto_Profile");
static_assert(sizeof(UJunoWorldMCPProto_Profile) == 0x0001C0, "Wrong size on UJunoWorldMCPProto_Profile");
static_assert(offsetof(UJunoWorldMCPProto_Profile, WorldViewMap) == 0x000170, "Member 'UJunoWorldMCPProto_Profile::WorldViewMap' has a wrong offset!");

// Class JunoWorldManagement.JunoWorldManagementHandler_WorldArbitrationService
// 0x00B0 (0x00D8 - 0x0028)
class UJunoWorldManagementHandler_WorldArbitrationService final : public UJunoWorldManagementHandler
{
public:
	TMap<class FString, class UJunoUserWorldView*> WorldViewMap;                                      // 0x0028(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78[0x50];                                      // 0x0078(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        GetAllAccessibleWorldsCacheTime;                   // 0x00C8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_CC[0xC];                                       // 0x00CC(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JunoWorldManagementHandler_WorldArbitrationService">();
	}
	static class UJunoWorldManagementHandler_WorldArbitrationService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoWorldManagementHandler_WorldArbitrationService>();
	}
};
static_assert(alignof(UJunoWorldManagementHandler_WorldArbitrationService) == 0x000008, "Wrong alignment on UJunoWorldManagementHandler_WorldArbitrationService");
static_assert(sizeof(UJunoWorldManagementHandler_WorldArbitrationService) == 0x0000D8, "Wrong size on UJunoWorldManagementHandler_WorldArbitrationService");
static_assert(offsetof(UJunoWorldManagementHandler_WorldArbitrationService, WorldViewMap) == 0x000028, "Member 'UJunoWorldManagementHandler_WorldArbitrationService::WorldViewMap' has a wrong offset!");
static_assert(offsetof(UJunoWorldManagementHandler_WorldArbitrationService, GetAllAccessibleWorldsCacheTime) == 0x0000C8, "Member 'UJunoWorldManagementHandler_WorldArbitrationService::GetAllAccessibleWorldsCacheTime' has a wrong offset!");

}

