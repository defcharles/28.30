#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentDateEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TournamentDateEntry.TournamentDateEntry_C
// 0x0058 (0x07D8 - 0x0780)
class UTournamentDateEntry_C final : public UFortShowdownDetailView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          CommonBorder_DateContent;                          // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_Date;                              // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_Time;                              // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_Title;                             // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_EntryType;                    // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Strkethrough;                                // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          isTitle;                                           // 0x07B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x07C0(0x0018)(Edit, BlueprintVisible)

public:
	void EventColor(const struct FFortTournamentDisplayInfo& showdownData);
	void ExecuteUbergraph_TournamentDateEntry(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void RefreshDataBP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TournamentDateEntry_C">();
	}
	static class UTournamentDateEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTournamentDateEntry_C>();
	}
};
static_assert(alignof(UTournamentDateEntry_C) == 0x000008, "Wrong alignment on UTournamentDateEntry_C");
static_assert(sizeof(UTournamentDateEntry_C) == 0x0007D8, "Wrong size on UTournamentDateEntry_C");
static_assert(offsetof(UTournamentDateEntry_C, UberGraphFrame) == 0x000780, "Member 'UTournamentDateEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonBorder_DateContent) == 0x000788, "Member 'UTournamentDateEntry_C::CommonBorder_DateContent' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonTextBlock_Date) == 0x000790, "Member 'UTournamentDateEntry_C::CommonTextBlock_Date' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonTextBlock_Time) == 0x000798, "Member 'UTournamentDateEntry_C::CommonTextBlock_Time' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonTextBlock_Title) == 0x0007A0, "Member 'UTournamentDateEntry_C::CommonTextBlock_Title' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonWidgetSwitcher_EntryType) == 0x0007A8, "Member 'UTournamentDateEntry_C::CommonWidgetSwitcher_EntryType' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, Image_Strkethrough) == 0x0007B0, "Member 'UTournamentDateEntry_C::Image_Strkethrough' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, isTitle) == 0x0007B8, "Member 'UTournamentDateEntry_C::isTitle' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, Title) == 0x0007C0, "Member 'UTournamentDateEntry_C::Title' has a wrong offset!");

}

