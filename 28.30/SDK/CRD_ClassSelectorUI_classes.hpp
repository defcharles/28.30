#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_ClassSelectorUI

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CRD_ClassSelectorRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class CRD_ClassSelectorUI.ClassSelectorLoadoutContainer
// 0x0048 (0x0330 - 0x02E8)
class UClassSelectorLoadoutContainer final : public UCommonUserWidget
{
public:
	class UWrapBox*                               WrapBox;                                           // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAthenaItemElementWidgetBase> EntryWidgetClass;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAthenaItemElementWidgetBase*>   EntryWidgets;                                      // 0x02F8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                    PreviewItemDef;                                    // 0x0308(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumPreviewEntries;                                 // 0x0310(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_314[0x1C];                                     // 0x0314(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClassSelectorLoadoutContainer">();
	}
	static class UClassSelectorLoadoutContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClassSelectorLoadoutContainer>();
	}
};
static_assert(alignof(UClassSelectorLoadoutContainer) == 0x000008, "Wrong alignment on UClassSelectorLoadoutContainer");
static_assert(sizeof(UClassSelectorLoadoutContainer) == 0x000330, "Wrong size on UClassSelectorLoadoutContainer");
static_assert(offsetof(UClassSelectorLoadoutContainer, WrapBox) == 0x0002E8, "Member 'UClassSelectorLoadoutContainer::WrapBox' has a wrong offset!");
static_assert(offsetof(UClassSelectorLoadoutContainer, EntryWidgetClass) == 0x0002F0, "Member 'UClassSelectorLoadoutContainer::EntryWidgetClass' has a wrong offset!");
static_assert(offsetof(UClassSelectorLoadoutContainer, EntryWidgets) == 0x0002F8, "Member 'UClassSelectorLoadoutContainer::EntryWidgets' has a wrong offset!");
static_assert(offsetof(UClassSelectorLoadoutContainer, PreviewItemDef) == 0x000308, "Member 'UClassSelectorLoadoutContainer::PreviewItemDef' has a wrong offset!");
static_assert(offsetof(UClassSelectorLoadoutContainer, NumPreviewEntries) == 0x000310, "Member 'UClassSelectorLoadoutContainer::NumPreviewEntries' has a wrong offset!");

// Class CRD_ClassSelectorUI.ClassSelectorTabButtons
// 0x00B8 (0x03A0 - 0x02E8)
class UClassSelectorTabButtons final : public UCommonUserWidget
{
public:
	class UCommonActionWidget*                    LeftActionWidget;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActionWidget*                    RightActionWidget;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             TabButtonsScrollBox;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      LeftButton;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      RightButton;                                       // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                    LeftInputAction;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x8];                                      // 0x0320(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    RightInputAction;                                  // 0x0328(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClassSelectorTeamTile*>         TabButtons;                                        // 0x0340(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UClassSelectorTeamTile>     TabButtonClass;                                    // 0x0350(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                                TabButtonPadding;                                  // 0x0358(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           DesignerPreviewTabNames;                           // 0x0370(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                         ButtonScrollAmount;                                // 0x0380(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_384[0x1C];                                     // 0x0384(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClassSelectorTabButtons">();
	}
	static class UClassSelectorTabButtons* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClassSelectorTabButtons>();
	}
};
static_assert(alignof(UClassSelectorTabButtons) == 0x000008, "Wrong alignment on UClassSelectorTabButtons");
static_assert(sizeof(UClassSelectorTabButtons) == 0x0003A0, "Wrong size on UClassSelectorTabButtons");
static_assert(offsetof(UClassSelectorTabButtons, LeftActionWidget) == 0x0002E8, "Member 'UClassSelectorTabButtons::LeftActionWidget' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, RightActionWidget) == 0x0002F0, "Member 'UClassSelectorTabButtons::RightActionWidget' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, TabButtonsScrollBox) == 0x0002F8, "Member 'UClassSelectorTabButtons::TabButtonsScrollBox' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, LeftButton) == 0x000300, "Member 'UClassSelectorTabButtons::LeftButton' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, RightButton) == 0x000308, "Member 'UClassSelectorTabButtons::RightButton' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, LeftInputAction) == 0x000310, "Member 'UClassSelectorTabButtons::LeftInputAction' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, RightInputAction) == 0x000328, "Member 'UClassSelectorTabButtons::RightInputAction' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, TabButtons) == 0x000340, "Member 'UClassSelectorTabButtons::TabButtons' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, TabButtonClass) == 0x000350, "Member 'UClassSelectorTabButtons::TabButtonClass' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, TabButtonPadding) == 0x000358, "Member 'UClassSelectorTabButtons::TabButtonPadding' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, DesignerPreviewTabNames) == 0x000370, "Member 'UClassSelectorTabButtons::DesignerPreviewTabNames' has a wrong offset!");
static_assert(offsetof(UClassSelectorTabButtons, ButtonScrollAmount) == 0x000380, "Member 'UClassSelectorTabButtons::ButtonScrollAmount' has a wrong offset!");

// Class CRD_ClassSelectorUI.ClassSelectorTeamInfoWidget
// 0x0018 (0x02D8 - 0x02C0)
class UClassSelectorTeamInfoWidget final : public UUserWidget
{
public:
	class UCommonTextBlock*                       TeamName;                                          // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       TeamCountText;                                     // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       TeamDescription;                                   // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClassSelectorTeamInfoWidget">();
	}
	static class UClassSelectorTeamInfoWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClassSelectorTeamInfoWidget>();
	}
};
static_assert(alignof(UClassSelectorTeamInfoWidget) == 0x000008, "Wrong alignment on UClassSelectorTeamInfoWidget");
static_assert(sizeof(UClassSelectorTeamInfoWidget) == 0x0002D8, "Wrong size on UClassSelectorTeamInfoWidget");
static_assert(offsetof(UClassSelectorTeamInfoWidget, TeamName) == 0x0002C0, "Member 'UClassSelectorTeamInfoWidget::TeamName' has a wrong offset!");
static_assert(offsetof(UClassSelectorTeamInfoWidget, TeamCountText) == 0x0002C8, "Member 'UClassSelectorTeamInfoWidget::TeamCountText' has a wrong offset!");
static_assert(offsetof(UClassSelectorTeamInfoWidget, TeamDescription) == 0x0002D0, "Member 'UClassSelectorTeamInfoWidget::TeamDescription' has a wrong offset!");

// Class CRD_ClassSelectorUI.CreativeClassSelectorButton
// 0x0040 (0x14D0 - 0x1490)
class UCreativeClassSelectorButton : public UCommonButtonBase
{
public:
	class UCommonTextBlock*                       ButtonTextBlock;                                   // 0x1490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActionWidget*                    ActionWidget;                                      // 0x1498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ButtonText;                                        // 0x14A0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                    buttonInputAction;                                 // 0x14B8(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoCapitalize;                                   // 0x14C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14C9[0x7];                                     // 0x14C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetButtonText(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeClassSelectorButton">();
	}
	static class UCreativeClassSelectorButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeClassSelectorButton>();
	}
};
static_assert(alignof(UCreativeClassSelectorButton) == 0x000010, "Wrong alignment on UCreativeClassSelectorButton");
static_assert(sizeof(UCreativeClassSelectorButton) == 0x0014D0, "Wrong size on UCreativeClassSelectorButton");
static_assert(offsetof(UCreativeClassSelectorButton, ButtonTextBlock) == 0x001490, "Member 'UCreativeClassSelectorButton::ButtonTextBlock' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelectorButton, ActionWidget) == 0x001498, "Member 'UCreativeClassSelectorButton::ActionWidget' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelectorButton, ButtonText) == 0x0014A0, "Member 'UCreativeClassSelectorButton::ButtonText' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelectorButton, buttonInputAction) == 0x0014B8, "Member 'UCreativeClassSelectorButton::buttonInputAction' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelectorButton, bAutoCapitalize) == 0x0014C8, "Member 'UCreativeClassSelectorButton::bAutoCapitalize' has a wrong offset!");

// Class CRD_ClassSelectorUI.ClassSelectorTeamTile
// 0x00B0 (0x1580 - 0x14D0)
class UClassSelectorTeamTile final : public UCreativeClassSelectorButton
{
public:
	uint8                                         Pad_14D0[0x90];                                    // 0x14D0(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             PlayerCount;                                       // 0x1560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                       TeamIconImage;                                     // 0x1568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1570[0x10];                                    // 0x1570(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerCountSet(int32 NewPlayerCount);
	void OnTeamColorIndexSet(int32 TeamColorIndex);
	void OnTeamIconSet(const struct FCreativeIconOption& NewTeamIcon);
	void OnTeamSet(const struct FMinigameTeam& NewTeamData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClassSelectorTeamTile">();
	}
	static class UClassSelectorTeamTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClassSelectorTeamTile>();
	}
};
static_assert(alignof(UClassSelectorTeamTile) == 0x000010, "Wrong alignment on UClassSelectorTeamTile");
static_assert(sizeof(UClassSelectorTeamTile) == 0x001580, "Wrong size on UClassSelectorTeamTile");
static_assert(offsetof(UClassSelectorTeamTile, PlayerCount) == 0x001560, "Member 'UClassSelectorTeamTile::PlayerCount' has a wrong offset!");
static_assert(offsetof(UClassSelectorTeamTile, TeamIconImage) == 0x001568, "Member 'UClassSelectorTeamTile::TeamIconImage' has a wrong offset!");

// Class CRD_ClassSelectorUI.ClassSelectorTeamTiles
// 0x0048 (0x0330 - 0x02E8)
class UClassSelectorTeamTiles final : public UCommonUserWidget
{
public:
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClassSelectorTeamTile*>         TeamTiles;                                         // 0x02F0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                      RootPanel;                                         // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UClassSelectorTeamTile>     EntryClass;                                        // 0x0308(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         DesignerPreviewEntries;                            // 0x0310(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_314[0x1C];                                     // 0x0314(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClassSelectorTeamTiles">();
	}
	static class UClassSelectorTeamTiles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClassSelectorTeamTiles>();
	}
};
static_assert(alignof(UClassSelectorTeamTiles) == 0x000008, "Wrong alignment on UClassSelectorTeamTiles");
static_assert(sizeof(UClassSelectorTeamTiles) == 0x000330, "Wrong size on UClassSelectorTeamTiles");
static_assert(offsetof(UClassSelectorTeamTiles, TeamTiles) == 0x0002F0, "Member 'UClassSelectorTeamTiles::TeamTiles' has a wrong offset!");
static_assert(offsetof(UClassSelectorTeamTiles, RootPanel) == 0x000300, "Member 'UClassSelectorTeamTiles::RootPanel' has a wrong offset!");
static_assert(offsetof(UClassSelectorTeamTiles, EntryClass) == 0x000308, "Member 'UClassSelectorTeamTiles::EntryClass' has a wrong offset!");
static_assert(offsetof(UClassSelectorTeamTiles, DesignerPreviewEntries) == 0x000310, "Member 'UClassSelectorTeamTiles::DesignerPreviewEntries' has a wrong offset!");

// Class CRD_ClassSelectorUI.CreativeClassItemInfo
// 0x0058 (0x0080 - 0x0028)
class UCreativeClassItemInfo final : public UObject
{
public:
	struct FMinigameClassSlot                     ClassSlot;                                         // 0x0028(0x0050)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeClassItemInfo">();
	}
	static class UCreativeClassItemInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeClassItemInfo>();
	}
};
static_assert(alignof(UCreativeClassItemInfo) == 0x000008, "Wrong alignment on UCreativeClassItemInfo");
static_assert(sizeof(UCreativeClassItemInfo) == 0x000080, "Wrong size on UCreativeClassItemInfo");
static_assert(offsetof(UCreativeClassItemInfo, ClassSlot) == 0x000028, "Member 'UCreativeClassItemInfo::ClassSlot' has a wrong offset!");

// Class CRD_ClassSelectorUI.CreativeClassEntry
// 0x0010 (0x14E0 - 0x14D0)
class UCreativeClassEntry final : public UCreativeClassSelectorButton
{
public:
	uint8                                         Pad_14D0[0x8];                                     // 0x14D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreativeClassItemInfo*                 ItemInfo;                                          // 0x14D8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnBrowsingLoadout(const bool bBrowsingLoadout);
	void OnClassEntryDataSet(const bool bIsCurrentClass, const bool bIsPendingClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeClassEntry">();
	}
	static class UCreativeClassEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeClassEntry>();
	}
};
static_assert(alignof(UCreativeClassEntry) == 0x000010, "Wrong alignment on UCreativeClassEntry");
static_assert(sizeof(UCreativeClassEntry) == 0x0014E0, "Wrong size on UCreativeClassEntry");
static_assert(offsetof(UCreativeClassEntry, ItemInfo) == 0x0014D8, "Member 'UCreativeClassEntry::ItemInfo' has a wrong offset!");

// Class CRD_ClassSelectorUI.CreativeClassSelector
// 0x0138 (0x0538 - 0x0400)
class UCreativeClassSelector final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x10];                                     // 0x0400(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UClassSelectorTabButtons*               TabButtons_TeamSelection;                          // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonListView*                        ListView_Classes;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCreativeClassItemInfo*>         ClassItemInfos;                                    // 0x0420(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UScrollBox*                             LoadoutScrollBox;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClassSelectorLoadoutContainer*         LoadoutContainer_Inventory;                        // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClassSelectorLoadoutContainer*         LoadoutContainer_Resources;                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_SelectLoadout;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_RandomClass;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        Switcher_Descriptions;                             // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           ClassAndTeamDescriptionContainer;                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           ItemDescriptionContainer;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           InventoryPanel;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           ResourcesPanel;                                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       ItemRarity;                                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       ItemName;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       ItemDescription;                                   // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           TeamDescriptionContainer;                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClassSelectorTeamInfoWidget*           TeamInfoWidget_FullView;                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClassSelectorTeamInfoWidget*           TeamInfoWidget_TeamsOnly;                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        DisplaySwitcher;                                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           ClassAndTeamSelectionContainer;                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           OnlyTeamSelectionContainer;                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           InvalidDataContainer;                              // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClassSelectorTeamTiles*                TeamTiles;                                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCreativeClassSelectorButton> TeamSelectionTabClass;                             // 0x04D8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsModalVersion;                                   // 0x04E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableModalTimeLimit;                             // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E2[0x2];                                      // 0x04E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ModalTimeLimitInSeconds;                           // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x10];                                     // 0x04E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	EClassSelectorDisplayMode                     DisplayMode;                                       // 0x04F8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDeferRespawn;                                     // 0x04F9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4FA[0x6];                                      // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ReturnToClassSelectionInputAction;                 // 0x0500(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         LoadoutScrollPadding;                              // 0x0510(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_514[0x1C];                                     // 0x0514(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreativeClassItemInfo*                 SelectedClassItemInfo;                             // 0x0530(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleMinigameStateChanged(class AFortMinigame* Minigame, EFortMinigameState MinigameState);
	void OnClassSelectionChanged(const class FText& NewClassName, const class FText& NewClassDescription);
	void OnClassSelectorUIPopulated(const bool bHasValidData);
	void OnLoadoutCommitted(const class FText& NewClassName, const class FText& NewTeamName, const bool bNewLoadout);
	void OnTimerCountdown(const int32 RemainingTime);

	class UWidget* GetFirstLoadoutItem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeClassSelector">();
	}
	static class UCreativeClassSelector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeClassSelector>();
	}
};
static_assert(alignof(UCreativeClassSelector) == 0x000008, "Wrong alignment on UCreativeClassSelector");
static_assert(sizeof(UCreativeClassSelector) == 0x000538, "Wrong size on UCreativeClassSelector");
static_assert(offsetof(UCreativeClassSelector, TabButtons_TeamSelection) == 0x000410, "Member 'UCreativeClassSelector::TabButtons_TeamSelection' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ListView_Classes) == 0x000418, "Member 'UCreativeClassSelector::ListView_Classes' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ClassItemInfos) == 0x000420, "Member 'UCreativeClassSelector::ClassItemInfos' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, LoadoutScrollBox) == 0x000430, "Member 'UCreativeClassSelector::LoadoutScrollBox' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, LoadoutContainer_Inventory) == 0x000438, "Member 'UCreativeClassSelector::LoadoutContainer_Inventory' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, LoadoutContainer_Resources) == 0x000440, "Member 'UCreativeClassSelector::LoadoutContainer_Resources' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, Button_SelectLoadout) == 0x000448, "Member 'UCreativeClassSelector::Button_SelectLoadout' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, Button_RandomClass) == 0x000450, "Member 'UCreativeClassSelector::Button_RandomClass' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, Switcher_Descriptions) == 0x000458, "Member 'UCreativeClassSelector::Switcher_Descriptions' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ClassAndTeamDescriptionContainer) == 0x000460, "Member 'UCreativeClassSelector::ClassAndTeamDescriptionContainer' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ItemDescriptionContainer) == 0x000468, "Member 'UCreativeClassSelector::ItemDescriptionContainer' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, InventoryPanel) == 0x000470, "Member 'UCreativeClassSelector::InventoryPanel' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ResourcesPanel) == 0x000478, "Member 'UCreativeClassSelector::ResourcesPanel' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ItemRarity) == 0x000480, "Member 'UCreativeClassSelector::ItemRarity' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ItemName) == 0x000488, "Member 'UCreativeClassSelector::ItemName' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ItemDescription) == 0x000490, "Member 'UCreativeClassSelector::ItemDescription' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, TeamDescriptionContainer) == 0x000498, "Member 'UCreativeClassSelector::TeamDescriptionContainer' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, TeamInfoWidget_FullView) == 0x0004A0, "Member 'UCreativeClassSelector::TeamInfoWidget_FullView' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, TeamInfoWidget_TeamsOnly) == 0x0004A8, "Member 'UCreativeClassSelector::TeamInfoWidget_TeamsOnly' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, DisplaySwitcher) == 0x0004B0, "Member 'UCreativeClassSelector::DisplaySwitcher' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ClassAndTeamSelectionContainer) == 0x0004B8, "Member 'UCreativeClassSelector::ClassAndTeamSelectionContainer' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, OnlyTeamSelectionContainer) == 0x0004C0, "Member 'UCreativeClassSelector::OnlyTeamSelectionContainer' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, InvalidDataContainer) == 0x0004C8, "Member 'UCreativeClassSelector::InvalidDataContainer' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, TeamTiles) == 0x0004D0, "Member 'UCreativeClassSelector::TeamTiles' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, TeamSelectionTabClass) == 0x0004D8, "Member 'UCreativeClassSelector::TeamSelectionTabClass' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, bIsModalVersion) == 0x0004E0, "Member 'UCreativeClassSelector::bIsModalVersion' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, bEnableModalTimeLimit) == 0x0004E1, "Member 'UCreativeClassSelector::bEnableModalTimeLimit' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ModalTimeLimitInSeconds) == 0x0004E4, "Member 'UCreativeClassSelector::ModalTimeLimitInSeconds' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, DisplayMode) == 0x0004F8, "Member 'UCreativeClassSelector::DisplayMode' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, bDeferRespawn) == 0x0004F9, "Member 'UCreativeClassSelector::bDeferRespawn' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, ReturnToClassSelectionInputAction) == 0x000500, "Member 'UCreativeClassSelector::ReturnToClassSelectionInputAction' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, LoadoutScrollPadding) == 0x000510, "Member 'UCreativeClassSelector::LoadoutScrollPadding' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelector, SelectedClassItemInfo) == 0x000530, "Member 'UCreativeClassSelector::SelectedClassItemInfo' has a wrong offset!");

// Class CRD_ClassSelectorUI.CreativeClassSelectorMapTab
// 0x0078 (0x0478 - 0x0400)
class UCreativeClassSelectorMapTab final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x28];                                     // 0x0400(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAthenaMapScreenContainerTabInfo       MapTabInfo;                                        // 0x0428(0x0048)(Edit, NativeAccessSpecifierPublic)
	class UCreativeClassSelector*                 CreativeClassSelector;                             // 0x0470(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetTabName(const class FText& TabName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeClassSelectorMapTab">();
	}
	static class UCreativeClassSelectorMapTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeClassSelectorMapTab>();
	}
};
static_assert(alignof(UCreativeClassSelectorMapTab) == 0x000008, "Wrong alignment on UCreativeClassSelectorMapTab");
static_assert(sizeof(UCreativeClassSelectorMapTab) == 0x000478, "Wrong size on UCreativeClassSelectorMapTab");
static_assert(offsetof(UCreativeClassSelectorMapTab, MapTabInfo) == 0x000428, "Member 'UCreativeClassSelectorMapTab::MapTabInfo' has a wrong offset!");
static_assert(offsetof(UCreativeClassSelectorMapTab, CreativeClassSelector) == 0x000470, "Member 'UCreativeClassSelectorMapTab::CreativeClassSelector' has a wrong offset!");

// Class CRD_ClassSelectorUI.Mutator_ClassSelectorUI
// 0x0000 (0x0338 - 0x0338)
class AMutator_ClassSelectorUI final : public AFortAthenaMutator
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Mutator_ClassSelectorUI">();
	}
	static class AMutator_ClassSelectorUI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMutator_ClassSelectorUI>();
	}
};
static_assert(alignof(AMutator_ClassSelectorUI) == 0x000008, "Wrong alignment on AMutator_ClassSelectorUI");
static_assert(sizeof(AMutator_ClassSelectorUI) == 0x000338, "Wrong size on AMutator_ClassSelectorUI");

}

