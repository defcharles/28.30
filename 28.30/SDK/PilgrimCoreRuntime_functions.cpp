#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimCoreRuntime

#include "Basic.hpp"

#include "PilgrimCoreRuntime_classes.hpp"
#include "PilgrimCoreRuntime_parameters.hpp"


namespace SDK
{

// Function PilgrimCoreRuntime.NetworkedMusicClockManager.OnBar
// (Final, Native, Protected)
// Parameters:
// int32                                   BarNumber                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkedMusicClockManager::OnBar(int32 BarNumber)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBar");

	Params::NetworkedMusicClockManager_OnBar Parms{};

	Parms.BarNumber = BarNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.NetworkedMusicClockManager.OnBeat
// (Final, Native, Protected)
// Parameters:
// int32                                   BeatNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BeatInBar                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkedMusicClockManager::OnBeat(int32 BeatNumber, int32 BeatInBar)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBeat");

	Params::NetworkedMusicClockManager_OnBeat Parms{};

	Parms.BeatNumber = BeatNumber;
	Parms.BeatInBar = BeatInBar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.NetworkedMusicClockManager.OnRep_CurrentSongServerTimestamp
// (Final, Native, Private)

void UNetworkedMusicClockManager::OnRep_CurrentSongServerTimestamp()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_CurrentSongServerTimestamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.NetworkedMusicClockManager.OnRep_ServerStartTime
// (Final, Native, Private)

void UNetworkedMusicClockManager::OnRep_ServerStartTime()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ServerStartTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.NetworkedMusicClockManager.PlayServerAuthoritativeSong
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPilgrimSongMetadata*             SongToPlay                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkedMusicClockManager::PlayServerAuthoritativeSong(class UPilgrimSongMetadata* SongToPlay)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayServerAuthoritativeSong");

	Params::NetworkedMusicClockManager_PlayServerAuthoritativeSong Parms{};

	Parms.SongToPlay = SongToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.NetworkedMusicClockManager.SetClientAudioComponentsToUse
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  InMetasoundPlayer                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  InMetasoundMixer                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkedMusicClockManager::SetClientAudioComponentsToUse(class UAudioComponent* InMetasoundPlayer, class UAudioComponent* InMetasoundMixer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetClientAudioComponentsToUse");

	Params::NetworkedMusicClockManager_SetClientAudioComponentsToUse Parms{};

	Parms.InMetasoundPlayer = InMetasoundPlayer;
	Parms.InMetasoundMixer = InMetasoundMixer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.NetworkedMusicClockManager.GetOwnedMusicClock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* UNetworkedMusicClockManager::GetOwnedMusicClock() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOwnedMusicClock");

	Params::NetworkedMusicClockManager_GetOwnedMusicClock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAbilityTask_WaitForBars.WaitForBars
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BarsToWaitFor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopFor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimAbilityTask_WaitForBars*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimAbilityTask_WaitForBars* UPilgrimAbilityTask_WaitForBars::WaitForBars(class UGameplayAbility* OwningAbility, int32 BarsToWaitFor, int32 LoopFor)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("WaitForBars");

	Params::PilgrimAbilityTask_WaitForBars_WaitForBars Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.BarsToWaitFor = BarsToWaitFor;
	Parms.LoopFor = LoopFor;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAbilityTask_WaitForBeats.WaitForBeats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BeatsToWaitFor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopFor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimAbilityTask_WaitForBeats* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimAbilityTask_WaitForBeats* UPilgrimAbilityTask_WaitForBeats::WaitForBeats(class UGameplayAbility* OwningAbility, int32 BeatsToWaitFor, int32 LoopFor)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("WaitForBeats");

	Params::PilgrimAbilityTask_WaitForBeats_WaitForBeats Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.BeatsToWaitFor = BeatsToWaitFor;
	Parms.LoopFor = LoopFor;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAbilityTask_WaitForSection.WaitForSection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldWaitForNextSection                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimAbilityTask_WaitForSection*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimAbilityTask_WaitForSection* UPilgrimAbilityTask_WaitForSection::WaitForSection(class UGameplayAbility* OwningAbility, bool bShouldWaitForNextSection, const class FString& SectionName)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("WaitForSection");

	Params::PilgrimAbilityTask_WaitForSection_WaitForSection Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bShouldWaitForNextSection = bShouldWaitForNextSection;
	Parms.SectionName = std::move(SectionName);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAbilityTask_WaitForSection.OnSectionEvent
// (Final, Native, Private)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SectionStartMs                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SectionLengthMs                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimAbilityTask_WaitForSection::OnSectionEvent(const class FString& SectionName, float SectionStartMs, float SectionLengthMs)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSectionEvent");

	Params::PilgrimAbilityTask_WaitForSection_OnSectionEvent Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.SectionStartMs = SectionStartMs;
	Parms.SectionLengthMs = SectionLengthMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimActorPool.InitPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPilgrimActorPoolParams          PilgrimActorPoolParams                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UPilgrimActorPool::InitPool(const struct FPilgrimActorPoolParams& PilgrimActorPoolParams)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitPool");

	Params::PilgrimActorPool_InitPool Parms{};

	Parms.PilgrimActorPoolParams = std::move(PilgrimActorPoolParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimActorPool.ReturnAllWidgets
// (Final, Native, Public, BlueprintCallable)

void UPilgrimActorPool::ReturnAllWidgets()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReturnAllWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimActorPool.TryReturnItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToPutBack                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimActorPool::TryReturnItem(class AActor* ActorToPutBack)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryReturnItem");

	Params::PilgrimActorPool_TryReturnItem Parms{};

	Parms.ActorToPutBack = ActorToPutBack;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimActorPool.GetNumAvailableItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimActorPool::GetNumAvailableItems() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumAvailableItems");

	Params::PilgrimActorPool_GetNumAvailableItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimActorPool.GetNumInUseItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimActorPool::GetNumInUseItems() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumInUseItems");

	Params::PilgrimActorPool_GetNumInUseItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAsyncAction_RequestLeaderboard.PilgrimRequestLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SongShortName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SpotlightGroup                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimLeaderboardType                 LeaderboardType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            RequestingPlayer                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFriendsOnly                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCenteredOnRequestingPlayer                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSpotlightCompetition                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseCache                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimAsyncAction_RequestLeaderboard*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimAsyncAction_RequestLeaderboard* UPilgrimAsyncAction_RequestLeaderboard::PilgrimRequestLeaderboard(class UObject* WorldContextObject, const class FName SongShortName, const class FString& SpotlightGroup, EPilgrimLeaderboardType LeaderboardType, class AFortPlayerController* RequestingPlayer, bool bFriendsOnly, bool bCenteredOnRequestingPlayer, int32 Page, bool bIsSpotlightCompetition, bool bUseCache)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimRequestLeaderboard");

	Params::PilgrimAsyncAction_RequestLeaderboard_PilgrimRequestLeaderboard Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SongShortName = SongShortName;
	Parms.SpotlightGroup = std::move(SpotlightGroup);
	Parms.LeaderboardType = LeaderboardType;
	Parms.RequestingPlayer = RequestingPlayer;
	Parms.bFriendsOnly = bFriendsOnly;
	Parms.bCenteredOnRequestingPlayer = bCenteredOnRequestingPlayer;
	Parms.Page = Page;
	Parms.bIsSpotlightCompetition = bIsSpotlightCompetition;
	Parms.bUseCache = bUseCache;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAsyncAction_RequestPersonalBest.PilgrimRequestPersonalBest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            RequestingPlayer                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 PlayerAccountId                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SongShortName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       InstrumentType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BandSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseCache                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimAsyncAction_RequestPersonalBest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimAsyncAction_RequestPersonalBest* UPilgrimAsyncAction_RequestPersonalBest::PilgrimRequestPersonalBest(class UObject* WorldContextObject, class AFortPlayerController* RequestingPlayer, const struct FUniqueNetIdRepl& PlayerAccountId, const class FName SongShortName, EPilgrimTrackType InstrumentType, int32 BandSize, int32 SetlistIndex, bool bUseCache)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimRequestPersonalBest");

	Params::PilgrimAsyncAction_RequestPersonalBest_PilgrimRequestPersonalBest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.RequestingPlayer = RequestingPlayer;
	Parms.PlayerAccountId = std::move(PlayerAccountId);
	Parms.SongShortName = SongShortName;
	Parms.InstrumentType = InstrumentType;
	Parms.BandSize = BandSize;
	Parms.SetlistIndex = SetlistIndex;
	Parms.bUseCache = bUseCache;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimAsyncAction_RequestPlayerFeed.PilgrimRequestPlayerFeed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            RequestingPlayer                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                SongQuery                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSongShortNameMatcher            SongShortNameMatcher                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<EPilgrimLeaderboardType>         Leaderboards                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FUniqueNetIdRepl>         FriendIds                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EPilgrimPlayerFeedSortType              SortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllScores                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRequirePlayerScore                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimAsyncAction_RequestPlayerFeed*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimAsyncAction_RequestPlayerFeed* UPilgrimAsyncAction_RequestPlayerFeed::PilgrimRequestPlayerFeed(class UObject* WorldContextObject, class AFortPlayerController* RequestingPlayer, const struct FGameplayTagQuery& SongQuery, const struct FSongShortNameMatcher& SongShortNameMatcher, const TArray<EPilgrimLeaderboardType>& Leaderboards, const TArray<struct FUniqueNetIdRepl>& FriendIds, EPilgrimPlayerFeedSortType SortType, bool bAllScores, bool bRequirePlayerScore)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimRequestPlayerFeed");

	Params::PilgrimAsyncAction_RequestPlayerFeed_PilgrimRequestPlayerFeed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.RequestingPlayer = RequestingPlayer;
	Parms.SongQuery = std::move(SongQuery);
	Parms.SongShortNameMatcher = std::move(SongShortNameMatcher);
	Parms.Leaderboards = std::move(Leaderboards);
	Parms.FriendIds = std::move(FriendIds);
	Parms.SortType = SortType;
	Parms.bAllScores = bAllScores;
	Parms.bRequirePlayerScore = bRequirePlayerScore;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimBeatMarker.OnBeatMarkerPassedNowBar
// (Native, Event, Public, BlueprintEvent)

void APilgrimBeatMarker::OnBeatMarkerPassedNowBar()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBeatMarkerPassedNowBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimBeatMarker.OnPlacedOnTrack
// (Native, Event, Public, BlueprintEvent)

void APilgrimBeatMarker::OnPlacedOnTrack()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlacedOnTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimBeatMarker.SetupNumLanes
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NumLanes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimBeatMarker::SetupNumLanes(int32 NumLanes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupNumLanes");

	Params::PilgrimBeatMarker_SetupNumLanes Parms{};

	Parms.NumLanes = NumLanes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimBeatValidatedAbility.OnBeatAbilityActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOnBeat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimBeatValidatedAbility::OnBeatAbilityActivated(bool bOnBeat)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBeatAbilityActivated");

	Params::PilgrimBeatValidatedAbility_OnBeatAbilityActivated Parms{};

	Parms.bOnBeat = bOnBeat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.SetSelectedGeneralControllerPreset
// (Final, RequiredAPI, Native, Public)
// Parameters:
// class FString                           NewSelectedGeneralControllerPreset                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimClientSettingRecordPartition::SetSelectedGeneralControllerPreset(const class FString& NewSelectedGeneralControllerPreset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSelectedGeneralControllerPreset");

	Params::PilgrimClientSettingRecordPartition_SetSelectedGeneralControllerPreset Parms{};

	Parms.NewSelectedGeneralControllerPreset = std::move(NewSelectedGeneralControllerPreset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.SetTrackBackgroundOpacity
// (Final, Native, Public)
// Parameters:
// float                                   NewOpacity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimClientSettingRecordPartition::SetTrackBackgroundOpacity(float NewOpacity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTrackBackgroundOpacity");

	Params::PilgrimClientSettingRecordPartition_SetTrackBackgroundOpacity Parms{};

	Parms.NewOpacity = NewOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.SetTrackSpeedMultiplier
// (Final, Native, Public)
// Parameters:
// float                                   NewMultiplier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimClientSettingRecordPartition::SetTrackSpeedMultiplier(float NewMultiplier)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTrackSpeedMultiplier");

	Params::PilgrimClientSettingRecordPartition_SetTrackSpeedMultiplier Parms{};

	Parms.NewMultiplier = NewMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.SetUseAlternative5LaneTouchLayout
// (Final, Native, Public)
// Parameters:
// bool                                    NewUseAlternative5LaneTouchLayout                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimClientSettingRecordPartition::SetUseAlternative5LaneTouchLayout(bool NewUseAlternative5LaneTouchLayout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetUseAlternative5LaneTouchLayout");

	Params::PilgrimClientSettingRecordPartition_SetUseAlternative5LaneTouchLayout Parms{};

	Parms.NewUseAlternative5LaneTouchLayout = NewUseAlternative5LaneTouchLayout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.GetSelectedGeneralControllerPreset
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPilgrimClientSettingRecordPartition::GetSelectedGeneralControllerPreset() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedGeneralControllerPreset");

	Params::PilgrimClientSettingRecordPartition_GetSelectedGeneralControllerPreset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.GetTrackBackgroundOpacity
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimClientSettingRecordPartition::GetTrackBackgroundOpacity() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTrackBackgroundOpacity");

	Params::PilgrimClientSettingRecordPartition_GetTrackBackgroundOpacity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.GetTrackSpeedMultiplier
// (Final, RequiredAPI, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimClientSettingRecordPartition::GetTrackSpeedMultiplier() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTrackSpeedMultiplier");

	Params::PilgrimClientSettingRecordPartition_GetTrackSpeedMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimClientSettingRecordPartition.GetUseAlternative5LaneTouchLayout
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimClientSettingRecordPartition::GetUseAlternative5LaneTouchLayout() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUseAlternative5LaneTouchLayout");

	Params::PilgrimClientSettingRecordPartition_GetUseAlternative5LaneTouchLayout Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCoreBandStateComponent.OnRep_OwnedSongs
// (Final, Native, Protected)

void UPilgrimCoreBandStateComponent::OnRep_OwnedSongs()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_OwnedSongs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimCoreBandStateComponent.GetCurrentSong
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimCoreBandStateComponent::GetCurrentSong() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSong");

	Params::PilgrimCoreBandStateComponent_GetCurrentSong Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCoreBandStateComponent.GetNextSong
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimCoreBandStateComponent::GetNextSong() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextSong");

	Params::PilgrimCoreBandStateComponent_GetNextSong Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCoreBandStateComponent.GetSongAtIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimCoreBandStateComponent::GetSongAtIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongAtIndex");

	Params::PilgrimCoreBandStateComponent_GetSongAtIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.GetPilgrimCorePlayerStateComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                     PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimCorePlayerStateComponent* ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimCorePlayerStateComponent* UPilgrimCorePlayerStateComponent::GetPilgrimCorePlayerStateComponent(const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetPilgrimCorePlayerStateComponent");

	Params::PilgrimCorePlayerStateComponent_GetPilgrimCorePlayerStateComponent Parms{};

	Parms.PlayerState = PlayerState;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.OnRep_InstrumentChoice
// (Final, Native, Protected)
// Parameters:
// EPilgrimTrackType                       PrevInstrument                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::OnRep_InstrumentChoice(EPilgrimTrackType PrevInstrument)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_InstrumentChoice");

	Params::PilgrimCorePlayerStateComponent_OnRep_InstrumentChoice Parms{};

	Parms.PrevInstrument = PrevInstrument;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.OnRep_IsReady
// (Final, Native, Protected)
// Parameters:
// bool                                    bPrevIsReady                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::OnRep_IsReady(bool bPrevIsReady)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_IsReady");

	Params::PilgrimCorePlayerStateComponent_OnRep_IsReady Parms{};

	Parms.bPrevIsReady = bPrevIsReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.OnRep_SongDifficulty
// (Final, Native, Protected)
// Parameters:
// EPilgrimSongDifficulty                  PrevDifficulty                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::OnRep_SongDifficulty(EPilgrimSongDifficulty PrevDifficulty)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_SongDifficulty");

	Params::PilgrimCorePlayerStateComponent_OnRep_SongDifficulty Parms{};

	Parms.PrevDifficulty = PrevDifficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.ServerSetIsReady
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsReady                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::ServerSetIsReady(bool bInIsReady)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetIsReady");

	Params::PilgrimCorePlayerStateComponent_ServerSetIsReady Parms{};

	Parms.bInIsReady = bInIsReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.ServerSetIsUsingPlasticInstruments
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsPlasticAvailable                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::ServerSetIsUsingPlasticInstruments(bool bIsPlasticAvailable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetIsUsingPlasticInstruments");

	Params::PilgrimCorePlayerStateComponent_ServerSetIsUsingPlasticInstruments Parms{};

	Parms.bIsPlasticAvailable = bIsPlasticAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.SetInstrumentChoice
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EPilgrimTrackType                       Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::SetInstrumentChoice(EPilgrimTrackType Instrument)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInstrumentChoice");

	Params::PilgrimCorePlayerStateComponent_SetInstrumentChoice Parms{};

	Parms.Instrument = Instrument;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.SetSongDifficulty
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCorePlayerStateComponent::SetSongDifficulty(EPilgrimSongDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSongDifficulty");

	Params::PilgrimCorePlayerStateComponent_SetSongDifficulty Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.GetInstrumentChoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimCorePlayerStateComponent::GetInstrumentChoice() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInstrumentChoice");

	Params::PilgrimCorePlayerStateComponent_GetInstrumentChoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.GetIsPlasticInstrumentAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCorePlayerStateComponent::GetIsPlasticInstrumentAvailable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsPlasticInstrumentAvailable");

	Params::PilgrimCorePlayerStateComponent_GetIsPlasticInstrumentAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.GetIsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCorePlayerStateComponent::GetIsReady() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsReady");

	Params::PilgrimCorePlayerStateComponent_GetIsReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.GetSongDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimSongDifficulty                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimSongDifficulty UPilgrimCorePlayerStateComponent::GetSongDifficulty() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongDifficulty");

	Params::PilgrimCorePlayerStateComponent_GetSongDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCorePlayerStateComponent.GetTrackTypeForGameplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimCorePlayerStateComponent::GetTrackTypeForGameplay() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTrackTypeForGameplay");

	Params::PilgrimCorePlayerStateComponent_GetTrackTypeForGameplay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.GetPlatformTimeSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimCore_BPFL::GetPlatformTimeSeconds()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetPlatformTimeSeconds");

	Params::PilgrimCore_BPFL_GetPlatformTimeSeconds Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.InstrumentTypesAreEqual
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESparksInstrumentType                   SparksType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       PilgrimType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCore_BPFL::InstrumentTypesAreEqual(ESparksInstrumentType SparksType, EPilgrimTrackType PilgrimType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("InstrumentTypesAreEqual");

	Params::PilgrimCore_BPFL_InstrumentTypesAreEqual Parms{};

	Parms.SparksType = SparksType;
	Parms.PilgrimType = PilgrimType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.MidiTrackNameToPilgrimTrackType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           MidiTrackName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimCore_BPFL::MidiTrackNameToPilgrimTrackType(const class FString& MidiTrackName)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("MidiTrackNameToPilgrimTrackType");

	Params::PilgrimCore_BPFL_MidiTrackNameToPilgrimTrackType Parms{};

	Parms.MidiTrackName = std::move(MidiTrackName);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.PilgrimTrackTypeToMidiTrackName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimTrackType                       PilgrimType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPilgrimCore_BPFL::PilgrimTrackTypeToMidiTrackName(EPilgrimTrackType PilgrimType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimTrackTypeToMidiTrackName");

	Params::PilgrimCore_BPFL_PilgrimTrackTypeToMidiTrackName Parms{};

	Parms.PilgrimType = PilgrimType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.PilgrimTrackTypeToSparksInstrument
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimTrackType                       PilgrimType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESparksInstrumentType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksInstrumentType UPilgrimCore_BPFL::PilgrimTrackTypeToSparksInstrument(EPilgrimTrackType PilgrimType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimTrackTypeToSparksInstrument");

	Params::PilgrimCore_BPFL_PilgrimTrackTypeToSparksInstrument Parms{};

	Parms.PilgrimType = PilgrimType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.ShouldUseTouchUIForLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCore_BPFL::ShouldUseTouchUIForLocalPlayer(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("ShouldUseTouchUIForLocalPlayer");

	Params::PilgrimCore_BPFL_ShouldUseTouchUIForLocalPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCore_BPFL.SparksInstrumentToPilgrimTrackType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESparksInstrumentType                   SparksType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimCore_BPFL::SparksInstrumentToPilgrimTrackType(ESparksInstrumentType SparksType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("SparksInstrumentToPilgrimTrackType");

	Params::PilgrimCore_BPFL_SparksInstrumentToPilgrimTrackType Parms{};

	Parms.SparksType = SparksType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.OnRep_MaxSongsPerPlayer
// (Final, Native, Protected)
// Parameters:
// int32                                   PrevMax                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::OnRep_MaxSongsPerPlayer(int32 PrevMax)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_MaxSongsPerPlayer");

	Params::PilgrimCustomSetlist_OnRep_MaxSongsPerPlayer Parms{};

	Parms.PrevMax = PrevMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.OnRep_SetlistEntries
// (Final, Native, Protected)

void UPilgrimCustomSetlist::OnRep_SetlistEntries()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_SetlistEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerAddSongForPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::ServerAddSongForPlayer(class FName SongShortName, class APlayerState* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerAddSongForPlayer");

	Params::PilgrimCustomSetlist_ServerAddSongForPlayer Parms{};

	Parms.SongShortName = SongShortName;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerRemoveAllSongs
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPilgrimCustomSetlist::ServerRemoveAllSongs()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerRemoveAllSongs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerRemoveAllSongsForPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::ServerRemoveAllSongsForPlayer(class APlayerState* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerRemoveAllSongsForPlayer");

	Params::PilgrimCustomSetlist_ServerRemoveAllSongsForPlayer Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerRemoveSongAtIndex
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::ServerRemoveSongAtIndex(int32 Index_0, class FName SongShortName, class APlayerState* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerRemoveSongAtIndex");

	Params::PilgrimCustomSetlist_ServerRemoveSongAtIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.SongShortName = SongShortName;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerRemoveSongForPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveAll                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::ServerRemoveSongForPlayer(class FName SongShortName, class APlayerState* Player, bool bRemoveAll)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerRemoveSongForPlayer");

	Params::PilgrimCustomSetlist_ServerRemoveSongForPlayer Parms{};

	Parms.SongShortName = SongShortName;
	Parms.Player = Player;
	Parms.bRemoveAll = bRemoveAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerSetIsSetlistLocked
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsLocked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::ServerSetIsSetlistLocked(bool bInIsLocked)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetIsSetlistLocked");

	Params::PilgrimCustomSetlist_ServerSetIsSetlistLocked Parms{};

	Parms.bInIsLocked = bInIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.ServerSetMaxSongsPerPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewMax                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::ServerSetMaxSongsPerPlayer(int32 NewMax)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetMaxSongsPerPlayer");

	Params::PilgrimCustomSetlist_ServerSetMaxSongsPerPlayer Parms{};

	Parms.NewMax = NewMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.CanAddSongForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimCantAddSongReason               OutReason                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     OutAddedByPlayer                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCustomSetlist::CanAddSongForPlayer(class FName SongShortName, class APlayerState* Player, EPilgrimCantAddSongReason* OutReason, class APlayerState** OutAddedByPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanAddSongForPlayer");

	Params::PilgrimCustomSetlist_CanAddSongForPlayer Parms{};

	Parms.SongShortName = SongShortName;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (OutReason != nullptr)
		*OutReason = Parms.OutReason;

	if (OutAddedByPlayer != nullptr)
		*OutAddedByPlayer = Parms.OutAddedByPlayer;

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.FindEntriesForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           OutMatchingEntryIndicies                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::FindEntriesForPlayer(class APlayerState* Player, TArray<int32>* OutMatchingEntryIndicies) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FindEntriesForPlayer");

	Params::PilgrimCustomSetlist_FindEntriesForPlayer Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMatchingEntryIndicies != nullptr)
		*OutMatchingEntryIndicies = std::move(Parms.OutMatchingEntryIndicies);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.FindEntriesForSong
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           OutMatchingEntryIndicies                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::FindEntriesForSong(class FName SongShortName, TArray<int32>* OutMatchingEntryIndicies) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FindEntriesForSong");

	Params::PilgrimCustomSetlist_FindEntriesForSong Parms{};

	Parms.SongShortName = SongShortName;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMatchingEntryIndicies != nullptr)
		*OutMatchingEntryIndicies = std::move(Parms.OutMatchingEntryIndicies);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.FindEntriesForSongAndPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           OutMatchingEntryIndicies                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::FindEntriesForSongAndPlayer(class FName SongShortName, class APlayerState* Player, TArray<int32>* OutMatchingEntryIndicies) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FindEntriesForSongAndPlayer");

	Params::PilgrimCustomSetlist_FindEntriesForSongAndPlayer Parms{};

	Parms.SongShortName = SongShortName;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMatchingEntryIndicies != nullptr)
		*OutMatchingEntryIndicies = std::move(Parms.OutMatchingEntryIndicies);
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.GetIsSetlistLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCustomSetlist::GetIsSetlistLocked() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsSetlistLocked");

	Params::PilgrimCustomSetlist_GetIsSetlistLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.GetMaxSongsPerPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimCustomSetlist::GetMaxSongsPerPlayer() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMaxSongsPerPlayer");

	Params::PilgrimCustomSetlist_GetMaxSongsPerPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.GetSetlistEntryAtIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutSongShortName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     OutAddedByPlayer                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimCustomSetlist::GetSetlistEntryAtIndex(int32 Index_0, class FName* OutSongShortName, class APlayerState** OutAddedByPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSetlistEntryAtIndex");

	Params::PilgrimCustomSetlist_GetSetlistEntryAtIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSongShortName != nullptr)
		*OutSongShortName = Parms.OutSongShortName;

	if (OutAddedByPlayer != nullptr)
		*OutAddedByPlayer = Parms.OutAddedByPlayer;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.GetSongsAddedByPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UPilgrimCustomSetlist::GetSongsAddedByPlayer(class APlayerState* Player) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongsAddedByPlayer");

	Params::PilgrimCustomSetlist_GetSongsAddedByPlayer Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.HasAnyoneAddedSong
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     OutAddedByPlayer                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCustomSetlist::HasAnyoneAddedSong(class FName SongShortName, class APlayerState** OutAddedByPlayer) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasAnyoneAddedSong");

	Params::PilgrimCustomSetlist_HasAnyoneAddedSong Parms{};

	Parms.SongShortName = SongShortName;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAddedByPlayer != nullptr)
		*OutAddedByPlayer = Parms.OutAddedByPlayer;

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimCustomSetlist.HasPlayerAddedSong
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimCustomSetlist::HasPlayerAddedSong(class FName SongShortName, class APlayerState* Player) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasPlayerAddedSong");

	Params::PilgrimCustomSetlist_HasPlayerAddedSong Parms{};

	Parms.SongShortName = SongShortName;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimDelayUntilTimeBeforeMidiTick.PilgrimDelayUntilTimeBeforeMidiTick
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          PassthroughObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimGame*                     PilgrimGameContext                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MidiTick                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SecondsBeforeTick                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimDelayUntilTimeBeforeMidiTick*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimDelayUntilTimeBeforeMidiTick* UPilgrimDelayUntilTimeBeforeMidiTick::PilgrimDelayUntilTimeBeforeMidiTick(class UObject* PassthroughObject, class UPilgrimGame* PilgrimGameContext, int32 MidiTick, float SecondsBeforeTick, ECalibratedMusicTimebase Timebase)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimDelayUntilTimeBeforeMidiTick");

	Params::PilgrimDelayUntilTimeBeforeMidiTick_PilgrimDelayUntilTimeBeforeMidiTick Parms{};

	Parms.PassthroughObject = PassthroughObject;
	Parms.PilgrimGameContext = PilgrimGameContext;
	Parms.MidiTick = MidiTick;
	Parms.SecondsBeforeTick = SecondsBeforeTick;
	Parms.Timebase = Timebase;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimDelayUntilTimeBeforeMidiTick.TimerTick
// (Final, Native, Public)

void UPilgrimDelayUntilTimeBeforeMidiTick::TimerTick()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TimerTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimEventRouterLibrary.GetGameplayEventRouter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* UPilgrimEventRouterLibrary::GetGameplayEventRouter(class AActor* ContextActor)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetGameplayEventRouter");

	Params::PilgrimEventRouterLibrary_GetGameplayEventRouter Parms{};

	Parms.ContextActor = ContextActor;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.AddTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APilgrimTrack*                    Track                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::AddTrack(class APilgrimTrack* Track)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddTrack");

	Params::PilgrimGame_AddTrack Parms{};

	Parms.Track = Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.ApplySettingsFromConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPilgrimGameConfig*               GameConfig                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::ApplySettingsFromConfig(const class UPilgrimGameConfig* GameConfig)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplySettingsFromConfig");

	Params::PilgrimGame_ApplySettingsFromConfig Parms{};

	Parms.GameConfig = GameConfig;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.CheatEndSong
// (Final, Native, Public, BlueprintCallable)

void UPilgrimGame::CheatEndSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheatEndSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGame.CheatSetJumpMarkers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           FromTime                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ToTime                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::CheatSetJumpMarkers(const class FString& FromTime, const class FString& ToTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheatSetJumpMarkers");

	Params::PilgrimGame_CheatSetJumpMarkers Parms{};

	Parms.FromTime = std::move(FromTime);
	Parms.ToTime = std::move(ToTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.CheatSetPerformanceData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPilgrimCheatPerformanceArgument PerformanceArgument                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPilgrimGame::CheatSetPerformanceData(const struct FPilgrimCheatPerformanceArgument& PerformanceArgument)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheatSetPerformanceData");

	Params::PilgrimGame_CheatSetPerformanceData Parms{};

	Parms.PerformanceArgument = std::move(PerformanceArgument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.EndGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFadeOut                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeOutDurationSeconds                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::EndGame(bool bFadeOut, float FadeOutDurationSeconds)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EndGame");

	Params::PilgrimGame_EndGame Parms{};

	Parms.bFadeOut = bFadeOut;
	Parms.FadeOutDurationSeconds = FadeOutDurationSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.GetGameConfigSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FPilgrimGameConfigSettings ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPilgrimGameConfigSettings UPilgrimGame::GetGameConfigSettings()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGameConfigSettings");

	Params::PilgrimGame_GetGameConfigSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetNumLanes
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimGame::GetNumLanes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumLanes");

	Params::PilgrimGame_GetNumLanes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.OnControlMappingsRebuilt
// (Final, Native, Protected)

void UPilgrimGame::OnControlMappingsRebuilt()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnControlMappingsRebuilt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGame.OnEndedByServer
// (Final, Native, Public, BlueprintCallable)

void UPilgrimGame::OnEndedByServer()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEndedByServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGame.OnInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::OnInputMethodChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputMethodChanged");

	Params::PilgrimGame_OnInputMethodChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.OnMusicReachedEndOfPlayback
// (Final, Native, Protected)

void UPilgrimGame::OnMusicReachedEndOfPlayback()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMusicReachedEndOfPlayback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGame.OnMusicResumed
// (Final, Native, Protected)

void UPilgrimGame::OnMusicResumed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMusicResumed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGame.PlaySong
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  InMetasoundPlayer                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  InMetasoundMixer                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMusicClockComponent*             InMusicClock                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             InSong                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::PlaySong(class UAudioComponent* InMetasoundPlayer, class UAudioComponent* InMetasoundMixer, class UMusicClockComponent* InMusicClock, class UPilgrimSongMetadata* InSong)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlaySong");

	Params::PilgrimGame_PlaySong Parms{};

	Parms.InMetasoundPlayer = InMetasoundPlayer;
	Parms.InMetasoundMixer = InMetasoundMixer;
	Parms.InMusicClock = InMusicClock;
	Parms.InSong = InSong;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.PlaySongStreamed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  InMetasoundPlayer                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  InMetasoundMixer                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMusicClockComponent*             InMusicClock                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimMediaStreamer*            InStreamer                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::PlaySongStreamed(class UAudioComponent* InMetasoundPlayer, class UAudioComponent* InMetasoundMixer, class UMusicClockComponent* InMusicClock, class UPilgrimMediaStreamer* InStreamer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlaySongStreamed");

	Params::PilgrimGame_PlaySongStreamed Parms{};

	Parms.InMetasoundPlayer = InMetasoundPlayer;
	Parms.InMetasoundMixer = InMetasoundMixer;
	Parms.InMusicClock = InMusicClock;
	Parms.InStreamer = InStreamer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.ProcessSwing
// (Final, Native, Public)
// Parameters:
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::ProcessSwing(EPilgrimTrackLane Lane, bool bIsPress)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ProcessSwing");

	Params::PilgrimGame_ProcessSwing Parms{};

	Parms.Lane = Lane;
	Parms.bIsPress = bIsPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.SeekToTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Milliseconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::SeekToTime(int32 Milliseconds)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SeekToTime");

	Params::PilgrimGame_SeekToTime Parms{};

	Parms.Milliseconds = Milliseconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.SetDifficultyAndTrackType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::SetDifficultyAndTrackType(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDifficultyAndTrackType");

	Params::PilgrimGame_SetDifficultyAndTrackType Parms{};

	Parms.Difficulty = Difficulty;
	Parms.TrackType = TrackType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.SetJumpMarkers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FromMillisecnods                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ToMilliseconds                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::SetJumpMarkers(const int32 FromMillisecnods, const int32 ToMilliseconds)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetJumpMarkers");

	Params::PilgrimGame_SetJumpMarkers Parms{};

	Parms.FromMillisecnods = FromMillisecnods;
	Parms.ToMilliseconds = ToMilliseconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.SetLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                OwnerPC                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGame::SetLocalPlayer(class APlayerController* OwnerPC)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetLocalPlayer");

	Params::PilgrimGame_SetLocalPlayer Parms{};

	Parms.OwnerPC = OwnerPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGame.StopSong
// (Final, Native, Public, BlueprintCallable)

void UPilgrimGame::StopSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGame.GetCurrentMeasureBeatTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPilgrimSongMeasurePosition      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPilgrimSongMeasurePosition UPilgrimGame::GetCurrentMeasureBeatTick() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentMeasureBeatTick");

	Params::PilgrimGame_GetCurrentMeasureBeatTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetCurrentODValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimGame::GetCurrentODValue() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentODValue");

	Params::PilgrimGame_GetCurrentODValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetCurrentSongMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                InTimebase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimGame::GetCurrentSongMs(ECalibratedMusicTimebase InTimebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSongMs");

	Params::PilgrimGame_GetCurrentSongMs Parms{};

	Parms.InTimebase = InTimebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetCurrentSongTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                InTimebase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimGame::GetCurrentSongTick(ECalibratedMusicTimebase InTimebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSongTick");

	Params::PilgrimGame_GetCurrentSongTick Parms{};

	Parms.InTimebase = InTimebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetGemBreakForTrackDifficulty
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       Track                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGemBreak                 FoundBreak                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   BarsLeftInBreak                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGemBreak                 NextBreak                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   BarsTillNextBreak                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimGame::GetGemBreakForTrackDifficulty(EPilgrimTrackType Track, EPilgrimSongDifficulty Difficulty, struct FPilgrimGemBreak* FoundBreak, float* BarsLeftInBreak, struct FPilgrimGemBreak* NextBreak, float* BarsTillNextBreak) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemBreakForTrackDifficulty");

	Params::PilgrimGame_GetGemBreakForTrackDifficulty Parms{};

	Parms.Track = Track;
	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);

	if (FoundBreak != nullptr)
		*FoundBreak = std::move(Parms.FoundBreak);

	if (BarsLeftInBreak != nullptr)
		*BarsLeftInBreak = Parms.BarsLeftInBreak;

	if (NextBreak != nullptr)
		*NextBreak = std::move(Parms.NextBreak);

	if (BarsTillNextBreak != nullptr)
		*BarsTillNextBreak = Parms.BarsTillNextBreak;

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetHitOffsetAverage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimGame::GetHitOffsetAverage() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHitOffsetAverage");

	Params::PilgrimGame_GetHitOffsetAverage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetInputNameForLane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UPilgrimGame::GetInputNameForLane(EPilgrimTrackLane Lane) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInputNameForLane");

	Params::PilgrimGame_GetInputNameForLane Parms{};

	Parms.Lane = Lane;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetKeyBoundToLane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UPilgrimGame::GetKeyBoundToLane(EPilgrimTrackLane Lane) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetKeyBoundToLane");

	Params::PilgrimGame_GetKeyBoundToLane Parms{};

	Parms.Lane = Lane;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetLocalPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UPilgrimGame::GetLocalPlayerController() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLocalPlayerController");

	Params::PilgrimGame_GetLocalPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetMainTrack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APilgrimTrack*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APilgrimTrack* UPilgrimGame::GetMainTrack() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMainTrack");

	Params::PilgrimGame_GetMainTrack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetMusicClock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* UPilgrimGame::GetMusicClock() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicClock");

	Params::PilgrimGame_GetMusicClock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetSelectedDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimSongDifficulty                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimSongDifficulty UPilgrimGame::GetSelectedDifficulty() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedDifficulty");

	Params::PilgrimGame_GetSelectedDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetSelectedTrackType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimGame::GetSelectedTrackType() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedTrackType");

	Params::PilgrimGame_GetSelectedTrackType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetSongLengthMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimGame::GetSongLengthMs() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongLengthMs");

	Params::PilgrimGame_GetSongLengthMs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.GetTotalSecondsSinceGameEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimGame::GetTotalSecondsSinceGameEnd() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTotalSecondsSinceGameEnd");

	Params::PilgrimGame_GetTotalSecondsSinceGameEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.IsAutoplayEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimGame::IsAutoplayEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsAutoplayEnabled");

	Params::PilgrimGame_IsAutoplayEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.IsDisableMissEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimGame::IsDisableMissEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsDisableMissEnabled");

	Params::PilgrimGame_IsDisableMissEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.IsGameEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimGame::IsGameEnded() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsGameEnded");

	Params::PilgrimGame_IsGameEnded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGame.IsInputSpecificGemShapesEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimGame::IsInputSpecificGemShapesEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsInputSpecificGemShapesEnabled");

	Params::PilgrimGame_IsInputSpecificGemShapesEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGameUserSettings.SetSelectedInstrument
// (Final, Native, Public)
// Parameters:
// EPilgrimTrackType                       NewInstrument                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGameUserSettings::SetSelectedInstrument(EPilgrimTrackType NewInstrument)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSelectedInstrument");

	Params::PilgrimGameUserSettings_SetSelectedInstrument Parms{};

	Parms.NewInstrument = NewInstrument;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGameUserSettings.SetSongDifficulty
// (Final, Native, Public)
// Parameters:
// EPilgrimSongDifficulty                  NewDifficulty                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGameUserSettings::SetSongDifficulty(EPilgrimSongDifficulty NewDifficulty)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSongDifficulty");

	Params::PilgrimGameUserSettings_SetSongDifficulty Parms{};

	Parms.NewDifficulty = NewDifficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGameUserSettings.GetSelectedInstrument
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimGameUserSettings::GetSelectedInstrument() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedInstrument");

	Params::PilgrimGameUserSettings_GetSelectedInstrument Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGameUserSettings.GetSongDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimSongDifficulty                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimSongDifficulty UPilgrimGameUserSettings::GetSongDifficulty() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongDifficulty");

	Params::PilgrimGameUserSettings_GetSongDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGem.AllowHitByInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsPressInput                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimGem::AllowHitByInput(bool bIsPressInput, EPilgrimTrackLane Lane)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AllowHitByInput");

	Params::PilgrimGem_AllowHitByInput Parms{};

	Parms.bIsPressInput = bIsPressInput;
	Parms.Lane = Lane;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGem.FinishGemSmash
// (Final, Native, Public, BlueprintCallable)

void APilgrimGem::FinishGemSmash()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FinishGemSmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGem.OnGemInputUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FKey                             BoundKey                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimGem::OnGemInputUpdated(const struct FKey& BoundKey)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGemInputUpdated");

	Params::PilgrimGem_OnGemInputUpdated Parms{};

	Parms.BoundKey = std::move(BoundKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGem.OnGemPassed
// (Native, Event, Public, BlueprintEvent)

void APilgrimGem::OnGemPassed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGemPassed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGem.OnGemSmashed
// (Native, Event, Public, BlueprintEvent)

void APilgrimGem::OnGemSmashed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGemSmashed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGem.OnLaneSet
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTrackItemInfo                   Gem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimGem::OnLaneSet(const struct FTrackItemInfo& Gem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLaneSet");

	Params::PilgrimGem_OnLaneSet Parms{};

	Parms.Gem = std::move(Gem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGem.UpdateGemInput
// (Final, Native, Public)

void APilgrimGem::UpdateGemInput()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateGemInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGem.GetLane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackLane                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackLane APilgrimGem::GetLane() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLane");

	Params::PilgrimGem_GetLane Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGem.IsOverdriveGem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimGem::IsOverdriveGem() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsOverdriveGem");

	Params::PilgrimGem_IsOverdriveGem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetPilgrimGemAnalyzer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimGemAnalyzer*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimGemAnalyzer* UPilgrimGemAnalyzer::GetPilgrimGemAnalyzer(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetPilgrimGemAnalyzer");

	Params::PilgrimGemAnalyzer_GetPilgrimGemAnalyzer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetPilgrimSongData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UPilgrimSongData*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UPilgrimSongData* UPilgrimGemAnalyzer::GetPilgrimSongData(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetPilgrimSongData");

	Params::PilgrimGemAnalyzer_GetPilgrimSongData Parms{};

	Parms.WorldContextObject = WorldContextObject;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetGemBreaks
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPilgrimGemBreak>         OutGemBreaks                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimGemAnalyzer::GetGemBreaks(EPilgrimTrackType TrackType, EPilgrimSongDifficulty Difficulty, TArray<struct FPilgrimGemBreak>* OutGemBreaks)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemBreaks");

	Params::PilgrimGemAnalyzer_GetGemBreaks Parms{};

	Parms.TrackType = TrackType;
	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);

	if (OutGemBreaks != nullptr)
		*OutGemBreaks = std::move(Parms.OutGemBreaks);
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetGemDensityDataForAllGameplaySections
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPilgrimGemDensityData>   OutGemDensityData                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimGemAnalyzer::GetGemDensityDataForAllGameplaySections(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, TArray<struct FPilgrimGemDensityData>* OutGemDensityData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemDensityDataForAllGameplaySections");

	Params::PilgrimGemAnalyzer_GetGemDensityDataForAllGameplaySections Parms{};

	Parms.Difficulty = Difficulty;
	Parms.TrackType = TrackType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutGemDensityData != nullptr)
		*OutGemDensityData = std::move(Parms.OutGemDensityData);
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetGemDensityDataForAllSongSections
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPilgrimGemDensityData>   OutGemDensityData                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimGemAnalyzer::GetGemDensityDataForAllSongSections(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, TArray<struct FPilgrimGemDensityData>* OutGemDensityData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemDensityDataForAllSongSections");

	Params::PilgrimGemAnalyzer_GetGemDensityDataForAllSongSections Parms{};

	Parms.Difficulty = Difficulty;
	Parms.TrackType = TrackType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutGemDensityData != nullptr)
		*OutGemDensityData = std::move(Parms.OutGemDensityData);
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetGemDensityDataForGameplaySection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SectionIndexToFind                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPilgrimGemDensityData     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FPilgrimGemDensityData UPilgrimGemAnalyzer::GetGemDensityDataForGameplaySection(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, int32 SectionIndexToFind)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemDensityDataForGameplaySection");

	Params::PilgrimGemAnalyzer_GetGemDensityDataForGameplaySection Parms{};

	Parms.Difficulty = Difficulty;
	Parms.TrackType = TrackType;
	Parms.SectionIndexToFind = SectionIndexToFind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetGemDensityDataForSongSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SectionIndexToFind                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPilgrimGemDensityData     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FPilgrimGemDensityData UPilgrimGemAnalyzer::GetGemDensityDataForSongSection(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, int32 SectionIndexToFind)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemDensityDataForSongSection");

	Params::PilgrimGemAnalyzer_GetGemDensityDataForSongSection Parms{};

	Parms.Difficulty = Difficulty;
	Parms.TrackType = TrackType;
	Parms.SectionIndexToFind = SectionIndexToFind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetGemBreakForTrackDifficultyMs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       Track                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimSongDifficulty                  Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SongMs                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGemBreak                 FoundBreak                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPilgrimGemBreak                 NextBreak                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimGemAnalyzer::GetGemBreakForTrackDifficultyMs(EPilgrimTrackType Track, EPilgrimSongDifficulty Difficulty, float SongMs, struct FPilgrimGemBreak* FoundBreak, struct FPilgrimGemBreak* NextBreak) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGemBreakForTrackDifficultyMs");

	Params::PilgrimGemAnalyzer_GetGemBreakForTrackDifficultyMs Parms{};

	Parms.Track = Track;
	Parms.Difficulty = Difficulty;
	Parms.SongMs = SongMs;

	UObject::ProcessEvent(Func, &Parms);

	if (FoundBreak != nullptr)
		*FoundBreak = std::move(Parms.FoundBreak);

	if (NextBreak != nullptr)
		*NextBreak = std::move(Parms.NextBreak);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemAnalyzer.GetSongData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UPilgrimSongData*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UPilgrimSongData* UPilgrimGemAnalyzer::GetSongData() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongData");

	Params::PilgrimGemAnalyzer_GetSongData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimGemSmasher.BeginSustainHoldEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOverdrive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimGemSmasher::BeginSustainHoldEffect(bool bIsOverdrive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BeginSustainHoldEffect");

	Params::PilgrimGemSmasher_BeginSustainHoldEffect Parms{};

	Parms.bIsOverdrive = bIsOverdrive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGemSmasher.EndSustainHoldEffect
// (Event, Public, BlueprintEvent)

void APilgrimGemSmasher::EndSustainHoldEffect()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EndSustainHoldEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGemSmasher.OnInputPressed
// (Native, Event, Public, BlueprintEvent)

void APilgrimGemSmasher::OnInputPressed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGemSmasher.OnInputReleased
// (Native, Event, Public, BlueprintEvent)

void APilgrimGemSmasher::OnInputReleased()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGemSmasher.OnInputUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FKey                             BoundKey                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimGemSmasher::OnInputUpdated(const struct FKey& BoundKey)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputUpdated");

	Params::PilgrimGemSmasher_OnInputUpdated Parms{};

	Parms.BoundKey = std::move(BoundKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimGemSmasher.OverdriveFailedDuringSustainHold
// (Event, Public, BlueprintEvent)

void APilgrimGemSmasher::OverdriveFailedDuringSustainHold()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OverdriveFailedDuringSustainHold");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimGemTrackItemMgr.OnGemSmashFinished
// (Final, Native, Private)
// Parameters:
// class APilgrimGem*                      Gem                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGemTrackItemMgr::OnGemSmashFinished(class APilgrimGem* Gem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGemSmashFinished");

	Params::PilgrimGemTrackItemMgr_OnGemSmashFinished Parms{};

	Parms.Gem = Gem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.BandLeaderboardTypeFromSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimLeaderboardType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimLeaderboardType UPilgrimLeaderboardLibrary::BandLeaderboardTypeFromSize(int32 Size)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BandLeaderboardTypeFromSize");

	Params::PilgrimLeaderboardLibrary_BandLeaderboardTypeFromSize Parms{};

	Parms.Size = Size;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.BandSizeFromLeaderboardType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimLeaderboardType                 LeaderboardType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimLeaderboardLibrary::BandSizeFromLeaderboardType(EPilgrimLeaderboardType LeaderboardType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BandSizeFromLeaderboardType");

	Params::PilgrimLeaderboardLibrary_BandSizeFromLeaderboardType Parms{};

	Parms.LeaderboardType = LeaderboardType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.GetGameplayTagFromInstrument
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimTrackType                       Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UPilgrimLeaderboardLibrary::GetGameplayTagFromInstrument(EPilgrimTrackType Instrument)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetGameplayTagFromInstrument");

	Params::PilgrimLeaderboardLibrary_GetGameplayTagFromInstrument Parms{};

	Parms.Instrument = Instrument;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.GetInstrumentFromGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                     InstrumentGametag                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimLeaderboardLibrary::GetInstrumentFromGameplayTag(const struct FGameplayTag& InstrumentGametag)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetInstrumentFromGameplayTag");

	Params::PilgrimLeaderboardLibrary_GetInstrumentFromGameplayTag Parms{};

	Parms.InstrumentGametag = std::move(InstrumentGametag);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.InstrumentFromSoloLeaderboardType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimLeaderboardType                 LeaderboardType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType UPilgrimLeaderboardLibrary::InstrumentFromSoloLeaderboardType(EPilgrimLeaderboardType LeaderboardType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("InstrumentFromSoloLeaderboardType");

	Params::PilgrimLeaderboardLibrary_InstrumentFromSoloLeaderboardType Parms{};

	Parms.LeaderboardType = LeaderboardType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.IsBandLeaderboard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimLeaderboardType                 LeaderboardType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimLeaderboardLibrary::IsBandLeaderboard(EPilgrimLeaderboardType LeaderboardType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsBandLeaderboard");

	Params::PilgrimLeaderboardLibrary_IsBandLeaderboard Parms{};

	Parms.LeaderboardType = LeaderboardType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.IsSoloLeaderboard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimLeaderboardType                 LeaderboardType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimLeaderboardLibrary::IsSoloLeaderboard(EPilgrimLeaderboardType LeaderboardType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsSoloLeaderboard");

	Params::PilgrimLeaderboardLibrary_IsSoloLeaderboard Parms{};

	Parms.LeaderboardType = LeaderboardType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.LeaderboardTypeFromString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           LeaderboardString                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimLeaderboardType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimLeaderboardType UPilgrimLeaderboardLibrary::LeaderboardTypeFromString(const class FString& LeaderboardString)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("LeaderboardTypeFromString");

	Params::PilgrimLeaderboardLibrary_LeaderboardTypeFromString Parms{};

	Parms.LeaderboardString = std::move(LeaderboardString);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.LeaderboardTypeToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimLeaderboardType                 LeaderboardType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPilgrimLeaderboardLibrary::LeaderboardTypeToString(EPilgrimLeaderboardType LeaderboardType)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("LeaderboardTypeToString");

	Params::PilgrimLeaderboardLibrary_LeaderboardTypeToString Parms{};

	Parms.LeaderboardType = LeaderboardType;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardLibrary.SoloLeaderboardTypeFromInstrument
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPilgrimTrackType                       Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimLeaderboardType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimLeaderboardType UPilgrimLeaderboardLibrary::SoloLeaderboardTypeFromInstrument(EPilgrimTrackType Instrument)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("SoloLeaderboardTypeFromInstrument");

	Params::PilgrimLeaderboardLibrary_SoloLeaderboardTypeFromInstrument Parms{};

	Parms.Instrument = Instrument;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.CheckPlayerScoreForFriendSurpasser
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CurrentScore                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::CheckPlayerScoreForFriendSurpasser(int32 CurrentScore)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheckPlayerScoreForFriendSurpasser");

	Params::PilgrimLeaderboardPlayerComponent_CheckPlayerScoreForFriendSurpasser Parms{};

	Parms.CurrentScore = CurrentScore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.ClientCachePlayerFriendsHistoryComplete
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FPilgrimPlayerHistoryParams      HistoryParams                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FPilgrimPlayerHistoryResult>Results                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::ClientCachePlayerFriendsHistoryComplete(const struct FPilgrimPlayerHistoryParams& HistoryParams, const TArray<struct FPilgrimPlayerHistoryResult>& Results, int32 RequestID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClientCachePlayerFriendsHistoryComplete");

	Params::PilgrimLeaderboardPlayerComponent_ClientCachePlayerFriendsHistoryComplete Parms{};

	Parms.HistoryParams = std::move(HistoryParams);
	Parms.Results = std::move(Results);
	Parms.RequestID = RequestID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.ClientRequestSpotlightCompetitionsComplete
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FPilgrimSpotlightCompetitionParamsParams_0                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FPilgrimSpotlightCompetition>SpotlightCompetitions                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::ClientRequestSpotlightCompetitionsComplete(const struct FPilgrimSpotlightCompetitionParams& Params_0, const TArray<struct FPilgrimSpotlightCompetition>& SpotlightCompetitions, int32 RequestID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClientRequestSpotlightCompetitionsComplete");

	Params::PilgrimLeaderboardPlayerComponent_ClientRequestSpotlightCompetitionsComplete Parms{};

	Parms.Params_0 = std::move(Params_0);
	Parms.SpotlightCompetitions = std::move(SpotlightCompetitions);
	Parms.RequestID = RequestID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.GetPostMatchFriendRankAndDelta
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   FinalScore                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutRank                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutDelta                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::GetPostMatchFriendRankAndDelta(const int32 FinalScore, int32* OutRank, int32* OutDelta)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPostMatchFriendRankAndDelta");

	Params::PilgrimLeaderboardPlayerComponent_GetPostMatchFriendRankAndDelta Parms{};

	Parms.FinalScore = FinalScore;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRank != nullptr)
		*OutRank = Parms.OutRank;

	if (OutDelta != nullptr)
		*OutDelta = Parms.OutDelta;
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.OnRep_ChangedBandFriendLeaderboardOption
// (Final, Native, Protected)

void UPilgrimLeaderboardPlayerComponent::OnRep_ChangedBandFriendLeaderboardOption()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ChangedBandFriendLeaderboardOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.ServerCachePlayerFriendsHistory
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct FPilgrimPlayerHistoryParams      HistoryParams                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FUniqueNetIdRepl>         FriendAccountIds                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::ServerCachePlayerFriendsHistory(const struct FPilgrimPlayerHistoryParams& HistoryParams, const TArray<struct FUniqueNetIdRepl>& FriendAccountIds, int32 RequestID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerCachePlayerFriendsHistory");

	Params::PilgrimLeaderboardPlayerComponent_ServerCachePlayerFriendsHistory Parms{};

	Parms.HistoryParams = std::move(HistoryParams);
	Parms.FriendAccountIds = std::move(FriendAccountIds);
	Parms.RequestID = RequestID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.ServerRequestSpotlightCompetitions
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct FPilgrimSpotlightCompetitionParamsParams_0                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::ServerRequestSpotlightCompetitions(const struct FPilgrimSpotlightCompetitionParams& Params_0, int32 RequestID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerRequestSpotlightCompetitions");

	Params::PilgrimLeaderboardPlayerComponent_ServerRequestSpotlightCompetitions Parms{};

	Parms.Params_0 = std::move(Params_0);
	Parms.RequestID = RequestID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.SetCurrentSetlistInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::SetCurrentSetlistInfo(class FName SongShortName, EPilgrimTrackType Instrument)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentSetlistInfo");

	Params::PilgrimLeaderboardPlayerComponent_SetCurrentSetlistInfo Parms{};

	Parms.SongShortName = SongShortName;
	Parms.Instrument = Instrument;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.SetFriendFeedCache
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPilgrimPlayerFeedResult         FeedResult                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::SetFriendFeedCache(const struct FPilgrimPlayerFeedResult& FeedResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFriendFeedCache");

	Params::PilgrimLeaderboardPlayerComponent_SetFriendFeedCache Parms{};

	Parms.FeedResult = std::move(FeedResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.GetSpotlightCompetitions
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPilgrimGetSpotlightParams       SpotlightParams                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FPilgrimSpotlightCompetition>OutCompetitions                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimLeaderboardPlayerComponent::GetSpotlightCompetitions(const struct FPilgrimGetSpotlightParams& SpotlightParams, TArray<struct FPilgrimSpotlightCompetition>* OutCompetitions) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSpotlightCompetitions");

	Params::PilgrimLeaderboardPlayerComponent_GetSpotlightCompetitions Parms{};

	Parms.SpotlightParams = std::move(SpotlightParams);

	UObject::ProcessEvent(Func, &Parms);

	if (OutCompetitions != nullptr)
		*OutCompetitions = std::move(Parms.OutCompetitions);
}


// Function PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent.IsBandFriendLeaderboardEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimLeaderboardPlayerComponent::IsBandFriendLeaderboardEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsBandFriendLeaderboardEnabled");

	Params::PilgrimLeaderboardPlayerComponent_IsBandFriendLeaderboardEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.OnSongDataDownloaded
// (Final, Native, Private)
// Parameters:
// class UCatalogData*                     CatalogData                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimMediaStreamer::OnSongDataDownloaded(class UCatalogData* CatalogData, bool bSuccess)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSongDataDownloaded");

	Params::PilgrimMediaStreamer_OnSongDataDownloaded Parms{};

	Parms.CatalogData = CatalogData;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.OnVideoError
// (Final, Native, Private)
// Parameters:
// EBaseMediaTerminalErrorReason           Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimMediaStreamer::OnVideoError(EBaseMediaTerminalErrorReason Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVideoError");

	Params::PilgrimMediaStreamer_OnVideoError Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.OnVideoOpened
// (Final, Native, Private)
// Parameters:
// class FString                           OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimMediaStreamer::OnVideoOpened(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVideoOpened");

	Params::PilgrimMediaStreamer_OnVideoOpened Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.OnVideoOpenFailed
// (Final, Native, Private)
// Parameters:
// class FString                           FailedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimMediaStreamer::OnVideoOpenFailed(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVideoOpenFailed");

	Params::PilgrimMediaStreamer_OnVideoOpenFailed Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.OnVideoOpenTimeout
// (Final, Native, Private)

void UPilgrimMediaStreamer::OnVideoOpenTimeout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVideoOpenTimeout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.OnVideoSuccess
// (Final, Native, Private)

void UPilgrimMediaStreamer::OnVideoSuccess()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVideoSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.PlaySong
// (Final, Native, Public, BlueprintCallable)

void UPilgrimMediaStreamer::PlaySong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlaySong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.PrepareSong
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPilgrimSongMetadata*             InSong                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimMediaStreamer::PrepareSong(class UPilgrimSongMetadata* InSong)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PrepareSong");

	Params::PilgrimMediaStreamer_PrepareSong Parms{};

	Parms.InSong = InSong;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMediaStreamer.Stop
// (Final, Native, Public, BlueprintCallable)

void UPilgrimMediaStreamer::Stop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.AddMusicBattlePlayers
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AFortPlayerStateAthena*>   NewPlayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::AddMusicBattlePlayers(const TArray<class AFortPlayerStateAthena*>& NewPlayers)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMusicBattlePlayers");

	Params::PilgrimMusicBattleInstance_AddMusicBattlePlayers Parms{};

	Parms.NewPlayers = std::move(NewPlayers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.AddToBandScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::AddToBandScore(float Score)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddToBandScore");

	Params::PilgrimMusicBattleInstance_AddToBandScore Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.BroadcastMBIEventFinished
// (Final, Native, Public, BlueprintCallable)

void APilgrimMusicBattleInstance::BroadcastMBIEventFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BroadcastMBIEventFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.BroadcastMBIEventStarted
// (Final, Native, Public, BlueprintCallable)

void APilgrimMusicBattleInstance::BroadcastMBIEventStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BroadcastMBIEventStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.Client_DoMultiplayerBeamClash
// (Event, Protected, BlueprintEvent)

void APilgrimMusicBattleInstance::Client_DoMultiplayerBeamClash()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Client_DoMultiplayerBeamClash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.Client_DoMultiplayerDamageEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   DamagingPlayerId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DamagedPlayerId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::Client_DoMultiplayerDamageEffect(int32 DamagingPlayerId, int32 DamagedPlayerId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Client_DoMultiplayerDamageEffect");

	Params::PilgrimMusicBattleInstance_Client_DoMultiplayerDamageEffect Parms{};

	Parms.DamagingPlayerId = DamagingPlayerId;
	Parms.DamagedPlayerId = DamagedPlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ConnectFFTAnalysis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  AudioComponentWithAnalyzer                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::ConnectFFTAnalysis(class UAudioComponent* AudioComponentWithAnalyzer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectFFTAnalysis");

	Params::PilgrimMusicBattleInstance_ConnectFFTAnalysis Parms{};

	Parms.AudioComponentWithAnalyzer = AudioComponentWithAnalyzer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.DoEndGameCheat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsWin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::DoEndGameCheat(bool bIsWin)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoEndGameCheat");

	Params::PilgrimMusicBattleInstance_DoEndGameCheat Parms{};

	Parms.bIsWin = bIsWin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.DoMultiplayerDamage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   DamagingPlayerId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DamagedPlayerId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGameProgress             GameUpdateThatDidDamage                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::DoMultiplayerDamage(int32 DamagingPlayerId, int32 DamagedPlayerId, const struct FPilgrimGameProgress& GameUpdateThatDidDamage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoMultiplayerDamage");

	Params::PilgrimMusicBattleInstance_DoMultiplayerDamage Parms{};

	Parms.DamagingPlayerId = DamagingPlayerId;
	Parms.DamagedPlayerId = DamagedPlayerId;
	Parms.GameUpdateThatDidDamage = std::move(GameUpdateThatDidDamage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.FireLocalPlayerBeam
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMusicBattleProjectileType              ProjectileType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::FireLocalPlayerBeam(EMusicBattleProjectileType ProjectileType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FireLocalPlayerBeam");

	Params::PilgrimMusicBattleInstance_FireLocalPlayerBeam Parms{};

	Parms.ProjectileType = ProjectileType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetEventRouter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* APilgrimMusicBattleInstance::GetEventRouter()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetEventRouter");

	Params::PilgrimMusicBattleInstance_GetEventRouter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetScoreDensityForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float APilgrimMusicBattleInstance::GetScoreDensityForPlayer(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetScoreDensityForPlayer");

	Params::PilgrimMusicBattleInstance_GetScoreDensityForPlayer Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 APilgrimMusicBattleInstance::GetTeam()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTeam");

	Params::PilgrimMusicBattleInstance_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.NetMulticast_CheatEndSong
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void APilgrimMusicBattleInstance::NetMulticast_CheatEndSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_CheatEndSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.NetMulticast_CheatSeekToTime
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// int32                                   Milliseconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::NetMulticast_CheatSeekToTime(int32 Milliseconds)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_CheatSeekToTime");

	Params::PilgrimMusicBattleInstance_NetMulticast_CheatSeekToTime Parms{};

	Parms.Milliseconds = Milliseconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.NetMulticast_CheatSetPerformanceData
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class FString                           PerformanceArgument                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::NetMulticast_CheatSetPerformanceData(const class FString& PerformanceArgument)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_CheatSetPerformanceData");

	Params::PilgrimMusicBattleInstance_NetMulticast_CheatSetPerformanceData Parms{};

	Parms.PerformanceArgument = std::move(PerformanceArgument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.NetMulticast_DoBeamClash
// (Net, Native, Event, NetMulticast, Protected, BlueprintCallable)

void APilgrimMusicBattleInstance::NetMulticast_DoBeamClash()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_DoBeamClash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.NetMulticast_DoMultiplayerDamageEffect
// (Net, Native, Event, NetMulticast, Protected, BlueprintCallable)
// Parameters:
// int32                                   DamagingPlayerId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DamagedPlayerId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::NetMulticast_DoMultiplayerDamageEffect(int32 DamagingPlayerId, int32 DamagedPlayerId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_DoMultiplayerDamageEffect");

	Params::PilgrimMusicBattleInstance_NetMulticast_DoMultiplayerDamageEffect Parms{};

	Parms.DamagingPlayerId = DamagingPlayerId;
	Parms.DamagedPlayerId = DamagedPlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnClientReceivedSongToPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPilgrimSongMetadata*             Song                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::OnClientReceivedSongToPlay(class UPilgrimSongMetadata* Song)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnClientReceivedSongToPlay");

	Params::PilgrimMusicBattleInstance_OnClientReceivedSongToPlay Parms{};

	Parms.Song = Song;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnPlayerReachedZeroHp
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   PlayerId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::OnPlayerReachedZeroHp(int32 PlayerId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayerReachedZeroHp");

	Params::PilgrimMusicBattleInstance_OnPlayerReachedZeroHp Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnRep_MusicBattleData
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FPilgrimMusicBattleData          PreviousMusicBattleData                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::OnRep_MusicBattleData(const struct FPilgrimMusicBattleData& PreviousMusicBattleData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_MusicBattleData");

	Params::PilgrimMusicBattleInstance_OnRep_MusicBattleData Parms{};

	Parms.PreviousMusicBattleData = std::move(PreviousMusicBattleData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnRep_SongToPlay
// (Final, Native, Private)

void APilgrimMusicBattleInstance::OnRep_SongToPlay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_SongToPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnSongLoaded
// (Final, Native, Protected)

void APilgrimMusicBattleInstance::OnSongLoaded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSongLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnStartedPlayingSong
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPilgrimSongMetadata*             Song                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::OnStartedPlayingSong(class UPilgrimSongMetadata* Song)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStartedPlayingSong");

	Params::PilgrimMusicBattleInstance_OnStartedPlayingSong Parms{};

	Parms.Song = Song;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.OnTrackHiddenChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHideTrack                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::OnTrackHiddenChanged(bool bHideTrack)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTrackHiddenChanged");

	Params::PilgrimMusicBattleInstance_OnTrackHiddenChanged Parms{};

	Parms.bHideTrack = bHideTrack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.PlayerDisconnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPilgrimPlayerControllerComponent*ControllerComponent                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::PlayerDisconnected(const class UPilgrimPlayerControllerComponent* ControllerComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayerDisconnected");

	Params::PilgrimMusicBattleInstance_PlayerDisconnected Parms{};

	Parms.ControllerComponent = ControllerComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerAllPlayersHaveFinishedSong
// (Event, Protected, BlueprintEvent)

void APilgrimMusicBattleInstance::ServerAllPlayersHaveFinishedSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerAllPlayersHaveFinishedSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerFinishDisconnect
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void APilgrimMusicBattleInstance::ServerFinishDisconnect()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerFinishDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerOnClientUpdateReceived
// (Final, Native, Protected)
// Parameters:
// class UPilgrimPlayerControllerComponent*PlayerControllerComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMusicBattleClientUpdate                ClientUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::ServerOnClientUpdateReceived(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, EMusicBattleClientUpdate ClientUpdate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerOnClientUpdateReceived");

	Params::PilgrimMusicBattleInstance_ServerOnClientUpdateReceived Parms{};

	Parms.PlayerControllerComponent = PlayerControllerComponent;
	Parms.ClientUpdate = ClientUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerOnSongMidiFinishedLoading
// (Final, Native, Private)

void APilgrimMusicBattleInstance::ServerOnSongMidiFinishedLoading()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerOnSongMidiFinishedLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerOnTeamQuickplayScoreChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPilgrimPlayerControllerComponent*PlayerControllerComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGameProgress             NextScoreForCurrentPlayer                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   LastInputTimeMs                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::ServerOnTeamQuickplayScoreChanged(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, struct FPilgrimGameProgress* NextScoreForCurrentPlayer, const float LastInputTimeMs)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerOnTeamQuickplayScoreChanged");

	Params::PilgrimMusicBattleInstance_ServerOnTeamQuickplayScoreChanged Parms{};

	Parms.PlayerControllerComponent = PlayerControllerComponent;
	Parms.LastInputTimeMs = LastInputTimeMs;

	UObject::ProcessEvent(Func, &Parms);

	if (NextScoreForCurrentPlayer != nullptr)
		*NextScoreForCurrentPlayer = std::move(Parms.NextScoreForCurrentPlayer);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerOnTimedInputReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPilgrimPlayerControllerComponent*PlayerControllerComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimTimedInput               TimedInput                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::ServerOnTimedInputReceived(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, const struct FPilgrimTimedInput& TimedInput)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerOnTimedInputReceived");

	Params::PilgrimMusicBattleInstance_ServerOnTimedInputReceived Parms{};

	Parms.PlayerControllerComponent = PlayerControllerComponent;
	Parms.TimedInput = std::move(TimedInput);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ServerUserFinishedDisconnecting
// (Event, Public, BlueprintEvent)

void APilgrimMusicBattleInstance::ServerUserFinishedDisconnecting()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerUserFinishedDisconnecting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.SetMusicBattleType
// (Final, Native, Public)
// Parameters:
// EMusicBattleType                        NewMusicBattleType                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::SetMusicBattleType(const EMusicBattleType NewMusicBattleType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMusicBattleType");

	Params::PilgrimMusicBattleInstance_SetMusicBattleType Parms{};

	Parms.NewMusicBattleType = NewMusicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.SetupSinglePlayerBattle
// (Final, Native, Protected, BlueprintCallable)

void APilgrimMusicBattleInstance::SetupSinglePlayerBattle()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupSinglePlayerBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.SubtractFromBandScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::SubtractFromBandScore(float Score)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SubtractFromBandScore");

	Params::PilgrimMusicBattleInstance_SubtractFromBandScore Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.UpdateLocalPlayerScore
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPilgrimGameProgress             LocalPlayerGameProgress                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::UpdateLocalPlayerScore(const struct FPilgrimGameProgress& LocalPlayerGameProgress)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateLocalPlayerScore");

	Params::PilgrimMusicBattleInstance_UpdateLocalPlayerScore Parms{};

	Parms.LocalPlayerGameProgress = std::move(LocalPlayerGameProgress);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.UpdateScore
// (Event, Protected, BlueprintEvent)

void APilgrimMusicBattleInstance::UpdateScore()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.UpdateVisibilityOfUI
// (Event, Protected, BlueprintEvent)

void APilgrimMusicBattleInstance::UpdateVisibilityOfUI()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateVisibilityOfUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.Debug_IsTrackHidden
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::Debug_IsTrackHidden() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Debug_IsTrackHidden");

	Params::PilgrimMusicBattleInstance_Debug_IsTrackHidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UPilgrimGameConfig*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UPilgrimGameConfig* APilgrimMusicBattleInstance::GetConfig() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetConfig");

	Params::PilgrimMusicBattleInstance_GetConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetCurrentLocalPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateAthena*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerStateAthena* APilgrimMusicBattleInstance::GetCurrentLocalPlayer() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentLocalPlayer");

	Params::PilgrimMusicBattleInstance_GetCurrentLocalPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetDifficultyAndTrackType
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimSongDifficulty                  OutSongDifficulty                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       OutSongTrackType                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::GetDifficultyAndTrackType(EPilgrimSongDifficulty* OutSongDifficulty, EPilgrimTrackType* OutSongTrackType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDifficultyAndTrackType");

	Params::PilgrimMusicBattleInstance_GetDifficultyAndTrackType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSongDifficulty != nullptr)
		*OutSongDifficulty = Parms.OutSongDifficulty;

	if (OutSongTrackType != nullptr)
		*OutSongTrackType = Parms.OutSongTrackType;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetLocalPilgrimGame
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UPilgrimGame*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimGame* APilgrimMusicBattleInstance::GetLocalPilgrimGame() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLocalPilgrimGame");

	Params::PilgrimMusicBattleInstance_GetLocalPilgrimGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetMusicBattleData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPilgrimMusicBattleData    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPilgrimMusicBattleData APilgrimMusicBattleInstance::GetMusicBattleData() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicBattleData");

	Params::PilgrimMusicBattleInstance_GetMusicBattleData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetMusicClock
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* APilgrimMusicBattleInstance::GetMusicClock() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicClock");

	Params::PilgrimMusicBattleInstance_GetMusicClock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetNextSongToPlay
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* APilgrimMusicBattleInstance::GetNextSongToPlay() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNextSongToPlay");

	Params::PilgrimMusicBattleInstance_GetNextSongToPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetPlayedTrackTypesInCurrentSong
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<EPilgrimTrackType>                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<EPilgrimTrackType> APilgrimMusicBattleInstance::GetPlayedTrackTypesInCurrentSong() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPlayedTrackTypesInCurrentSong");

	Params::PilgrimMusicBattleInstance_GetPlayedTrackTypesInCurrentSong Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetPlayerFromIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateAthena*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerStateAthena* APilgrimMusicBattleInstance::GetPlayerFromIndex(const int32 PlayerIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPlayerFromIndex");

	Params::PilgrimMusicBattleInstance_GetPlayerFromIndex Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetSongDifficultyForPlayer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateAthena*           Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimSongDifficulty                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimSongDifficulty APilgrimMusicBattleInstance::GetSongDifficultyForPlayer(const class AFortPlayerStateAthena* Player) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongDifficultyForPlayer");

	Params::PilgrimMusicBattleInstance_GetSongDifficultyForPlayer Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetSongPlayMethod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimSongPlayMethod                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimSongPlayMethod APilgrimMusicBattleInstance::GetSongPlayMethod() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongPlayMethod");

	Params::PilgrimMusicBattleInstance_GetSongPlayMethod Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetStartingInstrumentForTrackInCurrentSong
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESparksInstrumentType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksInstrumentType APilgrimMusicBattleInstance::GetStartingInstrumentForTrackInCurrentSong(EPilgrimTrackType TrackType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStartingInstrumentForTrackInCurrentSong");

	Params::PilgrimMusicBattleInstance_GetStartingInstrumentForTrackInCurrentSong Parms{};

	Parms.TrackType = TrackType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetStreakMultiplier
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPilgrimGameProgress             LocalPlayerGameProgress                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float APilgrimMusicBattleInstance::GetStreakMultiplier(const struct FPilgrimGameProgress& LocalPlayerGameProgress) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStreakMultiplier");

	Params::PilgrimMusicBattleInstance_GetStreakMultiplier Parms{};

	Parms.LocalPlayerGameProgress = std::move(LocalPlayerGameProgress);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetTrackTypeForPlayer
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFortPlayerStateAthena*           Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimTrackType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimTrackType APilgrimMusicBattleInstance::GetTrackTypeForPlayer(const class AFortPlayerStateAthena* Player) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTrackTypeForPlayer");

	Params::PilgrimMusicBattleInstance_GetTrackTypeForPlayer Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.GetUnplayedTrackTypesInCurrentSong
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<EPilgrimTrackType>                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<EPilgrimTrackType> APilgrimMusicBattleInstance::GetUnplayedTrackTypesInCurrentSong() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUnplayedTrackTypesInCurrentSong");

	Params::PilgrimMusicBattleInstance_GetUnplayedTrackTypesInCurrentSong Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.HandleNewFFTResults
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// class FName                             OutputName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void APilgrimMusicBattleInstance::HandleNewFFTResults(class FName OutputName, const struct FMetaSoundOutput& Output) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleNewFFTResults");

	Params::PilgrimMusicBattleInstance_HandleNewFFTResults Parms{};

	Parms.OutputName = OutputName;
	Parms.Output = std::move(Output);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsHardStopAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsHardStopAllowed() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsHardStopAllowed");

	Params::PilgrimMusicBattleInstance_IsHardStopAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsHardStopped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsHardStopped() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsHardStopped");

	Params::PilgrimMusicBattleInstance_IsHardStopped Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsLocalPlayerInBattleParticipants
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsLocalPlayerInBattleParticipants() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsLocalPlayerInBattleParticipants");

	Params::PilgrimMusicBattleInstance_IsLocalPlayerInBattleParticipants Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsLocalPlayerRoaming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsLocalPlayerRoaming() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsLocalPlayerRoaming");

	Params::PilgrimMusicBattleInstance_IsLocalPlayerRoaming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsPlayerInBattleParticipants
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsPlayerInBattleParticipants(class AFortPlayerStateAthena* PlayerState) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPlayerInBattleParticipants");

	Params::PilgrimMusicBattleInstance_IsPlayerInBattleParticipants Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsRestartAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsRestartAllowed() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsRestartAllowed");

	Params::PilgrimMusicBattleInstance_IsRestartAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsSinglePlayerBattleAgainstPrimitiveAI
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsSinglePlayerBattleAgainstPrimitiveAI() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSinglePlayerBattleAgainstPrimitiveAI");

	Params::PilgrimMusicBattleInstance_IsSinglePlayerBattleAgainstPrimitiveAI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.IsTwoPlayerBattleWithBeams
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::IsTwoPlayerBattleWithBeams() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsTwoPlayerBattleWithBeams");

	Params::PilgrimMusicBattleInstance_IsTwoPlayerBattleWithBeams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimMusicBattleInstance.ShouldUseTouchUIForLocalPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimMusicBattleInstance::ShouldUseTouchUIForLocalPlayer() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldUseTouchUIForLocalPlayer");

	Params::PilgrimMusicBattleInstance_ShouldUseTouchUIForLocalPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimNowBar.SetGemSmasher
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UChildActorComponent*             Smasher                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimNowBar::SetGemSmasher(EPilgrimTrackLane Lane, class UChildActorComponent* Smasher)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetGemSmasher");

	Params::PilgrimNowBar_SetGemSmasher Parms{};

	Parms.Lane = Lane;
	Parms.Smasher = Smasher;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.HandleOnSongEnded
// (Final, Native, Protected)

void UPilgrimPerformanceTrackerComponent::HandleOnSongEnded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnSongEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.HandleOverdriveActiveChangedEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FPilgrimEvent_Scoring_OverdriveActiveChangedPayload                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPilgrimPerformanceTrackerComponent::HandleOverdriveActiveChangedEvent(const struct FPilgrimEvent_Scoring_OverdriveActiveChanged& Payload)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOverdriveActiveChangedEvent");

	Params::PilgrimPerformanceTrackerComponent_HandleOverdriveActiveChangedEvent Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.GetAverage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPerformanceTrackerComponent::GetAverage(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAverage");

	Params::PilgrimPerformanceTrackerComponent_GetAverage Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.GetLaneOffsets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UPilgrimPerformanceTrackerComponent::GetLaneOffsets(EPilgrimTrackLane Lane, ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLaneOffsets");

	Params::PilgrimPerformanceTrackerComponent_GetLaneOffsets Parms{};

	Parms.Lane = Lane;
	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.GetResultData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimEvent_Scoring_PerformanceDataResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPilgrimEvent_Scoring_PerformanceDataResult UPilgrimPerformanceTrackerComponent::GetResultData(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetResultData");

	Params::PilgrimPerformanceTrackerComponent_GetResultData Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.GetSampleAverage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                           Samples                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPerformanceTrackerComponent::GetSampleAverage(const TArray<float>& Samples) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSampleAverage");

	Params::PilgrimPerformanceTrackerComponent_GetSampleAverage Parms{};

	Parms.Samples = std::move(Samples);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.GetSampleDeviation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                           Samples                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IsPopulation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPerformanceTrackerComponent::GetSampleDeviation(const TArray<float>& Samples, bool IsPopulation) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSampleDeviation");

	Params::PilgrimPerformanceTrackerComponent_GetSampleDeviation Parms{};

	Parms.Samples = std::move(Samples);
	Parms.IsPopulation = IsPopulation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent.GetTotalDeviation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPerformanceTrackerComponent::GetTotalDeviation(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTotalDeviation");

	Params::PilgrimPerformanceTrackerComponent_GetTotalDeviation Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.ActivateSelectedInputMappingContexts
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::ActivateSelectedInputMappingContexts()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ActivateSelectedInputMappingContexts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.CycleSelectedNumInputLanes
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::CycleSelectedNumInputLanes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CycleSelectedNumInputLanes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.CycleSelectedPreset
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::CycleSelectedPreset()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CycleSelectedPreset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.DeactivateInputPreset
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::DeactivateInputPreset()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DeactivateInputPreset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetHoldSecondsToSwitchNumLanes
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPlayerControllerComponent::GetHoldSecondsToSwitchNumLanes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetHoldSecondsToSwitchNumLanes");

	Params::PilgrimPlayerControllerComponent_GetHoldSecondsToSwitchNumLanes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetPilgrimGameUserSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPilgrimGameUserSettings*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimGameUserSettings* UPilgrimPlayerControllerComponent::GetPilgrimGameUserSettings()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPilgrimGameUserSettings");

	Params::PilgrimPlayerControllerComponent_GetPilgrimGameUserSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.LoadInputConfigurationFromPartition
// (Final, Native, Public)

void UPilgrimPlayerControllerComponent::LoadInputConfigurationFromPartition()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("LoadInputConfigurationFromPartition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.Multiplayer_SendRequestToLeaveStage
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::Multiplayer_SendRequestToLeaveStage()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Multiplayer_SendRequestToLeaveStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.OnEmotePicker
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::OnEmotePicker()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEmotePicker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.OnPilgrimGameEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPilgrimGame*                     PilgrimGame                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::OnPilgrimGameEnd(class UPilgrimGame* PilgrimGame)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPilgrimGameEnd");

	Params::PilgrimPlayerControllerComponent_OnPilgrimGameEnd Parms{};

	Parms.PilgrimGame = PilgrimGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.OnPilgrimGameStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPilgrimGame*                     PilgrimGame                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::OnPilgrimGameStart(class UPilgrimGame* PilgrimGame)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPilgrimGameStart");

	Params::PilgrimPlayerControllerComponent_OnPilgrimGameStart Parms{};

	Parms.PilgrimGame = PilgrimGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.SendRequestToRestartSong
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::SendRequestToRestartSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SendRequestToRestartSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.SendRequestToStopAndSkipPostGame
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::SendRequestToStopAndSkipPostGame()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SendRequestToStopAndSkipPostGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.SendUpdateToMusicBattle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMusicBattleClientUpdate                MusicBattleUpdate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::SendUpdateToMusicBattle(EMusicBattleClientUpdate MusicBattleUpdate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SendUpdateToMusicBattle");

	Params::PilgrimPlayerControllerComponent_SendUpdateToMusicBattle Parms{};

	Parms.MusicBattleUpdate = MusicBattleUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.ServerHandleStateMachineRequest
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// EPilgrimStateMachineMessage             StateMachineMessage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::ServerHandleStateMachineRequest(EPilgrimStateMachineMessage StateMachineMessage)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerHandleStateMachineRequest");

	Params::PilgrimPlayerControllerComponent_ServerHandleStateMachineRequest Parms{};

	Parms.StateMachineMessage = StateMachineMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.ServerHandleUpdateMusicBattle
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// EMusicBattleClientUpdate                MusicBattleUpdate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::ServerHandleUpdateMusicBattle(EMusicBattleClientUpdate MusicBattleUpdate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerHandleUpdateMusicBattle");

	Params::PilgrimPlayerControllerComponent_ServerHandleUpdateMusicBattle Parms{};

	Parms.MusicBattleUpdate = MusicBattleUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.ServerSendSyncHeartbeatMessage
// (Net, Native, Event, Protected, NetServer)

void UPilgrimPlayerControllerComponent::ServerSendSyncHeartbeatMessage()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSendSyncHeartbeatMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.ServerSendTimedInput
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FPilgrimTimedInput               TimedInput                                             (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::ServerSendTimedInput(const struct FPilgrimTimedInput& TimedInput)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSendTimedInput");

	Params::PilgrimPlayerControllerComponent_ServerSendTimedInput Parms{};

	Parms.TimedInput = std::move(TimedInput);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.ServerSetPlasticInstrumentsPluggedIn
// (Final, Native, Public)
// Parameters:
// bool                                    bIsPlasticPluggedIn                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::ServerSetPlasticInstrumentsPluggedIn(bool bIsPlasticPluggedIn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetPlasticInstrumentsPluggedIn");

	Params::PilgrimPlayerControllerComponent_ServerSetPlasticInstrumentsPluggedIn Parms{};

	Parms.bIsPlasticPluggedIn = bIsPlasticPluggedIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.SetDesiredInputMappingContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortInputMappingContext*         NewContext                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHardwareDevicePrimaryType              DeviceType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldUpdateSettings                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::SetDesiredInputMappingContext(class UFortInputMappingContext* NewContext, EHardwareDevicePrimaryType DeviceType, bool bShouldUpdateSettings)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDesiredInputMappingContext");

	Params::PilgrimPlayerControllerComponent_SetDesiredInputMappingContext Parms{};

	Parms.NewContext = NewContext;
	Parms.DeviceType = DeviceType;
	Parms.bShouldUpdateSettings = bShouldUpdateSettings;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.SetNumInputLanes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NumLanes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerControllerComponent::SetNumInputLanes(uint8 NumLanes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNumInputLanes");

	Params::PilgrimPlayerControllerComponent_SetNumInputLanes Parms{};

	Parms.NumLanes = NumLanes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.Solo_SendRequestToLeaveStage
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::Solo_SendRequestToLeaveStage()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Solo_SendRequestToLeaveStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.Solo_SendRequestToPlayNextSong
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::Solo_SendRequestToPlayNextSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Solo_SendRequestToPlayNextSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.Solo_SendRequestToReplayPreviousSong
// (Final, Native, Public, BlueprintCallable)

void UPilgrimPlayerControllerComponent::Solo_SendRequestToReplayPreviousSong()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Solo_SendRequestToReplayPreviousSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.AreSelectedInputMappingContextsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayerControllerComponent::AreSelectedInputMappingContextsActive() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AreSelectedInputMappingContextsActive");

	Params::PilgrimPlayerControllerComponent_AreSelectedInputMappingContextsActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.FindFirstPresetMatchingCurrentKeybinds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortInputMappingContext*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortInputMappingContext* UPilgrimPlayerControllerComponent::FindFirstPresetMatchingCurrentKeybinds() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FindFirstPresetMatchingCurrentKeybinds");

	Params::PilgrimPlayerControllerComponent_FindFirstPresetMatchingCurrentKeybinds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetCurrentPresetIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimPlayerControllerComponent::GetCurrentPresetIndex() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPresetIndex");

	Params::PilgrimPlayerControllerComponent_GetCurrentPresetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetLastSelectedPreset
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortInputMappingContext*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortInputMappingContext* UPilgrimPlayerControllerComponent::GetLastSelectedPreset() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLastSelectedPreset");

	Params::PilgrimPlayerControllerComponent_GetLastSelectedPreset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetNumRelevantInputPresets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimPlayerControllerComponent::GetNumRelevantInputPresets() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumRelevantInputPresets");

	Params::PilgrimPlayerControllerComponent_GetNumRelevantInputPresets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetPilgrimClientSettingRecordPartition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimClientSettingRecordPartition*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimClientSettingRecordPartition* UPilgrimPlayerControllerComponent::GetPilgrimClientSettingRecordPartition() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPilgrimClientSettingRecordPartition");

	Params::PilgrimPlayerControllerComponent_GetPilgrimClientSettingRecordPartition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetSelectedConsoleBeamatchInputMappingContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortInputMappingContext*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortInputMappingContext* UPilgrimPlayerControllerComponent::GetSelectedConsoleBeamatchInputMappingContext() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedConsoleBeamatchInputMappingContext");

	Params::PilgrimPlayerControllerComponent_GetSelectedConsoleBeamatchInputMappingContext Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetSelectedPCBeamatchInputMappingContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortInputMappingContext*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortInputMappingContext* UPilgrimPlayerControllerComponent::GetSelectedPCBeamatchInputMappingContext() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedPCBeamatchInputMappingContext");

	Params::PilgrimPlayerControllerComponent_GetSelectedPCBeamatchInputMappingContext Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetSelectedPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortInputMappingContext*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortInputMappingContext* UPilgrimPlayerControllerComponent::GetSelectedPreset() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSelectedPreset");

	Params::PilgrimPlayerControllerComponent_GetSelectedPreset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.GetTouchBrushForInputAction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      OutBrush                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// class UInputAction*                     InputAction                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayerControllerComponent::GetTouchBrushForInputAction(struct FSlateBrush* OutBrush, class UInputAction* InputAction) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTouchBrushForInputAction");

	Params::PilgrimPlayerControllerComponent_GetTouchBrushForInputAction Parms{};

	Parms.InputAction = InputAction;

	UObject::ProcessEvent(Func, &Parms);

	if (OutBrush != nullptr)
		*OutBrush = std::move(Parms.OutBrush);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.IsLocallyControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayerControllerComponent::IsLocallyControlled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsLocallyControlled");

	Params::PilgrimPlayerControllerComponent_IsLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayerControllerComponent.IsUsingGamepad
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayerControllerComponent::IsUsingGamepad() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsUsingGamepad");

	Params::PilgrimPlayerControllerComponent_IsUsingGamepad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetMusicClock
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* APilgrimPlayspace::GetMusicClock(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMusicClock");

	Params::PilgrimPlayspace_GetMusicClock Parms{};

	Parms.WorldContextObject = WorldContextObject;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetNetworkedMusicClockManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetworkedMusicClockManager*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetworkedMusicClockManager* APilgrimPlayspace::GetNetworkedMusicClockManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetNetworkedMusicClockManager");

	Params::PilgrimPlayspace_GetNetworkedMusicClockManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.AddMusicBattleInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APilgrimMusicBattleInstance*      MusicBattleInstance                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimPlayspace::AddMusicBattleInstance(class APilgrimMusicBattleInstance* MusicBattleInstance)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMusicBattleInstance");

	Params::PilgrimPlayspace_AddMusicBattleInstance Parms{};

	Parms.MusicBattleInstance = MusicBattleInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.ClearMusicBattleInstances
// (Final, Native, Public, BlueprintCallable)

void APilgrimPlayspace::ClearMusicBattleInstances()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearMusicBattleInstances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.BroadcastCameraDirectorDynamicEvent
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FGameplayTagContainer            TagsToSend                                             (Parm, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ShotTimeLength                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWaitForTransition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimPlayspace::BroadcastCameraDirectorDynamicEvent(const struct FGameplayTagContainer& TagsToSend, class AActor* Target, float ShotTimeLength, bool bWaitForTransition) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BroadcastCameraDirectorDynamicEvent");

	Params::PilgrimPlayspace_BroadcastCameraDirectorDynamicEvent Parms{};

	Parms.TagsToSend = std::move(TagsToSend);
	Parms.Target = Target;
	Parms.ShotTimeLength = ShotTimeLength;
	Parms.bWaitForTransition = bWaitForTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.BroadcastCameraDirectorIntermissionEvent
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FGameplayTagContainer            TagsToSend                                             (Parm, NativeAccessSpecifierPublic)

void APilgrimPlayspace::BroadcastCameraDirectorIntermissionEvent(const struct FGameplayTagContainer& TagsToSend) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BroadcastCameraDirectorIntermissionEvent");

	Params::PilgrimPlayspace_BroadcastCameraDirectorIntermissionEvent Parms{};

	Parms.TagsToSend = std::move(TagsToSend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetAllMusicBattleInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class APilgrimMusicBattleInstance*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class APilgrimMusicBattleInstance*> APilgrimPlayspace::GetAllMusicBattleInstances() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAllMusicBattleInstances");

	Params::PilgrimPlayspace_GetAllMusicBattleInstances Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UPilgrimGameConfig*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UPilgrimGameConfig* APilgrimPlayspace::GetConfig() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetConfig");

	Params::PilgrimPlayspace_GetConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetMusicBattleInstanceForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APilgrimMusicBattleInstance*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APilgrimMusicBattleInstance* APilgrimPlayspace::GetMusicBattleInstanceForPlayer(class AController* Controller) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicBattleInstanceForPlayer");

	Params::PilgrimPlayspace_GetMusicBattleInstanceForPlayer Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetMusicBattleInstanceForTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APilgrimMusicBattleInstance*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APilgrimMusicBattleInstance* APilgrimPlayspace::GetMusicBattleInstanceForTeam(int32 Team) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicBattleInstanceForTeam");

	Params::PilgrimPlayspace_GetMusicBattleInstanceForTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetPilgrimGameForTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimGame*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimGame* APilgrimPlayspace::GetPilgrimGameForTeam(int32 TeamIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPilgrimGameForTeam");

	Params::PilgrimPlayspace_GetPilgrimGameForTeam Parms{};

	Parms.TeamIndex = TeamIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetStandinPlayerPawns
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerPawnAthena*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerPawnAthena*> APilgrimPlayspace::GetStandinPlayerPawns() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStandinPlayerPawns");

	Params::PilgrimPlayspace_GetStandinPlayerPawns Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.GetStandinPlayerStates
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerStateAthena*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerStateAthena*> APilgrimPlayspace::GetStandinPlayerStates() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStandinPlayerStates");

	Params::PilgrimPlayspace_GetStandinPlayerStates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.HasAnotherSongToPlay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimPlayspace::HasAnotherSongToPlay() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasAnotherSongToPlay");

	Params::PilgrimPlayspace_HasAnotherSongToPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.TryGetMusicBattleInstanceForTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APilgrimMusicBattleInstance*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APilgrimMusicBattleInstance* APilgrimPlayspace::TryGetMusicBattleInstanceForTeam(int32 Team) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetMusicBattleInstanceForTeam");

	Params::PilgrimPlayspace_TryGetMusicBattleInstanceForTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.TryGetPilgrimGameForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimGame*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimGame* APilgrimPlayspace::TryGetPilgrimGameForPlayer(class AController* Controller) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetPilgrimGameForPlayer");

	Params::PilgrimPlayspace_TryGetPilgrimGameForPlayer Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspace.TryGetPilgrimGameForTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimGame*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimGame* APilgrimPlayspace::TryGetPilgrimGameForTeam(int32 TeamIndex) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetPilgrimGameForTeam");

	Params::PilgrimPlayspace_TryGetPilgrimGameForTeam Parms{};

	Parms.TeamIndex = TeamIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPresetConfiguration.GetDeviceInputMappingContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   NumLanes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHardwareDevicePrimaryType              DeviceType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortInputMappingContext*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortInputMappingContext*> UPilgrimPresetConfiguration::GetDeviceInputMappingContexts(int32 NumLanes, EHardwareDevicePrimaryType DeviceType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDeviceInputMappingContexts");

	Params::PilgrimPresetConfiguration_GetDeviceInputMappingContexts Parms{};

	Parms.NumLanes = NumLanes;
	Parms.DeviceType = DeviceType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimQuestLibrary.GetFilteredQuests
// (Final, RequiredAPI, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TScriptInterface<class IQuestInstanceInterface>>OutQuests                                              (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// class APlayerState*                     Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimQuestFilter              Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuestLibrary::GetFilteredQuests(TArray<TScriptInterface<class IQuestInstanceInterface>>* OutQuests, const class APlayerState* Player, const struct FPilgrimQuestFilter& Filter)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetFilteredQuests");

	Params::PilgrimQuestLibrary_GetFilteredQuests Parms{};

	Parms.Player = Player;
	Parms.Filter = std::move(Filter);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (OutQuests != nullptr)
		*OutQuests = std::move(Parms.OutQuests);
}


// Function PilgrimCoreRuntime.PilgrimQuestLibrary.GetQuestDisplayInfo
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IQuestInstanceInterface>Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimQuestDisplayInfo         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPilgrimQuestDisplayInfo UPilgrimQuestLibrary::GetQuestDisplayInfo(const class UObject* WorldContextObject, TScriptInterface<class IQuestInstanceInterface> Quest)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetQuestDisplayInfo");

	Params::PilgrimQuestLibrary_GetQuestDisplayInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Quest = Quest;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimQuestLibrary.QuestPassesFilter
// (Final, RequiredAPI, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class IQuestInstanceInterface>QuestInterface                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimQuestFilter              QuestFilter                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimQuestLibrary::QuestPassesFilter(const TScriptInterface<class IQuestInstanceInterface> QuestInterface, const struct FPilgrimQuestFilter& QuestFilter)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("QuestPassesFilter");

	Params::PilgrimQuestLibrary_QuestPassesFilter Parms{};

	Parms.QuestInterface = QuestInterface;
	Parms.QuestFilter = std::move(QuestFilter);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimRandomSetlist.PopulateRandomSongs
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimRandomSetlist::PopulateRandomSongs(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PopulateRandomSongs");

	Params::PilgrimRandomSetlist_PopulateRandomSongs Parms{};

	Parms.WorldContextObject = WorldContextObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimRenderTargetComponent.CropTargetAndGetProjectionMatrix
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4f                        InLeftTopRightBottom                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FOV                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UPilgrimRenderTargetComponent::CropTargetAndGetProjectionMatrix(const struct FVector4f& InLeftTopRightBottom, float FOV)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CropTargetAndGetProjectionMatrix");

	Params::PilgrimRenderTargetComponent_CropTargetAndGetProjectionMatrix Parms{};

	Parms.InLeftTopRightBottom = std::move(InLeftTopRightBottom);
	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimRenderTargetComponent.GetRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* UPilgrimRenderTargetComponent::GetRenderTarget()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRenderTarget");

	Params::PilgrimRenderTargetComponent_GetRenderTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimRenderTargetComponent.GetLeftTopRightBottom
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector4f                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector4f UPilgrimRenderTargetComponent::GetLeftTopRightBottom() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLeftTopRightBottom");

	Params::PilgrimRenderTargetComponent_GetLeftTopRightBottom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimRenderTargetComponent.GetUVScaleOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector4f                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4f UPilgrimRenderTargetComponent::GetUVScaleOffset() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUVScaleOffset");

	Params::PilgrimRenderTargetComponent_GetUVScaleOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.ComputeMaxScore
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FTrackItemInfo>           Gems                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UPilgrimSongData*                 SongData                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModel::ComputeMaxScore(const TArray<struct FTrackItemInfo>& Gems, const class UPilgrimSongData* SongData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ComputeMaxScore");

	Params::PilgrimScoringModel_ComputeMaxScore Parms{};

	Parms.Gems = std::move(Gems);
	Parms.SongData = SongData;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.ComputeAccuracyMultiplier
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimScoringMode                     ScoringMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGemHitAccuracy           Accuracy                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModel::ComputeAccuracyMultiplier(EPilgrimScoringMode ScoringMode, const struct FPilgrimGemHitAccuracy& Accuracy) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ComputeAccuracyMultiplier");

	Params::PilgrimScoringModel_ComputeAccuracyMultiplier Parms{};

	Parms.ScoringMode = ScoringMode;
	Parms.Accuracy = std::move(Accuracy);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.ComputeGemBaseScoreValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimScoringMode                     ScoringMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModel::ComputeGemBaseScoreValue(EPilgrimScoringMode ScoringMode) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ComputeGemBaseScoreValue");

	Params::PilgrimScoringModel_ComputeGemBaseScoreValue Parms{};

	Parms.ScoringMode = ScoringMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.ComputeOverdriveMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimScoringMode                     ScoringMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModel::ComputeOverdriveMultiplier(EPilgrimScoringMode ScoringMode) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ComputeOverdriveMultiplier");

	Params::PilgrimScoringModel_ComputeOverdriveMultiplier Parms{};

	Parms.ScoringMode = ScoringMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.ComputeStreakMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimScoringMode                     ScoringMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModel::ComputeStreakMultiplier(EPilgrimScoringMode ScoringMode) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ComputeStreakMultiplier");

	Params::PilgrimScoringModel_ComputeStreakMultiplier Parms{};

	Parms.ScoringMode = ScoringMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.ComputeSustainScorePerBeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimScoringMode                     ScoringMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModel::ComputeSustainScorePerBeat(EPilgrimScoringMode ScoringMode) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ComputeSustainScorePerBeat");

	Params::PilgrimScoringModel_ComputeSustainScorePerBeat Parms{};

	Parms.ScoringMode = ScoringMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModel.GetScoreRequiredForStar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Stars                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimScoringModel::GetScoreRequiredForStar(int32 Stars) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetScoreRequiredForStar");

	Params::PilgrimScoringModel_GetScoreRequiredForStar Parms{};

	Parms.Stars = Stars;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimScoringModifier.Apply
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InputValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimScoringModifier::Apply(float InputValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Apply");

	Params::PilgrimScoringModifier_Apply Parms{};

	Parms.InputValue = InputValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSetlistInterface.RemoveUnavailableSongs
// (RequiredAPI, Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayspaceUser                   ExcludedUser                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IPilgrimSetlistInterface::RemoveUnavailableSongs(const class UObject* WorldContextObject, const struct FPlayspaceUser& ExcludedUser)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveUnavailableSongs");

	Params::PilgrimSetlistInterface_RemoveUnavailableSongs Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ExcludedUser = std::move(ExcludedUser);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimSetlistInterface.GetNumSongs
// (RequiredAPI, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IPilgrimSetlistInterface::GetNumSongs(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumSongs");

	Params::PilgrimSetlistInterface_GetNumSongs Parms{};

	Parms.WorldContextObject = WorldContextObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSetlistInterface.GetSetlistDuration
// (RequiredAPI, Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan IPilgrimSetlistInterface::GetSetlistDuration(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSetlistDuration");

	Params::PilgrimSetlistInterface_GetSetlistDuration Parms{};

	Parms.WorldContextObject = WorldContextObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSetlistInterface.GetSongAtIndex
// (RequiredAPI, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* IPilgrimSetlistInterface::GetSongAtIndex(const class UObject* WorldContextObject, int32 Index_0) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongAtIndex");

	Params::PilgrimSetlistInterface_GetSongAtIndex Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSetlistInterface.GetSongList
// (RequiredAPI, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPilgrimSongMetadata*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPilgrimSongMetadata*> IPilgrimSetlistInterface::GetSongList(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongList");

	Params::PilgrimSetlistInterface_GetSongList Parms{};

	Parms.WorldContextObject = WorldContextObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.GetPilgrimSongCatalog
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongCatalog*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongCatalog* UPilgrimSongCatalog::GetPilgrimSongCatalog(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetPilgrimSongCatalog");

	Params::PilgrimSongCatalog_GetPilgrimSongCatalog Parms{};

	Parms.WorldContextObject = WorldContextObject;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.PlayerHasSongEntitlement
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             Song                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimSongCatalog::PlayerHasSongEntitlement(const class AFortPlayerController* Player, const class UPilgrimSongMetadata* Song)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PlayerHasSongEntitlement");

	Params::PilgrimSongCatalog_PlayerHasSongEntitlement Parms{};

	Parms.Player = Player;
	Parms.Song = Song;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.OnCMSCatalogRetrieved
// (Final, Native, Private)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimSongCatalog::OnCMSCatalogRetrieved(bool bSuccess)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCMSCatalogRetrieved");

	Params::PilgrimSongCatalog_OnCMSCatalogRetrieved Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.GetRandomSongList
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   NumSongs                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UPilgrimSongMetadata*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPilgrimSongMetadata*> UPilgrimSongCatalog::GetRandomSongList(int32 NumSongs, const struct FGameplayTagQuery& TagQuery) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRandomSongList");

	Params::PilgrimSongCatalog_GetRandomSongList Parms{};

	Parms.NumSongs = NumSongs;
	Parms.TagQuery = std::move(TagQuery);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.GetSongByMcpTemplateId
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           McpTemplateId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimSongCatalog::GetSongByMcpTemplateId(const class FString& McpTemplateId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongByMcpTemplateId");

	Params::PilgrimSongCatalog_GetSongByMcpTemplateId Parms{};

	Parms.McpTemplateId = std::move(McpTemplateId);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.GetSongByShortName
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ShortName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimSongCatalog::GetSongByShortName(class FName ShortName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongByShortName");

	Params::PilgrimSongCatalog_GetSongByShortName Parms{};

	Parms.ShortName = ShortName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.GetSortedSongList
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimSongSortMethod                  SortMethod                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimSongSortDirection               SortDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UPilgrimSongMetadata*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPilgrimSongMetadata*> UPilgrimSongCatalog::GetSortedSongList(EPilgrimSongSortMethod SortMethod, EPilgrimSongSortDirection SortDirection, const struct FGameplayTagQuery& TagQuery) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSortedSongList");

	Params::PilgrimSongCatalog_GetSortedSongList Parms{};

	Parms.SortMethod = SortMethod;
	Parms.SortDirection = SortDirection;
	Parms.TagQuery = std::move(TagQuery);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongCatalog.IsSongShared
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SongShortName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimSongCatalog::IsSongShared(class AFortPlayerController* Player, class FName SongShortName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSongShared");

	Params::PilgrimSongCatalog_IsSongShared Parms{};

	Parms.Player = Player;
	Parms.SongShortName = SongShortName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetAdditionalTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UPilgrimSongMetadata::GetAdditionalTags() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAdditionalTags");

	Params::PilgrimSongMetadata_GetAdditionalTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetAlbumArt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UPilgrimSongMetadata::GetAlbumArt() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAlbumArt");

	Params::PilgrimSongMetadata_GetAlbumArt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetAlbumArtUrl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPilgrimSongMetadata::GetAlbumArtUrl() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAlbumArtUrl");

	Params::PilgrimSongMetadata_GetAlbumArtUrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetArtist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPilgrimSongMetadata::GetArtist() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetArtist");

	Params::PilgrimSongMetadata_GetArtist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetDuration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UPilgrimSongMetadata::GetDuration() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDuration");

	Params::PilgrimSongMetadata_GetDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetIntensityPerInstrument
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<EPilgrimTrackType, int32>    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<EPilgrimTrackType, int32> UPilgrimSongMetadata::GetIntensityPerInstrument() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIntensityPerInstrument");

	Params::PilgrimSongMetadata_GetIntensityPerInstrument Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetLipSyncAnimAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UAnimSequence>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UAnimSequence> UPilgrimSongMetadata::GetLipSyncAnimAsset() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLipSyncAnimAsset");

	Params::PilgrimSongMetadata_GetLipSyncAnimAsset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetMappedIntensity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimSongMetadata::GetMappedIntensity(EPilgrimTrackType Instrument, int32 Min, int32 Max) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMappedIntensity");

	Params::PilgrimSongMetadata_GetMappedIntensity Parms{};

	Parms.Instrument = Instrument;
	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetMusicKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicKey                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMusicKey UPilgrimSongMetadata::GetMusicKey() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicKey");

	Params::PilgrimSongMetadata_GetMusicKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetMusicMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicKeyMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMusicKeyMode UPilgrimSongMetadata::GetMusicMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicMode");

	Params::PilgrimSongMetadata_GetMusicMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetPreviewVUID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPilgrimSongMetadata::GetPreviewVUID() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPreviewVUID");

	Params::PilgrimSongMetadata_GetPreviewVUID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetRawIntensity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimSongMetadata::GetRawIntensity(EPilgrimTrackType Instrument) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRawIntensity");

	Params::PilgrimSongMetadata_GetRawIntensity Parms{};

	Parms.Instrument = Instrument;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetShortName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UPilgrimSongMetadata::GetShortName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetShortName");

	Params::PilgrimSongMetadata_GetShortName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetSparksCatalogData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCatalogData*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCatalogData* UPilgrimSongMetadata::GetSparksCatalogData(const class UObject* WorldContext) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSparksCatalogData");

	Params::PilgrimSongMetadata_GetSparksCatalogData Parms{};

	Parms.WorldContext = WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetStartingInstrumentType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimTrackType                       TrackType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESparksInstrumentType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksInstrumentType UPilgrimSongMetadata::GetStartingInstrumentType(EPilgrimTrackType TrackType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStartingInstrumentType");

	Params::PilgrimSongMetadata_GetStartingInstrumentType Parms{};

	Parms.TrackType = TrackType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetStemmedMusicAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UStemmedMusicAsset>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UStemmedMusicAsset> UPilgrimSongMetadata::GetStemmedMusicAsset() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStemmedMusicAsset");

	Params::PilgrimSongMetadata_GetStemmedMusicAsset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetStreamingVUID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPilgrimSongMetadata::GetStreamingVUID() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStreamingVUID");

	Params::PilgrimSongMetadata_GetStreamingVUID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPilgrimSongMetadata::GetTitle() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTitle");

	Params::PilgrimSongMetadata_GetTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimSongMetadata.GetYear
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimSongMetadata::GetYear() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetYear");

	Params::PilgrimSongMetadata_GetYear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimPlayspaceComponent_SongPreloader.NetMulticast_HandleAllLoadingFinished
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UPilgrimPlayspaceComponent_SongPreloader::NetMulticast_HandleAllLoadingFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_HandleAllLoadingFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimPlayspaceComponent_SongPreloader.NetMulticast_LoadSong
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class FName                             Song                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayspaceComponent_SongPreloader::NetMulticast_LoadSong(class FName Song)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NetMulticast_LoadSong");

	Params::PilgrimPlayspaceComponent_SongPreloader_NetMulticast_LoadSong Parms{};

	Parms.Song = Song;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimPlayspaceComponent_SongPreloader.OnStreamerPrepared
// (Final, Native, Private)

void UPilgrimPlayspaceComponent_SongPreloader::OnStreamerPrepared()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStreamerPrepared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimControllerComponent_SongPreloader.ServerFinishedLoadingSong
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FName                             Song                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimControllerComponent_SongPreloader::ServerFinishedLoadingSong(class FName Song)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerFinishedLoadingSong");

	Params::PilgrimControllerComponent_SongPreloader_ServerFinishedLoadingSong Parms{};

	Parms.Song = Song;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimControllerComponent_SongPreloader.ServerKickPlayerForNetworkIssues
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimControllerComponent_SongPreloader::ServerKickPlayerForNetworkIssues(const class FText& Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerKickPlayerForNetworkIssues");

	Params::PilgrimControllerComponent_SongPreloader_ServerKickPlayerForNetworkIssues Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTouchButtonBase.HandleInputMethodChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimTouchButtonBase::HandleInputMethodChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleInputMethodChanged");

	Params::PilgrimTouchButtonBase_HandleInputMethodChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrack.AddActorItemToScene
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimTrack::AddActorItemToScene(class AActor* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddActorItemToScene");

	Params::PilgrimTrack_AddActorItemToScene Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrack.HideAllItems
// (Final, Native, Public, BlueprintCallable)

void APilgrimTrack::HideAllItems()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideAllItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrack.OnGameEnded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APilgrimTrack::OnGameEnded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrack.OnGemSmashed
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EPilgrimTrackLane                       Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimGemHitAccuracy           Accuracy                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsOverdrive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimTrack::OnGemSmashed(EPilgrimTrackLane Lane, const struct FPilgrimGemHitAccuracy& Accuracy, bool bIsOverdrive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGemSmashed");

	Params::PilgrimTrack_OnGemSmashed Parms{};

	Parms.Lane = Lane;
	Parms.Accuracy = std::move(Accuracy);
	Parms.bIsOverdrive = bIsOverdrive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrack.UpdateBeatmarkerVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsVisible                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimTrack::UpdateBeatmarkerVisibility(bool bNewIsVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateBeatmarkerVisibility");

	Params::PilgrimTrack_UpdateBeatmarkerVisibility Parms{};

	Parms.bNewIsVisible = bNewIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrackCaptureComponent.IncludeActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TrackActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeFromChildActors                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimTrackCaptureComponent::IncludeActor(class AActor* TrackActor, bool bIncludeFromChildActors)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IncludeActor");

	Params::PilgrimTrackCaptureComponent_IncludeActor Parms{};

	Parms.TrackActor = TrackActor;
	Parms.bIncludeFromChildActors = bIncludeFromChildActors;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrackCaptureComponent.SetViewOwnerActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InViewOwner                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimTrackCaptureComponent::SetViewOwnerActor(class AActor* InViewOwner)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetViewOwnerActor");

	Params::PilgrimTrackCaptureComponent_SetViewOwnerActor Parms{};

	Parms.InViewOwner = InViewOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrackCaptureComponent.GetViewOwnerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UPilgrimTrackCaptureComponent::GetViewOwnerActor() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetViewOwnerActor");

	Params::PilgrimTrackCaptureComponent_GetViewOwnerActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimTrackItemInterface.OnGameEnded
// (Event, Public, BlueprintEvent)

void IPilgrimTrackItemInterface::OnGameEnded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.OnAttachToSmasher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APilgrimGemSmasher*               Smasher                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimTrackSustain::OnAttachToSmasher(class APilgrimGemSmasher* Smasher)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAttachToSmasher");

	Params::PilgrimTrackSustain_OnAttachToSmasher Parms{};

	Parms.Smasher = Smasher;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.OnIsOverdriveChanged
// (Event, Public, BlueprintEvent)

void APilgrimTrackSustain::OnIsOverdriveChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIsOverdriveChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.OnSustainFail
// (Event, Public, BlueprintEvent)

void APilgrimTrackSustain::OnSustainFail()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSustainFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.OnSustainInit
// (Event, Public, BlueprintEvent)

void APilgrimTrackSustain::OnSustainInit()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSustainInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.OnSustainKeyDownSuccess
// (Native, Event, Public, BlueprintEvent)

void APilgrimTrackSustain::OnSustainKeyDownSuccess()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSustainKeyDownSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.OnSustainKeyRelease
// (Native, Event, Public, BlueprintEvent)

void APilgrimTrackSustain::OnSustainKeyRelease()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSustainKeyRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.PlaceSustainAlongSpline
// (Event, Public, BlueprintEvent)

void APilgrimTrackSustain::PlaceSustainAlongSpline()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlaceSustainAlongSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.UpdateSplineInputKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewKeyStart                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewKeyEnd                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APilgrimTrackSustain::UpdateSplineInputKeys(float NewKeyStart, float NewKeyEnd)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateSplineInputKeys");

	Params::PilgrimTrackSustain_UpdateSplineInputKeys Parms{};

	Parms.NewKeyStart = NewKeyStart;
	Parms.NewKeyEnd = NewKeyEnd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.GetSplinePathIfRelevant
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USplineComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USplineComponent* APilgrimTrackSustain::GetSplinePathIfRelevant() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSplinePathIfRelevant");

	Params::PilgrimTrackSustain_GetSplinePathIfRelevant Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.GetTrackItemInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTrackItemInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FTrackItemInfo APilgrimTrackSustain::GetTrackItemInfo() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTrackItemInfo");

	Params::PilgrimTrackSustain_GetTrackItemInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimTrackSustain.IsInActiveOverdriveSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimTrackSustain::IsInActiveOverdriveSection() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsInActiveOverdriveSection");

	Params::PilgrimTrackSustain_IsInActiveOverdriveSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimWaitForEventRouterAction.PilgrimWaitForEventRouter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimWaitForEventRouterAction* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimWaitForEventRouterAction* UPilgrimWaitForEventRouterAction::PilgrimWaitForEventRouter(class AActor* ContextActor)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("PilgrimWaitForEventRouter");

	Params::PilgrimWaitForEventRouterAction_PilgrimWaitForEventRouter Parms{};

	Parms.ContextActor = ContextActor;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PilgrimCoreRuntime.PilgrimWaitForEventRouterAction.HandleContextActorEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimWaitForEventRouterAction::HandleContextActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleContextActorEndPlay");

	Params::PilgrimWaitForEventRouterAction_HandleContextActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimCoreRuntime.ServerPilgrimGame.GetScoringDensity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UServerPilgrimGame::GetScoringDensity() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetScoringDensity");

	Params::ServerPilgrimGame_GetScoringDensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

