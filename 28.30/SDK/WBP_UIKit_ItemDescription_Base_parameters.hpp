#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemDescription_Base

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "S_UI_GameCompatibility_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "E_UIKit_ItemDescription_TextWrapType_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.AddCompatibilityTags
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags final
{
public:
	TArray<class FText>                           GameTags_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CurrentArrayElement;                               // 0x0010(0x0018)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0078(0x0018)()
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0090(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UIKit_Tag_Base_C*                  CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags) == 0x0000D0, "Wrong size on WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, GameTags_0) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::GameTags_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CurrentArrayElement) == 0x000010, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CurrentArrayElement' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, K2Node_MakeStruct_Margin) == 0x000044, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_GetCurrentCulture_ReturnValue) == 0x000060, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000070, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Max_ReturnValue) == 0x0000B8, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags, CallFunc_AddChildToWrapBox_ReturnValue) == 0x0000C8, "Member 'WBP_UIKit_ItemDescription_Base_C_AddCompatibilityTags::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.ExecuteUbergraph_WBP_UIKit_ItemDescription_Base
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base) == 0x000004, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base) == 0x000008, "Wrong size on WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base, EntryPoint) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_ItemDescription_Base_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_Base::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.InitializeWidget
// 0x000B (0x000B - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_InitializeWidget final
{
public:
	E_UIKit_ItemDescription_TextWrapType          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UIKit_ItemDescription_TextWrapType          Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_InitializeWidget");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget) == 0x00000B, "Wrong size on WBP_UIKit_ItemDescription_Base_C_InitializeWidget");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_byte_Variable) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_bool_Variable_2) == 0x000003, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_bool_Variable_3) == 0x000004, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_bool_Variable_4) == 0x000005, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_bool_Variable_5) == 0x000007, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, Temp_byte_Variable_1) == 0x000008, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, K2Node_Select_Default) == 0x000009, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_InitializeWidget, K2Node_Select_Default_1) == 0x00000A, "Member 'WBP_UIKit_ItemDescription_Base_C_InitializeWidget::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_ItemDescription_Base_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.PresetForDesignTime
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0018(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0040(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0050(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0068(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0090(0x0018)()
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime) == 0x0000B0, "Wrong size on WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, Temp_byte_Variable) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, CallFunc_Format_ReturnValue) == 0x000018, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, K2Node_MakeArray_Array_1) == 0x000030, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, K2Node_MakeArray_Array_2) == 0x000040, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, CallFunc_Format_ReturnValue_1) == 0x000050, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, CallFunc_Format_ReturnValue_2) == 0x000068, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, K2Node_MakeArray_Array_3) == 0x000080, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, CallFunc_Format_ReturnValue_3) == 0x000090, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, CallFunc_HasAnyChildren_ReturnValue) == 0x0000A8, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, Temp_byte_Variable_1) == 0x0000AA, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, Temp_bool_Variable) == 0x0000AB, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime, K2Node_Select_Default) == 0x0000AC, "Member 'WBP_UIKit_ItemDescription_Base_C_PresetForDesignTime::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetBodyText
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetBodyText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetBodyText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetBodyText");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetBodyText) == 0x000020, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetBodyText");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::Text' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, Temp_byte_Variable) == 0x000018, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, Temp_bool_Variable) == 0x00001B, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyText, K2Node_Select_Default) == 0x00001D, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetBodyTextVisibility
// 0x0006 (0x0006 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility final
{
public:
	bool                                          Show_Text;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility) == 0x000006, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility, Show_Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility::Show_Text' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility, Temp_bool_Variable) == 0x000002, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility, Temp_byte_Variable) == 0x000003, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility, K2Node_Select_Default) == 0x000005, "Member 'WBP_UIKit_ItemDescription_Base_C_SetBodyTextVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetCategoryText
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetCategoryText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetCategoryText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetCategoryText");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetCategoryText) == 0x000018, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetCategoryText");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCategoryText, Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCategoryText::Text' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetCompatibilityTags
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags final
{
public:
	TSet<ECosmeticCompatibleMode>                 Names;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   Temp_name_Variable;                                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECosmeticCompatibleMode>               CallFunc_Set_ToArray_Result;                       // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_IsEmpty_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECosmeticCompatibleMode                       CallFunc_Array_Get_Item;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECosmeticCompatibleMode                       Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UI_GameCompatibility                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags) == 0x0000B8, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Names) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Names' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_name_Variable) == 0x000050, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Set_ToArray_Result) == 0x000058, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Set_IsEmpty_ReturnValue) == 0x00006C, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Set_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_name_Variable_1) == 0x000070, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_name_Variable_2) == 0x000074, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_int_Array_Index_Variable) == 0x000078, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Array_Get_Item) == 0x00007C, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_name_Variable_3) == 0x000080, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, Temp_byte_Variable) == 0x000088, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, K2Node_Select_Default) == 0x00008C, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B0, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityTags::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetCompatibilityText
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText) == 0x000018, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText, Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityText::Text' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetCompatibilityVisibility
// 0x0006 (0x0006 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility) == 0x000006, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility, Show) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility::Show' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility, Temp_bool_Variable) == 0x000002, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility, Temp_byte_Variable) == 0x000003, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility, K2Node_Select_Default) == 0x000005, "Member 'WBP_UIKit_ItemDescription_Base_C_SetCompatibilityVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetRarityTagColors
// 0x0050 (0x0050 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors final
{
public:
	struct FFortColorPalette                      FortColorPalette;                                  // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors) == 0x000004, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors) == 0x000050, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors, FortColorPalette) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetRarityTagColors::FortColorPalette' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetRarityTagVisibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility final
{
public:
	bool                                          ShowTag;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility) == 0x000020, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility, ShowTag) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility::ShowTag' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility, CallFunc_GetCurrentCulture_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000018, "Member 'WBP_UIKit_ItemDescription_Base_C_SetRarityTagVisibility::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetRarityText
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetRarityText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetRarityText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetRarityText");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetRarityText) == 0x000018, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetRarityText");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetRarityText, Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetRarityText::Text' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetStyleText
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetStyleText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetStyleText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetStyleText");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetStyleText) == 0x000018, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetStyleText");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetStyleText, Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetStyleText::Text' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetTitleText
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetTitleText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetTitleText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetTitleText");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetTitleText) == 0x000018, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetTitleText");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetTitleText, Text) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetTitleText::Text' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C.SetWidgetLayout
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout final
{
public:
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_2;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_3;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout");
static_assert(sizeof(WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout) == 0x000020, "Wrong size on WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000008, "Member 'WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout, CallFunc_SlotAsGridSlot_ReturnValue_2) == 0x000010, "Member 'WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout::CallFunc_SlotAsGridSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout, CallFunc_SlotAsGridSlot_ReturnValue_3) == 0x000018, "Member 'WBP_UIKit_ItemDescription_Base_C_SetWidgetLayout::CallFunc_SlotAsGridSlot_ReturnValue_3' has a wrong offset!");

}

