#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Block_EditableText

#include "Basic.hpp"

#include "WBP_UIKit_Block_EditableText_classes.hpp"
#include "WBP_UIKit_Block_EditableText_parameters.hpp"


namespace SDK
{

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.ExecuteUbergraph_WBP_UIKit_Block_EditableText
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::ExecuteUbergraph_WBP_UIKit_Block_EditableText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_UIKit_Block_EditableText");

	Params::WBP_UIKit_Block_EditableText_C_ExecuteUbergraph_WBP_UIKit_Block_EditableText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_UIKit_Block_EditableText_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAddedToFocusPath");

	Params::WBP_UIKit_Block_EditableText_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetFont
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateFontInfo                   Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetFont(const struct FSlateFontInfo& Font)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFont");

	Params::WBP_UIKit_Block_EditableText_C_SetFont Parms{};

	Parms.Font = std::move(Font);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetFontMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstance*                Material_Instance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetFontMaterial(class UMaterialInstance* Material_Instance)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFontMaterial");

	Params::WBP_UIKit_Block_EditableText_C_SetFontMaterial Parms{};

	Parms.Material_Instance = Material_Instance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetHintText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Hint_Text                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_Block_EditableText_C::SetHintText(const class FText& Hint_Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHintText");

	Params::WBP_UIKit_Block_EditableText_C_SetHintText Parms{};

	Parms.Hint_Text = std::move(Hint_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetIsPassword
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPassword                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetIsPassword(bool IsPassword)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsPassword");

	Params::WBP_UIKit_Block_EditableText_C_SetIsPassword Parms{};

	Parms.IsPassword = IsPassword;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetJustification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            Justification                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetJustification(ETextJustify Justification)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetJustification");

	Params::WBP_UIKit_Block_EditableText_C_SetJustification Parms{};

	Parms.Justification = Justification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetMinDesiredWidth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Min_Width                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetMinDesiredWidth(double Min_Width)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMinDesiredWidth");

	Params::WBP_UIKit_Block_EditableText_C_SetMinDesiredWidth Parms{};

	Parms.Min_Width = Min_Width;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetMobileFontSizeMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MobileFontSizeMultiplier                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetMobileFontSizeMultiplier(float MobileFontSizeMultiplier)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMobileFontSizeMultiplier");

	Params::WBP_UIKit_Block_EditableText_C_SetMobileFontSizeMultiplier Parms{};

	Parms.MobileFontSizeMultiplier = MobileFontSizeMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetReadOnly
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReadOnly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_EditableText_C::SetReadOnly(bool IsReadOnly)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetReadOnly");

	Params::WBP_UIKit_Block_EditableText_C_SetReadOnly Parms{};

	Parms.IsReadOnly = IsReadOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_Block_EditableText_C::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetText");

	Params::WBP_UIKit_Block_EditableText_C_SetText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}

}

