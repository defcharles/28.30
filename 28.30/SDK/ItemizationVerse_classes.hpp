#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationVerse

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "VerseFortnite_classes.hpp"
#include "ItemizationCoreRuntime_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ItemizationVerse.VerseInventoryCollectionWrapper
// 0x00F0 (0x0138 - 0x0048)
class UVerseInventoryCollectionWrapper : public UVerseFortniteActorWrapper
{
public:
	TMap<struct FGuid, class UVerseItem*>         ItemMap;                                           // 0x0048(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UVerseInventory*>    InventoryMap;                                      // 0x0098(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UVerseInventory*>    EquippableInventoryMap;                            // 0x00E8(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseInventoryCollectionWrapper">();
	}
	static class UVerseInventoryCollectionWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseInventoryCollectionWrapper>();
	}
};
static_assert(alignof(UVerseInventoryCollectionWrapper) == 0x000008, "Wrong alignment on UVerseInventoryCollectionWrapper");
static_assert(sizeof(UVerseInventoryCollectionWrapper) == 0x000138, "Wrong size on UVerseInventoryCollectionWrapper");
static_assert(offsetof(UVerseInventoryCollectionWrapper, ItemMap) == 0x000048, "Member 'UVerseInventoryCollectionWrapper::ItemMap' has a wrong offset!");
static_assert(offsetof(UVerseInventoryCollectionWrapper, InventoryMap) == 0x000098, "Member 'UVerseInventoryCollectionWrapper::InventoryMap' has a wrong offset!");
static_assert(offsetof(UVerseInventoryCollectionWrapper, EquippableInventoryMap) == 0x0000E8, "Member 'UVerseInventoryCollectionWrapper::EquippableInventoryMap' has a wrong offset!");

// Class ItemizationVerse.VerseInventory
// 0x0080 (0x00A8 - 0x0028)
class UVerseInventory : public UObject
{
public:
	struct FGuid                                  InventoryID;                                       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AInventoryCollection>    OwningInventoryCollection;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UVerseInventoryCollectionWrapper> OwningCollectionWrapper;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<struct FGuid>                            ItemSetIDSet;                                      // 0x0048(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x10];                                      // 0x0098(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseInventory">();
	}
	static class UVerseInventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseInventory>();
	}
};
static_assert(alignof(UVerseInventory) == 0x000008, "Wrong alignment on UVerseInventory");
static_assert(sizeof(UVerseInventory) == 0x0000A8, "Wrong size on UVerseInventory");
static_assert(offsetof(UVerseInventory, InventoryID) == 0x000028, "Member 'UVerseInventory::InventoryID' has a wrong offset!");
static_assert(offsetof(UVerseInventory, OwningInventoryCollection) == 0x000038, "Member 'UVerseInventory::OwningInventoryCollection' has a wrong offset!");
static_assert(offsetof(UVerseInventory, OwningCollectionWrapper) == 0x000040, "Member 'UVerseInventory::OwningCollectionWrapper' has a wrong offset!");
static_assert(offsetof(UVerseInventory, ItemSetIDSet) == 0x000048, "Member 'UVerseInventory::ItemSetIDSet' has a wrong offset!");

// Class ItemizationVerse.VerseItem
// 0x0000 (0x0040 - 0x0040)
class UVerseItem : public UItemInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseItem">();
	}
	static class UVerseItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseItem>();
	}
};
static_assert(alignof(UVerseItem) == 0x000008, "Wrong alignment on UVerseItem");
static_assert(sizeof(UVerseItem) == 0x000040, "Wrong size on UVerseItem");

// Class ItemizationVerse.VerseItemizationSubsystem
// 0x0000 (0x0030 - 0x0030)
class UVerseItemizationSubsystem final : public UWorldSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseItemizationSubsystem">();
	}
	static class UVerseItemizationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseItemizationSubsystem>();
	}
};
static_assert(alignof(UVerseItemizationSubsystem) == 0x000008, "Wrong alignment on UVerseItemizationSubsystem");
static_assert(sizeof(UVerseItemizationSubsystem) == 0x000030, "Wrong size on UVerseItemizationSubsystem");

}

