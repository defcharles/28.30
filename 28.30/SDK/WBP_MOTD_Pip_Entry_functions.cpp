#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MOTD_Pip_Entry

#include "Basic.hpp"

#include "WBP_MOTD_Pip_Entry_classes.hpp"
#include "WBP_MOTD_Pip_Entry_parameters.hpp"


namespace SDK
{

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UWBP_MOTD_Pip_Entry_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnItemExpansionChanged");

	Params::WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnItemSelectionChanged");

	Params::WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.ExecuteUbergraph_WBP_MOTD_Pip_Entry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::ExecuteUbergraph_WBP_MOTD_Pip_Entry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_MOTD_Pip_Entry");

	Params::WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnListItemObjectSet");

	Params::WBP_MOTD_Pip_Entry_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetActive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::SetActive(bool Active)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetActive");

	Params::WBP_MOTD_Pip_Entry_C_SetActive Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetDisplayTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisplayTimer_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Show_Progressbar_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::SetDisplayTimer(bool DisplayTimer_0, bool Show_Progressbar_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDisplayTimer");

	Params::WBP_MOTD_Pip_Entry_C_SetDisplayTimer Parms{};

	Parms.DisplayTimer_0 = DisplayTimer_0;
	Parms.Show_Progressbar_0 = Show_Progressbar_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetDuration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DurationValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::SetDuration(double DurationValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDuration");

	Params::WBP_MOTD_Pip_Entry_C_SetDuration Parms{};

	Parms.DurationValue = DurationValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetTimerAnimPlaying
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPaused                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MOTD_Pip_Entry_C::SetTimerAnimPlaying(bool IsPaused)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTimerAnimPlaying");

	Params::WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying Parms{};

	Parms.IsPaused = IsPaused;

	UObject::ProcessEvent(Func, &Parms);
}

}

