#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_WashForce

#include "Basic.hpp"

#include "FieldSystemEngine_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FN_WashForce.FN_WashForce_C
// 0x0038 (0x02D0 - 0x0298)
class AFN_WashForce_C final : public AFieldSystemActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URadialFalloff*                         RadialFalloff;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOperatorField*                         Multiply;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialVector*                          RadialVector;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Strength;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Stop_TIme;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SertRadius(double Radius_0);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveDestroyed();
	void ExecuteUbergraph_FN_WashForce(int32 EntryPoint);
	bool Compute_Strength(double* ReturnValue2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FN_WashForce_C">();
	}
	static class AFN_WashForce_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFN_WashForce_C>();
	}
};
static_assert(alignof(AFN_WashForce_C) == 0x000008, "Wrong alignment on AFN_WashForce_C");
static_assert(sizeof(AFN_WashForce_C) == 0x0002D0, "Wrong size on AFN_WashForce_C");
static_assert(offsetof(AFN_WashForce_C, UberGraphFrame) == 0x000298, "Member 'AFN_WashForce_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFN_WashForce_C, RadialFalloff) == 0x0002A0, "Member 'AFN_WashForce_C::RadialFalloff' has a wrong offset!");
static_assert(offsetof(AFN_WashForce_C, Multiply) == 0x0002A8, "Member 'AFN_WashForce_C::Multiply' has a wrong offset!");
static_assert(offsetof(AFN_WashForce_C, RadialVector) == 0x0002B0, "Member 'AFN_WashForce_C::RadialVector' has a wrong offset!");
static_assert(offsetof(AFN_WashForce_C, Radius) == 0x0002B8, "Member 'AFN_WashForce_C::Radius' has a wrong offset!");
static_assert(offsetof(AFN_WashForce_C, Strength) == 0x0002C0, "Member 'AFN_WashForce_C::Strength' has a wrong offset!");
static_assert(offsetof(AFN_WashForce_C, Stop_TIme) == 0x0002C8, "Member 'AFN_WashForce_C::Stop_TIme' has a wrong offset!");

}

