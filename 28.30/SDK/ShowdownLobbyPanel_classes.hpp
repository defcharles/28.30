#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownLobbyPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ShowdownLobbyPanel.ShowdownLobbyPanel_C
// 0x0178 (0x0950 - 0x07D8)
class UShowdownLobbyPanel_C final : public UFortTournamentLobbyPanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EventButtonHover;                                  // 0x07E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x07E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bg_HighestScore;                                   // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_TimeRemaining;                              // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CentralContentSwitcher;                            // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_EarnAPin;                          // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_Score;                        // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_TournamentWarnings;           // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           EarnPinContent;                                    // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EarnPinMessage;                                    // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       EarnPinScoreText;                                  // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             GP_PanelContent;                                   // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_SpecialScore;                                   // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       HighestScoreTeammatesText;                         // 0x0848(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       HighestScoreText;                                  // 0x0850(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0858(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_35;                                          // 0x0860(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_DetailsButtonBG;                             // 0x0868(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ErrorBG;                                     // 0x0870(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MFA_WarningText;                                   // 0x0878(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NoMessage;                                         // 0x0880(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ScoreInfo;                                 // 0x0888(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownPin_C*                         ShowdownPin;                                       // 0x0890(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownPin_C*                         ShowdownPin_SpecialScore;                          // 0x0898(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            Switcher_TimeInfo;                                 // 0x08A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_CrossplayWarning;                             // 0x08A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_DetailsButton;                                // 0x08B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_MatchCapWarning;                              // 0x08B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Remaining;                                    // 0x08C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_ScheduledMMInfo;                              // 0x08C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         TournamentLogo;                                    // 0x08D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle;                                   // 0x08D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle2;                                  // 0x08E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Content_ScheduledTime;                          // 0x08E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Content_TimeRemaining;                          // 0x08F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_HighestScore;                                   // 0x08F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               WarningMessage;                                    // 0x0900(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Backplate_Glass_C*           WBP_UIKit_Backplate_Glass;                         // 0x0908(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            PrimaryColor;                                      // 0x0910(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            ShadowColor;                                       // 0x0924(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            HighlightColor;                                    // 0x0938(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DEVhasBranding;                                    // 0x094C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__EventDetailsButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__EventDetailsButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BrandingToggle(bool hasBranding);
	void Construct();
	void EventColorize();
	void EventSwitchUI(ECommonInputType bNewInputType);
	void ExecuteUbergraph_ShowdownLobbyPanel(int32 EntryPoint);
	void HandleCrossplayChanged();
	void InputTypeChanged(bool isGamepad);
	void PreConstruct(bool IsDesignTime);
	void Refresh();
	void RefreshDataBP();
	void UpdateColors();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShowdownLobbyPanel_C">();
	}
	static class UShowdownLobbyPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowdownLobbyPanel_C>();
	}
};
static_assert(alignof(UShowdownLobbyPanel_C) == 0x000008, "Wrong alignment on UShowdownLobbyPanel_C");
static_assert(sizeof(UShowdownLobbyPanel_C) == 0x000950, "Wrong size on UShowdownLobbyPanel_C");
static_assert(offsetof(UShowdownLobbyPanel_C, UberGraphFrame) == 0x0007D8, "Member 'UShowdownLobbyPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, EventButtonHover) == 0x0007E0, "Member 'UShowdownLobbyPanel_C::EventButtonHover' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Intro) == 0x0007E8, "Member 'UShowdownLobbyPanel_C::Intro' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Bg_HighestScore) == 0x0007F0, "Member 'UShowdownLobbyPanel_C::Bg_HighestScore' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Border_TimeRemaining) == 0x0007F8, "Member 'UShowdownLobbyPanel_C::Border_TimeRemaining' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, CentralContentSwitcher) == 0x000800, "Member 'UShowdownLobbyPanel_C::CentralContentSwitcher' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, CommonTextBlock_EarnAPin) == 0x000808, "Member 'UShowdownLobbyPanel_C::CommonTextBlock_EarnAPin' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, CommonWidgetSwitcher_Score) == 0x000810, "Member 'UShowdownLobbyPanel_C::CommonWidgetSwitcher_Score' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, CommonWidgetSwitcher_TournamentWarnings) == 0x000818, "Member 'UShowdownLobbyPanel_C::CommonWidgetSwitcher_TournamentWarnings' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, EarnPinContent) == 0x000820, "Member 'UShowdownLobbyPanel_C::EarnPinContent' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, EarnPinMessage) == 0x000828, "Member 'UShowdownLobbyPanel_C::EarnPinMessage' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, EarnPinScoreText) == 0x000830, "Member 'UShowdownLobbyPanel_C::EarnPinScoreText' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, GP_PanelContent) == 0x000838, "Member 'UShowdownLobbyPanel_C::GP_PanelContent' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, HB_SpecialScore) == 0x000840, "Member 'UShowdownLobbyPanel_C::HB_SpecialScore' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, HighestScoreTeammatesText) == 0x000848, "Member 'UShowdownLobbyPanel_C::HighestScoreTeammatesText' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, HighestScoreText) == 0x000850, "Member 'UShowdownLobbyPanel_C::HighestScoreText' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Image) == 0x000858, "Member 'UShowdownLobbyPanel_C::Image' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Image_35) == 0x000860, "Member 'UShowdownLobbyPanel_C::Image_35' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Image_DetailsButtonBG) == 0x000868, "Member 'UShowdownLobbyPanel_C::Image_DetailsButtonBG' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Image_ErrorBG) == 0x000870, "Member 'UShowdownLobbyPanel_C::Image_ErrorBG' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, MFA_WarningText) == 0x000878, "Member 'UShowdownLobbyPanel_C::MFA_WarningText' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, NoMessage) == 0x000880, "Member 'UShowdownLobbyPanel_C::NoMessage' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Overlay_ScoreInfo) == 0x000888, "Member 'UShowdownLobbyPanel_C::Overlay_ScoreInfo' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, ShowdownPin) == 0x000890, "Member 'UShowdownLobbyPanel_C::ShowdownPin' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, ShowdownPin_SpecialScore) == 0x000898, "Member 'UShowdownLobbyPanel_C::ShowdownPin_SpecialScore' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Switcher_TimeInfo) == 0x0008A0, "Member 'UShowdownLobbyPanel_C::Switcher_TimeInfo' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Text_CrossplayWarning) == 0x0008A8, "Member 'UShowdownLobbyPanel_C::Text_CrossplayWarning' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Text_DetailsButton) == 0x0008B0, "Member 'UShowdownLobbyPanel_C::Text_DetailsButton' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Text_MatchCapWarning) == 0x0008B8, "Member 'UShowdownLobbyPanel_C::Text_MatchCapWarning' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Text_Remaining) == 0x0008C0, "Member 'UShowdownLobbyPanel_C::Text_Remaining' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, Text_ScheduledMMInfo) == 0x0008C8, "Member 'UShowdownLobbyPanel_C::Text_ScheduledMMInfo' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, TournamentLogo) == 0x0008D0, "Member 'UShowdownLobbyPanel_C::TournamentLogo' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, TournamentTitle) == 0x0008D8, "Member 'UShowdownLobbyPanel_C::TournamentTitle' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, TournamentTitle2) == 0x0008E0, "Member 'UShowdownLobbyPanel_C::TournamentTitle2' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, VB_Content_ScheduledTime) == 0x0008E8, "Member 'UShowdownLobbyPanel_C::VB_Content_ScheduledTime' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, VB_Content_TimeRemaining) == 0x0008F0, "Member 'UShowdownLobbyPanel_C::VB_Content_TimeRemaining' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, VB_HighestScore) == 0x0008F8, "Member 'UShowdownLobbyPanel_C::VB_HighestScore' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, WarningMessage) == 0x000900, "Member 'UShowdownLobbyPanel_C::WarningMessage' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, WBP_UIKit_Backplate_Glass) == 0x000908, "Member 'UShowdownLobbyPanel_C::WBP_UIKit_Backplate_Glass' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, PrimaryColor) == 0x000910, "Member 'UShowdownLobbyPanel_C::PrimaryColor' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, ShadowColor) == 0x000924, "Member 'UShowdownLobbyPanel_C::ShadowColor' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, HighlightColor) == 0x000938, "Member 'UShowdownLobbyPanel_C::HighlightColor' has a wrong offset!");
static_assert(offsetof(UShowdownLobbyPanel_C, DEVhasBranding) == 0x00094C, "Member 'UShowdownLobbyPanel_C::DEVhasBranding' has a wrong offset!");

}

