#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_TagRotator_Base

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C
// 0x0178 (0x0460 - 0x02E8)
class UWBP_MPItemShop_TagRotator_Base_C : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UnhoverCollapsed;                                  // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverCollapsed;                                    // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnhoverFull;                                       // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverFull;                                         // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TextIn;                                            // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TextOut;                                           // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Background;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Text;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_All;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_IconSpace_Left;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_IconSpace_Right;                            // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Tag;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         TimeBetweenTitleChanges;                           // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle;                                       // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTitleIndex;                                 // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumTitles;                                         // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullPreviewEnabled;                              // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TagHeight;                                         // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        TagHeight_Mobile;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInterface*                     TagMaterial;                                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         TagFont;                                           // 0x0388(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	ETextTransformPolicy                          TagTransformPolicy;                                // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                TagPadding;                                        // 0x03E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFocused;                                         // 0x03F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewFullInfoEnabled;                            // 0x03F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F6[0x2];                                      // 0x03F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PreviewTitleText;                                  // 0x03F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               TagMID;                                            // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            TextColor;                                         // 0x0418(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              IconSpacerSize;                                    // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HoverAnimationLerp;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnhanced;                                        // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           TagTexts;                                          // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Destruct();
	void ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base(int32 EntryPoint);
	void Finished_4BEA4BB84D2F7E74F9B8E7BD39D43FCB();
	void Finished_93579D2D45D380D158A40DBE05447600();
	void InitializeTagRotator();
	void OnEnhancedUpdated(bool IsEnhanced_0);
	void OnTagEnter();
	void OnTagExit();
	void OnTextsUpdated(TArray<class FText>& texts);
	void PlayHoverAnimation(bool IsImmediate);
	void PlayUnhoverAnimation(bool IsImmediate);
	void PreConstruct(bool IsDesignTime);
	void Set_Focused_State(bool IsFocused_0, bool IsImmediate);
	void SetHoverAnimationLerp(double LerpValue);
	void ShowFirstTitle();
	void TransitionToNextTitle();
	void UpdateTagText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MPItemShop_TagRotator_Base_C">();
	}
	static class UWBP_MPItemShop_TagRotator_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MPItemShop_TagRotator_Base_C>();
	}
};
static_assert(alignof(UWBP_MPItemShop_TagRotator_Base_C) == 0x000008, "Wrong alignment on UWBP_MPItemShop_TagRotator_Base_C");
static_assert(sizeof(UWBP_MPItemShop_TagRotator_Base_C) == 0x000460, "Wrong size on UWBP_MPItemShop_TagRotator_Base_C");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_MPItemShop_TagRotator_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, UnhoverCollapsed) == 0x0002F0, "Member 'UWBP_MPItemShop_TagRotator_Base_C::UnhoverCollapsed' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, HoverCollapsed) == 0x0002F8, "Member 'UWBP_MPItemShop_TagRotator_Base_C::HoverCollapsed' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, UnhoverFull) == 0x000300, "Member 'UWBP_MPItemShop_TagRotator_Base_C::UnhoverFull' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, HoverFull) == 0x000308, "Member 'UWBP_MPItemShop_TagRotator_Base_C::HoverFull' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TextIn) == 0x000310, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TextIn' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TextOut) == 0x000318, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TextOut' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, Border_Background) == 0x000320, "Member 'UWBP_MPItemShop_TagRotator_Base_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, Border_Text) == 0x000328, "Member 'UWBP_MPItemShop_TagRotator_Base_C::Border_Text' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, SizeBox_All) == 0x000330, "Member 'UWBP_MPItemShop_TagRotator_Base_C::SizeBox_All' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, Spacer_IconSpace_Left) == 0x000338, "Member 'UWBP_MPItemShop_TagRotator_Base_C::Spacer_IconSpace_Left' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, Spacer_IconSpace_Right) == 0x000340, "Member 'UWBP_MPItemShop_TagRotator_Base_C::Spacer_IconSpace_Right' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, Text_Tag) == 0x000348, "Member 'UWBP_MPItemShop_TagRotator_Base_C::Text_Tag' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TimeBetweenTitleChanges) == 0x000350, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TimeBetweenTitleChanges' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TimerHandle) == 0x000358, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, CurrentTitleIndex) == 0x000360, "Member 'UWBP_MPItemShop_TagRotator_Base_C::CurrentTitleIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, NumTitles) == 0x000364, "Member 'UWBP_MPItemShop_TagRotator_Base_C::NumTitles' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, IsFullPreviewEnabled) == 0x000368, "Member 'UWBP_MPItemShop_TagRotator_Base_C::IsFullPreviewEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagHeight) == 0x000370, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagHeight' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagHeight_Mobile) == 0x000378, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagHeight_Mobile' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagMaterial) == 0x000380, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagFont) == 0x000388, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagFont' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagTransformPolicy) == 0x0003E0, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagTransformPolicy' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagPadding) == 0x0003E4, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagPadding' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, IsFocused) == 0x0003F4, "Member 'UWBP_MPItemShop_TagRotator_Base_C::IsFocused' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, PreviewFullInfoEnabled) == 0x0003F5, "Member 'UWBP_MPItemShop_TagRotator_Base_C::PreviewFullInfoEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, PreviewTitleText) == 0x0003F8, "Member 'UWBP_MPItemShop_TagRotator_Base_C::PreviewTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagMID) == 0x000410, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagMID' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TextColor) == 0x000418, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, IconSpacerSize) == 0x000430, "Member 'UWBP_MPItemShop_TagRotator_Base_C::IconSpacerSize' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, HoverAnimationLerp) == 0x000440, "Member 'UWBP_MPItemShop_TagRotator_Base_C::HoverAnimationLerp' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, IsEnhanced) == 0x000448, "Member 'UWBP_MPItemShop_TagRotator_Base_C::IsEnhanced' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_TagRotator_Base_C, TagTexts) == 0x000450, "Member 'UWBP_MPItemShop_TagRotator_Base_C::TagTexts' has a wrong offset!");

}

