#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponModStationUI

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "BlueprintContext_classes.hpp"
#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchContext
// 0x00B8 (0x00E8 - 0x0030)
class UAthenaWeaponModsWorkbenchContext final : public UBlueprintContextBase
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnWeaponModsWorkbenchRequestClose;                 // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UFortWeaponModItemDefinition* CurrentlySelectedMod)> OnWeaponModsWorkbenchSelectedModChanged;           // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x60];                                      // 0x0088(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RequestCloseUI();

	struct FGameplayTag GetCurrentModCategory() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchContext">();
	}
	static class UAthenaWeaponModsWorkbenchContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchContext>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchContext) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchContext");
static_assert(sizeof(UAthenaWeaponModsWorkbenchContext) == 0x0000E8, "Wrong size on UAthenaWeaponModsWorkbenchContext");
static_assert(offsetof(UAthenaWeaponModsWorkbenchContext, OnWeaponModsWorkbenchRequestClose) == 0x000050, "Member 'UAthenaWeaponModsWorkbenchContext::OnWeaponModsWorkbenchRequestClose' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchContext, OnWeaponModsWorkbenchSelectedModChanged) == 0x000078, "Member 'UAthenaWeaponModsWorkbenchContext::OnWeaponModsWorkbenchSelectedModChanged' has a wrong offset!");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchWidgetBase
// 0x0000 (0x02E8 - 0x02E8)
class UAthenaWeaponModsWorkbenchWidgetBase : public UCommonUserWidget
{
public:
	void HandleWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnWeaponModCategoryChanged(const struct FGameplayTag& ModTypeTag);
	void OnWorkbenchClosed();
	void OnWorkbenchOpened();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchWidgetBase">();
	}
	static class UAthenaWeaponModsWorkbenchWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchWidgetBase>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchWidgetBase) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchWidgetBase");
static_assert(sizeof(UAthenaWeaponModsWorkbenchWidgetBase) == 0x0002E8, "Wrong size on UAthenaWeaponModsWorkbenchWidgetBase");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchEquippedModDetails
// 0x0000 (0x02E8 - 0x02E8)
class UAthenaWeaponModsWorkbenchEquippedModDetails final : public UAthenaWeaponModsWorkbenchWidgetBase
{
public:
	void HandleCurrentlySelectedModChanged(class UFortWeaponModItemDefinition* NewSelectedMod);
	void HandleSetEquippedModInfo(const class UFortWeaponModItemDefinition* WeaponMod);
	void OnRemoveModClicked();
	void OnSetCurrentlySelectedModInfo(const class UFortWeaponModItemDefinition* ModItemDefinition, bool bIsSameCategory, bool bIsEquippedMod);
	void OnSetEquippedModInfo(const class UFortWeaponModItemDefinition* ModItemDefinition, bool bIsDefaultMod, bool bSlotHasDefaultMod, bool bCanRemoveMod);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchEquippedModDetails">();
	}
	static class UAthenaWeaponModsWorkbenchEquippedModDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchEquippedModDetails>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchEquippedModDetails) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchEquippedModDetails");
static_assert(sizeof(UAthenaWeaponModsWorkbenchEquippedModDetails) == 0x0002E8, "Wrong size on UAthenaWeaponModsWorkbenchEquippedModDetails");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchModal
// 0x0038 (0x0438 - 0x0400)
class UAthenaWeaponModsWorkbenchModal final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x8];                                      // 0x0400(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           BlockedInputActions;                               // 0x0408(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FPrimaryContentSetup                   PrimaryContentSetup;                               // 0x0418(0x0003)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41B[0x5];                                      // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputComponent*                        WorkbenchModalInputComp;                           // 0x0420(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_428[0x10];                                     // 0x0428(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleCloseUI();
	void HandleModStationComponentForceStop(class AFortWeaponModStationBase* WeaponModStation);
	void HandleWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnInputTypeChanged(const ECommonInputType NewInputType);
	void OnWeaponEquipped(bool bIsModdable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchModal">();
	}
	static class UAthenaWeaponModsWorkbenchModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchModal>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchModal) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchModal");
static_assert(sizeof(UAthenaWeaponModsWorkbenchModal) == 0x000438, "Wrong size on UAthenaWeaponModsWorkbenchModal");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModal, BlockedInputActions) == 0x000408, "Member 'UAthenaWeaponModsWorkbenchModal::BlockedInputActions' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModal, PrimaryContentSetup) == 0x000418, "Member 'UAthenaWeaponModsWorkbenchModal::PrimaryContentSetup' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModal, WorkbenchModalInputComp) == 0x000420, "Member 'UAthenaWeaponModsWorkbenchModal::WorkbenchModalInputComp' has a wrong offset!");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchModListEntry
// 0x0010 (0x14A0 - 0x1490)
class UAthenaWeaponModsWorkbenchModListEntry final : public UCommonButtonBase
{
public:
	uint8                                         Pad_1490[0x10];                                    // 0x1490(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnListItemSet(const class UFortItemDefinition* Item);
	void OnRefreshStatus();

	bool IsEquippableMod() const;
	bool IsEquippedMod() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchModListEntry">();
	}
	static class UAthenaWeaponModsWorkbenchModListEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchModListEntry>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchModListEntry) == 0x000010, "Wrong alignment on UAthenaWeaponModsWorkbenchModListEntry");
static_assert(sizeof(UAthenaWeaponModsWorkbenchModListEntry) == 0x0014A0, "Wrong size on UAthenaWeaponModsWorkbenchModListEntry");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchModSelection
// 0x0040 (0x0328 - 0x02E8)
class UAthenaWeaponModsWorkbenchModSelection final : public UAthenaWeaponModsWorkbenchWidgetBase
{
public:
	class UFortWorldItemDefinition*               PurchasingCurrency;                                // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F0[0x8];                                      // 0x02F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonListView*                        ListView_ModChoices;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x8];                                      // 0x0300(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    PreviousListEntryInputAction;                      // 0x0308(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    NextListEntryInputAction;                          // 0x0318(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void GetSelectedModCostAndOwnedCurrency(int32* ModCost, int32* OwnedCurrency);
	void OnBuyAndEquipClicked();
	void OnExitUIClicked();
	void OnModPurchasedSuccessfully();
	void OnModPurchaseFailed();
	void OnModRemovedCallback();
	void OnRefreshMods(const TArray<class UFortWeaponModItemDefinition*>& WeaponModItemDefinitions);
	void OnRefreshModType(const struct FGameplayTag& ModCategoryTag);
	void OnRemoveModClicked();
	void OnSetSelectedModCostAndOwnedCurrency(int32 ModCost, int32 OwnedCurrency);
	void OnSetSelectedModInfo(const class UFortWeaponModItemDefinition* ModItemDef);
	void OnSetSelectedRemoveModCostAndOwnedCurrency(int32 ModCost, int32 OwnedCurrency);
	void RequestBuyAndEquip();
	void RequestRemoveMod();
	void SetCanRemoveMod(bool bCanRemoveMod);

	bool CanApplySelectedModToEquippedWeapon() const;
	bool CanRemoveSelectedModFromWeapon() const;
	bool DoesEquippedWeaponHaveDefaultModForSlot() const;
	void GetSelectedRemoveModCostAndOwnedCurrency(int32* RemoveModCost, int32* OwnedCurrency) const;
	bool IsSelectedModEquippedOnWeapon() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchModSelection">();
	}
	static class UAthenaWeaponModsWorkbenchModSelection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchModSelection>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchModSelection) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchModSelection");
static_assert(sizeof(UAthenaWeaponModsWorkbenchModSelection) == 0x000328, "Wrong size on UAthenaWeaponModsWorkbenchModSelection");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModSelection, PurchasingCurrency) == 0x0002E8, "Member 'UAthenaWeaponModsWorkbenchModSelection::PurchasingCurrency' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModSelection, ListView_ModChoices) == 0x0002F8, "Member 'UAthenaWeaponModsWorkbenchModSelection::ListView_ModChoices' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModSelection, PreviousListEntryInputAction) == 0x000308, "Member 'UAthenaWeaponModsWorkbenchModSelection::PreviousListEntryInputAction' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModSelection, NextListEntryInputAction) == 0x000318, "Member 'UAthenaWeaponModsWorkbenchModSelection::NextListEntryInputAction' has a wrong offset!");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchModTypeButton
// 0x0010 (0x14A0 - 0x1490)
class UAthenaWeaponModsWorkbenchModTypeButton final : public UCommonButtonBase
{
public:
	struct FGameplayTag                           ModTypeTag;                                        // 0x1490(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1494[0x4];                                     // 0x1494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWeaponModItemDefinition*           DefaultModItemDef;                                 // 0x1498(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnWorkbenchClosed();
	void OnWorkbenchOpened();
	void SetEquippedOrDefaultMod(class UFortWeaponModItemDefinition* ItemDefinition, bool bIsAvailableCategory);

	struct FGameplayTag GetModTypeTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchModTypeButton">();
	}
	static class UAthenaWeaponModsWorkbenchModTypeButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchModTypeButton>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchModTypeButton) == 0x000010, "Wrong alignment on UAthenaWeaponModsWorkbenchModTypeButton");
static_assert(sizeof(UAthenaWeaponModsWorkbenchModTypeButton) == 0x0014A0, "Wrong size on UAthenaWeaponModsWorkbenchModTypeButton");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModTypeButton, ModTypeTag) == 0x001490, "Member 'UAthenaWeaponModsWorkbenchModTypeButton::ModTypeTag' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModTypeButton, DefaultModItemDef) == 0x001498, "Member 'UAthenaWeaponModsWorkbenchModTypeButton::DefaultModItemDef' has a wrong offset!");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchModTypeTabs
// 0x0028 (0x0310 - 0x02E8)
class UAthenaWeaponModsWorkbenchModTypeTabs final : public UAthenaWeaponModsWorkbenchWidgetBase
{
public:
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    PreviousTabInputAction;                            // 0x02F0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    NextTabInputAction;                                // 0x0300(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

public:
	TArray<class UAthenaWeaponModsWorkbenchModTypeButton*> GetTabButtons();
	void OnModTypeTabClicked(const struct FGameplayTag& ModTypeTag);
	void SetItemSlotInfo(const TArray<struct FFortWeaponModSlot>& ModSlots);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchModTypeTabs">();
	}
	static class UAthenaWeaponModsWorkbenchModTypeTabs* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchModTypeTabs>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchModTypeTabs) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchModTypeTabs");
static_assert(sizeof(UAthenaWeaponModsWorkbenchModTypeTabs) == 0x000310, "Wrong size on UAthenaWeaponModsWorkbenchModTypeTabs");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModTypeTabs, PreviousTabInputAction) == 0x0002F0, "Member 'UAthenaWeaponModsWorkbenchModTypeTabs::PreviousTabInputAction' has a wrong offset!");
static_assert(offsetof(UAthenaWeaponModsWorkbenchModTypeTabs, NextTabInputAction) == 0x000300, "Member 'UAthenaWeaponModsWorkbenchModTypeTabs::NextTabInputAction' has a wrong offset!");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchWeaponDetails
// 0x0008 (0x02F0 - 0x02E8)
class UAthenaWeaponModsWorkbenchWeaponDetails final : public UAthenaWeaponModsWorkbenchWidgetBase
{
public:
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnWeaponEquipped(const class UFortItemDefinition* ItemDefinition, const class FText& DisplayName);
	void SetWeaponType(const class FText& WeaponTypeText, class UTexture2D* WeaponTypeTexture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchWeaponDetails">();
	}
	static class UAthenaWeaponModsWorkbenchWeaponDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchWeaponDetails>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchWeaponDetails) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchWeaponDetails");
static_assert(sizeof(UAthenaWeaponModsWorkbenchWeaponDetails) == 0x0002F0, "Wrong size on UAthenaWeaponModsWorkbenchWeaponDetails");

// Class WeaponModStationUI.AthenaWeaponModsWorkbenchWeaponRenderContainer
// 0x0000 (0x02E8 - 0x02E8)
class UAthenaWeaponModsWorkbenchWeaponRenderContainer final : public UAthenaWeaponModsWorkbenchWidgetBase
{
public:
	void HandleWeaponModSlotPreview(class UFortWeaponModItemDefinition* PreviewingModItemDefinition);
	void OnWeaponModSlotPreview(class AFortWeapon* Weapon, class UFortWeaponModItemDefinition* PreviewingModItemDefinition);
	void OnWeaponModSlotsChanged(class AFortWeapon* Weapon);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaWeaponModsWorkbenchWeaponRenderContainer">();
	}
	static class UAthenaWeaponModsWorkbenchWeaponRenderContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWeaponModsWorkbenchWeaponRenderContainer>();
	}
};
static_assert(alignof(UAthenaWeaponModsWorkbenchWeaponRenderContainer) == 0x000008, "Wrong alignment on UAthenaWeaponModsWorkbenchWeaponRenderContainer");
static_assert(sizeof(UAthenaWeaponModsWorkbenchWeaponRenderContainer) == 0x0002E8, "Wrong size on UAthenaWeaponModsWorkbenchWeaponRenderContainer");

}

