#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoProceduralLandscape

#include "Basic.hpp"

#include "JunoProceduralLandscape_classes.hpp"
#include "JunoProceduralLandscape_parameters.hpp"


namespace SDK
{

// Function JunoProceduralLandscape.JunoLandscapeExternalMaterialsCollector.CollectExternalMaterials
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJunoLandscapeLayersData*         LayerData                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInlcudeMobile                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeStandard                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeExternalMaterialsCollector::CollectExternalMaterials(class UJunoLandscapeLayersData* LayerData, bool bInlcudeMobile, bool bIncludeStandard)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CollectExternalMaterials");

	Params::JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials Parms{};

	Parms.LayerData = LayerData;
	Parms.bInlcudeMobile = bInlcudeMobile;
	Parms.bIncludeStandard = bIncludeStandard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeGeneratorInterface.GenerateLandscape
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRenderHeightmap                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WeightmapName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeRenderTarget*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJunoLandscapeRenderTarget* IJunoLandscapeGeneratorInterface::GenerateLandscape(bool bRenderHeightmap, class FName WeightmapName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GenerateLandscape");

	Params::JunoLandscapeGeneratorInterface_GenerateLandscape Parms{};

	Parms.bRenderHeightmap = bRenderHeightmap;
	Parms.WeightmapName = WeightmapName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeGeneratorInterface.Initialize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJunoLandscapeRenderer*           LandscapeRenderer                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IJunoLandscapeGeneratorInterface::Initialize(class UJunoLandscapeRenderer* LandscapeRenderer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Initialize");

	Params::JunoLandscapeGeneratorInterface_Initialize Parms{};

	Parms.LandscapeRenderer = LandscapeRenderer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeGeneratorInterface.GetAffectedWeightmapLayers
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> IJunoLandscapeGeneratorInterface::GetAffectedWeightmapLayers() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAffectedWeightmapLayers");

	Params::JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.K2_GetScalarParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJunoLandscapeMaterial::K2_GetScalarParameterValue(class FName ParameterName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("K2_GetScalarParameterValue");

	Params::JunoLandscapeMaterial_K2_GetScalarParameterValue Parms{};

	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.K2_GetVectorParameterValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UJunoLandscapeMaterial::K2_GetVectorParameterValue(class FName ParameterName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("K2_GetVectorParameterValue");

	Params::JunoLandscapeMaterial_K2_GetVectorParameterValue Parms{};

	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetDoubleVectorParameterValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector4                         Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeMaterial::SetDoubleVectorParameterValue(class FName ParameterName, const struct FVector4& Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDoubleVectorParameterValue");

	Params::JunoLandscapeMaterial_SetDoubleVectorParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetJunoTextureParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeMaterial::SetJunoTextureParameterValue(class FName ParameterName, class UTextureRenderTarget2D* Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetJunoTextureParameterValue");

	Params::JunoLandscapeMaterial_SetJunoTextureParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetRenderTargetParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeRenderTarget*       Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeMaterial::SetRenderTargetParameterValue(class FName ParameterName, class UJunoLandscapeRenderTarget* Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRenderTargetParameterValue");

	Params::JunoLandscapeMaterial_SetRenderTargetParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetScalarParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeMaterial::SetScalarParameterValue(class FName ParameterName, float Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetScalarParameterValue");

	Params::JunoLandscapeMaterial_SetScalarParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetTextureParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeMaterial::SetTextureParameterValue(class FName ParameterName, class UTexture* Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTextureParameterValue");

	Params::JunoLandscapeMaterial_SetTextureParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetVectorParameterValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeMaterial::SetVectorParameterValue(class FName ParameterName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetVectorParameterValue");

	Params::JunoLandscapeMaterial_SetVectorParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeLayersData.UpdateExternalMaterials
// (Final, Native, Public)

void UJunoLandscapeLayersData::UpdateExternalMaterials()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateExternalMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.BeginDrawCanvasToRenderTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UJunoLandscapeRenderTarget*       TextureRenderTarget                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeCanvas*             Canvas                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDrawToRenderTargetContext_JunoLandscapeContext                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::BeginDrawCanvasToRenderTarget(class UJunoLandscapeRenderTarget* TextureRenderTarget, class UJunoLandscapeCanvas** Canvas, struct FVector2D* Size, struct FDrawToRenderTargetContext_JunoLandscape* Context)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BeginDrawCanvasToRenderTarget");

	Params::JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget Parms{};

	Parms.TextureRenderTarget = TextureRenderTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (Canvas != nullptr)
		*Canvas = Parms.Canvas;

	if (Size != nullptr)
		*Size = std::move(Parms.Size);

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.ClearRenderTarget2D
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UJunoLandscapeRenderTarget*       TextureRenderTarget                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ClearColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::ClearRenderTarget2D(class UJunoLandscapeRenderTarget* TextureRenderTarget, const struct FLinearColor& ClearColor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearRenderTarget2D");

	Params::JunoLandscapeRenderer_ClearRenderTarget2D Parms{};

	Parms.TextureRenderTarget = TextureRenderTarget;
	Parms.ClearColor = std::move(ClearColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.CreateMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Parent                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OptionalName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMIDCreationFlags                       CreationFlags                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeMaterial*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJunoLandscapeMaterial* UJunoLandscapeRenderer::CreateMaterial(class UMaterialInterface* Parent, class FName OptionalName, EMIDCreationFlags CreationFlags)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateMaterial");

	Params::JunoLandscapeRenderer_CreateMaterial Parms{};

	Parms.Parent = Parent;
	Parms.OptionalName = OptionalName;
	Parms.CreationFlags = CreationFlags;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.CreateRenderTarget2D
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextureRenderTargetFormat              Format                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ClearColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoGenerateMipMaps                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeRenderTarget*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJunoLandscapeRenderTarget* UJunoLandscapeRenderer::CreateRenderTarget2D(int32 Width, int32 Height, ETextureRenderTargetFormat Format, const struct FLinearColor& ClearColor, bool bAutoGenerateMipMaps)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateRenderTarget2D");

	Params::JunoLandscapeRenderer_CreateRenderTarget2D Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.Format = Format;
	Parms.ClearColor = std::move(ClearColor);
	Parms.bAutoGenerateMipMaps = bAutoGenerateMipMaps;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.DrawMaterialToRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UJunoLandscapeRenderTarget*       TextureRenderTarget                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeMaterial*           Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::DrawMaterialToRenderTarget(class UJunoLandscapeRenderTarget* TextureRenderTarget, class UJunoLandscapeMaterial* Material)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawMaterialToRenderTarget");

	Params::JunoLandscapeRenderer_DrawMaterialToRenderTarget Parms{};

	Parms.TextureRenderTarget = TextureRenderTarget;
	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.DrawMaterialToRenderTargetUV
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UJunoLandscapeRenderTarget*       RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeMaterial*           RenderMaterial                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CoordinatePosition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CoordinateSize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::DrawMaterialToRenderTargetUV(class UJunoLandscapeRenderTarget* RenderTarget, class UJunoLandscapeMaterial* RenderMaterial, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, float Rotation, const struct FVector2D& PivotPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawMaterialToRenderTargetUV");

	Params::JunoLandscapeRenderer_DrawMaterialToRenderTargetUV Parms{};

	Parms.RenderTarget = RenderTarget;
	Parms.RenderMaterial = RenderMaterial;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.ScreenSize = std::move(ScreenSize);
	Parms.CoordinatePosition = std::move(CoordinatePosition);
	Parms.CoordinateSize = std::move(CoordinateSize);
	Parms.Rotation = Rotation;
	Parms.PivotPoint = std::move(PivotPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.EndDrawCanvasToRenderTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDrawToRenderTargetContext_JunoLandscapeContext                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::EndDrawCanvasToRenderTarget(const struct FDrawToRenderTargetContext_JunoLandscape& Context)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EndDrawCanvasToRenderTarget");

	Params::JunoLandscapeRenderer_EndDrawCanvasToRenderTarget Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.FindOrCreateNamedRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextureRenderTargetFormat              Format                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeRenderTarget*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJunoLandscapeRenderTarget* UJunoLandscapeRenderer::FindOrCreateNamedRenderTarget(class FName Name_0, ETextureRenderTargetFormat Format)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FindOrCreateNamedRenderTarget");

	Params::JunoLandscapeRenderer_FindOrCreateNamedRenderTarget Parms{};

	Parms.Name_0 = Name_0;
	Parms.Format = Format;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.SetLandscapeMaterialScalarParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::SetLandscapeMaterialScalarParameterValue(class FName ParameterName, float Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetLandscapeMaterialScalarParameterValue");

	Params::JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.SetLandscapeMaterialTextureParameterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJunoLandscapeRenderTarget*       Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::SetLandscapeMaterialTextureParameterValue(class FName ParameterName, class UJunoLandscapeRenderTarget* Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetLandscapeMaterialTextureParameterValue");

	Params::JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.SetLandscapeMaterialVectorParameterValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeRenderer::SetLandscapeMaterialVectorParameterValue(class FName ParameterName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetLandscapeMaterialVectorParameterValue");

	Params::JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.CalculateRenderArea
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        HalfExtents                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox2D UJunoLandscapeRenderer::CalculateRenderArea(const struct FTransform& Transform, const struct FVector2D& HalfExtents) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CalculateRenderArea");

	Params::JunoLandscapeRenderer_CalculateRenderArea Parms{};

	Parms.Transform = std::move(Transform);
	Parms.HalfExtents = std::move(HalfExtents);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.GetOutputHeightmapRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UJunoLandscapeRenderTarget*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJunoLandscapeRenderTarget* UJunoLandscapeRenderer::GetOutputHeightmapRenderTarget() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOutputHeightmapRenderTarget");

	Params::JunoLandscapeRenderer_GetOutputHeightmapRenderTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeRenderer.GetUVWorldTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector4                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4 UJunoLandscapeRenderer::GetUVWorldTransform() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUVWorldTransform");

	Params::JunoLandscapeRenderer_GetUVWorldTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeCanvas.GetNameReplacement
// (Final, Native, Static, Public)
// Parameters:
// class FName                             NameIn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UJunoLandscapeCanvas::GetNameReplacement(class FName NameIn)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetNameReplacement");

	Params::JunoLandscapeCanvas_GetNameReplacement Parms{};

	Parms.NameIn = NameIn;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoProceduralLandscape.JunoLandscapeCanvas.DrawMaterial
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UJunoLandscapeMaterial*           RenderMaterial                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CoordinatePosition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CoordinateSize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoLandscapeCanvas::DrawMaterial(class UJunoLandscapeMaterial* RenderMaterial, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, float Rotation, const struct FVector2D& PivotPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawMaterial");

	Params::JunoLandscapeCanvas_DrawMaterial Parms{};

	Parms.RenderMaterial = RenderMaterial;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.ScreenSize = std::move(ScreenSize);
	Parms.CoordinatePosition = std::move(CoordinatePosition);
	Parms.CoordinateSize = std::move(CoordinateSize);
	Parms.Rotation = Rotation;
	Parms.PivotPoint = std::move(PivotPoint);

	UObject::ProcessEvent(Func, &Parms);
}

}

