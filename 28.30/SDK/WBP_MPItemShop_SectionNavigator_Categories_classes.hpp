#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_SectionNavigator_Categories

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "WBP_UIKit_Tabs_Categories_Base_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MPItemShop_SectionNavigator_Categories.WBP_MPItemShop_SectionNavigator_Categories_C
// 0x0030 (0x07B0 - 0x0780)
class UWBP_MPItemShop_SectionNavigator_Categories_C final : public UWBP_UIKit_Tabs_Categories_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_MPItemShop_SectionNavigator_Categories_C; // 0x0778(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAthenaScrollBox*                       ScrollBox_Tabs;                                    // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Scroll;                                       // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsCollapsed;                                       // 0x0798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDescendantScrollDestination                  ScrollDestinationMouse;                            // 0x0799(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79A[0x2];                                      // 0x079A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollPaddingMouse;                                // 0x079C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDescendantScrollDestination                  ScrollDestinationGamepad;                          // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollPaddingGamepad;                              // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CollapseOthers(class FName ExceptCategoryID);
	void Event_OnCategoryExpandedStateChanged(class FName CategoryID, bool IsExpanded);
	void Event_OnCategoryTabSelected(class FName CategoryID, class FName TabID, class UUIKitTabGroupButtonViewModel* TabVM);
	void Event_OnTabSelected(class FName TabID);
	void ExecuteUbergraph_WBP_MPItemShop_SectionNavigator_Categories(int32 EntryPoint);
	void ExpandCategory(class FName CategoryID);
	void HandleCategoryClick(class FName CategoryID);
	void InjectScrollBox();
	void PreConstruct(bool IsDesignTime);
	void RefreshScrollBoxContentStyle();
	void ScrollToWidget(class UWidget* Widget, bool IsDelayed);
	void SetIsCollapsed(bool IsCollapsed_0);
	void SetTabButtonCollapsedState(class UWBP_UIKit_Button_Tab_Collapsible_Base_C* Button, bool ShouldCollapse);
	void SetupTabButton(class FName Tab_ID, class UCommonButtonBase* CreatedButtonReference);

	void GetIsCollapsed(bool* IsCollapsed_0) const;
	bool ShouldDisplaySelectionOnCollapsedCategory() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MPItemShop_SectionNavigator_Categories_C">();
	}
	static class UWBP_MPItemShop_SectionNavigator_Categories_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MPItemShop_SectionNavigator_Categories_C>();
	}
};
static_assert(alignof(UWBP_MPItemShop_SectionNavigator_Categories_C) == 0x000010, "Wrong alignment on UWBP_MPItemShop_SectionNavigator_Categories_C");
static_assert(sizeof(UWBP_MPItemShop_SectionNavigator_Categories_C) == 0x0007B0, "Wrong size on UWBP_MPItemShop_SectionNavigator_Categories_C");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, UberGraphFrame_WBP_MPItemShop_SectionNavigator_Categories_C) == 0x000778, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::UberGraphFrame_WBP_MPItemShop_SectionNavigator_Categories_C' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, ScrollBox_Tabs) == 0x000780, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::ScrollBox_Tabs' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, SizeBox) == 0x000788, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, Slot_Scroll) == 0x000790, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::Slot_Scroll' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, IsCollapsed) == 0x000798, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::IsCollapsed' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, ScrollDestinationMouse) == 0x000799, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::ScrollDestinationMouse' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, ScrollPaddingMouse) == 0x00079C, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::ScrollPaddingMouse' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, ScrollDestinationGamepad) == 0x0007A0, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::ScrollDestinationGamepad' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_SectionNavigator_Categories_C, ScrollPaddingGamepad) == 0x0007A4, "Member 'UWBP_MPItemShop_SectionNavigator_Categories_C::ScrollPaddingGamepad' has a wrong offset!");

}

