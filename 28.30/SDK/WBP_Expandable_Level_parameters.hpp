#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Expandable_Level

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.BP_OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Expandable_Level_C_BP_OnInputMethodChanged final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Level_C_BP_OnInputMethodChanged) == 0x000001, "Wrong alignment on WBP_Expandable_Level_C_BP_OnInputMethodChanged");
static_assert(sizeof(WBP_Expandable_Level_C_BP_OnInputMethodChanged) == 0x000001, "Wrong size on WBP_Expandable_Level_C_BP_OnInputMethodChanged");
static_assert(offsetof(WBP_Expandable_Level_C_BP_OnInputMethodChanged, CurrentInputType) == 0x000000, "Member 'WBP_Expandable_Level_C_BP_OnInputMethodChanged::CurrentInputType' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.ExecuteUbergraph_WBP_Expandable_Level
// 0x0018 (0x0018 - 0x0000)
struct WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Event_CurrentInputType;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortMcpProfileAthena*                  CallFunc_GetAthenaProfile_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level");
static_assert(sizeof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level) == 0x000018, "Wrong size on WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level");
static_assert(offsetof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level, EntryPoint) == 0x000000, "Member 'WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level, CallFunc_IsMobileGame_ReturnValue) == 0x000004, "Member 'WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level, K2Node_Event_CurrentInputType) == 0x000005, "Member 'WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level::K2Node_Event_CurrentInputType' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level, CallFunc_GetAthenaProfile_ReturnValue) == 0x000010, "Member 'WBP_Expandable_Level_C_ExecuteUbergraph_WBP_Expandable_Level::CallFunc_GetAthenaProfile_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.SetFortPassLevelViewModel
// 0x0028 (0x0028 - 0x0000)
struct WBP_Expandable_Level_C_SetFortPassLevelViewModel final
{
public:
	class UFortPassLevelViewModel*                ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Level_C_SetFortPassLevelViewModel) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C_SetFortPassLevelViewModel");
static_assert(sizeof(WBP_Expandable_Level_C_SetFortPassLevelViewModel) == 0x000028, "Wrong size on WBP_Expandable_Level_C_SetFortPassLevelViewModel");
static_assert(offsetof(WBP_Expandable_Level_C_SetFortPassLevelViewModel, ViewModel) == 0x000000, "Member 'WBP_Expandable_Level_C_SetFortPassLevelViewModel::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_SetFortPassLevelViewModel, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Level_C_SetFortPassLevelViewModel::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_SetFortPassLevelViewModel, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_Expandable_Level_C_SetFortPassLevelViewModel::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_SetFortPassLevelViewModel, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_Expandable_Level_C_SetFortPassLevelViewModel::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.SetLevelCircleProgress
// 0x0018 (0x0018 - 0x0000)
struct WBP_Expandable_Level_C_SetLevelCircleProgress final
{
public:
	double                                        XPProgress;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Level_C_SetLevelCircleProgress) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C_SetLevelCircleProgress");
static_assert(sizeof(WBP_Expandable_Level_C_SetLevelCircleProgress) == 0x000018, "Wrong size on WBP_Expandable_Level_C_SetLevelCircleProgress");
static_assert(offsetof(WBP_Expandable_Level_C_SetLevelCircleProgress, XPProgress) == 0x000000, "Member 'WBP_Expandable_Level_C_SetLevelCircleProgress::XPProgress' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_SetLevelCircleProgress, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Level_C_SetLevelCircleProgress::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_SetLevelCircleProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_Expandable_Level_C_SetLevelCircleProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.__1c8202ec-4eca-8d23-4efe-e8a2531506f0_SourceToDest
// 0x0030 (0x0030 - 0x0000)
struct WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest final
{
public:
	class FText                                   RemainingXP;                                       // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_RemainingXP_RemainingXP;                  // 0x0018(0x0018)()
};
static_assert(alignof(WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest");
static_assert(sizeof(WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest) == 0x000030, "Wrong size on WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest");
static_assert(offsetof(WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest, RemainingXP) == 0x000000, "Member 'WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest::RemainingXP' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest, CallFunc_RemainingXP_RemainingXP) == 0x000018, "Member 'WBP_Expandable_Level_C___1c8202ec_4eca_8d23_4efe_e8a2531506f0_SourceToDest::CallFunc_RemainingXP_RemainingXP' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.__1eeaf5a8-4db5-3f28-a106-9ea69cae3560_SourceToDest
// 0x0030 (0x0030 - 0x0000)
struct WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest");
static_assert(sizeof(WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest) == 0x000030, "Wrong size on WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest");
static_assert(offsetof(WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_Expandable_Level_C___1eeaf5a8_4db5_3f28_a106_9ea69cae3560_SourceToDest::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.__77da8daf-4852-cb93-27ce-cbb33b3ed865_SourceToDest
// 0x0030 (0x0030 - 0x0000)
struct WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest");
static_assert(sizeof(WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest) == 0x000030, "Wrong size on WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest");
static_assert(offsetof(WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_Expandable_Level_C___77da8daf_4852_cb93_27ce_cbb33b3ed865_SourceToDest::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.__9c7cb99d-4a57-4531-f37e-edadfa5cc878_SourceToDest
// 0x0010 (0x0010 - 0x0000)
struct WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest final
{
public:
	double                                        ProgressXP;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProgressXP_ProgressXP;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest");
static_assert(sizeof(WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest) == 0x000010, "Wrong size on WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest");
static_assert(offsetof(WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest, ProgressXP) == 0x000000, "Member 'WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest::ProgressXP' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest, CallFunc_ProgressXP_ProgressXP) == 0x000008, "Member 'WBP_Expandable_Level_C___9c7cb99d_4a57_4531_f37e_edadfa5cc878_SourceToDest::CallFunc_ProgressXP_ProgressXP' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.ProgressXP
// 0x0028 (0x0028 - 0x0000)
struct WBP_Expandable_Level_C_ProgressXP final
{
public:
	int32                                         CurrentXP;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XpToNextLevel;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProgressXP_0;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Level_C_ProgressXP) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C_ProgressXP");
static_assert(sizeof(WBP_Expandable_Level_C_ProgressXP) == 0x000028, "Wrong size on WBP_Expandable_Level_C_ProgressXP");
static_assert(offsetof(WBP_Expandable_Level_C_ProgressXP, CurrentXP) == 0x000000, "Member 'WBP_Expandable_Level_C_ProgressXP::CurrentXP' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ProgressXP, XpToNextLevel) == 0x000004, "Member 'WBP_Expandable_Level_C_ProgressXP::XpToNextLevel' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ProgressXP, ProgressXP_0) == 0x000008, "Member 'WBP_Expandable_Level_C_ProgressXP::ProgressXP_0' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ProgressXP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'WBP_Expandable_Level_C_ProgressXP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ProgressXP, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'WBP_Expandable_Level_C_ProgressXP::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_ProgressXP, CallFunc_SafeDivide_ReturnValue) == 0x000020, "Member 'WBP_Expandable_Level_C_ProgressXP::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Level.WBP_Expandable_Level_C.RemainingXP
// 0x0040 (0x0040 - 0x0000)
struct WBP_Expandable_Level_C_RemainingXP final
{
public:
	int32                                         XpToNextLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXP;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   RemainingXP_0;                                     // 0x0008(0x0018)(Parm, OutParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
};
static_assert(alignof(WBP_Expandable_Level_C_RemainingXP) == 0x000008, "Wrong alignment on WBP_Expandable_Level_C_RemainingXP");
static_assert(sizeof(WBP_Expandable_Level_C_RemainingXP) == 0x000040, "Wrong size on WBP_Expandable_Level_C_RemainingXP");
static_assert(offsetof(WBP_Expandable_Level_C_RemainingXP, XpToNextLevel) == 0x000000, "Member 'WBP_Expandable_Level_C_RemainingXP::XpToNextLevel' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_RemainingXP, CurrentXP) == 0x000004, "Member 'WBP_Expandable_Level_C_RemainingXP::CurrentXP' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_RemainingXP, RemainingXP_0) == 0x000008, "Member 'WBP_Expandable_Level_C_RemainingXP::RemainingXP_0' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_RemainingXP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Expandable_Level_C_RemainingXP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Level_C_RemainingXP, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_Expandable_Level_C_RemainingXP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

