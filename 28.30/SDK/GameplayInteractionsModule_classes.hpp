#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayInteractionsModule

#include "Basic.hpp"

#include "StateTreeModule_structs.hpp"
#include "StateTreeModule_classes.hpp"
#include "SmartObjectsModule_structs.hpp"
#include "SmartObjectsModule_classes.hpp"
#include "ContextualAnimation_structs.hpp"
#include "GameplayInteractionsModule_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// Class GameplayInteractionsModule.GameplayInteractionSmartObjectBehaviorDefinition
// 0x0018 (0x0040 - 0x0028)
class UGameplayInteractionSmartObjectBehaviorDefinition : public USmartObjectBehaviorDefinition
{
public:
	struct FStateTreeReference                    StateTreeReference;                                // 0x0028(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayInteractionSmartObjectBehaviorDefinition">();
	}
	static class UGameplayInteractionSmartObjectBehaviorDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayInteractionSmartObjectBehaviorDefinition>();
	}
};
static_assert(alignof(UGameplayInteractionSmartObjectBehaviorDefinition) == 0x000008, "Wrong alignment on UGameplayInteractionSmartObjectBehaviorDefinition");
static_assert(sizeof(UGameplayInteractionSmartObjectBehaviorDefinition) == 0x000040, "Wrong size on UGameplayInteractionSmartObjectBehaviorDefinition");
static_assert(offsetof(UGameplayInteractionSmartObjectBehaviorDefinition, StateTreeReference) == 0x000028, "Member 'UGameplayInteractionSmartObjectBehaviorDefinition::StateTreeReference' has a wrong offset!");

// Class GameplayInteractionsModule.AITask_UseGameplayInteraction
// 0x00D8 (0x0140 - 0x0068)
class UAITask_UseGameplayInteraction final : public UAITask
{
public:
	TMulticastInlineDelegate<void()>              OnFinished;                                        // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnSucceeded;                                       // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnFailed;                                          // 0x0088(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnMoveToFailed;                                    // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FGameplayInteractionContext            GameplayInteractionContext;                        // 0x00A8(0x0068)(Protected, NativeAccessSpecifierProtected)
	class UAITask_MoveTo*                         MoveToTask;                                        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSmartObjectClaimHandle                ClaimedHandle;                                     // 0x0118(0x0020)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayInteractionAbortContext       AbortContext;                                      // 0x0138(0x0001)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAITask_UseGameplayInteraction* MoveToAndUseSmartObjectWithGameplayInteraction(class AAIController* Controller, const struct FSmartObjectClaimHandle& ClaimHandle, bool bLockAILogic);
	static class UAITask_UseGameplayInteraction* UseSmartObjectWithGameplayInteraction(class AAIController* Controller, const struct FSmartObjectClaimHandle& ClaimHandle, bool bLockAILogic);

	void RequestAbort();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AITask_UseGameplayInteraction">();
	}
	static class UAITask_UseGameplayInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAITask_UseGameplayInteraction>();
	}
};
static_assert(alignof(UAITask_UseGameplayInteraction) == 0x000008, "Wrong alignment on UAITask_UseGameplayInteraction");
static_assert(sizeof(UAITask_UseGameplayInteraction) == 0x000140, "Wrong size on UAITask_UseGameplayInteraction");
static_assert(offsetof(UAITask_UseGameplayInteraction, OnFinished) == 0x000068, "Member 'UAITask_UseGameplayInteraction::OnFinished' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, OnSucceeded) == 0x000078, "Member 'UAITask_UseGameplayInteraction::OnSucceeded' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, OnFailed) == 0x000088, "Member 'UAITask_UseGameplayInteraction::OnFailed' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, OnMoveToFailed) == 0x000098, "Member 'UAITask_UseGameplayInteraction::OnMoveToFailed' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, GameplayInteractionContext) == 0x0000A8, "Member 'UAITask_UseGameplayInteraction::GameplayInteractionContext' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, MoveToTask) == 0x000110, "Member 'UAITask_UseGameplayInteraction::MoveToTask' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, ClaimedHandle) == 0x000118, "Member 'UAITask_UseGameplayInteraction::ClaimedHandle' has a wrong offset!");
static_assert(offsetof(UAITask_UseGameplayInteraction, AbortContext) == 0x000138, "Member 'UAITask_UseGameplayInteraction::AbortContext' has a wrong offset!");

// Class GameplayInteractionsModule.GameplayInteractionStateTreeSchema
// 0x0020 (0x0048 - 0x0028)
class UGameplayInteractionStateTreeSchema final : public UStateTreeSchema
{
public:
	TSubclassOf<class AActor>                     ContextActorClass;                                 // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     SmartObjectActorClass;                             // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FStateTreeExternalDataDesc>     ContextDataDescs;                                  // 0x0038(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayInteractionStateTreeSchema">();
	}
	static class UGameplayInteractionStateTreeSchema* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayInteractionStateTreeSchema>();
	}
};
static_assert(alignof(UGameplayInteractionStateTreeSchema) == 0x000008, "Wrong alignment on UGameplayInteractionStateTreeSchema");
static_assert(sizeof(UGameplayInteractionStateTreeSchema) == 0x000048, "Wrong size on UGameplayInteractionStateTreeSchema");
static_assert(offsetof(UGameplayInteractionStateTreeSchema, ContextActorClass) == 0x000028, "Member 'UGameplayInteractionStateTreeSchema::ContextActorClass' has a wrong offset!");
static_assert(offsetof(UGameplayInteractionStateTreeSchema, SmartObjectActorClass) == 0x000030, "Member 'UGameplayInteractionStateTreeSchema::SmartObjectActorClass' has a wrong offset!");
static_assert(offsetof(UGameplayInteractionStateTreeSchema, ContextDataDescs) == 0x000038, "Member 'UGameplayInteractionStateTreeSchema::ContextDataDescs' has a wrong offset!");

// Class GameplayInteractionsModule.StateTreeTask_PlayContextualAnim_InstanceData
// 0x0078 (0x00A0 - 0x0028)
class UStateTreeTask_PlayContextualAnim_InstanceData final : public UObject
{
public:
	class AActor*                                 PrimaryActor;                                      // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SecondaryActor;                                    // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SecondaryRole;                                     // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TertiaryActor;                                     // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TertiaryRole;                                      // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UContextualAnimSceneAsset*              SceneAsset;                                        // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SectionName;                                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlayContextualAnimExecutionMethod            ExecutionMethod;                                   // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForNotifyEventToEnd;                          // 0x005D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NotifyEventNameToEnd;                              // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoopsToRun;                                        // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoopForever;                                      // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayBetweenLoops;                                 // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomDeviationBetweenLoops;                       // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContextualAnimWarpTarget>      WarpTargets;                                       // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x18];                                      // 0x0088(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMontageEnded(const class UAnimMontage* EndedMontage, const bool bInterrupted);
	void OnNotifyBeginReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StateTreeTask_PlayContextualAnim_InstanceData">();
	}
	static class UStateTreeTask_PlayContextualAnim_InstanceData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStateTreeTask_PlayContextualAnim_InstanceData>();
	}
};
static_assert(alignof(UStateTreeTask_PlayContextualAnim_InstanceData) == 0x000008, "Wrong alignment on UStateTreeTask_PlayContextualAnim_InstanceData");
static_assert(sizeof(UStateTreeTask_PlayContextualAnim_InstanceData) == 0x0000A0, "Wrong size on UStateTreeTask_PlayContextualAnim_InstanceData");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, PrimaryActor) == 0x000028, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::PrimaryActor' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, SecondaryActor) == 0x000030, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::SecondaryActor' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, SecondaryRole) == 0x000038, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::SecondaryRole' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, TertiaryActor) == 0x000040, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::TertiaryActor' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, TertiaryRole) == 0x000048, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::TertiaryRole' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, SceneAsset) == 0x000050, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::SceneAsset' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, SectionName) == 0x000058, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::SectionName' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, ExecutionMethod) == 0x00005C, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::ExecutionMethod' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, bWaitForNotifyEventToEnd) == 0x00005D, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::bWaitForNotifyEventToEnd' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, NotifyEventNameToEnd) == 0x000060, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::NotifyEventNameToEnd' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, LoopsToRun) == 0x000064, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::LoopsToRun' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, bLoopForever) == 0x000068, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::bLoopForever' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, DelayBetweenLoops) == 0x00006C, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::DelayBetweenLoops' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, RandomDeviationBetweenLoops) == 0x000070, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::RandomDeviationBetweenLoops' has a wrong offset!");
static_assert(offsetof(UStateTreeTask_PlayContextualAnim_InstanceData, WarpTargets) == 0x000078, "Member 'UStateTreeTask_PlayContextualAnim_InstanceData::WarpTargets' has a wrong offset!");

}

