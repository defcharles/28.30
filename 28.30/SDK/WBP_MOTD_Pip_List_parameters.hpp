#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MOTD_Pip_List

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_MOTD_Pip_List.WBP_MOTD_Pip_List_C.PauseActivePip
// 0x0001 (0x0001 - 0x0000)
struct WBP_MOTD_Pip_List_C_PauseActivePip final
{
public:
	bool                                          Is_Paused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_List_C_PauseActivePip) == 0x000001, "Wrong alignment on WBP_MOTD_Pip_List_C_PauseActivePip");
static_assert(sizeof(WBP_MOTD_Pip_List_C_PauseActivePip) == 0x000001, "Wrong size on WBP_MOTD_Pip_List_C_PauseActivePip");
static_assert(offsetof(WBP_MOTD_Pip_List_C_PauseActivePip, Is_Paused) == 0x000000, "Member 'WBP_MOTD_Pip_List_C_PauseActivePip::Is_Paused' has a wrong offset!");

// Function WBP_MOTD_Pip_List.WBP_MOTD_Pip_List_C.SetActivePip
// 0x0010 (0x0010 - 0x0000)
struct WBP_MOTD_Pip_List_C_SetActivePip final
{
public:
	int32                                         Param_Index_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MOTD_Pip_Entry_C*                  CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_List_C_SetActivePip) == 0x000008, "Wrong alignment on WBP_MOTD_Pip_List_C_SetActivePip");
static_assert(sizeof(WBP_MOTD_Pip_List_C_SetActivePip) == 0x000010, "Wrong size on WBP_MOTD_Pip_List_C_SetActivePip");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetActivePip, Param_Index_0) == 0x000000, "Member 'WBP_MOTD_Pip_List_C_SetActivePip::Param_Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetActivePip, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_MOTD_Pip_List_C_SetActivePip::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_MOTD_Pip_List.WBP_MOTD_Pip_List_C.SetPipsCount
// 0x0048 (0x0048 - 0x0000)
struct WBP_MOTD_Pip_List_C_SetPipsCount final
{
public:
	int32                                         Count_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration_Value_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Anim_Pip_0;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Progress_0;                                   // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MOTD_Pip_Entry_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_BP_CreateEntry_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MOTD_Pip_Entry_C*                  K2Node_DynamicCast_AsWBP_MOTD_Pip_Entry;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_List_C_SetPipsCount) == 0x000008, "Wrong alignment on WBP_MOTD_Pip_List_C_SetPipsCount");
static_assert(sizeof(WBP_MOTD_Pip_List_C_SetPipsCount) == 0x000048, "Wrong size on WBP_MOTD_Pip_List_C_SetPipsCount");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, Count_0) == 0x000000, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::Count_0' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, Duration_Value_0) == 0x000008, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::Duration_Value_0' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, Anim_Pip_0) == 0x000010, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::Anim_Pip_0' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, Show_Progress_0) == 0x000011, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::Show_Progress_0' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, Temp_int_Variable) == 0x000018, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, CallFunc_BP_CreateEntry_ReturnValue) == 0x000030, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::CallFunc_BP_CreateEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, K2Node_DynamicCast_AsWBP_MOTD_Pip_Entry) == 0x000038, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::K2Node_DynamicCast_AsWBP_MOTD_Pip_Entry' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_List_C_SetPipsCount, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'WBP_MOTD_Pip_List_C_SetPipsCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

