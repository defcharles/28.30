#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RebootCardIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function RebootCardIndicator.RebootCardIndicator_C.bp_UpdateCountdownText
// 0x00A0 (0x00A0 - 0x0000)
struct RebootCardIndicator_C_bp_UpdateCountdownText final
{
public:
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(RebootCardIndicator_C_bp_UpdateCountdownText) == 0x000008, "Wrong alignment on RebootCardIndicator_C_bp_UpdateCountdownText");
static_assert(sizeof(RebootCardIndicator_C_bp_UpdateCountdownText) == 0x0000A0, "Wrong size on RebootCardIndicator_C_bp_UpdateCountdownText");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000000, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, CallFunc_Max_ReturnValue) == 0x00000C, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, K2Node_MakeArray_Array) == 0x000078, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_bp_UpdateCountdownText, CallFunc_Format_ReturnValue) == 0x000088, "Member 'RebootCardIndicator_C_bp_UpdateCountdownText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function RebootCardIndicator.RebootCardIndicator_C.ExecuteUbergraph_RebootCardIndicator
// 0x000C (0x000C - 0x0000)
struct RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelf;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator) == 0x000004, "Wrong alignment on RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator");
static_assert(sizeof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator) == 0x00000C, "Wrong size on RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator");
static_assert(offsetof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator, EntryPoint) == 0x000000, "Member 'RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator, Temp_bool_Variable) == 0x000004, "Member 'RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator, Temp_byte_Variable) == 0x000005, "Member 'RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator, Temp_byte_Variable_1) == 0x000006, "Member 'RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator, K2Node_Event_bSelf) == 0x000007, "Member 'RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator::K2Node_Event_bSelf' has a wrong offset!");
static_assert(offsetof(RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator, K2Node_Select_Default) == 0x000008, "Member 'RebootCardIndicator_C_ExecuteUbergraph_RebootCardIndicator::K2Node_Select_Default' has a wrong offset!");

// Function RebootCardIndicator.RebootCardIndicator_C.HandleDisplayForSelf
// 0x0001 (0x0001 - 0x0000)
struct RebootCardIndicator_C_HandleDisplayForSelf final
{
public:
	bool                                          bSelf;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RebootCardIndicator_C_HandleDisplayForSelf) == 0x000001, "Wrong alignment on RebootCardIndicator_C_HandleDisplayForSelf");
static_assert(sizeof(RebootCardIndicator_C_HandleDisplayForSelf) == 0x000001, "Wrong size on RebootCardIndicator_C_HandleDisplayForSelf");
static_assert(offsetof(RebootCardIndicator_C_HandleDisplayForSelf, bSelf) == 0x000000, "Member 'RebootCardIndicator_C_HandleDisplayForSelf::bSelf' has a wrong offset!");

}

