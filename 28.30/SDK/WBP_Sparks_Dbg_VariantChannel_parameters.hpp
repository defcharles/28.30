#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Sparks_Dbg_VariantChannel

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Sparks_Dbg_VariantChannel.WBP_Sparks_Dbg_VariantChannel_C.BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'WBP_Sparks_Dbg_VariantChannel_C_BndEvt__WBP_Sparks_Dbg_VariantChannel_cb_ItemList_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function WBP_Sparks_Dbg_VariantChannel.WBP_Sparks_Dbg_VariantChannel_C.ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel
// 0x0020 (0x0020 - 0x0000)
struct WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel) == 0x000008, "Wrong alignment on WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel");
static_assert(sizeof(WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel) == 0x000020, "Wrong size on WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel, EntryPoint) == 0x000000, "Member 'WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel, K2Node_ComponentBoundEvent_SelectedItem) == 0x000008, "Member 'WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel, K2Node_ComponentBoundEvent_SelectionType) == 0x000018, "Member 'WBP_Sparks_Dbg_VariantChannel_C_ExecuteUbergraph_WBP_Sparks_Dbg_VariantChannel::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");

// Function WBP_Sparks_Dbg_VariantChannel.WBP_Sparks_Dbg_VariantChannel_C.SetNameAndChannels
// 0x0058 (0x0058 - 0x0000)
struct WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Channel_Name;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class FString>                         Options;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels) == 0x000008, "Wrong alignment on WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels");
static_assert(sizeof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels) == 0x000058, "Wrong size on WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, tag) == 0x000000, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::tag' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, Channel_Name) == 0x000008, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::Channel_Name' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, Options) == 0x000020, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::Options' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetNameAndChannels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Sparks_Dbg_VariantChannel.WBP_Sparks_Dbg_VariantChannel_C.SetSelection
// 0x0018 (0x0018 - 0x0000)
struct WBP_Sparks_Dbg_VariantChannel_C_SetSelection final
{
public:
	class FString                                 Choice;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sparks_Dbg_VariantChannel_C_SetSelection) == 0x000008, "Wrong alignment on WBP_Sparks_Dbg_VariantChannel_C_SetSelection");
static_assert(sizeof(WBP_Sparks_Dbg_VariantChannel_C_SetSelection) == 0x000018, "Wrong size on WBP_Sparks_Dbg_VariantChannel_C_SetSelection");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetSelection, Choice) == 0x000000, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetSelection::Choice' has a wrong offset!");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_SetSelection, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'WBP_Sparks_Dbg_VariantChannel_C_SetSelection::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_Sparks_Dbg_VariantChannel.WBP_Sparks_Dbg_VariantChannel_C.ShouldSendUpdates
// 0x0001 (0x0001 - 0x0000)
struct WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates final
{
public:
	bool                                          ShouldSend;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates) == 0x000001, "Wrong alignment on WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates");
static_assert(sizeof(WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates) == 0x000001, "Wrong size on WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates");
static_assert(offsetof(WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates, ShouldSend) == 0x000000, "Member 'WBP_Sparks_Dbg_VariantChannel_C_ShouldSendUpdates::ShouldSend' has a wrong offset!");

}

