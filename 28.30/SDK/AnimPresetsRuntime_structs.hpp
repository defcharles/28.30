#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimPresetsRuntime

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct AnimPresetsRuntime.AnimPresetRetargetData
// 0x0040 (0x0040 - 0x0000)
struct FAnimPresetRetargetData final
{
public:
	TSoftObjectPtr<class UIKRetargeter>           IKRetargeter;                                      // 0x0000(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           SourceSkeletalMesh;                                // 0x0020(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAnimPresetRetargetData) == 0x000008, "Wrong alignment on FAnimPresetRetargetData");
static_assert(sizeof(FAnimPresetRetargetData) == 0x000040, "Wrong size on FAnimPresetRetargetData");
static_assert(offsetof(FAnimPresetRetargetData, IKRetargeter) == 0x000000, "Member 'FAnimPresetRetargetData::IKRetargeter' has a wrong offset!");
static_assert(offsetof(FAnimPresetRetargetData, SourceSkeletalMesh) == 0x000020, "Member 'FAnimPresetRetargetData::SourceSkeletalMesh' has a wrong offset!");

// ScriptStruct AnimPresetsRuntime.AnimPreset_SingleAnimationData
// 0x0010 (0x0010 - 0x0000)
struct FAnimPreset_SingleAnimationData final
{
public:
	class UAnimSequence*                          Animation;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimPreset_SingleAnimationData) == 0x000008, "Wrong alignment on FAnimPreset_SingleAnimationData");
static_assert(sizeof(FAnimPreset_SingleAnimationData) == 0x000010, "Wrong size on FAnimPreset_SingleAnimationData");
static_assert(offsetof(FAnimPreset_SingleAnimationData, Animation) == 0x000000, "Member 'FAnimPreset_SingleAnimationData::Animation' has a wrong offset!");
static_assert(offsetof(FAnimPreset_SingleAnimationData, PlayRate) == 0x000008, "Member 'FAnimPreset_SingleAnimationData::PlayRate' has a wrong offset!");

}

