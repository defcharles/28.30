#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_STI_ItemTile

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_STI_ItemTile.WBP_STI_ItemTile_C.ExecuteUbergraph_WBP_STI_ItemTile
// 0x0020 (0x0020 - 0x0000)
struct WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortTemporaryItemsRewardVM*            K2Node_DynamicCast_AsFort_Temporary_Items_Reward_VM; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile) == 0x000008, "Wrong alignment on WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile");
static_assert(sizeof(WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile) == 0x000020, "Wrong size on WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile");
static_assert(offsetof(WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile, EntryPoint) == 0x000000, "Member 'WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile, K2Node_Event_ListItemObject) == 0x000008, "Member 'WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile, K2Node_DynamicCast_AsFort_Temporary_Items_Reward_VM) == 0x000010, "Member 'WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile::K2Node_DynamicCast_AsFort_Temporary_Items_Reward_VM' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_STI_ItemTile_C_ExecuteUbergraph_WBP_STI_ItemTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_STI_ItemTile.WBP_STI_ItemTile_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_STI_ItemTile_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTile_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_STI_ItemTile_C_OnListItemObjectSet");
static_assert(sizeof(WBP_STI_ItemTile_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_STI_ItemTile_C_OnListItemObjectSet");
static_assert(offsetof(WBP_STI_ItemTile_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_STI_ItemTile_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_STI_ItemTile.WBP_STI_ItemTile_C.OnUpdateItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct WBP_STI_ItemTile_C_OnUpdateItemDefinition final
{
public:
	class UFortAccountItemDefinition*             ItemDefinition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTile_C_OnUpdateItemDefinition) == 0x000008, "Wrong alignment on WBP_STI_ItemTile_C_OnUpdateItemDefinition");
static_assert(sizeof(WBP_STI_ItemTile_C_OnUpdateItemDefinition) == 0x000008, "Wrong size on WBP_STI_ItemTile_C_OnUpdateItemDefinition");
static_assert(offsetof(WBP_STI_ItemTile_C_OnUpdateItemDefinition, ItemDefinition) == 0x000000, "Member 'WBP_STI_ItemTile_C_OnUpdateItemDefinition::ItemDefinition' has a wrong offset!");

// Function WBP_STI_ItemTile.WBP_STI_ItemTile_C.SetFortTemporaryItemsRewardVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM final
{
public:
	class UFortTemporaryItemsRewardVM*            ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM) == 0x000008, "Wrong alignment on WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM");
static_assert(sizeof(WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM) == 0x000028, "Wrong size on WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM");
static_assert(offsetof(WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM, ViewModel) == 0x000000, "Member 'WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_STI_ItemTile_C_SetFortTemporaryItemsRewardVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_STI_ItemTile.WBP_STI_ItemTile_C.__165435a7-4697-bb8c-2070-b094cc36bfea_SourceToDest
// 0x0002 (0x0002 - 0x0000)
struct WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Conv_BoolToSlateVisibility_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest) == 0x000001, "Wrong alignment on WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest");
static_assert(sizeof(WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest) == 0x000002, "Wrong size on WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest");
static_assert(offsetof(WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest, CallFunc_Conv_BoolToSlateVisibility_ReturnValue) == 0x000001, "Member 'WBP_STI_ItemTile_C___165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest::CallFunc_Conv_BoolToSlateVisibility_ReturnValue' has a wrong offset!");

// Function WBP_STI_ItemTile.WBP_STI_ItemTile_C.__7f636a5e-40ff-98f5-e8a7-1a826bf9b26e_SourceToDest
// 0x0002 (0x0002 - 0x0000)
struct WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Conv_BoolToSlateVisibility_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest) == 0x000001, "Wrong alignment on WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest");
static_assert(sizeof(WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest) == 0x000002, "Wrong size on WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest");
static_assert(offsetof(WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest, CallFunc_Conv_BoolToSlateVisibility_ReturnValue) == 0x000001, "Member 'WBP_STI_ItemTile_C___7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest::CallFunc_Conv_BoolToSlateVisibility_ReturnValue' has a wrong offset!");

}

