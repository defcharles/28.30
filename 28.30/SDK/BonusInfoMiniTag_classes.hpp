#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BonusInfoMiniTag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BonusInfoMiniTag.BonusInfoMiniTag_C
// 0x0090 (0x0360 - 0x02D0)
class UBonusInfoMiniTag_C final : public UFortBonusInfoMiniTag
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       Festival_AlreadyOwned;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Festival_Includes;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Festival_MiniTagIcon;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Festival_SongName;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lego_AlreadyOwned;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lego_Includes;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMiniTagIcon_C*                         Lego_MiniTagIcon;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lego_OutfitName;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Rocket_Claimed;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMiniTagIcon_C*                         Rocket_MiniTagIcon;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Rocket_ToClaim;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              VisibilitySwitcher;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Claimed;                                           // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SwitcherIndex;                                     // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   RewardName;                                        // 0x0340(0x0018)(Edit, BlueprintVisible)
	class UTexture2D*                             LegoIcon2D;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BonusInfoMiniTag(int32 EntryPoint);
	void OnSetBonusInfo(const ECosmeticCompatibleMode& BonusInfoType, bool bClaimed, const class FText& Description, const class UTexture2D* PreviewTexture);
	void PreConstruct(bool IsDesignTime);
	void UpdateUI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BonusInfoMiniTag_C">();
	}
	static class UBonusInfoMiniTag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBonusInfoMiniTag_C>();
	}
};
static_assert(alignof(UBonusInfoMiniTag_C) == 0x000008, "Wrong alignment on UBonusInfoMiniTag_C");
static_assert(sizeof(UBonusInfoMiniTag_C) == 0x000360, "Wrong size on UBonusInfoMiniTag_C");
static_assert(offsetof(UBonusInfoMiniTag_C, UberGraphFrame) == 0x0002D0, "Member 'UBonusInfoMiniTag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Festival_AlreadyOwned) == 0x0002D8, "Member 'UBonusInfoMiniTag_C::Festival_AlreadyOwned' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Festival_Includes) == 0x0002E0, "Member 'UBonusInfoMiniTag_C::Festival_Includes' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Festival_MiniTagIcon) == 0x0002E8, "Member 'UBonusInfoMiniTag_C::Festival_MiniTagIcon' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Festival_SongName) == 0x0002F0, "Member 'UBonusInfoMiniTag_C::Festival_SongName' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Lego_AlreadyOwned) == 0x0002F8, "Member 'UBonusInfoMiniTag_C::Lego_AlreadyOwned' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Lego_Includes) == 0x000300, "Member 'UBonusInfoMiniTag_C::Lego_Includes' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Lego_MiniTagIcon) == 0x000308, "Member 'UBonusInfoMiniTag_C::Lego_MiniTagIcon' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Lego_OutfitName) == 0x000310, "Member 'UBonusInfoMiniTag_C::Lego_OutfitName' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Rocket_Claimed) == 0x000318, "Member 'UBonusInfoMiniTag_C::Rocket_Claimed' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Rocket_MiniTagIcon) == 0x000320, "Member 'UBonusInfoMiniTag_C::Rocket_MiniTagIcon' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Rocket_ToClaim) == 0x000328, "Member 'UBonusInfoMiniTag_C::Rocket_ToClaim' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, VisibilitySwitcher) == 0x000330, "Member 'UBonusInfoMiniTag_C::VisibilitySwitcher' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, Claimed) == 0x000338, "Member 'UBonusInfoMiniTag_C::Claimed' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, SwitcherIndex) == 0x00033C, "Member 'UBonusInfoMiniTag_C::SwitcherIndex' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, RewardName) == 0x000340, "Member 'UBonusInfoMiniTag_C::RewardName' has a wrong offset!");
static_assert(offsetof(UBonusInfoMiniTag_C, LegoIcon2D) == 0x000358, "Member 'UBonusInfoMiniTag_C::LegoIcon2D' has a wrong offset!");

}

