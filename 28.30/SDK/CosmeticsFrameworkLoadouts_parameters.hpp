#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmeticsFrameworkLoadouts

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CosmeticsFrameworkLoadouts_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSchema.GetTemplateId
// 0x0010 (0x0010 - 0x0000)
struct CosmeticLoadoutSchema_GetTemplateId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSchema_GetTemplateId) == 0x000008, "Wrong alignment on CosmeticLoadoutSchema_GetTemplateId");
static_assert(sizeof(CosmeticLoadoutSchema_GetTemplateId) == 0x000010, "Wrong size on CosmeticLoadoutSchema_GetTemplateId");
static_assert(offsetof(CosmeticLoadoutSchema_GetTemplateId, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSchema_GetTemplateId::ReturnValue' has a wrong offset!");

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSlotTemplate.GetAlwaysUseDefaultCosmeticItemId
// 0x0001 (0x0001 - 0x0000)
struct CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId) == 0x000001, "Wrong alignment on CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId");
static_assert(sizeof(CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId) == 0x000001, "Wrong size on CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId");
static_assert(offsetof(CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSlotTemplate_GetAlwaysUseDefaultCosmeticItemId::ReturnValue' has a wrong offset!");

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSlotTemplate.GetDefaultCosmeticItemId
// 0x0008 (0x0008 - 0x0000)
struct CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId final
{
public:
	struct FPrimaryAssetId                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId) == 0x000004, "Wrong alignment on CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId");
static_assert(sizeof(CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId) == 0x000008, "Wrong size on CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId");
static_assert(offsetof(CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSlotTemplate_GetDefaultCosmeticItemId::ReturnValue' has a wrong offset!");

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSlotTemplate.GetMetaTags
// 0x0020 (0x0020 - 0x0000)
struct CosmeticLoadoutSlotTemplate_GetMetaTags final
{
public:
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSlotTemplate_GetMetaTags) == 0x000008, "Wrong alignment on CosmeticLoadoutSlotTemplate_GetMetaTags");
static_assert(sizeof(CosmeticLoadoutSlotTemplate_GetMetaTags) == 0x000020, "Wrong size on CosmeticLoadoutSlotTemplate_GetMetaTags");
static_assert(offsetof(CosmeticLoadoutSlotTemplate_GetMetaTags, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSlotTemplate_GetMetaTags::ReturnValue' has a wrong offset!");

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSlotTemplate.GetRequirements
// 0x0050 (0x0050 - 0x0000)
struct CosmeticLoadoutSlotTemplate_GetRequirements final
{
public:
	struct FCosmeticLoadoutSlotRequirements       ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSlotTemplate_GetRequirements) == 0x000008, "Wrong alignment on CosmeticLoadoutSlotTemplate_GetRequirements");
static_assert(sizeof(CosmeticLoadoutSlotTemplate_GetRequirements) == 0x000050, "Wrong size on CosmeticLoadoutSlotTemplate_GetRequirements");
static_assert(offsetof(CosmeticLoadoutSlotTemplate_GetRequirements, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSlotTemplate_GetRequirements::ReturnValue' has a wrong offset!");

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSlotTemplate.GetShortName
// 0x0010 (0x0010 - 0x0000)
struct CosmeticLoadoutSlotTemplate_GetShortName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSlotTemplate_GetShortName) == 0x000008, "Wrong alignment on CosmeticLoadoutSlotTemplate_GetShortName");
static_assert(sizeof(CosmeticLoadoutSlotTemplate_GetShortName) == 0x000010, "Wrong size on CosmeticLoadoutSlotTemplate_GetShortName");
static_assert(offsetof(CosmeticLoadoutSlotTemplate_GetShortName, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSlotTemplate_GetShortName::ReturnValue' has a wrong offset!");

// Function CosmeticsFrameworkLoadouts.CosmeticLoadoutSlotTemplate.GetSlotTag
// 0x0004 (0x0004 - 0x0000)
struct CosmeticLoadoutSlotTemplate_GetSlotTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CosmeticLoadoutSlotTemplate_GetSlotTag) == 0x000004, "Wrong alignment on CosmeticLoadoutSlotTemplate_GetSlotTag");
static_assert(sizeof(CosmeticLoadoutSlotTemplate_GetSlotTag) == 0x000004, "Wrong size on CosmeticLoadoutSlotTemplate_GetSlotTag");
static_assert(offsetof(CosmeticLoadoutSlotTemplate_GetSlotTag, ReturnValue) == 0x000000, "Member 'CosmeticLoadoutSlotTemplate_GetSlotTag::ReturnValue' has a wrong offset!");

}

