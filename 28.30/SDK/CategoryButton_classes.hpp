#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CategoryButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CategoryButton.CategoryButton_C
// 0x00B0 (0x1540 - 0x1490)
class UCategoryButton_C final : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseWarningIcon;                                  // 0x1498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reset;                                             // 0x14A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Dim;                                               // 0x14A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnSelect;                                          // 0x14B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnWarning;                                         // 0x14B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHover;                                           // 0x14C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDiamondStatePip_C*                     DiamondStatePip;                                   // 0x14C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DisabledIcon;                                      // 0x14D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Dim;                                         // 0x14D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_Icon;                                    // 0x14E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone;                                          // 0x14E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Title;                                        // 0x14F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x14F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Hovered;                                        // 0x14F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWarningOn;                                       // 0x14FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14FB[0x5];                                     // 0x14FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Warning_Message;                                   // 0x1500(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TitleText;                                         // 0x1518(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Pad_Left;                                          // 0x1530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pad_Right;                                         // 0x1531(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnClicked();
	void BP_OnDeselected();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_CategoryButton(int32 EntryPoint);
	void PlayClickedEvents();
	void PreConstruct(bool IsDesignTime);
	void ResetState();
	void SetHovered(bool IsHovered_0);
	void SetSafeZonePadding(bool Pad_Left_0, bool Pad_Right_0);
	void SetSelected(bool IsSelected_0);
	void SetTitleText(const class FText& TitleText_0);
	void SetWarningStatus(bool WarningOn, const class FText& WarningMessage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CategoryButton_C">();
	}
	static class UCategoryButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCategoryButton_C>();
	}
};
static_assert(alignof(UCategoryButton_C) == 0x000010, "Wrong alignment on UCategoryButton_C");
static_assert(sizeof(UCategoryButton_C) == 0x001540, "Wrong size on UCategoryButton_C");
static_assert(offsetof(UCategoryButton_C, UberGraphFrame) == 0x001490, "Member 'UCategoryButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, PulseWarningIcon) == 0x001498, "Member 'UCategoryButton_C::PulseWarningIcon' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Reset) == 0x0014A0, "Member 'UCategoryButton_C::Reset' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Dim) == 0x0014A8, "Member 'UCategoryButton_C::Dim' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, OnSelect) == 0x0014B0, "Member 'UCategoryButton_C::OnSelect' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, OnWarning) == 0x0014B8, "Member 'UCategoryButton_C::OnWarning' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, OnHover) == 0x0014C0, "Member 'UCategoryButton_C::OnHover' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, DiamondStatePip) == 0x0014C8, "Member 'UCategoryButton_C::DiamondStatePip' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, DisabledIcon) == 0x0014D0, "Member 'UCategoryButton_C::DisabledIcon' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Image_Dim) == 0x0014D8, "Member 'UCategoryButton_C::Image_Dim' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, NamedSlot_Icon) == 0x0014E0, "Member 'UCategoryButton_C::NamedSlot_Icon' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, SafeZone) == 0x0014E8, "Member 'UCategoryButton_C::SafeZone' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Text_Title) == 0x0014F0, "Member 'UCategoryButton_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, IsSelected) == 0x0014F8, "Member 'UCategoryButton_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Is_Hovered) == 0x0014F9, "Member 'UCategoryButton_C::Is_Hovered' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, IsWarningOn) == 0x0014FA, "Member 'UCategoryButton_C::IsWarningOn' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Warning_Message) == 0x001500, "Member 'UCategoryButton_C::Warning_Message' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, TitleText) == 0x001518, "Member 'UCategoryButton_C::TitleText' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Pad_Left) == 0x001530, "Member 'UCategoryButton_C::Pad_Left' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Pad_Right) == 0x001531, "Member 'UCategoryButton_C::Pad_Right' has a wrong offset!");

}

