#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_EventScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "EventScreenBase_structs.hpp"


namespace SDK::Params
{

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.Adjust Camera Framing
// 0x0178 (0x0178 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing final
{
public:
	class UFortAccountItemDefinition*             Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UFortAccountItemDefinition*, struct FVector2D> ItemSize;                                          // 0x0008(0x0050)(Edit, BlueprintVisible)
	TMap<class UFortAccountItemDefinition*, struct FVector2D> ItemPos;                                           // 0x0058(0x0050)(Edit, BlueprintVisible)
	TMap<class UFortAccountItemDefinition*, struct FVector2D> K2Node_MakeVariable_MakeVariableOutput;            // 0x00A8(0x0050)()
	TMap<class UFortAccountItemDefinition*, struct FVector2D> K2Node_MakeVariable_MakeVariableOutput_1;          // 0x00F8(0x0050)()
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Map_Find_Value_1;                         // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing) == 0x000178, "Wrong size on WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, Item) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::Item' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, ItemSize) == 0x000008, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::ItemSize' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, ItemPos) == 0x000058, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::ItemPos' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A8, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0000F8, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, CallFunc_Map_Find_Value) == 0x000148, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, CallFunc_Map_Find_Value_1) == 0x000160, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing, CallFunc_Map_Find_ReturnValue_1) == 0x000170, "Member 'WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ClickedPreviewUpsell
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell) == 0x000008, "Wrong size on WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell, Button) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell::Button' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.EventLerpBuy
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_EventLerpBuy final
{
public:
	double                                        Lerp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_EventLerpBuy) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_EventLerpBuy");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_EventLerpBuy) == 0x000008, "Wrong size on WBP_LinedNotebook_EventScreen_C_EventLerpBuy");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_EventLerpBuy, Lerp) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_EventLerpBuy::Lerp' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ExecuteUbergraph_WBP_LinedNotebook_EventScreen
// 0x0438 (0x0438 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_4;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_5;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_6;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_7;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_8;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_9;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_LegalText;                            // 0x0038(0x0018)(ConstParm)
	int32                                         K2Node_Event_CurrentVariantIndex;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalNumVariants;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_13;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_12;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          CallFunc_ReverseAnimMode_OutPlayMode;              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_11;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_10;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_9;                     // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_8;                     // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          CallFunc_ReverseAnimMode_OutPlayMode_1;            // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_10;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_7;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_6;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_5;                     // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_4;                     // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_8;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortAccountItemDefinition*       K2Node_Event_Item;                                 // 0x0078(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFreeTrack;                           // 0x0080(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventScreenView                              K2Node_Event_PrevScreenView;                       // 0x008C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventScreenView                              K2Node_Event_NewScreenView;                        // 0x008D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_9;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_10;                   // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_11;                   // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_12;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_EventName_1;                          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_EventName;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetVaultWorldFloorMID_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_RowDisplayName;                       // 0x00E8(0x0018)(ConstParm)
	class UCommonButtonBase*                      K2Node_Event_Button;                               // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HasFocus;                       // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetVaultWorldBackgroundMID_ReturnValue;   // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OwnsChaseReward_return;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0120(0x0010)(NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetVaultWorldBackgroundMID_ReturnValue_1; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetVaultWorldFloorMID_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_16;                             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_3;                     // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PlaybackSpeed;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_13;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetVaultWorldBackgroundMID_ReturnValue_2; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide;                           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortEventModalBase*                    CallFunc_GetActiveModal_ReturnValue;               // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LinedNotebook_PurchaseLevelsModal_C* K2Node_DynamicCast_AsWBP_Lined_Notebook_Purchase_Levels_Modal; // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_2;                     // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllRewardsCollected_ReturnValue;       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_6;                           // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0248(0x0038)(NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllRewardsCollected_ReturnValue_1;     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToPaidColor;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_7;                           // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetVaultWorldFloorMID_ReturnValue_2;      // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_lerp;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBonusInfoMiniTagData                  K2Node_Event_BonusInfo;                            // 0x02B8(0x0018)(ConstParm)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode;                       // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ArrowPagination_C*                 K2Node_DynamicCast_AsWBP_Arrow_Pagination;         // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ArrowPagination_C*                 K2Node_DynamicCast_AsWBP_Arrow_Pagination_1;       // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_7;              // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_8;              // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_9;              // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable;                              // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_8;                           // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_17;                             // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_9;                           // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_10;             // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_10;                          // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_11;                          // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_12;                          // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_1; // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_2; // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_3; // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_4; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Reverse_ImplicitCast;                // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Forward_ImplicitCast;                // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen) == 0x000438, "Wrong size on WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, EntryPoint) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable) == 0x000004, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable) == 0x000007, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_struct_Variable) == 0x000008, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_3) == 0x000028, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_4) == 0x000029, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_5) == 0x00002A, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_6) == 0x00002B, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_1) == 0x00002C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_7) == 0x00002D, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_8) == 0x00002E, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_9) == 0x00002F, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_2) == 0x000030, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_3) == 0x000031, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_4) == 0x000032, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_5) == 0x000033, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_6) == 0x000034, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_7) == 0x000035, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_LegalText) == 0x000038, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_LegalText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_CurrentVariantIndex) == 0x000050, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_CurrentVariantIndex' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_TotalNumVariants) == 0x000054, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_TotalNumVariants' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_13) == 0x000058, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_13' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_12) == 0x000059, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_12' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess) == 0x00005A, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_ReverseAnimMode_OutPlayMode) == 0x00005B, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_ReverseAnimMode_OutPlayMode' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_1) == 0x00005C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_11) == 0x00005D, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_11' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_10) == 0x00005E, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_10' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_2) == 0x00005F, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default) == 0x000060, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_3) == 0x000061, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_9) == 0x000062, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_9' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_1) == 0x000063, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_4) == 0x000064, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_8) == 0x000065, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_8' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_ReverseAnimMode_OutPlayMode_1) == 0x000066, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_ReverseAnimMode_OutPlayMode_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_5) == 0x000067, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_10) == 0x000068, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_7) == 0x000069, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_7' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_6) == 0x00006A, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_6) == 0x00006B, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_11) == 0x00006C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_5) == 0x00006D, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_7) == 0x00006E, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_4) == 0x00006F, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_8) == 0x000070, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_Item) == 0x000078, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_bFreeTrack) == 0x000080, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_bFreeTrack' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_12) == 0x000082, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_8) == 0x000083, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_name_Variable) == 0x000084, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_name_Variable_1) == 0x000088, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_PrevScreenView) == 0x00008C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_PrevScreenView' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_NewScreenView) == 0x00008D, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_NewScreenView' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_9) == 0x00008E, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_9' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_10) == 0x00008F, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_10' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_bool_Variable_9) == 0x000090, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000091, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000092, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000093, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000094, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_11) == 0x0000A4, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_11' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000A5, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_13) == 0x0000A6, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000A7, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_12) == 0x0000A8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_12' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_EventName_1) == 0x0000B0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_EventName_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_EventName) == 0x0000C0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_EventName' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_Button) == 0x0000D0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D9, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_BooleanAND_ReturnValue_1) == 0x0000DA, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetVaultWorldFloorMID_ReturnValue) == 0x0000E0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetVaultWorldFloorMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_RowDisplayName) == 0x0000E8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_RowDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_Button) == 0x000100, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_Button' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_IsDesignTime) == 0x000108, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_HasFocus) == 0x000109, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_HasFocus' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetVaultWorldBackgroundMID_ReturnValue) == 0x000110, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetVaultWorldBackgroundMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_2) == 0x000118, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_OwnsChaseReward_return) == 0x00011C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_OwnsChaseReward_return' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_MakeStruct_DataTableRowHandle) == 0x000120, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_3) == 0x000130, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_14) == 0x000131, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_4) == 0x000132, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000133, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetVaultWorldBackgroundMID_ReturnValue_1) == 0x000138, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetVaultWorldBackgroundMID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000140, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue) == 0x000148, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue_1) == 0x000150, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue_2) == 0x000158, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue_3) == 0x000160, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue_4) == 0x000168, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue_5) == 0x000170, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Lerp_ReturnValue_6) == 0x000178, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000180, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetVaultWorldFloorMID_ReturnValue_1) == 0x000188, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetVaultWorldFloorMID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_15) == 0x000190, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_16) == 0x000191, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_5) == 0x000192, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_3) == 0x000193, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlaybackSpeed) == 0x000194, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000198, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_SwitchEnum_CmpSuccess_13) == 0x0001A0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_SwitchEnum_CmpSuccess_13' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue) == 0x0001A8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_BooleanOR_ReturnValue) == 0x0001B0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0001B8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetVaultWorldBackgroundMID_ReturnValue_2) == 0x0001C0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetVaultWorldBackgroundMID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x0001C8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x0001CC, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_Hide) == 0x0001D0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001D1, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0001D8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetActiveModal_ReturnValue) == 0x0001E0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetActiveModal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_DynamicCast_AsWBP_Lined_Notebook_Purchase_Levels_Modal) == 0x0001F0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_DynamicCast_AsWBP_Lined_Notebook_Purchase_Levels_Modal' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_2) == 0x0001F9, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x000200, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_2) == 0x000208, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode_1) == 0x000210, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_3) == 0x000218, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_HasAllRewardsCollected_ReturnValue) == 0x000220, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_HasAllRewardsCollected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000228, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_6) == 0x000230, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000240, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_MakeStruct_WidgetTransform) == 0x000248, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000280, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_4) == 0x000288, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_HasAllRewardsCollected_ReturnValue_1) == 0x000290, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_HasAllRewardsCollected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_5) == 0x000298, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_ToPaidColor) == 0x0002A0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_ToPaidColor' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_7) == 0x0002A1, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetVaultWorldFloorMID_ReturnValue_2) == 0x0002A8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetVaultWorldFloorMID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_lerp) == 0x0002B0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_lerp' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Event_BonusInfo) == 0x0002B8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Event_BonusInfo' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_IsMobileGame_ReturnValue) == 0x0002D0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_CustomEvent_PlayMode) == 0x0002D1, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_CustomEvent_PlayMode' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_6) == 0x0002D8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_DynamicCast_AsWBP_Arrow_Pagination) == 0x0002E0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_DynamicCast_AsWBP_Arrow_Pagination' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_DynamicCast_bSuccess_1) == 0x0002E8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_DynamicCast_AsWBP_Arrow_Pagination_1) == 0x0002F0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_DynamicCast_AsWBP_Arrow_Pagination_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_DynamicCast_bSuccess_2) == 0x0002F8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x0002F9, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000300, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000308, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_7) == 0x000310, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_8) == 0x000318, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_9) == 0x000320, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_object_Variable) == 0x000328, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_8) == 0x000330, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000338, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_real_Variable) == 0x000340, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GetViewportSize_ReturnValue) == 0x000348, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_BreakVector2D_X) == 0x000358, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_BreakVector2D_Y) == 0x000360, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, Temp_byte_Variable_17) == 0x000368, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000370, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000378, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000380, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_9) == 0x000388, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_ReturnValue_10) == 0x000390, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000398, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0003A0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_IsMobileGame_ReturnValue_1) == 0x0003A8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x0003B0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_10) == 0x0003B8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_11) == 0x0003C8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Default_12) == 0x0003D8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0003E8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0003EC, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0003F0, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0003F4, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x0003F8, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x0003FC, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000400, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000408, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Delay_Duration_ImplicitCast) == 0x00040C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000410, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000414, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast) == 0x000418, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimationForward_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_1) == 0x00041C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_2) == 0x000420, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_3) == 0x000424, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_4) == 0x000428, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Reverse_ImplicitCast) == 0x00042C, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Reverse_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen, K2Node_Select_Forward_ImplicitCast) == 0x000430, "Member 'WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen::K2Node_Select_Forward_ImplicitCast' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleAuroraColor
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleAuroraColor final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlaybackSpeed;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleAuroraColor) == 0x000004, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleAuroraColor");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleAuroraColor) == 0x000008, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleAuroraColor");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleAuroraColor, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleAuroraColor::PlayMode' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleAuroraColor, PlaybackSpeed) == 0x000004, "Member 'WBP_LinedNotebook_EventScreen_C_HandleAuroraColor::PlaybackSpeed' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleBGBuy
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleBGBuy final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleBGBuy) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleBGBuy");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleBGBuy) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleBGBuy");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleBGBuy, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleBGBuy::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleBGRewardPreview
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleColors
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleColors final
{
public:
	bool                                          ToPaidColor;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleColors) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleColors");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleColors) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleColors");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleColors, ToPaidColor) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleColors::ToPaidColor' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleLegalAnim
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleLegalAnim final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleLegalAnim) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleLegalAnim");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleLegalAnim) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleLegalAnim");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleLegalAnim, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleLegalAnim::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleMainAnim
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleMainAnim final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleMainAnim) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleMainAnim");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleMainAnim) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleMainAnim");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleMainAnim, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleMainAnim::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleMainToSecondaryColor
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleRewardPreview
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleRewardPreview final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleRewardPreview) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleRewardPreview");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleRewardPreview) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleRewardPreview");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleRewardPreview, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleRewardPreview::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleVariantCyclingUpdate
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate final
{
public:
	int32                                         Current_Index;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Variants;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate) == 0x0000E8, "Wrong size on WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, Current_Index) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::Current_Index' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, Num_Variants) == 0x000004, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::Num_Variants' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000010, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HideRewardTrack
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_HideRewardTrack final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_HideRewardTrack) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_HideRewardTrack");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_HideRewardTrack) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_HideRewardTrack");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_HideRewardTrack, Hide) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_HideRewardTrack::Hide' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.IsMiniEventLive
// 0x0020 (0x0020 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_IsMiniEventLive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCalendarEventActive_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_IsMiniEventLive) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_IsMiniEventLive");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_IsMiniEventLive) == 0x000020, "Wrong size on WBP_LinedNotebook_EventScreen_C_IsMiniEventLive");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_IsMiniEventLive, ReturnValue) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_IsMiniEventLive::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_IsMiniEventLive, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_LinedNotebook_EventScreen_C_IsMiniEventLive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_IsMiniEventLive, CallFunc_IsCalendarEventActive_ReturnValue) == 0x000018, "Member 'WBP_LinedNotebook_EventScreen_C_IsMiniEventLive::CallFunc_IsCalendarEventActive_ReturnValue' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToChaseReward
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_MainToChaseReward final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_MainToChaseReward) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_MainToChaseReward");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_MainToChaseReward) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_MainToChaseReward");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_MainToChaseReward, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_MainToChaseReward::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToMoreInfo
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_MainToMoreInfo final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_MainToMoreInfo) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_MainToMoreInfo");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_MainToMoreInfo) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_MainToMoreInfo");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_MainToMoreInfo, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_MainToMoreInfo::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToPreviewReward
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_MainToPreviewReward final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_MainToPreviewReward) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_MainToPreviewReward");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_MainToPreviewReward) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_MainToPreviewReward");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_MainToPreviewReward, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_MainToPreviewReward::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToPurchaseLevels
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToUpgrade
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_MainToUpgrade final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_MainToUpgrade) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_MainToUpgrade");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_MainToUpgrade) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_MainToUpgrade");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_MainToUpgrade, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_MainToUpgrade::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToUpgradeReward
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnCalendarEventEnded
// 0x0010 (0x0010 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded) == 0x000010, "Wrong size on WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded, EventName) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded::EventName' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnCalendarEventStarted
// 0x0010 (0x0010 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted) == 0x000010, "Wrong size on WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted, EventName) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted::EventName' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnPreviewActionButtonUpdated
// 0x0020 (0x0020 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated final
{
public:
	class FText                                   RowDisplayName;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCommonButtonBase*                      Button;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated) == 0x000020, "Wrong size on WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated, RowDisplayName) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated::RowDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated, Button) == 0x000018, "Member 'WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated::Button' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnRewardPreviewItemChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged final
{
public:
	const class UFortAccountItemDefinition*       Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bFreeTrack;                                        // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged) == 0x000010, "Wrong size on WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged, Item) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged::Item' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged, bFreeTrack) == 0x000008, "Member 'WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged::bFreeTrack' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnScreenViewChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged final
{
public:
	EEventScreenView                              PrevScreenView;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventScreenView                              NewScreenView;                                     // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged) == 0x000002, "Wrong size on WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged, PrevScreenView) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged::PrevScreenView' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged, NewScreenView) == 0x000001, "Member 'WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged::NewScreenView' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnSetBonusInfo
// 0x0018 (0x0018 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo final
{
public:
	struct FBonusInfoMiniTagData                  BonusInfo;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo) == 0x000018, "Wrong size on WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo, BonusInfo) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo::BonusInfo' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_PreConstruct");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_PreConstruct) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_PreConstruct");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ReverseAnimMode
// 0x0007 (0x0007 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_ReverseAnimMode final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          OutPlayMode;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_ReverseAnimMode");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode) == 0x000007, "Wrong size on WBP_LinedNotebook_EventScreen_C_ReverseAnimMode");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::PlayMode' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, OutPlayMode) == 0x000001, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::OutPlayMode' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, Temp_byte_Variable) == 0x000002, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ReverseAnimMode, K2Node_Select_Default) == 0x000006, "Member 'WBP_LinedNotebook_EventScreen_C_ReverseAnimMode::K2Node_Select_Default' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SetDisplayItemVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM final
{
public:
	class UFortItemVM*                            ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM) == 0x000028, "Wrong size on WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM, ViewModel) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SetRewardTrackLegal
// 0x0018 (0x0018 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal final
{
public:
	class FText                                   LegalText;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal) == 0x000018, "Wrong size on WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal, LegalText) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal::LegalText' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.Setup Layout Slots
// 0x0010 (0x0010 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots final
{
public:
	TArray<class UNamedSlot*>                     K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots) == 0x000010, "Wrong size on WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots, K2Node_MakeArray_Array) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_Setup_Layout_Slots::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpdatePreviewActionButton
// 0x0038 (0x0038 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCommonButtonBase*                      ButtonInstance;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UIKit_ButtonCTA_Base_C*            K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton) == 0x000008, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton) == 0x000038, "Wrong size on WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, InText) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::InText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, ButtonInstance) == 0x000018, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::ButtonInstance' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, Temp_byte_Variable) == 0x000020, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base) == 0x000028, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, CallFunc_TextIsEmpty_ReturnValue) == 0x000031, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, Temp_byte_Variable_1) == 0x000032, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, Temp_bool_Variable) == 0x000033, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton, K2Node_Select_Default) == 0x000034, "Member 'WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton::K2Node_Select_Default' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpdateVariantCounter
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter final
{
public:
	int32                                         CurrentVariantIndex;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumVariants;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter) == 0x000004, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter) == 0x000008, "Wrong size on WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter, CurrentVariantIndex) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter::CurrentVariantIndex' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter, TotalNumVariants) == 0x000004, "Member 'WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter::TotalNumVariants' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpgradeToUpgradeReward
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward, PlayMode) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward::PlayMode' has a wrong offset!");

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ViewQuestsFocusChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged final
{
public:
	bool                                          HasFocus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged) == 0x000001, "Wrong alignment on WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged");
static_assert(sizeof(WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged) == 0x000001, "Wrong size on WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged");
static_assert(offsetof(WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged, HasFocus) == 0x000000, "Member 'WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged::HasFocus' has a wrong offset!");

}

