#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCharacterCommonRuntime

#include "Basic.hpp"

#include "SparksCharacterCommonRuntime_structs.hpp"
#include "SparksCoreRuntime_structs.hpp"


namespace SDK::Params
{

// Function SparksCharacterCommonRuntime.SparksAnimationSubsystem.GetLoadedSparksAnimations
// 0x0008 (0x0008 - 0x0000)
struct SparksAnimationSubsystem_GetLoadedSparksAnimations final
{
public:
	class USparksInstrumentAnimations*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksAnimationSubsystem_GetLoadedSparksAnimations) == 0x000008, "Wrong alignment on SparksAnimationSubsystem_GetLoadedSparksAnimations");
static_assert(sizeof(SparksAnimationSubsystem_GetLoadedSparksAnimations) == 0x000008, "Wrong size on SparksAnimationSubsystem_GetLoadedSparksAnimations");
static_assert(offsetof(SparksAnimationSubsystem_GetLoadedSparksAnimations, ReturnValue) == 0x000000, "Member 'SparksAnimationSubsystem_GetLoadedSparksAnimations::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.OnInstrumentPSCInitialized
// 0x0008 (0x0008 - 0x0000)
struct SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized final
{
public:
	class USparksInstrumentAnimPlayerStateComponent* NewInstrumentPSC;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized) == 0x000008, "Wrong alignment on SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized");
static_assert(sizeof(SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized) == 0x000008, "Wrong size on SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized");
static_assert(offsetof(SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized, NewInstrumentPSC) == 0x000000, "Member 'SparksBaseLayerAnimInstance_OnInstrumentPSCInitialized::NewInstrumentPSC' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.SetIsRoaming
// 0x0001 (0x0001 - 0x0000)
struct SparksBaseLayerAnimInstance_SetIsRoaming final
{
public:
	bool                                          bInIsRoaming;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksBaseLayerAnimInstance_SetIsRoaming) == 0x000001, "Wrong alignment on SparksBaseLayerAnimInstance_SetIsRoaming");
static_assert(sizeof(SparksBaseLayerAnimInstance_SetIsRoaming) == 0x000001, "Wrong size on SparksBaseLayerAnimInstance_SetIsRoaming");
static_assert(offsetof(SparksBaseLayerAnimInstance_SetIsRoaming, bInIsRoaming) == 0x000000, "Member 'SparksBaseLayerAnimInstance_SetIsRoaming::bInIsRoaming' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.GetAnimatableState
// 0x0001 (0x0001 - 0x0000)
struct SparksBaseLayerAnimInstance_GetAnimatableState final
{
public:
	ESparksAnimatableState                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksBaseLayerAnimInstance_GetAnimatableState) == 0x000001, "Wrong alignment on SparksBaseLayerAnimInstance_GetAnimatableState");
static_assert(sizeof(SparksBaseLayerAnimInstance_GetAnimatableState) == 0x000001, "Wrong size on SparksBaseLayerAnimInstance_GetAnimatableState");
static_assert(offsetof(SparksBaseLayerAnimInstance_GetAnimatableState, ReturnValue) == 0x000000, "Member 'SparksBaseLayerAnimInstance_GetAnimatableState::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.GetIsRoaming
// 0x0001 (0x0001 - 0x0000)
struct SparksBaseLayerAnimInstance_GetIsRoaming final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksBaseLayerAnimInstance_GetIsRoaming) == 0x000001, "Wrong alignment on SparksBaseLayerAnimInstance_GetIsRoaming");
static_assert(sizeof(SparksBaseLayerAnimInstance_GetIsRoaming) == 0x000001, "Wrong size on SparksBaseLayerAnimInstance_GetIsRoaming");
static_assert(offsetof(SparksBaseLayerAnimInstance_GetIsRoaming, ReturnValue) == 0x000000, "Member 'SparksBaseLayerAnimInstance_GetIsRoaming::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimInstance.SetMidiEventDriver
// 0x0010 (0x0010 - 0x0000)
struct SparksInstrumentAnimInstance_SetMidiEventDriver final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> NewMidiEventDriver;                                // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimInstance_SetMidiEventDriver) == 0x000008, "Wrong alignment on SparksInstrumentAnimInstance_SetMidiEventDriver");
static_assert(sizeof(SparksInstrumentAnimInstance_SetMidiEventDriver) == 0x000010, "Wrong size on SparksInstrumentAnimInstance_SetMidiEventDriver");
static_assert(offsetof(SparksInstrumentAnimInstance_SetMidiEventDriver, NewMidiEventDriver) == 0x000000, "Member 'SparksInstrumentAnimInstance_SetMidiEventDriver::NewMidiEventDriver' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimInstance.GetMidiEventDriver
// 0x0010 (0x0010 - 0x0000)
struct SparksInstrumentAnimInstance_GetMidiEventDriver final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimInstance_GetMidiEventDriver) == 0x000008, "Wrong alignment on SparksInstrumentAnimInstance_GetMidiEventDriver");
static_assert(sizeof(SparksInstrumentAnimInstance_GetMidiEventDriver) == 0x000010, "Wrong size on SparksInstrumentAnimInstance_GetMidiEventDriver");
static_assert(offsetof(SparksInstrumentAnimInstance_GetMidiEventDriver, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimInstance_GetMidiEventDriver::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksGuitarAnimInstance.GetFretNumberFromMidiNote
// 0x0008 (0x0008 - 0x0000)
struct SparksGuitarAnimInstance_GetFretNumberFromMidiNote final
{
public:
	uint8                                         MidiNote;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksGuitarAnimInstance_GetFretNumberFromMidiNote) == 0x000004, "Wrong alignment on SparksGuitarAnimInstance_GetFretNumberFromMidiNote");
static_assert(sizeof(SparksGuitarAnimInstance_GetFretNumberFromMidiNote) == 0x000008, "Wrong size on SparksGuitarAnimInstance_GetFretNumberFromMidiNote");
static_assert(offsetof(SparksGuitarAnimInstance_GetFretNumberFromMidiNote, MidiNote) == 0x000000, "Member 'SparksGuitarAnimInstance_GetFretNumberFromMidiNote::MidiNote' has a wrong offset!");
static_assert(offsetof(SparksGuitarAnimInstance_GetFretNumberFromMidiNote, ReturnValue) == 0x000004, "Member 'SparksGuitarAnimInstance_GetFretNumberFromMidiNote::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimations.GetAnimClassForInstrument
// 0x0010 (0x0010 - 0x0000)
struct SparksInstrumentAnimations_GetAnimClassForInstrument final
{
public:
	ESparksInstrumentType                         Instrument;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimInstance>              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimations_GetAnimClassForInstrument) == 0x000008, "Wrong alignment on SparksInstrumentAnimations_GetAnimClassForInstrument");
static_assert(sizeof(SparksInstrumentAnimations_GetAnimClassForInstrument) == 0x000010, "Wrong size on SparksInstrumentAnimations_GetAnimClassForInstrument");
static_assert(offsetof(SparksInstrumentAnimations_GetAnimClassForInstrument, Instrument) == 0x000000, "Member 'SparksInstrumentAnimations_GetAnimClassForInstrument::Instrument' has a wrong offset!");
static_assert(offsetof(SparksInstrumentAnimations_GetAnimClassForInstrument, ReturnValue) == 0x000008, "Member 'SparksInstrumentAnimations_GetAnimClassForInstrument::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.CanSwapToInstrument
// 0x0002 (0x0002 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument final
{
public:
	ESparksInstrumentType                         NewInstrumentType;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument) == 0x000002, "Wrong size on SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument, NewInstrumentType) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument::NewInstrumentType' has a wrong offset!");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument, ReturnValue) == 0x000001, "Member 'SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.HandlePawnFinishedCharacterCustomization
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization, Pawn) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization::Pawn' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.HandlePlayerPawnSet
// 0x0018 (0x0018 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  OldPawn;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet) == 0x000018, "Wrong size on SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet, Player) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet::Player' has a wrong offset!");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet, NewPawn) == 0x000008, "Member 'SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet::NewPawn' has a wrong offset!");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet, OldPawn) == 0x000010, "Member 'SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet::OldPawn' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.LinkInstrumentAnimationLayer
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer final
{
public:
	class USparksInstrumentAnimations*            Animations;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer, Animations) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer::Animations' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.OverridePlayspace
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_OverridePlayspace final
{
public:
	class ASparksMusicPlayspace*                  Playspace;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_OverridePlayspace) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_OverridePlayspace");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_OverridePlayspace) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_OverridePlayspace");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_OverridePlayspace, Playspace) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_OverridePlayspace::Playspace' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetAnimatableState
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_SetAnimatableState final
{
public:
	ESparksAnimatableState                        NewAnimatableState;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_SetAnimatableState) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_SetAnimatableState");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_SetAnimatableState) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_SetAnimatableState");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_SetAnimatableState, NewAnimatableState) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_SetAnimatableState::NewAnimatableState' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetCanPlayMidiAnimations
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations final
{
public:
	bool                                          bNewCanPlayMidiAnimations;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations, bNewCanPlayMidiAnimations) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations::bNewCanPlayMidiAnimations' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetCosmeticInstrumentType
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType final
{
public:
	ESparksInstrumentType                         NewCosmeticInstrumentType;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType, NewCosmeticInstrumentType) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType::NewCosmeticInstrumentType' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetMidiEventDriver
// 0x0010 (0x0010 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> NewMidiEventDriver;                                // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver) == 0x000010, "Wrong size on SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver, NewMidiEventDriver) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver::NewMidiEventDriver' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_SetMusicClock final
{
public:
	class UMusicClockComponent*                   NewMusicClock;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_SetMusicClock) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_SetMusicClock");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_SetMusicClock) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_SetMusicClock");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_SetMusicClock, NewMusicClock) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_SetMusicClock::NewMusicClock' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SwapCosmeticInstrument
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument final
{
public:
	ESparksInstrumentType                         NewInstrumentType;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument, NewInstrumentType) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument::NewInstrumentType' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.CanPlayMidiAnimations
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetAnimatableState
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetAnimatableState final
{
public:
	ESparksAnimatableState                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetAnimatableState) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetAnimatableState");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetAnimatableState) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetAnimatableState");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetAnimatableState, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetAnimatableState::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetCosmeticInstrumentType
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetCurrentTrackName
// 0x0004 (0x0004 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName) == 0x000004, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName) == 0x000004, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetInstrumentAnimations
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations final
{
public:
	class USparksInstrumentAnimations*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetLinkedInstrumentAnimationLayer
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer final
{
public:
	class USparksBaseLayerAnimInstance*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetMidiEventDriver
// 0x0010 (0x0010 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver) == 0x000010, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetMusicClock final
{
public:
	class UMusicClockComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetMusicClock) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetMusicClock");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetMusicClock) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetMusicClock");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetMusicClock, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetMusicClock::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetRecentOrFirstInstrument
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetSparksPlayspace
// 0x0008 (0x0008 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace final
{
public:
	class ASparksMusicPlayspace*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace) == 0x000008, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace) == 0x000008, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetTrackInstrumentType
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.IsInstrumentAnimationLayerLinked
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.IsUsable
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_IsUsable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_IsUsable) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_IsUsable");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_IsUsable) == 0x000001, "Wrong size on SparksInstrumentAnimPlayerStateComponent_IsUsable");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_IsUsable, ReturnValue) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_IsUsable::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.PlayerHasCosmeticInstrument
// 0x0002 (0x0002 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument final
{
public:
	ESparksInstrumentType                         InstrumentType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument) == 0x000002, "Wrong size on SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument, InstrumentType) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument, ReturnValue) == 0x000001, "Member 'SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument::ReturnValue' has a wrong offset!");

// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.PlayerHasTrackInstrument
// 0x0002 (0x0002 - 0x0000)
struct SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument final
{
public:
	ESparksInstrumentType                         InstrumentType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument) == 0x000001, "Wrong alignment on SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument");
static_assert(sizeof(SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument) == 0x000002, "Wrong size on SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument, InstrumentType) == 0x000000, "Member 'SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument, ReturnValue) == 0x000001, "Member 'SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument::ReturnValue' has a wrong offset!");

}

