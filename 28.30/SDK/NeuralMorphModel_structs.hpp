#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeuralMorphModel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MLDeformerFramework_structs.hpp"


namespace SDK
{

// Enum NeuralMorphModel.ENeuralMorphMode
// NumValues: 0x0002
enum class ENeuralMorphMode : uint8
{
	Local                                    = 0,
	Global                                   = 1,
};

// Enum NeuralMorphModel.ENeuralMorphMaskVizMode
// NumValues: 0x0003
enum class ENeuralMorphMaskVizMode : uint8
{
	Off                                      = 0,
	WhenInFocus                              = 1,
	Always                                   = 2,
};

// ScriptStruct NeuralMorphModel.NeuralMorphBoneGroup
// 0x0018 (0x0018 - 0x0000)
struct FNeuralMorphBoneGroup final
{
public:
	class FName                                   GroupName;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBoneReference>                 BoneNames;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNeuralMorphBoneGroup) == 0x000008, "Wrong alignment on FNeuralMorphBoneGroup");
static_assert(sizeof(FNeuralMorphBoneGroup) == 0x000018, "Wrong size on FNeuralMorphBoneGroup");
static_assert(offsetof(FNeuralMorphBoneGroup, GroupName) == 0x000000, "Member 'FNeuralMorphBoneGroup::GroupName' has a wrong offset!");
static_assert(offsetof(FNeuralMorphBoneGroup, BoneNames) == 0x000008, "Member 'FNeuralMorphBoneGroup::BoneNames' has a wrong offset!");

// ScriptStruct NeuralMorphModel.NeuralMorphCurveGroup
// 0x0018 (0x0018 - 0x0000)
struct FNeuralMorphCurveGroup final
{
public:
	class FName                                   GroupName;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMLDeformerCurveReference>      CurveNames;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNeuralMorphCurveGroup) == 0x000008, "Wrong alignment on FNeuralMorphCurveGroup");
static_assert(sizeof(FNeuralMorphCurveGroup) == 0x000018, "Wrong size on FNeuralMorphCurveGroup");
static_assert(offsetof(FNeuralMorphCurveGroup, GroupName) == 0x000000, "Member 'FNeuralMorphCurveGroup::GroupName' has a wrong offset!");
static_assert(offsetof(FNeuralMorphCurveGroup, CurveNames) == 0x000008, "Member 'FNeuralMorphCurveGroup::CurveNames' has a wrong offset!");

// ScriptStruct NeuralMorphModel.NeuralMorphMaskInfo
// 0x0010 (0x0010 - 0x0000)
struct FNeuralMorphMaskInfo final
{
public:
	TArray<class FName>                           BoneNames;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNeuralMorphMaskInfo) == 0x000008, "Wrong alignment on FNeuralMorphMaskInfo");
static_assert(sizeof(FNeuralMorphMaskInfo) == 0x000010, "Wrong size on FNeuralMorphMaskInfo");
static_assert(offsetof(FNeuralMorphMaskInfo, BoneNames) == 0x000000, "Member 'FNeuralMorphMaskInfo::BoneNames' has a wrong offset!");

}

