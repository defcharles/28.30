#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_EventScreen

#include "Basic.hpp"

#include "WBP_LinedNotebook_EventScreen_classes.hpp"
#include "WBP_LinedNotebook_EventScreen_parameters.hpp"


namespace SDK
{

// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.Adjust Camera Framing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortAccountItemDefinition*       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::Adjust_Camera_Framing(class UFortAccountItemDefinition* Item)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Adjust Camera Framing");

	Params::WBP_LinedNotebook_EventScreen_C_Adjust_Camera_Framing Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.BindButtonPresses
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::BindButtonPresses()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BindButtonPresses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ClickedPreviewUpsell
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::ClickedPreviewUpsell(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClickedPreviewUpsell");

	Params::WBP_LinedNotebook_EventScreen_C_ClickedPreviewUpsell Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.DebugSwitchEvent
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::DebugSwitchEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DebugSwitchEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.EnterLandingScreen
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::EnterLandingScreen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnterLandingScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.EventLerpBuy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::EventLerpBuy(double Lerp)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EventLerpBuy");

	Params::WBP_LinedNotebook_EventScreen_C_EventLerpBuy Parms{};

	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.EventLerpRewardPreview
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::EventLerpRewardPreview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EventLerpRewardPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ExecuteUbergraph_WBP_LinedNotebook_EventScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::ExecuteUbergraph_WBP_LinedNotebook_EventScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_LinedNotebook_EventScreen");

	Params::WBP_LinedNotebook_EventScreen_C_ExecuteUbergraph_WBP_LinedNotebook_EventScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.GrowUpsellConnectionLine
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::GrowUpsellConnectionLine()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GrowUpsellConnectionLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleAuroraColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlaybackSpeed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleAuroraColor(EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleAuroraColor");

	Params::WBP_LinedNotebook_EventScreen_C_HandleAuroraColor Parms{};

	Parms.PlayMode = PlayMode;
	Parms.PlaybackSpeed = PlaybackSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleBGBuy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleBGBuy(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleBGBuy");

	Params::WBP_LinedNotebook_EventScreen_C_HandleBGBuy Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleBGRewardPreview
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleBGRewardPreview(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleBGRewardPreview");

	Params::WBP_LinedNotebook_EventScreen_C_HandleBGRewardPreview Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleColors
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ToPaidColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleColors(bool ToPaidColor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleColors");

	Params::WBP_LinedNotebook_EventScreen_C_HandleColors Parms{};

	Parms.ToPaidColor = ToPaidColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleErrorLoad
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::HandleErrorLoad()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleErrorLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleLegalAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleLegalAnim(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleLegalAnim");

	Params::WBP_LinedNotebook_EventScreen_C_HandleLegalAnim Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleMainAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleMainAnim(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMainAnim");

	Params::WBP_LinedNotebook_EventScreen_C_HandleMainAnim Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleMainToSecondaryColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleMainToSecondaryColor(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMainToSecondaryColor");

	Params::WBP_LinedNotebook_EventScreen_C_HandleMainToSecondaryColor Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleRewardPreview
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleRewardPreview(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRewardPreview");

	Params::WBP_LinedNotebook_EventScreen_C_HandleRewardPreview Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleSafeZonePadding
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::HandleSafeZonePadding()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSafeZonePadding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HandleVariantCyclingUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current_Index                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num_Variants                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HandleVariantCyclingUpdate(int32 Current_Index, int32 Num_Variants)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleVariantCyclingUpdate");

	Params::WBP_LinedNotebook_EventScreen_C_HandleVariantCyclingUpdate Parms{};

	Parms.Current_Index = Current_Index;
	Parms.Num_Variants = Num_Variants;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.HideRewardTrack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::HideRewardTrack(bool Hide)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideRewardTrack");

	Params::WBP_LinedNotebook_EventScreen_C_HideRewardTrack Parms{};

	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.InitializeEventScreenData
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::InitializeEventScreenData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeEventScreenData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.IsMiniEventLive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_LinedNotebook_EventScreen_C::IsMiniEventLive()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsMiniEventLive");

	Params::WBP_LinedNotebook_EventScreen_C_IsMiniEventLive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.LerpEventVaultColor
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::LerpEventVaultColor()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("LerpEventVaultColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToChaseReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::MainToChaseReward(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MainToChaseReward");

	Params::WBP_LinedNotebook_EventScreen_C_MainToChaseReward Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToMoreInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::MainToMoreInfo(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MainToMoreInfo");

	Params::WBP_LinedNotebook_EventScreen_C_MainToMoreInfo Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToPreviewReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::MainToPreviewReward(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MainToPreviewReward");

	Params::WBP_LinedNotebook_EventScreen_C_MainToPreviewReward Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToPurchaseLevels
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::MainToPurchaseLevels(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MainToPurchaseLevels");

	Params::WBP_LinedNotebook_EventScreen_C_MainToPurchaseLevels Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToUpgrade
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::MainToUpgrade(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MainToUpgrade");

	Params::WBP_LinedNotebook_EventScreen_C_MainToUpgrade Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.MainToUpgradeReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::MainToUpgradeReward(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MainToUpgradeReward");

	Params::WBP_LinedNotebook_EventScreen_C_MainToUpgradeReward Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnCalendarEventEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::OnCalendarEventEnded(const class FString& EventName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCalendarEventEnded");

	Params::WBP_LinedNotebook_EventScreen_C_OnCalendarEventEnded Parms{};

	Parms.EventName = std::move(EventName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnCalendarEventStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::OnCalendarEventStarted(const class FString& EventName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCalendarEventStarted");

	Params::WBP_LinedNotebook_EventScreen_C_OnCalendarEventStarted Parms{};

	Parms.EventName = std::move(EventName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::OnInitialized()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnPreviewActionButtonUpdated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             RowDisplayName                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::OnPreviewActionButtonUpdated(const class FText& RowDisplayName, class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewActionButtonUpdated");

	Params::WBP_LinedNotebook_EventScreen_C_OnPreviewActionButtonUpdated Parms{};

	Parms.RowDisplayName = std::move(RowDisplayName);
	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnRewardPreviewItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortAccountItemDefinition*       Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bFreeTrack                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::OnRewardPreviewItemChanged(const class UFortAccountItemDefinition* Item, const bool bFreeTrack)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardPreviewItemChanged");

	Params::WBP_LinedNotebook_EventScreen_C_OnRewardPreviewItemChanged Parms{};

	Parms.Item = Item;
	Parms.bFreeTrack = bFreeTrack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnRewardTrackReady
// (Event, Protected, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::OnRewardTrackReady()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRewardTrackReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnScreenViewChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEventScreenView                        PrevScreenView                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEventScreenView                        NewScreenView                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::OnScreenViewChanged(const EEventScreenView PrevScreenView, const EEventScreenView NewScreenView)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnScreenViewChanged");

	Params::WBP_LinedNotebook_EventScreen_C_OnScreenViewChanged Parms{};

	Parms.PrevScreenView = PrevScreenView;
	Parms.NewScreenView = NewScreenView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.OnSetBonusInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBonusInfoMiniTagData            BonusInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_LinedNotebook_EventScreen_C::OnSetBonusInfo(const struct FBonusInfoMiniTagData& BonusInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetBonusInfo");

	Params::WBP_LinedNotebook_EventScreen_C_OnSetBonusInfo Parms{};

	Parms.BonusInfo = std::move(BonusInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::WBP_LinedNotebook_EventScreen_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.RegisterLayoutSlots
// (Event, Protected, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::RegisterLayoutSlots()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RegisterLayoutSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ResetConnectionLine
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::ResetConnectionLine()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetConnectionLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ReverseAnimMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUMGSequencePlayMode                    OutPlayMode                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::ReverseAnimMode(EUMGSequencePlayMode PlayMode, EUMGSequencePlayMode* OutPlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReverseAnimMode");

	Params::WBP_LinedNotebook_EventScreen_C_ReverseAnimMode Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPlayMode != nullptr)
		*OutPlayMode = Parms.OutPlayMode;
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_0
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_0()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_1
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_1()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_2
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_2()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_3
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_3()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_4
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_4()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SequenceEvent__ENTRYPOINTWBP_LinedNotebook_EventScreen_4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SetDisplayItemVM
// (Final, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItemVM*                      ViewModel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::SetDisplayItemVM(class UFortItemVM* ViewModel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDisplayItemVM");

	Params::WBP_LinedNotebook_EventScreen_C_SetDisplayItemVM Parms{};

	Parms.ViewModel = ViewModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SetRewardTrackLegal
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             LegalText                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_LinedNotebook_EventScreen_C::SetRewardTrackLegal(const class FText& LegalText)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRewardTrackLegal");

	Params::WBP_LinedNotebook_EventScreen_C_SetRewardTrackLegal Parms{};

	Parms.LegalText = std::move(LegalText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.Setup Layout Slots
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::Setup_Layout_Slots()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Setup Layout Slots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.SetupEventIsLive
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::SetupEventIsLive()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupEventIsLive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ShrinkUpsellConnectionLine
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::ShrinkUpsellConnectionLine()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShrinkUpsellConnectionLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpdatePreviewActionButton
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UCommonButtonBase*                ButtonInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::UpdatePreviewActionButton(const class FText& InText, class UCommonButtonBase* ButtonInstance)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdatePreviewActionButton");

	Params::WBP_LinedNotebook_EventScreen_C_UpdatePreviewActionButton Parms{};

	Parms.InText = std::move(InText);
	Parms.ButtonInstance = ButtonInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpdateTextPositions
// (BlueprintCallable, BlueprintEvent)

void UWBP_LinedNotebook_EventScreen_C::UpdateTextPositions()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateTextPositions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpdateVariantCounter
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CurrentVariantIndex                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalNumVariants                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::UpdateVariantCounter(int32 CurrentVariantIndex, int32 TotalNumVariants)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateVariantCounter");

	Params::WBP_LinedNotebook_EventScreen_C_UpdateVariantCounter Parms{};

	Parms.CurrentVariantIndex = CurrentVariantIndex;
	Parms.TotalNumVariants = TotalNumVariants;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.UpgradeToUpgradeReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::UpgradeToUpgradeReward(EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpgradeToUpgradeReward");

	Params::WBP_LinedNotebook_EventScreen_C_UpgradeToUpgradeReward Parms{};

	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LinedNotebook_EventScreen.WBP_LinedNotebook_EventScreen_C.ViewQuestsFocusChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasFocus                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LinedNotebook_EventScreen_C::ViewQuestsFocusChanged(bool HasFocus)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ViewQuestsFocusChanged");

	Params::WBP_LinedNotebook_EventScreen_C_ViewQuestsFocusChanged Parms{};

	Parms.HasFocus = HasFocus;

	UObject::ProcessEvent(Func, &Parms);
}

}

