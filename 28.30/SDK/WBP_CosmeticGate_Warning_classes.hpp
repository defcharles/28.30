#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CosmeticGate_Warning

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CosmeticGate_Warning.WBP_CosmeticGate_Warning_C
// 0x0090 (0x0350 - 0x02C0)
class UWBP_CosmeticGate_Warning_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseAnim;                                         // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Pulse;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Icon;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Text;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text;                                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Backplate_Base_C*            WBP_UIKit_Backplate_Base;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowIcon;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              IconSize;                                          // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowText;                                          // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WrapTextAt;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PreviewText;                                       // 0x0330(0x0018)(Edit, BlueprintVisible)
	bool                                          Show_Background;                                   // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowBlur;                                          // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Preview_Text;                                  // 0x034A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CosmeticGate_Warning(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetDisclaimerText(const class FText& InText);
	void SetIconImage(class UMaterialInterface* Material, class UMaterialInterface* Pulse_Material);
	void SetIconSize(const struct FVector2D& InSize);
	void SetShowIcon(bool Show_Icon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CosmeticGate_Warning_C">();
	}
	static class UWBP_CosmeticGate_Warning_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CosmeticGate_Warning_C>();
	}
};
static_assert(alignof(UWBP_CosmeticGate_Warning_C) == 0x000008, "Wrong alignment on UWBP_CosmeticGate_Warning_C");
static_assert(sizeof(UWBP_CosmeticGate_Warning_C) == 0x000350, "Wrong size on UWBP_CosmeticGate_Warning_C");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_CosmeticGate_Warning_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, PulseAnim) == 0x0002C8, "Member 'UWBP_CosmeticGate_Warning_C::PulseAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, BackgroundBlur) == 0x0002D0, "Member 'UWBP_CosmeticGate_Warning_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, Icon) == 0x0002D8, "Member 'UWBP_CosmeticGate_Warning_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, Image_Pulse) == 0x0002E0, "Member 'UWBP_CosmeticGate_Warning_C::Image_Pulse' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, Overlay_Icon) == 0x0002E8, "Member 'UWBP_CosmeticGate_Warning_C::Overlay_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, SizeBox_Text) == 0x0002F0, "Member 'UWBP_CosmeticGate_Warning_C::SizeBox_Text' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, Text) == 0x0002F8, "Member 'UWBP_CosmeticGate_Warning_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, WBP_UIKit_Backplate_Base) == 0x000300, "Member 'UWBP_CosmeticGate_Warning_C::WBP_UIKit_Backplate_Base' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, ShowIcon) == 0x000308, "Member 'UWBP_CosmeticGate_Warning_C::ShowIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, IconSize) == 0x000310, "Member 'UWBP_CosmeticGate_Warning_C::IconSize' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, ShowText) == 0x000320, "Member 'UWBP_CosmeticGate_Warning_C::ShowText' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, WrapTextAt) == 0x000328, "Member 'UWBP_CosmeticGate_Warning_C::WrapTextAt' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, PreviewText) == 0x000330, "Member 'UWBP_CosmeticGate_Warning_C::PreviewText' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, Show_Background) == 0x000348, "Member 'UWBP_CosmeticGate_Warning_C::Show_Background' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, ShowBlur) == 0x000349, "Member 'UWBP_CosmeticGate_Warning_C::ShowBlur' has a wrong offset!");
static_assert(offsetof(UWBP_CosmeticGate_Warning_C, Use_Preview_Text) == 0x00034A, "Member 'UWBP_CosmeticGate_Warning_C::Use_Preview_Text' has a wrong offset!");

}

