#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FNE_UILibrary

#include "Basic.hpp"


namespace SDK
{

// Enum FNE_UILibrary.EFNE_UIBlockVisualState
// NumValues: 0x000C
enum class EFNE_UIBlockVisualState : uint8
{
	Invalid                                  = 0,
	Hovered                                  = 1,
	Unhovered                                = 2,
	Focused                                  = 3,
	Unfocused                                = 4,
	Pressed                                  = 5,
	Released                                 = 6,
	Disabled                                 = 7,
	Enabled                                  = 8,
	Selected                                 = 9,
	DeselectedIdle                           = 10,
	DeselectedFocused                        = 11,
};

// Enum FNE_UILibrary.EFNE_UIBlockInstantTransitionState
// NumValues: 0x0007
enum class EFNE_UIBlockInstantTransitionState : uint8
{
	Invalid                                  = 0,
	InstantEnabled                           = 1,
	InstantDisabled                          = 2,
	InstantSelected                          = 3,
	InstantDeselected                        = 4,
	InstantLocked                            = 5,
	InstantUnlocked                          = 6,
};

// ScriptStruct FNE_UILibrary.FNE_UIBlockTiming
// 0x002C (0x002C - 0x0000)
struct FFNE_UIBlockTiming final
{
public:
	float                                         Hovering;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Unhovering;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Focusing;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Unfocusing;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Pressing;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Releasing;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Disabling;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Enabling;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Selecting;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeselectingIdle;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeselectingFocused;                                // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFNE_UIBlockTiming) == 0x000004, "Wrong alignment on FFNE_UIBlockTiming");
static_assert(sizeof(FFNE_UIBlockTiming) == 0x00002C, "Wrong size on FFNE_UIBlockTiming");
static_assert(offsetof(FFNE_UIBlockTiming, Hovering) == 0x000000, "Member 'FFNE_UIBlockTiming::Hovering' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Unhovering) == 0x000004, "Member 'FFNE_UIBlockTiming::Unhovering' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Focusing) == 0x000008, "Member 'FFNE_UIBlockTiming::Focusing' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Unfocusing) == 0x00000C, "Member 'FFNE_UIBlockTiming::Unfocusing' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Pressing) == 0x000010, "Member 'FFNE_UIBlockTiming::Pressing' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Releasing) == 0x000014, "Member 'FFNE_UIBlockTiming::Releasing' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Disabling) == 0x000018, "Member 'FFNE_UIBlockTiming::Disabling' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Enabling) == 0x00001C, "Member 'FFNE_UIBlockTiming::Enabling' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, Selecting) == 0x000020, "Member 'FFNE_UIBlockTiming::Selecting' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, DeselectingIdle) == 0x000024, "Member 'FFNE_UIBlockTiming::DeselectingIdle' has a wrong offset!");
static_assert(offsetof(FFNE_UIBlockTiming, DeselectingFocused) == 0x000028, "Member 'FFNE_UIBlockTiming::DeselectingFocused' has a wrong offset!");

}

