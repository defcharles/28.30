#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_G_Countdown

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_G_Countdown.BP_G_Countdown_C.CheckActiveCalendar
// 0x0050 (0x0050 - 0x0000)
struct BP_G_Countdown_C_CheckActiveCalendar final
{
public:
	bool                                          ActiveCalendarFound;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCalendarEventInformation_bIsEventActive; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeSinceBegin; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeUntilEnd; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCalendarEventInformation_TimeSpanRatio; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_CheckActiveCalendar) == 0x000008, "Wrong alignment on BP_G_Countdown_C_CheckActiveCalendar");
static_assert(sizeof(BP_G_Countdown_C_CheckActiveCalendar) == 0x000050, "Wrong size on BP_G_Countdown_C_CheckActiveCalendar");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, ActiveCalendarFound) == 0x000000, "Member 'BP_G_Countdown_C_CheckActiveCalendar::ActiveCalendarFound' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BP_G_Countdown_C_CheckActiveCalendar::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_G_Countdown_C_CheckActiveCalendar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_G_Countdown_C_CheckActiveCalendar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_GetCalendarEventInformation_bIsEventActive) == 0x000029, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_GetCalendarEventInformation_bIsEventActive' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_GetCalendarEventInformation_TimeSinceBegin) == 0x000030, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_GetCalendarEventInformation_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_GetCalendarEventInformation_TimeUntilEnd) == 0x000038, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_GetCalendarEventInformation_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_GetCalendarEventInformation_TimeSpanRatio) == 0x000040, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_GetCalendarEventInformation_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_CheckActiveCalendar, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_G_Countdown_C_CheckActiveCalendar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.ExecuteUbergraph_BP_G_Countdown
// 0x0450 (0x0450 - 0x0000)
struct BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_AuthorityMatchReady*   CallFunc_MatchReadyAsync_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_2;                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_2;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_2;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_2;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_1;                    // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_1;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_1;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_1;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventName;                      // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x009C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              Temp_struct_Variable;                              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable_1;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_UserWidget;                     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0140(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp_object_Variable;                              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CreateWidgetAsync*     CallFunc_CreateWidgetAsync_ReturnValue;            // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 SecondsRemaining)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0164(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0170(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_InitialCalendarSyncCompleted* CallFunc_InitialCalendarSyncCompleted_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue;           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Fade;                           // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x01A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x02F0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0300(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0400(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Generic_TimerManager_C*             K2Node_DynamicCast_AsBP_Generic_Timer_Manager;     // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 SecondsRemaining)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x041C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SecondsRemaining;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x042E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x042F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Generic_TimerManager_C*             K2Node_DynamicCast_AsBP_Generic_Timer_Manager_1;   // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown) == 0x000010, "Wrong alignment on BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown");
static_assert(sizeof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown) == 0x000450, "Wrong size on BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, EntryPoint) == 0x000000, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_MatchReadyAsync_ReturnValue) == 0x000008, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_MatchReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_EventName_2) == 0x000020, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_EventName_2' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeUntilEnd_2) == 0x000030, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeUntilEnd_2' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeSinceBegin_2) == 0x000038, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeSinceBegin_2' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeSpanRatio_2) == 0x000040, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeSpanRatio_2' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_EventName_1) == 0x000048, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_EventName_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeUntilEnd_1) == 0x000058, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeUntilEnd_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeSinceBegin_1) == 0x000060, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeSinceBegin_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeSpanRatio_1) == 0x000068, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeSpanRatio_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_EventName) == 0x000078, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeUntilEnd) == 0x000088, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeSinceBegin) == 0x000090, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_TimeSpanRatio) == 0x000098, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_2) == 0x00009C, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, Temp_real_Variable) == 0x0000A8, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, Temp_struct_Variable) == 0x0000B0, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, Temp_struct_Variable_1) == 0x0000B8, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, Temp_string_Variable) == 0x0000C0, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_UserWidget) == 0x000138, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_3) == 0x000140, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, Temp_object_Variable) == 0x000150, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_CreateWidgetAsync_ReturnValue) == 0x000158, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_CreateWidgetAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsValid_ReturnValue_1) == 0x000160, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsValid_ReturnValue_2) == 0x000161, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_4) == 0x000164, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_5) == 0x000170, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_InitialCalendarSyncCompleted_ReturnValue) == 0x000180, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_InitialCalendarSyncCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsValid_ReturnValue_3) == 0x000188, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_WatchCalendarEvent_ReturnValue) == 0x000190, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_WatchCalendarEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsValid_ReturnValue_4) == 0x000198, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_Fade) == 0x000199, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_Fade' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0001A0, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000288, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_MakeTransform_ReturnValue_1) == 0x000290, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_6) == 0x0002F0, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000300, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003E8, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, Temp_bool_Variable) == 0x0003F0, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_Not_PreBool_ReturnValue) == 0x0003F1, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0003F8, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_7) == 0x000400, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_DynamicCast_AsBP_Generic_Timer_Manager) == 0x000410, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_DynamicCast_AsBP_Generic_Timer_Manager' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_DynamicCast_bSuccess) == 0x000418, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsValid_ReturnValue_5) == 0x000419, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CreateDelegate_OutputDelegate_8) == 0x00041C, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_CustomEvent_SecondsRemaining) == 0x000428, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_CustomEvent_SecondsRemaining' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00042C, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_Not_PreBool_ReturnValue_1) == 0x00042D, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_IsDedicatedServer_ReturnValue) == 0x00042E, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_BooleanAND_ReturnValue) == 0x00042F, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000430, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_DynamicCast_AsBP_Generic_Timer_Manager_1) == 0x000438, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_DynamicCast_AsBP_Generic_Timer_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, K2Node_DynamicCast_bSuccess_1) == 0x000440, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000441, "Member 'BP_G_Countdown_C_ExecuteUbergraph_BP_G_Countdown::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.FadeOut
// 0x0001 (0x0001 - 0x0000)
struct BP_G_Countdown_C_FadeOut final
{
public:
	bool                                          Fade;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_FadeOut) == 0x000001, "Wrong alignment on BP_G_Countdown_C_FadeOut");
static_assert(sizeof(BP_G_Countdown_C_FadeOut) == 0x000001, "Wrong size on BP_G_Countdown_C_FadeOut");
static_assert(offsetof(BP_G_Countdown_C_FadeOut, Fade) == 0x000000, "Member 'BP_G_Countdown_C_FadeOut::Fade' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278
// 0x0008 (0x0008 - 0x0000)
struct BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278 final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278) == 0x000008, "Wrong alignment on BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278");
static_assert(sizeof(BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278) == 0x000008, "Wrong size on BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278");
static_assert(offsetof(BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278, UserWidget) == 0x000000, "Member 'BP_G_Countdown_C_OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278::UserWidget' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136
// 0x0028 (0x0028 - 0x0000)
struct BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136) == 0x000008, "Wrong alignment on BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136");
static_assert(sizeof(BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136) == 0x000028, "Wrong size on BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136");
static_assert(offsetof(BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136, EventName) == 0x000000, "Member 'BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136::EventName' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136, TimeUntilEnd) == 0x000010, "Member 'BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136, TimeSinceBegin) == 0x000018, "Member 'BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136, TimespanRatio) == 0x000020, "Member 'BP_G_Countdown_C_OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136::TimespanRatio' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136
// 0x0028 (0x0028 - 0x0000)
struct BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136) == 0x000008, "Wrong alignment on BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136");
static_assert(sizeof(BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136) == 0x000028, "Wrong size on BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136");
static_assert(offsetof(BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136, EventName) == 0x000000, "Member 'BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136::EventName' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136, TimeUntilEnd) == 0x000010, "Member 'BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136, TimeSinceBegin) == 0x000018, "Member 'BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136, TimespanRatio) == 0x000020, "Member 'BP_G_Countdown_C_OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136::TimespanRatio' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136
// 0x0028 (0x0028 - 0x0000)
struct BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136) == 0x000008, "Wrong alignment on BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136");
static_assert(sizeof(BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136) == 0x000028, "Wrong size on BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136");
static_assert(offsetof(BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136, EventName) == 0x000000, "Member 'BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136::EventName' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136, TimeUntilEnd) == 0x000010, "Member 'BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136, TimeSinceBegin) == 0x000018, "Member 'BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136, TimespanRatio) == 0x000020, "Member 'BP_G_Countdown_C_OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136::TimespanRatio' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnRep_MoveTimer
// 0x00F0 (0x00F0 - 0x0000)
struct BP_G_Countdown_C_OnRep_MoveTimer final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0000(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnRep_MoveTimer) == 0x000008, "Wrong alignment on BP_G_Countdown_C_OnRep_MoveTimer");
static_assert(sizeof(BP_G_Countdown_C_OnRep_MoveTimer) == 0x0000F0, "Wrong size on BP_G_Countdown_C_OnRep_MoveTimer");
static_assert(offsetof(BP_G_Countdown_C_OnRep_MoveTimer, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000000, "Member 'BP_G_Countdown_C_OnRep_MoveTimer::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnRep_MoveTimer, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000E8, "Member 'BP_G_Countdown_C_OnRep_MoveTimer::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnRep_PlayAudio
// 0x0001 (0x0001 - 0x0000)
struct BP_G_Countdown_C_OnRep_PlayAudio final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnRep_PlayAudio) == 0x000001, "Wrong alignment on BP_G_Countdown_C_OnRep_PlayAudio");
static_assert(sizeof(BP_G_Countdown_C_OnRep_PlayAudio) == 0x000001, "Wrong size on BP_G_Countdown_C_OnRep_PlayAudio");
static_assert(offsetof(BP_G_Countdown_C_OnRep_PlayAudio, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_G_Countdown_C_OnRep_PlayAudio::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.OnRep_Stage
// 0x0028 (0x0028 - 0x0000)
struct BP_G_Countdown_C_OnRep_Stage final
{
public:
	TDelegate<void(int32 SecondsRemaining)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Generic_TimerManager_C*             K2Node_DynamicCast_AsBP_Generic_Timer_Manager;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_OnRep_Stage) == 0x000008, "Wrong alignment on BP_G_Countdown_C_OnRep_Stage");
static_assert(sizeof(BP_G_Countdown_C_OnRep_Stage) == 0x000028, "Wrong size on BP_G_Countdown_C_OnRep_Stage");
static_assert(offsetof(BP_G_Countdown_C_OnRep_Stage, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_G_Countdown_C_OnRep_Stage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnRep_Stage, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_G_Countdown_C_OnRep_Stage::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnRep_Stage, K2Node_DynamicCast_AsBP_Generic_Timer_Manager) == 0x000018, "Member 'BP_G_Countdown_C_OnRep_Stage::K2Node_DynamicCast_AsBP_Generic_Timer_Manager' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnRep_Stage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_G_Countdown_C_OnRep_Stage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnRep_Stage, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_G_Countdown_C_OnRep_Stage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_OnRep_Stage, K2Node_SwitchInteger_CmpSuccess) == 0x000022, "Member 'BP_G_Countdown_C_OnRep_Stage::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.Play Audio Internal
// 0x0038 (0x0038 - 0x0000)
struct BP_G_Countdown_C_Play_Audio_Internal final
{
public:
	double                                        StartTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_StartTime_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_Play_Audio_Internal) == 0x000008, "Wrong alignment on BP_G_Countdown_C_Play_Audio_Internal");
static_assert(sizeof(BP_G_Countdown_C_Play_Audio_Internal) == 0x000038, "Wrong size on BP_G_Countdown_C_Play_Audio_Internal");
static_assert(offsetof(BP_G_Countdown_C_Play_Audio_Internal, StartTime) == 0x000000, "Member 'BP_G_Countdown_C_Play_Audio_Internal::StartTime' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_Play_Audio_Internal, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_G_Countdown_C_Play_Audio_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_Play_Audio_Internal, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_G_Countdown_C_Play_Audio_Internal::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_Play_Audio_Internal, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000028, "Member 'BP_G_Countdown_C_Play_Audio_Internal::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_G_Countdown_C_Play_Audio_Internal, CallFunc_SpawnSoundAtLocation_StartTime_ImplicitCast) == 0x000030, "Member 'BP_G_Countdown_C_Play_Audio_Internal::CallFunc_SpawnSoundAtLocation_StartTime_ImplicitCast' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.Seconds Updated
// 0x0004 (0x0004 - 0x0000)
struct BP_G_Countdown_C_Seconds_Updated final
{
public:
	int32                                         SecondsRemaining_0;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_Seconds_Updated) == 0x000004, "Wrong alignment on BP_G_Countdown_C_Seconds_Updated");
static_assert(sizeof(BP_G_Countdown_C_Seconds_Updated) == 0x000004, "Wrong size on BP_G_Countdown_C_Seconds_Updated");
static_assert(offsetof(BP_G_Countdown_C_Seconds_Updated, SecondsRemaining_0) == 0x000000, "Member 'BP_G_Countdown_C_Seconds_Updated::SecondsRemaining_0' has a wrong offset!");

// Function BP_G_Countdown.BP_G_Countdown_C.StopAudioInternal
// 0x0001 (0x0001 - 0x0000)
struct BP_G_Countdown_C_StopAudioInternal final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_G_Countdown_C_StopAudioInternal) == 0x000001, "Wrong alignment on BP_G_Countdown_C_StopAudioInternal");
static_assert(sizeof(BP_G_Countdown_C_StopAudioInternal) == 0x000001, "Wrong size on BP_G_Countdown_C_StopAudioInternal");
static_assert(offsetof(BP_G_Countdown_C_StopAudioInternal, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_G_Countdown_C_StopAudioInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

