#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixMidi

#include "Basic.hpp"

#include "HarmonixMidi_classes.hpp"
#include "HarmonixMidi_parameters.hpp"


namespace SDK
{

// Function HarmonixMidi.MidiNoteFunctionLibrary.ByteToMidiNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   InByte                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMidiNote                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMidiNote UMidiNoteFunctionLibrary::ByteToMidiNote(uint8 InByte)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("ByteToMidiNote");

	Params::MidiNoteFunctionLibrary_ByteToMidiNote Parms{};

	Parms.InByte = InByte;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMaxMidiNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMidiNote                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMidiNote UMidiNoteFunctionLibrary::GetMaxMidiNote()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMaxMidiNote");

	Params::MidiNoteFunctionLibrary_GetMaxMidiNote Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMaxNoteNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMidiNoteFunctionLibrary::GetMaxNoteNumber()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMaxNoteNumber");

	Params::MidiNoteFunctionLibrary_GetMaxNoteNumber Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMaxNoteVelocity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMidiNoteFunctionLibrary::GetMaxNoteVelocity()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMaxNoteVelocity");

	Params::MidiNoteFunctionLibrary_GetMaxNoteVelocity Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMaxNumNotes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMidiNoteFunctionLibrary::GetMaxNumNotes()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMaxNumNotes");

	Params::MidiNoteFunctionLibrary_GetMaxNumNotes Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMinMidiNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMidiNote                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMidiNote UMidiNoteFunctionLibrary::GetMinMidiNote()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMinMidiNote");

	Params::MidiNoteFunctionLibrary_GetMinMidiNote Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMinNoteNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMidiNoteFunctionLibrary::GetMinNoteNumber()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMinNoteNumber");

	Params::MidiNoteFunctionLibrary_GetMinNoteNumber Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.GetMinNoteVelocity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMidiNoteFunctionLibrary::GetMinNoteVelocity()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMinNoteVelocity");

	Params::MidiNoteFunctionLibrary_GetMinNoteVelocity Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.IntToMidiNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   inInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMidiNote                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMidiNote UMidiNoteFunctionLibrary::IntToMidiNote(int32 inInt)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IntToMidiNote");

	Params::MidiNoteFunctionLibrary_IntToMidiNote Parms{};

	Parms.inInt = inInt;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.MakeLiteralMidiNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMidiNote                        Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FMidiNote                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMidiNote UMidiNoteFunctionLibrary::MakeLiteralMidiNote(const struct FMidiNote& Value)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("MakeLiteralMidiNote");

	Params::MidiNoteFunctionLibrary_MakeLiteralMidiNote Parms{};

	Parms.Value = std::move(Value);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.MidiNoteToByte
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMidiNote                        InMidiNote                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMidiNoteFunctionLibrary::MidiNoteToByte(const struct FMidiNote& InMidiNote)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("MidiNoteToByte");

	Params::MidiNoteFunctionLibrary_MidiNoteToByte Parms{};

	Parms.InMidiNote = std::move(InMidiNote);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MidiNoteFunctionLibrary.MidiNoteToInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMidiNote                        InMidiNote                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMidiNoteFunctionLibrary::MidiNoteToInt(const struct FMidiNote& InMidiNote)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("MidiNoteToInt");

	Params::MidiNoteFunctionLibrary_MidiNoteToInt Parms{};

	Parms.InMidiNote = std::move(InMidiNote);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MusicalTickFunctionLibrary.GetQuarterNotesPerTick
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicalTickFunctionLibrary::GetQuarterNotesPerTick()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetQuarterNotesPerTick");

	Params::MusicalTickFunctionLibrary_GetQuarterNotesPerTick Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MusicalTickFunctionLibrary.GetTicksPerQuarterNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicalTickFunctionLibrary::GetTicksPerQuarterNote()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetTicksPerQuarterNote");

	Params::MusicalTickFunctionLibrary_GetTicksPerQuarterNote Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MusicalTickFunctionLibrary.GetTicksPerQuarterNoteInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMusicalTickFunctionLibrary::GetTicksPerQuarterNoteInt()
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetTicksPerQuarterNoteInt");

	Params::MusicalTickFunctionLibrary_GetTicksPerQuarterNoteInt Parms{};

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MusicalTickFunctionLibrary.QuarterNoteToTick
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InQuarterNote                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicalTickFunctionLibrary::QuarterNoteToTick(float InQuarterNote)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("QuarterNoteToTick");

	Params::MusicalTickFunctionLibrary_QuarterNoteToTick Parms{};

	Parms.InQuarterNote = InQuarterNote;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMidi.MusicalTickFunctionLibrary.TickToQuarterNote
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InTick                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicalTickFunctionLibrary::TickToQuarterNote(float InTick)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("TickToQuarterNote");

	Params::MusicalTickFunctionLibrary_TickToQuarterNote Parms{};

	Parms.InTick = InTick;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

