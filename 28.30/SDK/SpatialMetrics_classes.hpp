#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialMetrics

#include "Basic.hpp"

#include "SpatialMetricsCore_classes.hpp"
#include "SpatialMetrics_structs.hpp"


namespace SDK
{

// Class SpatialMetrics.SpatialActorCountMetric
// 0x0008 (0x00B8 - 0x00B0)
class USpatialActorCountMetric final : public USpatialMetricBase
{
public:
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialActorCountMetric">();
	}
	static class USpatialActorCountMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialActorCountMetric>();
	}
};
static_assert(alignof(USpatialActorCountMetric) == 0x000008, "Wrong alignment on USpatialActorCountMetric");
static_assert(sizeof(USpatialActorCountMetric) == 0x0000B8, "Wrong size on USpatialActorCountMetric");

// Class SpatialMetrics.SpatialActorResourceSizeMetric
// 0x00E8 (0x0140 - 0x0058)
class USpatialActorResourceSizeMetric final : public USpatialMetricInterface
{
public:
	uint8                                         Pad_58[0xE0];                                      // 0x0058(0x00E0)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdateTimeThresholdInMs;                           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EResourceSizeMemoryCategory                   MemoryCategoryFlags;                               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialActorResourceSizeMetric">();
	}
	static class USpatialActorResourceSizeMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialActorResourceSizeMetric>();
	}
};
static_assert(alignof(USpatialActorResourceSizeMetric) == 0x000008, "Wrong alignment on USpatialActorResourceSizeMetric");
static_assert(sizeof(USpatialActorResourceSizeMetric) == 0x000140, "Wrong size on USpatialActorResourceSizeMetric");
static_assert(offsetof(USpatialActorResourceSizeMetric, UpdateTimeThresholdInMs) == 0x000138, "Member 'USpatialActorResourceSizeMetric::UpdateTimeThresholdInMs' has a wrong offset!");
static_assert(offsetof(USpatialActorResourceSizeMetric, MemoryCategoryFlags) == 0x00013C, "Member 'USpatialActorResourceSizeMetric::MemoryCategoryFlags' has a wrong offset!");

// Class SpatialMetrics.SpatialAvailableMemoryMetric
// 0x0000 (0x00B0 - 0x00B0)
class USpatialAvailableMemoryMetric final : public USpatialMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialAvailableMemoryMetric">();
	}
	static class USpatialAvailableMemoryMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialAvailableMemoryMetric>();
	}
};
static_assert(alignof(USpatialAvailableMemoryMetric) == 0x000008, "Wrong alignment on USpatialAvailableMemoryMetric");
static_assert(sizeof(USpatialAvailableMemoryMetric) == 0x0000B0, "Wrong size on USpatialAvailableMemoryMetric");

// Class SpatialMetrics.SpatialFrameTimeMetric
// 0x0000 (0x00B0 - 0x00B0)
class USpatialFrameTimeMetric final : public USpatialMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialFrameTimeMetric">();
	}
	static class USpatialFrameTimeMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialFrameTimeMetric>();
	}
};
static_assert(alignof(USpatialFrameTimeMetric) == 0x000008, "Wrong alignment on USpatialFrameTimeMetric");
static_assert(sizeof(USpatialFrameTimeMetric) == 0x0000B0, "Wrong size on USpatialFrameTimeMetric");

// Class SpatialMetrics.SpatialGameUpdateTimeMetric
// 0x0000 (0x00B0 - 0x00B0)
class USpatialGameUpdateTimeMetric final : public USpatialMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialGameUpdateTimeMetric">();
	}
	static class USpatialGameUpdateTimeMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialGameUpdateTimeMetric>();
	}
};
static_assert(alignof(USpatialGameUpdateTimeMetric) == 0x000008, "Wrong alignment on USpatialGameUpdateTimeMetric");
static_assert(sizeof(USpatialGameUpdateTimeMetric) == 0x0000B0, "Wrong size on USpatialGameUpdateTimeMetric");

// Class SpatialMetrics.SpatialMemoryUsageMetric
// 0x0000 (0x00B0 - 0x00B0)
class USpatialMemoryUsageMetric final : public USpatialMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialMemoryUsageMetric">();
	}
	static class USpatialMemoryUsageMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialMemoryUsageMetric>();
	}
};
static_assert(alignof(USpatialMemoryUsageMetric) == 0x000008, "Wrong alignment on USpatialMemoryUsageMetric");
static_assert(sizeof(USpatialMemoryUsageMetric) == 0x0000B0, "Wrong size on USpatialMemoryUsageMetric");

// Class SpatialMetrics.SpatialProxyMetric
// 0x0050 (0x00A8 - 0x0058)
class USpatialProxyMetric final : public USpatialMetricInterface
{
public:
	uint8                                         Pad_58[0x50];                                      // 0x0058(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialProxyMetric">();
	}
	static class USpatialProxyMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialProxyMetric>();
	}
};
static_assert(alignof(USpatialProxyMetric) == 0x000008, "Wrong alignment on USpatialProxyMetric");
static_assert(sizeof(USpatialProxyMetric) == 0x0000A8, "Wrong size on USpatialProxyMetric");

// Class SpatialMetrics.SpatialRenderTimeMetric
// 0x0000 (0x00B0 - 0x00B0)
class USpatialRenderTimeMetric final : public USpatialMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialRenderTimeMetric">();
	}
	static class USpatialRenderTimeMetric* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialRenderTimeMetric>();
	}
};
static_assert(alignof(USpatialRenderTimeMetric) == 0x000008, "Wrong alignment on USpatialRenderTimeMetric");
static_assert(sizeof(USpatialRenderTimeMetric) == 0x0000B0, "Wrong size on USpatialRenderTimeMetric");

}

