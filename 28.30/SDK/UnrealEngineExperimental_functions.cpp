#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEngineExperimental

#include "Basic.hpp"

#include "UnrealEngineExperimental_classes.hpp"
#include "UnrealEngineExperimental_parameters.hpp"


namespace SDK
{

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugBoxInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Center                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Extent                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            Rotation                                               (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugBoxInternal(const struct FVector& Center, const struct FVector& Extent, const struct FQuat& Rotation, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugBoxInternal");

	Params::ControllerComponentDebugDraw_DrawDebugBoxInternal Parms{};

	Parms.Center = std::move(Center);
	Parms.Extent = std::move(Extent);
	Parms.Rotation = std::move(Rotation);
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugCapsuleInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Center                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfHeight                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            Rotation                                               (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugCapsuleInternal(const struct FVector& Center, const float HalfHeight, const float Radius, const struct FQuat& Rotation, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugCapsuleInternal");

	Params::ControllerComponentDebugDraw_DrawDebugCapsuleInternal Parms{};

	Parms.Center = std::move(Center);
	Parms.HalfHeight = HalfHeight;
	Parms.Radius = Radius;
	Parms.Rotation = std::move(Rotation);
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugConeInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Origin                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Length                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AngleWidth                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AngleHeight                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSides                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugConeInternal(const struct FVector& Origin, const struct FVector& Direction, const float Length, const float AngleWidth, const float AngleHeight, int32 NumSides, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugConeInternal");

	Params::ControllerComponentDebugDraw_DrawDebugConeInternal Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Direction = std::move(Direction);
	Parms.Length = Length;
	Parms.AngleWidth = AngleWidth;
	Parms.AngleHeight = AngleHeight;
	Parms.NumSides = NumSides;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugCylinderInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Segments                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugCylinderInternal(const struct FVector& Start, const struct FVector& End, const float Radius, int32 Segments, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugCylinderInternal");

	Params::ControllerComponentDebugDraw_DrawDebugCylinderInternal Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;
	Parms.Segments = Segments;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugDirectionalArrowInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LineEnd                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ArrowSize                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugDirectionalArrowInternal(const struct FVector& LineStart, const struct FVector& LineEnd, const float ArrowSize, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugDirectionalArrowInternal");

	Params::ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);
	Parms.ArrowSize = ArrowSize;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugLineInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LineEnd                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugLineInternal(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugLineInternal");

	Params::ControllerComponentDebugDraw_DrawDebugLineInternal Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugPointInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Position                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Size                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugPointInternal(const struct FVector& Position, const float Size, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugPointInternal");

	Params::ControllerComponentDebugDraw_DrawDebugPointInternal Parms{};

	Parms.Position = std::move(Position);
	Parms.Size = Size;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugSphereInternal
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Center                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Segments                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::DrawDebugSphereInternal(const struct FVector& Center, const float Radius, const int32 Segments, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DrawDebugSphereInternal");

	Params::ControllerComponentDebugDraw_DrawDebugSphereInternal Parms{};

	Parms.Center = std::move(Center);
	Parms.Radius = Radius;
	Parms.Segments = Segments;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.Thickness = Thickness;
	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.SetDebugDrawEnabled
// (RequiredAPI, Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                                    bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::SetDebugDrawEnabled(const bool bEnabled, const uint32 ChannelId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDebugDrawEnabled");

	Params::ControllerComponentDebugDraw_SetDebugDrawEnabled Parms{};

	Parms.bEnabled = bEnabled;
	Parms.ChannelId = ChannelId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.Clear
// (RequiredAPI, Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  InstanceID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::Clear(const uint32 ChannelId, const uint32 InstanceID) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Clear");

	Params::ControllerComponentDebugDraw_Clear Parms{};

	Parms.ChannelId = ChannelId;
	Parms.InstanceID = InstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.ClearChannel
// (RequiredAPI, Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::ClearChannel(const uint32 ChannelId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearChannel");

	Params::ControllerComponentDebugDraw_ClearChannel Parms{};

	Parms.ChannelId = ChannelId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnrealEngineExperimental.ControllerComponentDebugDraw.Reset
// (RequiredAPI, Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// uint32                                  ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControllerComponentDebugDraw::Reset(const uint32 ChannelId) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Reset");

	Params::ControllerComponentDebugDraw_Reset Parms{};

	Parms.ChannelId = ChannelId;

	UObject::ProcessEvent(Func, &Parms);
}

}

