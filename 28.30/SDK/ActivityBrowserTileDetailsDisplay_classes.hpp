#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserTileDetailsDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "DiscoveryBrowserUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C
// 0x01D0 (0x18E0 - 0x1710)
class UActivityBrowserTileDetailsDisplay_C final : public UFortActivityTileDetailsDisplay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1710(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_OnDisabledClick;                              // 0x1718(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_OnHoverUnhoverRehover;                        // 0x1720(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_OnImageLoaded;                                // 0x1728(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_HoverPulse;                                   // 0x1730(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_OnIntro;                                      // 0x1738(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_OnHoverSelect_GrowNonHeroRowTiles;            // 0x1740(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_OnHoverSelect;                                // 0x1748(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActivityBrowserSocialProof_C*      ActivityBrowserSocialProof;                        // 0x1750(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BannerText;                                        // 0x1758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisabledWarningMessage;                            // 0x1760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EpicBannerBg;                                      // 0x1768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ActivityInfo;                        // 0x1770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_LocksAndHearts;                      // 0x1778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_PlayerCount;                         // 0x1780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MultiMode;                                   // 0x1788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Logo_NotReady_Fort554488;                          // 0x1790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OriginalContentEpicBanner;                         // 0x1798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Favorite;                                  // 0x17A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InteractButtons;                           // 0x17A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_PurchaseRequired;                          // 0x17B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ovr_Primary;                                       // 0x17B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OvrDisabledWarningMessage;                         // 0x17C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Primary;                                   // 0x17C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Mobile;                                     // 0x17D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USqueegeeInjectionSlot_C*               SqueegeeSlot_Lock;                                 // 0x17D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TileStroke;                                        // 0x17E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TileThumbnail;                                     // 0x17E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Discovery_Favorite_C*              WBP_Discovery_Favorite;                            // 0x17F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Discovery_WarningIcon_C*           WBP_Discovery_WarningIcon;                         // 0x17F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LockedStatus_C*                    WBP_LockedStatus;                                  // 0x1800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsKeyArtValid;                                     // 0x1808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1809[0x7];                                     // 0x1809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               DefaultImage;                                      // 0x1810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTileActive;                                      // 0x1818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1819[0x7];                                     // 0x1819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DisabledClickTimer;                                // 0x1820(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DisabledClickDuration;                             // 0x1828(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivityValid;                                   // 0x1830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1831[0x7];                                     // 0x1831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TileSize;                                          // 0x1838(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextureParam;                                      // 0x1848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThumbnailAlpha;                                    // 0x184C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThumbnailScale;                                    // 0x1850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThumbnailDisabledOverlay;                          // 0x1854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FrameColor;                                        // 0x1858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor;                                         // 0x185C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EpicColor;                                         // 0x186C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StrokeColor;                                       // 0x187C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisabledColor;                                     // 0x188C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189C[0x4];                                     // 0x189C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BannerColorAnimator;                               // 0x18A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        VerticalTilePaddingOffset;                         // 0x18A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideDetails;                                       // 0x18B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPurchaseRequired;                                // 0x18B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowThumbnailHoverRehoverAnim;                   // 0x18B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B3[0x5];                                     // 0x18B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GridSingleColumnWidth;                             // 0x18B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GridSingleGutterWidth;                             // 0x18C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ratio16x9ConvertWidthToHeight;                     // 0x18C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPromotedHeroRow;                                 // 0x18D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D1[0x3];                                     // 0x18D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultGameModeTextSize;                           // 0x18D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnClicked();
	void BP_OnEntryReleased();
	void BP_OnHovered();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnUnhovered();
	void ColumnSizeToTileSize(int32 NewColumnSize, struct FVector2D* NewTileSize);
	void Construct();
	void DisableClickTimerExpired();
	void ExecuteUbergraph_ActivityBrowserTileDetailsDisplay(int32 EntryPoint);
	void Grow_Tile_on_Select_for_Non_Hero_Rows();
	void OnDetailsUpdated();
	void OnFriendsPlayingChanged(int32 NumPlaying);
	void OnIsFavoriteChanged(const bool bIsFavorite);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnLocalPlayerDemoted();
	void OnLocalPlayerPromotedToLeader();
	void OnLogoImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void OnPartySizeChanged(const int32 PartySize);
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void OnRequiresPurchaseChanged(const bool bRequiresPurchase);
	void OnTileActiveSet(const bool bIsTileActive);
	void OnUpdateColumnSize(int32 NewColumnSize);
	void PreConstruct(bool IsDesignTime);
	void ResetOnHoverSelectAnimation();
	void ResetOnImageLoadedAnimation(bool IsLoaded);
	void Set_Game_Mode_Text_Size(int32 FontSize);
	void Set_Game_Mode_Text_Size_Override();
	void SetBannerColorAnimator(double NewParam);
	void SetDetailsButtonAvailable();
	void SetDisabledText();
	void SetDisabledThumbnailOverlay();
	void SetExtraVerticalPaddingOffset(double InVerticalTilePadding);
	void SetFavoriteVisibility(bool IsFavorited);
	void SetFirstTimeModalStyle();
	void SetHideDetails(bool Hide_Details);
	void SetIsPromotedHero(bool IsPromotedHeroCarousel);
	void SetTileSize(const struct FVector2D& Size);
	void ShouldPlayTileVideo(bool* bOutResult);
	void TestActivityTileRequirePurchaseFalse();
	void TestActivityTileRequirePurchaseTrue();
	void UpdateCCU(const int32 CCUCount);
	void UpdateEpicActivityStyling(const class FString& CreatorDisplayName);
	void UpdateRequiresPurchase(bool IsPurchaseRequired_0);
	void UpdateSqueegeeWidgets(class UFortGameActivity* GameActivity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserTileDetailsDisplay_C">();
	}
	static class UActivityBrowserTileDetailsDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserTileDetailsDisplay_C>();
	}
};
static_assert(alignof(UActivityBrowserTileDetailsDisplay_C) == 0x000010, "Wrong alignment on UActivityBrowserTileDetailsDisplay_C");
static_assert(sizeof(UActivityBrowserTileDetailsDisplay_C) == 0x0018E0, "Wrong size on UActivityBrowserTileDetailsDisplay_C");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, UberGraphFrame) == 0x001710, "Member 'UActivityBrowserTileDetailsDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_OnDisabledClick) == 0x001718, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_OnDisabledClick' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_OnHoverUnhoverRehover) == 0x001720, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_OnHoverUnhoverRehover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_OnImageLoaded) == 0x001728, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_OnImageLoaded' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_HoverPulse) == 0x001730, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_HoverPulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_OnIntro) == 0x001738, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_OnIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_OnHoverSelect_GrowNonHeroRowTiles) == 0x001740, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_OnHoverSelect_GrowNonHeroRowTiles' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Anim_OnHoverSelect) == 0x001748, "Member 'UActivityBrowserTileDetailsDisplay_C::Anim_OnHoverSelect' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, ActivityBrowserSocialProof) == 0x001750, "Member 'UActivityBrowserTileDetailsDisplay_C::ActivityBrowserSocialProof' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, BannerText) == 0x001758, "Member 'UActivityBrowserTileDetailsDisplay_C::BannerText' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledWarningMessage) == 0x001760, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledWarningMessage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, EpicBannerBg) == 0x001768, "Member 'UActivityBrowserTileDetailsDisplay_C::EpicBannerBg' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HorizontalBox_ActivityInfo) == 0x001770, "Member 'UActivityBrowserTileDetailsDisplay_C::HorizontalBox_ActivityInfo' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HorizontalBox_LocksAndHearts) == 0x001778, "Member 'UActivityBrowserTileDetailsDisplay_C::HorizontalBox_LocksAndHearts' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HorizontalBox_PlayerCount) == 0x001780, "Member 'UActivityBrowserTileDetailsDisplay_C::HorizontalBox_PlayerCount' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Image_MultiMode) == 0x001788, "Member 'UActivityBrowserTileDetailsDisplay_C::Image_MultiMode' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Logo_NotReady_Fort554488) == 0x001790, "Member 'UActivityBrowserTileDetailsDisplay_C::Logo_NotReady_Fort554488' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OriginalContentEpicBanner) == 0x001798, "Member 'UActivityBrowserTileDetailsDisplay_C::OriginalContentEpicBanner' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Overlay_Favorite) == 0x0017A0, "Member 'UActivityBrowserTileDetailsDisplay_C::Overlay_Favorite' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Overlay_InteractButtons) == 0x0017A8, "Member 'UActivityBrowserTileDetailsDisplay_C::Overlay_InteractButtons' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Overlay_PurchaseRequired) == 0x0017B0, "Member 'UActivityBrowserTileDetailsDisplay_C::Overlay_PurchaseRequired' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Ovr_Primary) == 0x0017B8, "Member 'UActivityBrowserTileDetailsDisplay_C::Ovr_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OvrDisabledWarningMessage) == 0x0017C0, "Member 'UActivityBrowserTileDetailsDisplay_C::OvrDisabledWarningMessage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, SizeBox_Primary) == 0x0017C8, "Member 'UActivityBrowserTileDetailsDisplay_C::SizeBox_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Spacer_Mobile) == 0x0017D0, "Member 'UActivityBrowserTileDetailsDisplay_C::Spacer_Mobile' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, SqueegeeSlot_Lock) == 0x0017D8, "Member 'UActivityBrowserTileDetailsDisplay_C::SqueegeeSlot_Lock' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, TileStroke) == 0x0017E0, "Member 'UActivityBrowserTileDetailsDisplay_C::TileStroke' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, TileThumbnail) == 0x0017E8, "Member 'UActivityBrowserTileDetailsDisplay_C::TileThumbnail' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, WBP_Discovery_Favorite) == 0x0017F0, "Member 'UActivityBrowserTileDetailsDisplay_C::WBP_Discovery_Favorite' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, WBP_Discovery_WarningIcon) == 0x0017F8, "Member 'UActivityBrowserTileDetailsDisplay_C::WBP_Discovery_WarningIcon' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, WBP_LockedStatus) == 0x001800, "Member 'UActivityBrowserTileDetailsDisplay_C::WBP_LockedStatus' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsKeyArtValid) == 0x001808, "Member 'UActivityBrowserTileDetailsDisplay_C::IsKeyArtValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DefaultImage) == 0x001810, "Member 'UActivityBrowserTileDetailsDisplay_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsTileActive) == 0x001818, "Member 'UActivityBrowserTileDetailsDisplay_C::IsTileActive' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledClickTimer) == 0x001820, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledClickTimer' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledClickDuration) == 0x001828, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledClickDuration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsActivityValid) == 0x001830, "Member 'UActivityBrowserTileDetailsDisplay_C::IsActivityValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, TileSize) == 0x001838, "Member 'UActivityBrowserTileDetailsDisplay_C::TileSize' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, TextureParam) == 0x001848, "Member 'UActivityBrowserTileDetailsDisplay_C::TextureParam' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, ThumbnailAlpha) == 0x00184C, "Member 'UActivityBrowserTileDetailsDisplay_C::ThumbnailAlpha' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, ThumbnailScale) == 0x001850, "Member 'UActivityBrowserTileDetailsDisplay_C::ThumbnailScale' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, ThumbnailDisabledOverlay) == 0x001854, "Member 'UActivityBrowserTileDetailsDisplay_C::ThumbnailDisabledOverlay' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, FrameColor) == 0x001858, "Member 'UActivityBrowserTileDetailsDisplay_C::FrameColor' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, BaseColor) == 0x00185C, "Member 'UActivityBrowserTileDetailsDisplay_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, EpicColor) == 0x00186C, "Member 'UActivityBrowserTileDetailsDisplay_C::EpicColor' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, StrokeColor) == 0x00187C, "Member 'UActivityBrowserTileDetailsDisplay_C::StrokeColor' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledColor) == 0x00188C, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledColor' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, BannerColorAnimator) == 0x0018A0, "Member 'UActivityBrowserTileDetailsDisplay_C::BannerColorAnimator' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, VerticalTilePaddingOffset) == 0x0018A8, "Member 'UActivityBrowserTileDetailsDisplay_C::VerticalTilePaddingOffset' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HideDetails) == 0x0018B0, "Member 'UActivityBrowserTileDetailsDisplay_C::HideDetails' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsPurchaseRequired) == 0x0018B1, "Member 'UActivityBrowserTileDetailsDisplay_C::IsPurchaseRequired' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, bAllowThumbnailHoverRehoverAnim) == 0x0018B2, "Member 'UActivityBrowserTileDetailsDisplay_C::bAllowThumbnailHoverRehoverAnim' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, GridSingleColumnWidth) == 0x0018B8, "Member 'UActivityBrowserTileDetailsDisplay_C::GridSingleColumnWidth' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, GridSingleGutterWidth) == 0x0018C0, "Member 'UActivityBrowserTileDetailsDisplay_C::GridSingleGutterWidth' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Ratio16x9ConvertWidthToHeight) == 0x0018C8, "Member 'UActivityBrowserTileDetailsDisplay_C::Ratio16x9ConvertWidthToHeight' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsPromotedHeroRow) == 0x0018D0, "Member 'UActivityBrowserTileDetailsDisplay_C::IsPromotedHeroRow' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DefaultGameModeTextSize) == 0x0018D4, "Member 'UActivityBrowserTileDetailsDisplay_C::DefaultGameModeTextSize' has a wrong offset!");

}

