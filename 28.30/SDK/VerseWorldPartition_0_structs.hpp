#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseWorldPartition_0

#include "Basic.hpp"


namespace SDK
{

// VerseEnum VerseWorldPartition.VerseWorldPartition_data_layer_runtime_state
// NumValues: 0x0003
enum class EVerseWorldPartition_data_layer_runtime_state : uint8
{
	Unloaded                                 = 0,
	Loaded                                   = 1,
	Activated                                = 2,
};

// VerseStruct VerseWorldPartition.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseWorldPartition_0::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseWorldPartition_0::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseWorldPartition_0::Ftuple_L_R");
static_assert(sizeof(VerseWorldPartition_0::Ftuple_L_R) == 0x000001, "Wrong size on VerseWorldPartition_0::Ftuple_L_R");
static_assert(offsetof(VerseWorldPartition_0::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseWorldPartition_0::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// VerseStruct VerseWorldPartition.tuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R final
{
public:
	class UVerseWorldPartition_data_layer_asset*  __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EVerseWorldPartition_data_layer_runtime_state __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x932BF92E_Elem2 : 1;                      // 0x0009(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R");
static_assert(sizeof(Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R) == 0x000010, "Wrong size on Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R");
static_assert(offsetof(Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Ldata__layer__asset_Mdata__layer__runtime__state_Mlogic_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

