#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserArrowButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUILegacy_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserArrowButton.ActivityBrowserArrowButton_C
// 0x0070 (0x1550 - 0x14E0)
class UActivityBrowserArrowButton_C final : public UCommonButtonLegacy
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x14E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RowActive_Flip;                                    // 0x14E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RowInactive;                                       // 0x14F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RowActive;                                         // 0x14F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LargePulse;                                        // 0x1500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x1508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x1510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_LargePulse;                                  // 0x1518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Icon;                                              // 0x1520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_1;                                         // 0x1528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SBHitTestBounds;                                   // 0x1530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shadow;                                            // 0x1538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Flip;                                              // 0x1540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputActionOnSide;                                 // 0x1541(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x1542(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnHovered();
	void BP_OnUnhovered();
	void ExecuteUbergraph_ActivityBrowserArrowButton(int32 EntryPoint);
	void GetActiveAnimation(class UWidgetAnimation** ActiveAnimation);
	void HandleInputMethodChanged(ECommonInputType bNewInputType);
	void OnInitialized();
	void OnRowActiveChanged(bool IsActive_0);
	void OnRowReset(bool IsActive_0);
	void PreConstruct(bool IsDesignTime);
	void UpdateArrowColor(const struct FLinearColor& Color, const struct FLinearColor& HoverColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserArrowButton_C">();
	}
	static class UActivityBrowserArrowButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserArrowButton_C>();
	}
};
static_assert(alignof(UActivityBrowserArrowButton_C) == 0x000010, "Wrong alignment on UActivityBrowserArrowButton_C");
static_assert(sizeof(UActivityBrowserArrowButton_C) == 0x001550, "Wrong size on UActivityBrowserArrowButton_C");
static_assert(offsetof(UActivityBrowserArrowButton_C, UberGraphFrame) == 0x0014E0, "Member 'UActivityBrowserArrowButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, RowActive_Flip) == 0x0014E8, "Member 'UActivityBrowserArrowButton_C::RowActive_Flip' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, RowInactive) == 0x0014F0, "Member 'UActivityBrowserArrowButton_C::RowInactive' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, RowActive) == 0x0014F8, "Member 'UActivityBrowserArrowButton_C::RowActive' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, LargePulse) == 0x001500, "Member 'UActivityBrowserArrowButton_C::LargePulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Hover) == 0x001508, "Member 'UActivityBrowserArrowButton_C::Hover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Arrow) == 0x001510, "Member 'UActivityBrowserArrowButton_C::Arrow' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Arrow_LargePulse) == 0x001518, "Member 'UActivityBrowserArrowButton_C::Arrow_LargePulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Icon) == 0x001520, "Member 'UActivityBrowserArrowButton_C::Icon' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Overlay_1) == 0x001528, "Member 'UActivityBrowserArrowButton_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, SBHitTestBounds) == 0x001530, "Member 'UActivityBrowserArrowButton_C::SBHitTestBounds' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Shadow) == 0x001538, "Member 'UActivityBrowserArrowButton_C::Shadow' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, Flip) == 0x001540, "Member 'UActivityBrowserArrowButton_C::Flip' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, InputActionOnSide) == 0x001541, "Member 'UActivityBrowserArrowButton_C::InputActionOnSide' has a wrong offset!");
static_assert(offsetof(UActivityBrowserArrowButton_C, IsActive) == 0x001542, "Member 'UActivityBrowserArrowButton_C::IsActive' has a wrong offset!");

}

