#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AssembledMeshSystem

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "AssembledMeshSystem_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "StructUtils_structs.hpp"


namespace SDK
{

// Class AssembledMeshSystem.AssembledMeshSchema
// 0x01B0 (0x01E0 - 0x0030)
class UAssembledMeshSchema : public UPrimaryDataAsset
{
public:
	struct FGameplayTag                           MeshSchemaTag;                                     // 0x0030(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCustomizableObjectInstance> CustomizableObjectInstance;                        // 0x0038(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCustomizableObject>     CustomizableObject;                                // 0x0058(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComponentIndex;                                    // 0x0078(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           SkeletalMesh;                                      // 0x0080(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            SelectedIntParams;                                 // 0x00A0(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FString, float>                    SelectedFloatParams;                               // 0x00F0(0x0050)(NativeAccessSpecifierPublic)
	struct FAssembledMeshAttachmentRules          AttachmentRules;                                   // 0x0140(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AnimClass;                                         // 0x0190(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  SoundLibraryTags;                                  // 0x01B0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               AdditionalData;                                    // 0x01D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AssembledMeshSchema">();
	}
	static class UAssembledMeshSchema* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAssembledMeshSchema>();
	}
};
static_assert(alignof(UAssembledMeshSchema) == 0x000008, "Wrong alignment on UAssembledMeshSchema");
static_assert(sizeof(UAssembledMeshSchema) == 0x0001E0, "Wrong size on UAssembledMeshSchema");
static_assert(offsetof(UAssembledMeshSchema, MeshSchemaTag) == 0x000030, "Member 'UAssembledMeshSchema::MeshSchemaTag' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, CustomizableObjectInstance) == 0x000038, "Member 'UAssembledMeshSchema::CustomizableObjectInstance' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, CustomizableObject) == 0x000058, "Member 'UAssembledMeshSchema::CustomizableObject' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, ComponentIndex) == 0x000078, "Member 'UAssembledMeshSchema::ComponentIndex' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, SkeletalMesh) == 0x000080, "Member 'UAssembledMeshSchema::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, SelectedIntParams) == 0x0000A0, "Member 'UAssembledMeshSchema::SelectedIntParams' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, SelectedFloatParams) == 0x0000F0, "Member 'UAssembledMeshSchema::SelectedFloatParams' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, AttachmentRules) == 0x000140, "Member 'UAssembledMeshSchema::AttachmentRules' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, AnimClass) == 0x000190, "Member 'UAssembledMeshSchema::AnimClass' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, SoundLibraryTags) == 0x0001B0, "Member 'UAssembledMeshSchema::SoundLibraryTags' has a wrong offset!");
static_assert(offsetof(UAssembledMeshSchema, AdditionalData) == 0x0001D0, "Member 'UAssembledMeshSchema::AdditionalData' has a wrong offset!");

// Class AssembledMeshSystem.HeadAccDataAssetLink
// 0x0000 (0x0108 - 0x0108)
class UHeadAccDataAssetLink final : public UDataAssetLink
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HeadAccDataAssetLink">();
	}
	static class UHeadAccDataAssetLink* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeadAccDataAssetLink>();
	}
};
static_assert(alignof(UHeadAccDataAssetLink) == 0x000008, "Wrong alignment on UHeadAccDataAssetLink");
static_assert(sizeof(UHeadAccDataAssetLink) == 0x000108, "Wrong size on UHeadAccDataAssetLink");

// Class AssembledMeshSystem.NeckAccDataAssetLink
// 0x0000 (0x0108 - 0x0108)
class UNeckAccDataAssetLink final : public UDataAssetLink
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NeckAccDataAssetLink">();
	}
	static class UNeckAccDataAssetLink* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeckAccDataAssetLink>();
	}
};
static_assert(alignof(UNeckAccDataAssetLink) == 0x000008, "Wrong alignment on UNeckAccDataAssetLink");
static_assert(sizeof(UNeckAccDataAssetLink) == 0x000108, "Wrong size on UNeckAccDataAssetLink");

// Class AssembledMeshSystem.HipAccDataAssetLink
// 0x0000 (0x0108 - 0x0108)
class UHipAccDataAssetLink final : public UDataAssetLink
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HipAccDataAssetLink">();
	}
	static class UHipAccDataAssetLink* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHipAccDataAssetLink>();
	}
};
static_assert(alignof(UHipAccDataAssetLink) == 0x000008, "Wrong alignment on UHipAccDataAssetLink");
static_assert(sizeof(UHipAccDataAssetLink) == 0x000108, "Wrong size on UHipAccDataAssetLink");

// Class AssembledMeshSystem.AssembledMeshUserComponent
// 0x0038 (0x00D8 - 0x00A0)
class UAssembledMeshUserComponent : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAssembledMeshSchema*>           MeshParts;                                         // 0x00B0(0x0010)(Edit, Net, ZeroConstructor, RepNotify, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FAssembledComponentReferences>  MeshPartComponents;                                // 0x00C0(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          bAssignMeshPartsOnBeginPlay;                       // 0x00D0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CustomizationCompleted(const int32 PartIndex);
	void GatherAndAssignAssembledMeshParts();
	class USkeletalMeshComponent* GetAttachToComponent();
	void OnRep_MeshParts();
	void SetMeshPart(class UAssembledMeshSchema* InMeshPart);

	class UAssembledMeshSchema* GetMeshPart() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AssembledMeshUserComponent">();
	}
	static class UAssembledMeshUserComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAssembledMeshUserComponent>();
	}
};
static_assert(alignof(UAssembledMeshUserComponent) == 0x000008, "Wrong alignment on UAssembledMeshUserComponent");
static_assert(sizeof(UAssembledMeshUserComponent) == 0x0000D8, "Wrong size on UAssembledMeshUserComponent");
static_assert(offsetof(UAssembledMeshUserComponent, MeshParts) == 0x0000B0, "Member 'UAssembledMeshUserComponent::MeshParts' has a wrong offset!");
static_assert(offsetof(UAssembledMeshUserComponent, MeshPartComponents) == 0x0000C0, "Member 'UAssembledMeshUserComponent::MeshPartComponents' has a wrong offset!");
static_assert(offsetof(UAssembledMeshUserComponent, bAssignMeshPartsOnBeginPlay) == 0x0000D0, "Member 'UAssembledMeshUserComponent::bAssignMeshPartsOnBeginPlay' has a wrong offset!");

}

