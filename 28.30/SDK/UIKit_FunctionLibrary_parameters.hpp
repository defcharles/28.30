#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIKit_FunctionLibrary

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.Copy MID Parameter Overrides
// 0x0020 (0x0020 - 0x0000)
struct UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides final
{
public:
	class UMaterialInstanceDynamic*               Target_MID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Source_MID;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides");
static_assert(sizeof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides) == 0x000020, "Wrong size on UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, Target_MID) == 0x000000, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::Target_MID' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, Source_MID) == 0x000008, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::Source_MID' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, __WorldContext) == 0x000010, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'UIKit_FunctionLibrary_C_Copy_MID_Parameter_Overrides::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.InstantTransitionToDisabled
// 0x0018 (0x0018 - 0x0000)
struct UIKit_FunctionLibrary_C_InstantTransitionToDisabled final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_InstantTransitionToDisabled) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_InstantTransitionToDisabled");
static_assert(sizeof(UIKit_FunctionLibrary_C_InstantTransitionToDisabled) == 0x000018, "Wrong size on UIKit_FunctionLibrary_C_InstantTransitionToDisabled");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToDisabled, Mid) == 0x000000, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToDisabled::Mid' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToDisabled, IsSelected) == 0x000008, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToDisabled::IsSelected' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToDisabled, __WorldContext) == 0x000010, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToDisabled::__WorldContext' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.InstantTransitionToEnabled
// 0x0018 (0x0018 - 0x0000)
struct UIKit_FunctionLibrary_C_InstantTransitionToEnabled final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_InstantTransitionToEnabled) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_InstantTransitionToEnabled");
static_assert(sizeof(UIKit_FunctionLibrary_C_InstantTransitionToEnabled) == 0x000018, "Wrong size on UIKit_FunctionLibrary_C_InstantTransitionToEnabled");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToEnabled, Mid) == 0x000000, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToEnabled::Mid' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToEnabled, IsSelected) == 0x000008, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToEnabled::IsSelected' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToEnabled, __WorldContext) == 0x000010, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToEnabled::__WorldContext' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.InstantTransitionToSelected
// 0x0010 (0x0010 - 0x0000)
struct UIKit_FunctionLibrary_C_InstantTransitionToSelected final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_InstantTransitionToSelected) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_InstantTransitionToSelected");
static_assert(sizeof(UIKit_FunctionLibrary_C_InstantTransitionToSelected) == 0x000010, "Wrong size on UIKit_FunctionLibrary_C_InstantTransitionToSelected");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToSelected, Mid) == 0x000000, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToSelected::Mid' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_InstantTransitionToSelected, __WorldContext) == 0x000008, "Member 'UIKit_FunctionLibrary_C_InstantTransitionToSelected::__WorldContext' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.RemoveWidget
// 0x0028 (0x0028 - 0x0000)
struct UIKit_FunctionLibrary_C_RemoveWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_RemoveWidget) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_RemoveWidget");
static_assert(sizeof(UIKit_FunctionLibrary_C_RemoveWidget) == 0x000028, "Wrong size on UIKit_FunctionLibrary_C_RemoveWidget");
static_assert(offsetof(UIKit_FunctionLibrary_C_RemoveWidget, Widget) == 0x000000, "Member 'UIKit_FunctionLibrary_C_RemoveWidget::Widget' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_RemoveWidget, __WorldContext) == 0x000008, "Member 'UIKit_FunctionLibrary_C_RemoveWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_RemoveWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UIKit_FunctionLibrary_C_RemoveWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_RemoveWidget, CallFunc_GetParent_ReturnValue) == 0x000018, "Member 'UIKit_FunctionLibrary_C_RemoveWidget::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_RemoveWidget, CallFunc_RemoveChild_ReturnValue) == 0x000020, "Member 'UIKit_FunctionLibrary_C_RemoveWidget::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.SetGridSlotNudge
// 0x0030 (0x0030 - 0x0000)
struct UIKit_FunctionLibrary_C_SetGridSlotNudge final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Nudge;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_SetGridSlotNudge) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_SetGridSlotNudge");
static_assert(sizeof(UIKit_FunctionLibrary_C_SetGridSlotNudge) == 0x000030, "Wrong size on UIKit_FunctionLibrary_C_SetGridSlotNudge");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotNudge, Widget) == 0x000000, "Member 'UIKit_FunctionLibrary_C_SetGridSlotNudge::Widget' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotNudge, Nudge) == 0x000008, "Member 'UIKit_FunctionLibrary_C_SetGridSlotNudge::Nudge' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotNudge, __WorldContext) == 0x000018, "Member 'UIKit_FunctionLibrary_C_SetGridSlotNudge::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotNudge, K2Node_DynamicCast_AsGrid_Slot) == 0x000020, "Member 'UIKit_FunctionLibrary_C_SetGridSlotNudge::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotNudge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIKit_FunctionLibrary_C_SetGridSlotNudge::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.TransitionToDeselectedFocused
// 0x0010 (0x0010 - 0x0000)
struct UIKit_FunctionLibrary_C_TransitionToDeselectedFocused final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_TransitionToDeselectedFocused) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_TransitionToDeselectedFocused");
static_assert(sizeof(UIKit_FunctionLibrary_C_TransitionToDeselectedFocused) == 0x000010, "Wrong size on UIKit_FunctionLibrary_C_TransitionToDeselectedFocused");
static_assert(offsetof(UIKit_FunctionLibrary_C_TransitionToDeselectedFocused, Mid) == 0x000000, "Member 'UIKit_FunctionLibrary_C_TransitionToDeselectedFocused::Mid' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_TransitionToDeselectedFocused, __WorldContext) == 0x000008, "Member 'UIKit_FunctionLibrary_C_TransitionToDeselectedFocused::__WorldContext' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.TransitionToDeselectedIdle
// 0x0010 (0x0010 - 0x0000)
struct UIKit_FunctionLibrary_C_TransitionToDeselectedIdle final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_TransitionToDeselectedIdle) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_TransitionToDeselectedIdle");
static_assert(sizeof(UIKit_FunctionLibrary_C_TransitionToDeselectedIdle) == 0x000010, "Wrong size on UIKit_FunctionLibrary_C_TransitionToDeselectedIdle");
static_assert(offsetof(UIKit_FunctionLibrary_C_TransitionToDeselectedIdle, Mid) == 0x000000, "Member 'UIKit_FunctionLibrary_C_TransitionToDeselectedIdle::Mid' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_TransitionToDeselectedIdle, __WorldContext) == 0x000008, "Member 'UIKit_FunctionLibrary_C_TransitionToDeselectedIdle::__WorldContext' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.SetGridSlotAlignment
// 0x0028 (0x0028 - 0x0000)
struct UIKit_FunctionLibrary_C_SetGridSlotAlignment final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Horizontal;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Vertical;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_SetGridSlotAlignment) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_SetGridSlotAlignment");
static_assert(sizeof(UIKit_FunctionLibrary_C_SetGridSlotAlignment) == 0x000028, "Wrong size on UIKit_FunctionLibrary_C_SetGridSlotAlignment");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotAlignment, Widget) == 0x000000, "Member 'UIKit_FunctionLibrary_C_SetGridSlotAlignment::Widget' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotAlignment, Horizontal) == 0x000008, "Member 'UIKit_FunctionLibrary_C_SetGridSlotAlignment::Horizontal' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotAlignment, Vertical) == 0x000009, "Member 'UIKit_FunctionLibrary_C_SetGridSlotAlignment::Vertical' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotAlignment, __WorldContext) == 0x000010, "Member 'UIKit_FunctionLibrary_C_SetGridSlotAlignment::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotAlignment, K2Node_DynamicCast_AsGrid_Slot) == 0x000018, "Member 'UIKit_FunctionLibrary_C_SetGridSlotAlignment::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotAlignment, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UIKit_FunctionLibrary_C_SetGridSlotAlignment::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.SetGridSlotColumnAndRow
// 0x0030 (0x0030 - 0x0000)
struct UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row_Span;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column_Span;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow");
static_assert(sizeof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow) == 0x000030, "Wrong size on UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, Widget) == 0x000000, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::Widget' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, Row) == 0x000008, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::Row' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, Row_Span) == 0x00000C, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::Row_Span' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, Column) == 0x000010, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::Column' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, Column_Span) == 0x000014, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::Column_Span' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, __WorldContext) == 0x000018, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, K2Node_DynamicCast_AsGrid_Slot) == 0x000020, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIKit_FunctionLibrary_C_SetGridSlotColumnAndRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.SetGridSlotLayer
// 0x0028 (0x0028 - 0x0000)
struct UIKit_FunctionLibrary_C_SetGridSlotLayer final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Layer;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_SetGridSlotLayer) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_SetGridSlotLayer");
static_assert(sizeof(UIKit_FunctionLibrary_C_SetGridSlotLayer) == 0x000028, "Wrong size on UIKit_FunctionLibrary_C_SetGridSlotLayer");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotLayer, Widget) == 0x000000, "Member 'UIKit_FunctionLibrary_C_SetGridSlotLayer::Widget' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotLayer, Layer) == 0x000008, "Member 'UIKit_FunctionLibrary_C_SetGridSlotLayer::Layer' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotLayer, __WorldContext) == 0x000010, "Member 'UIKit_FunctionLibrary_C_SetGridSlotLayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotLayer, K2Node_DynamicCast_AsGrid_Slot) == 0x000018, "Member 'UIKit_FunctionLibrary_C_SetGridSlotLayer::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotLayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UIKit_FunctionLibrary_C_SetGridSlotLayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIKit_FunctionLibrary.UIKit_FunctionLibrary_C.SetGridSlotPadding
// 0x0030 (0x0030 - 0x0000)
struct UIKit_FunctionLibrary_C_SetGridSlotPadding final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Padding;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIKit_FunctionLibrary_C_SetGridSlotPadding) == 0x000008, "Wrong alignment on UIKit_FunctionLibrary_C_SetGridSlotPadding");
static_assert(sizeof(UIKit_FunctionLibrary_C_SetGridSlotPadding) == 0x000030, "Wrong size on UIKit_FunctionLibrary_C_SetGridSlotPadding");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotPadding, Widget) == 0x000000, "Member 'UIKit_FunctionLibrary_C_SetGridSlotPadding::Widget' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotPadding, Padding) == 0x000008, "Member 'UIKit_FunctionLibrary_C_SetGridSlotPadding::Padding' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotPadding, __WorldContext) == 0x000018, "Member 'UIKit_FunctionLibrary_C_SetGridSlotPadding::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotPadding, K2Node_DynamicCast_AsGrid_Slot) == 0x000020, "Member 'UIKit_FunctionLibrary_C_SetGridSlotPadding::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(UIKit_FunctionLibrary_C_SetGridSlotPadding, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIKit_FunctionLibrary_C_SetGridSlotPadding::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

