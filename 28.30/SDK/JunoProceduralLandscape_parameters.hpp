#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoProceduralLandscape

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "JunoProceduralLandscape_structs.hpp"


namespace SDK::Params
{

// Function JunoProceduralLandscape.JunoLandscapeExternalMaterialsCollector.CollectExternalMaterials
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials final
{
public:
	class UJunoLandscapeLayersData*               LayerData;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInlcudeMobile;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeStandard;                                  // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials) == 0x000008, "Wrong alignment on JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials");
static_assert(sizeof(JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials) == 0x000010, "Wrong size on JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials");
static_assert(offsetof(JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials, LayerData) == 0x000000, "Member 'JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials::LayerData' has a wrong offset!");
static_assert(offsetof(JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials, bInlcudeMobile) == 0x000008, "Member 'JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials::bInlcudeMobile' has a wrong offset!");
static_assert(offsetof(JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials, bIncludeStandard) == 0x000009, "Member 'JunoLandscapeExternalMaterialsCollector_CollectExternalMaterials::bIncludeStandard' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeGeneratorInterface.GenerateLandscape
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeGeneratorInterface_GenerateLandscape final
{
public:
	bool                                          bRenderHeightmap;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   WeightmapName;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJunoLandscapeRenderTarget*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeGeneratorInterface_GenerateLandscape) == 0x000008, "Wrong alignment on JunoLandscapeGeneratorInterface_GenerateLandscape");
static_assert(sizeof(JunoLandscapeGeneratorInterface_GenerateLandscape) == 0x000010, "Wrong size on JunoLandscapeGeneratorInterface_GenerateLandscape");
static_assert(offsetof(JunoLandscapeGeneratorInterface_GenerateLandscape, bRenderHeightmap) == 0x000000, "Member 'JunoLandscapeGeneratorInterface_GenerateLandscape::bRenderHeightmap' has a wrong offset!");
static_assert(offsetof(JunoLandscapeGeneratorInterface_GenerateLandscape, WeightmapName) == 0x000004, "Member 'JunoLandscapeGeneratorInterface_GenerateLandscape::WeightmapName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeGeneratorInterface_GenerateLandscape, ReturnValue) == 0x000008, "Member 'JunoLandscapeGeneratorInterface_GenerateLandscape::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeGeneratorInterface.Initialize
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeGeneratorInterface_Initialize final
{
public:
	class UJunoLandscapeRenderer*                 LandscapeRenderer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeGeneratorInterface_Initialize) == 0x000008, "Wrong alignment on JunoLandscapeGeneratorInterface_Initialize");
static_assert(sizeof(JunoLandscapeGeneratorInterface_Initialize) == 0x000008, "Wrong size on JunoLandscapeGeneratorInterface_Initialize");
static_assert(offsetof(JunoLandscapeGeneratorInterface_Initialize, LandscapeRenderer) == 0x000000, "Member 'JunoLandscapeGeneratorInterface_Initialize::LandscapeRenderer' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeGeneratorInterface.GetAffectedWeightmapLayers
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers) == 0x000008, "Wrong alignment on JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers");
static_assert(sizeof(JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers) == 0x000010, "Wrong size on JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers");
static_assert(offsetof(JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers, ReturnValue) == 0x000000, "Member 'JunoLandscapeGeneratorInterface_GetAffectedWeightmapLayers::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.K2_GetScalarParameterValue
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeMaterial_K2_GetScalarParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_K2_GetScalarParameterValue) == 0x000004, "Wrong alignment on JunoLandscapeMaterial_K2_GetScalarParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_K2_GetScalarParameterValue) == 0x000008, "Wrong size on JunoLandscapeMaterial_K2_GetScalarParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_K2_GetScalarParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_K2_GetScalarParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_K2_GetScalarParameterValue, ReturnValue) == 0x000004, "Member 'JunoLandscapeMaterial_K2_GetScalarParameterValue::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.K2_GetVectorParameterValue
// 0x0014 (0x0014 - 0x0000)
struct JunoLandscapeMaterial_K2_GetVectorParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_K2_GetVectorParameterValue) == 0x000004, "Wrong alignment on JunoLandscapeMaterial_K2_GetVectorParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_K2_GetVectorParameterValue) == 0x000014, "Wrong size on JunoLandscapeMaterial_K2_GetVectorParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_K2_GetVectorParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_K2_GetVectorParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_K2_GetVectorParameterValue, ReturnValue) == 0x000004, "Member 'JunoLandscapeMaterial_K2_GetVectorParameterValue::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetDoubleVectorParameterValue
// 0x0030 (0x0030 - 0x0000)
struct JunoLandscapeMaterial_SetDoubleVectorParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Value;                                             // 0x0010(0x0020)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_SetDoubleVectorParameterValue) == 0x000010, "Wrong alignment on JunoLandscapeMaterial_SetDoubleVectorParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_SetDoubleVectorParameterValue) == 0x000030, "Wrong size on JunoLandscapeMaterial_SetDoubleVectorParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_SetDoubleVectorParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_SetDoubleVectorParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_SetDoubleVectorParameterValue, Value) == 0x000010, "Member 'JunoLandscapeMaterial_SetDoubleVectorParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetJunoTextureParameterValue
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeMaterial_SetJunoTextureParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_SetJunoTextureParameterValue) == 0x000008, "Wrong alignment on JunoLandscapeMaterial_SetJunoTextureParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_SetJunoTextureParameterValue) == 0x000010, "Wrong size on JunoLandscapeMaterial_SetJunoTextureParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_SetJunoTextureParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_SetJunoTextureParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_SetJunoTextureParameterValue, Value) == 0x000008, "Member 'JunoLandscapeMaterial_SetJunoTextureParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetRenderTargetParameterValue
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeMaterial_SetRenderTargetParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoLandscapeRenderTarget*             Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_SetRenderTargetParameterValue) == 0x000008, "Wrong alignment on JunoLandscapeMaterial_SetRenderTargetParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_SetRenderTargetParameterValue) == 0x000010, "Wrong size on JunoLandscapeMaterial_SetRenderTargetParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_SetRenderTargetParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_SetRenderTargetParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_SetRenderTargetParameterValue, Value) == 0x000008, "Member 'JunoLandscapeMaterial_SetRenderTargetParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetScalarParameterValue
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeMaterial_SetScalarParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_SetScalarParameterValue) == 0x000004, "Wrong alignment on JunoLandscapeMaterial_SetScalarParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_SetScalarParameterValue) == 0x000008, "Wrong size on JunoLandscapeMaterial_SetScalarParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_SetScalarParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_SetScalarParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_SetScalarParameterValue, Value) == 0x000004, "Member 'JunoLandscapeMaterial_SetScalarParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetTextureParameterValue
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeMaterial_SetTextureParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_SetTextureParameterValue) == 0x000008, "Wrong alignment on JunoLandscapeMaterial_SetTextureParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_SetTextureParameterValue) == 0x000010, "Wrong size on JunoLandscapeMaterial_SetTextureParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_SetTextureParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_SetTextureParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_SetTextureParameterValue, Value) == 0x000008, "Member 'JunoLandscapeMaterial_SetTextureParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeMaterial.SetVectorParameterValue
// 0x0014 (0x0014 - 0x0000)
struct JunoLandscapeMaterial_SetVectorParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeMaterial_SetVectorParameterValue) == 0x000004, "Wrong alignment on JunoLandscapeMaterial_SetVectorParameterValue");
static_assert(sizeof(JunoLandscapeMaterial_SetVectorParameterValue) == 0x000014, "Wrong size on JunoLandscapeMaterial_SetVectorParameterValue");
static_assert(offsetof(JunoLandscapeMaterial_SetVectorParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeMaterial_SetVectorParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeMaterial_SetVectorParameterValue, Value) == 0x000004, "Member 'JunoLandscapeMaterial_SetVectorParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.BeginDrawCanvasToRenderTarget
// 0x0028 (0x0028 - 0x0000)
struct JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget final
{
public:
	class UJunoLandscapeRenderTarget*             TextureRenderTarget;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJunoLandscapeCanvas*                   Canvas;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDrawToRenderTargetContext_JunoLandscape Context;                                           // 0x0020(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget");
static_assert(sizeof(JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget) == 0x000028, "Wrong size on JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget");
static_assert(offsetof(JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget, TextureRenderTarget) == 0x000000, "Member 'JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget, Canvas) == 0x000008, "Member 'JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget::Canvas' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget, Size) == 0x000010, "Member 'JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget::Size' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget, Context) == 0x000020, "Member 'JunoLandscapeRenderer_BeginDrawCanvasToRenderTarget::Context' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.ClearRenderTarget2D
// 0x0018 (0x0018 - 0x0000)
struct JunoLandscapeRenderer_ClearRenderTarget2D final
{
public:
	class UJunoLandscapeRenderTarget*             TextureRenderTarget;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ClearColor;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_ClearRenderTarget2D) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_ClearRenderTarget2D");
static_assert(sizeof(JunoLandscapeRenderer_ClearRenderTarget2D) == 0x000018, "Wrong size on JunoLandscapeRenderer_ClearRenderTarget2D");
static_assert(offsetof(JunoLandscapeRenderer_ClearRenderTarget2D, TextureRenderTarget) == 0x000000, "Member 'JunoLandscapeRenderer_ClearRenderTarget2D::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_ClearRenderTarget2D, ClearColor) == 0x000008, "Member 'JunoLandscapeRenderer_ClearRenderTarget2D::ClearColor' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.CreateMaterial
// 0x0018 (0x0018 - 0x0000)
struct JunoLandscapeRenderer_CreateMaterial final
{
public:
	class UMaterialInterface*                     Parent;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OptionalName;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMIDCreationFlags                             CreationFlags;                                     // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoLandscapeMaterial*                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_CreateMaterial) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_CreateMaterial");
static_assert(sizeof(JunoLandscapeRenderer_CreateMaterial) == 0x000018, "Wrong size on JunoLandscapeRenderer_CreateMaterial");
static_assert(offsetof(JunoLandscapeRenderer_CreateMaterial, Parent) == 0x000000, "Member 'JunoLandscapeRenderer_CreateMaterial::Parent' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateMaterial, OptionalName) == 0x000008, "Member 'JunoLandscapeRenderer_CreateMaterial::OptionalName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateMaterial, CreationFlags) == 0x00000C, "Member 'JunoLandscapeRenderer_CreateMaterial::CreationFlags' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateMaterial, ReturnValue) == 0x000010, "Member 'JunoLandscapeRenderer_CreateMaterial::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.CreateRenderTarget2D
// 0x0028 (0x0028 - 0x0000)
struct JunoLandscapeRenderer_CreateRenderTarget2D final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureRenderTargetFormat                    Format;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ClearColor;                                        // 0x000C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoGenerateMipMaps;                              // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoLandscapeRenderTarget*             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_CreateRenderTarget2D) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_CreateRenderTarget2D");
static_assert(sizeof(JunoLandscapeRenderer_CreateRenderTarget2D) == 0x000028, "Wrong size on JunoLandscapeRenderer_CreateRenderTarget2D");
static_assert(offsetof(JunoLandscapeRenderer_CreateRenderTarget2D, Width) == 0x000000, "Member 'JunoLandscapeRenderer_CreateRenderTarget2D::Width' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateRenderTarget2D, Height) == 0x000004, "Member 'JunoLandscapeRenderer_CreateRenderTarget2D::Height' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateRenderTarget2D, Format) == 0x000008, "Member 'JunoLandscapeRenderer_CreateRenderTarget2D::Format' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateRenderTarget2D, ClearColor) == 0x00000C, "Member 'JunoLandscapeRenderer_CreateRenderTarget2D::ClearColor' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateRenderTarget2D, bAutoGenerateMipMaps) == 0x00001C, "Member 'JunoLandscapeRenderer_CreateRenderTarget2D::bAutoGenerateMipMaps' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CreateRenderTarget2D, ReturnValue) == 0x000020, "Member 'JunoLandscapeRenderer_CreateRenderTarget2D::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.DrawMaterialToRenderTarget
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeRenderer_DrawMaterialToRenderTarget final
{
public:
	class UJunoLandscapeRenderTarget*             TextureRenderTarget;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJunoLandscapeMaterial*                 Material;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_DrawMaterialToRenderTarget) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_DrawMaterialToRenderTarget");
static_assert(sizeof(JunoLandscapeRenderer_DrawMaterialToRenderTarget) == 0x000010, "Wrong size on JunoLandscapeRenderer_DrawMaterialToRenderTarget");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTarget, TextureRenderTarget) == 0x000000, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTarget::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTarget, Material) == 0x000008, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTarget::Material' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.DrawMaterialToRenderTargetUV
// 0x0068 (0x0068 - 0x0000)
struct JunoLandscapeRenderer_DrawMaterialToRenderTargetUV final
{
public:
	class UJunoLandscapeRenderTarget*             RenderTarget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJunoLandscapeMaterial*                 RenderMaterial;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenPosition;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenSize;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              CoordinatePosition;                                // 0x0030(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              CoordinateSize;                                    // 0x0040(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rotation;                                          // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PivotPoint;                                        // 0x0058(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_DrawMaterialToRenderTargetUV");
static_assert(sizeof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV) == 0x000068, "Wrong size on JunoLandscapeRenderer_DrawMaterialToRenderTargetUV");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, RenderTarget) == 0x000000, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::RenderTarget' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, RenderMaterial) == 0x000008, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::RenderMaterial' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, ScreenPosition) == 0x000010, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::ScreenPosition' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, ScreenSize) == 0x000020, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::ScreenSize' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, CoordinatePosition) == 0x000030, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::CoordinatePosition' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, CoordinateSize) == 0x000040, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::CoordinateSize' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, Rotation) == 0x000050, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::Rotation' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_DrawMaterialToRenderTargetUV, PivotPoint) == 0x000058, "Member 'JunoLandscapeRenderer_DrawMaterialToRenderTargetUV::PivotPoint' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.EndDrawCanvasToRenderTarget
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeRenderer_EndDrawCanvasToRenderTarget final
{
public:
	struct FDrawToRenderTargetContext_JunoLandscape Context;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_EndDrawCanvasToRenderTarget) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_EndDrawCanvasToRenderTarget");
static_assert(sizeof(JunoLandscapeRenderer_EndDrawCanvasToRenderTarget) == 0x000008, "Wrong size on JunoLandscapeRenderer_EndDrawCanvasToRenderTarget");
static_assert(offsetof(JunoLandscapeRenderer_EndDrawCanvasToRenderTarget, Context) == 0x000000, "Member 'JunoLandscapeRenderer_EndDrawCanvasToRenderTarget::Context' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.FindOrCreateNamedRenderTarget
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeRenderer_FindOrCreateNamedRenderTarget final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureRenderTargetFormat                    Format;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoLandscapeRenderTarget*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_FindOrCreateNamedRenderTarget) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_FindOrCreateNamedRenderTarget");
static_assert(sizeof(JunoLandscapeRenderer_FindOrCreateNamedRenderTarget) == 0x000010, "Wrong size on JunoLandscapeRenderer_FindOrCreateNamedRenderTarget");
static_assert(offsetof(JunoLandscapeRenderer_FindOrCreateNamedRenderTarget, Name_0) == 0x000000, "Member 'JunoLandscapeRenderer_FindOrCreateNamedRenderTarget::Name_0' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_FindOrCreateNamedRenderTarget, Format) == 0x000004, "Member 'JunoLandscapeRenderer_FindOrCreateNamedRenderTarget::Format' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_FindOrCreateNamedRenderTarget, ReturnValue) == 0x000008, "Member 'JunoLandscapeRenderer_FindOrCreateNamedRenderTarget::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.SetLandscapeMaterialScalarParameterValue
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue) == 0x000004, "Wrong alignment on JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue");
static_assert(sizeof(JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue) == 0x000008, "Wrong size on JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue");
static_assert(offsetof(JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue, Value) == 0x000004, "Member 'JunoLandscapeRenderer_SetLandscapeMaterialScalarParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.SetLandscapeMaterialTextureParameterValue
// 0x0010 (0x0010 - 0x0000)
struct JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoLandscapeRenderTarget*             Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue");
static_assert(sizeof(JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue) == 0x000010, "Wrong size on JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue");
static_assert(offsetof(JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue, Value) == 0x000008, "Member 'JunoLandscapeRenderer_SetLandscapeMaterialTextureParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.SetLandscapeMaterialVectorParameterValue
// 0x0014 (0x0014 - 0x0000)
struct JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue) == 0x000004, "Wrong alignment on JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue");
static_assert(sizeof(JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue) == 0x000014, "Wrong size on JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue");
static_assert(offsetof(JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue, ParameterName) == 0x000000, "Member 'JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue::ParameterName' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue, Value) == 0x000004, "Member 'JunoLandscapeRenderer_SetLandscapeMaterialVectorParameterValue::Value' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.CalculateRenderArea
// 0x00A0 (0x00A0 - 0x0000)
struct JunoLandscapeRenderer_CalculateRenderArea final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              HalfExtents;                                       // 0x0060(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                 ReturnValue;                                       // 0x0070(0x0028)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JunoLandscapeRenderer_CalculateRenderArea) == 0x000010, "Wrong alignment on JunoLandscapeRenderer_CalculateRenderArea");
static_assert(sizeof(JunoLandscapeRenderer_CalculateRenderArea) == 0x0000A0, "Wrong size on JunoLandscapeRenderer_CalculateRenderArea");
static_assert(offsetof(JunoLandscapeRenderer_CalculateRenderArea, Transform) == 0x000000, "Member 'JunoLandscapeRenderer_CalculateRenderArea::Transform' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CalculateRenderArea, HalfExtents) == 0x000060, "Member 'JunoLandscapeRenderer_CalculateRenderArea::HalfExtents' has a wrong offset!");
static_assert(offsetof(JunoLandscapeRenderer_CalculateRenderArea, ReturnValue) == 0x000070, "Member 'JunoLandscapeRenderer_CalculateRenderArea::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.GetOutputHeightmapRenderTarget
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeRenderer_GetOutputHeightmapRenderTarget final
{
public:
	class UJunoLandscapeRenderTarget*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_GetOutputHeightmapRenderTarget) == 0x000008, "Wrong alignment on JunoLandscapeRenderer_GetOutputHeightmapRenderTarget");
static_assert(sizeof(JunoLandscapeRenderer_GetOutputHeightmapRenderTarget) == 0x000008, "Wrong size on JunoLandscapeRenderer_GetOutputHeightmapRenderTarget");
static_assert(offsetof(JunoLandscapeRenderer_GetOutputHeightmapRenderTarget, ReturnValue) == 0x000000, "Member 'JunoLandscapeRenderer_GetOutputHeightmapRenderTarget::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeRenderer.GetUVWorldTransform
// 0x0020 (0x0020 - 0x0000)
struct JunoLandscapeRenderer_GetUVWorldTransform final
{
public:
	struct FVector4                               ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeRenderer_GetUVWorldTransform) == 0x000010, "Wrong alignment on JunoLandscapeRenderer_GetUVWorldTransform");
static_assert(sizeof(JunoLandscapeRenderer_GetUVWorldTransform) == 0x000020, "Wrong size on JunoLandscapeRenderer_GetUVWorldTransform");
static_assert(offsetof(JunoLandscapeRenderer_GetUVWorldTransform, ReturnValue) == 0x000000, "Member 'JunoLandscapeRenderer_GetUVWorldTransform::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeCanvas.GetNameReplacement
// 0x0008 (0x0008 - 0x0000)
struct JunoLandscapeCanvas_GetNameReplacement final
{
public:
	class FName                                   NameIn;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeCanvas_GetNameReplacement) == 0x000004, "Wrong alignment on JunoLandscapeCanvas_GetNameReplacement");
static_assert(sizeof(JunoLandscapeCanvas_GetNameReplacement) == 0x000008, "Wrong size on JunoLandscapeCanvas_GetNameReplacement");
static_assert(offsetof(JunoLandscapeCanvas_GetNameReplacement, NameIn) == 0x000000, "Member 'JunoLandscapeCanvas_GetNameReplacement::NameIn' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_GetNameReplacement, ReturnValue) == 0x000004, "Member 'JunoLandscapeCanvas_GetNameReplacement::ReturnValue' has a wrong offset!");

// Function JunoProceduralLandscape.JunoLandscapeCanvas.DrawMaterial
// 0x0060 (0x0060 - 0x0000)
struct JunoLandscapeCanvas_DrawMaterial final
{
public:
	class UJunoLandscapeMaterial*                 RenderMaterial;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenSize;                                        // 0x0018(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              CoordinatePosition;                                // 0x0028(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              CoordinateSize;                                    // 0x0038(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rotation;                                          // 0x0048(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PivotPoint;                                        // 0x0050(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoLandscapeCanvas_DrawMaterial) == 0x000008, "Wrong alignment on JunoLandscapeCanvas_DrawMaterial");
static_assert(sizeof(JunoLandscapeCanvas_DrawMaterial) == 0x000060, "Wrong size on JunoLandscapeCanvas_DrawMaterial");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, RenderMaterial) == 0x000000, "Member 'JunoLandscapeCanvas_DrawMaterial::RenderMaterial' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, ScreenPosition) == 0x000008, "Member 'JunoLandscapeCanvas_DrawMaterial::ScreenPosition' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, ScreenSize) == 0x000018, "Member 'JunoLandscapeCanvas_DrawMaterial::ScreenSize' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, CoordinatePosition) == 0x000028, "Member 'JunoLandscapeCanvas_DrawMaterial::CoordinatePosition' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, CoordinateSize) == 0x000038, "Member 'JunoLandscapeCanvas_DrawMaterial::CoordinateSize' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, Rotation) == 0x000048, "Member 'JunoLandscapeCanvas_DrawMaterial::Rotation' has a wrong offset!");
static_assert(offsetof(JunoLandscapeCanvas_DrawMaterial, PivotPoint) == 0x000050, "Member 'JunoLandscapeCanvas_DrawMaterial::PivotPoint' has a wrong offset!");

}

