#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehiclesFrontend

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// Class VehiclesFrontend.DelMarItemDetailsVM
// 0x0000 (0x03C0 - 0x03C0)
class UDelMarItemDetailsVM final : public UAthenaItemDetailsVM
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarItemDetailsVM">();
	}
	static class UDelMarItemDetailsVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarItemDetailsVM>();
	}
};
static_assert(alignof(UDelMarItemDetailsVM) == 0x000010, "Wrong alignment on UDelMarItemDetailsVM");
static_assert(sizeof(UDelMarItemDetailsVM) == 0x0003C0, "Wrong size on UDelMarItemDetailsVM");

// Class VehiclesFrontend.DelMarItemVM
// 0x0000 (0x0110 - 0x0110)
class UDelMarItemVM final : public UAthenaItemVM
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarItemVM">();
	}
	static class UDelMarItemVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarItemVM>();
	}
};
static_assert(alignof(UDelMarItemVM) == 0x000008, "Wrong alignment on UDelMarItemVM");
static_assert(sizeof(UDelMarItemVM) == 0x000110, "Wrong size on UDelMarItemVM");

// Class VehiclesFrontend.DelMarLockerCategoryConfig
// 0x0018 (0x0148 - 0x0130)
class UDelMarLockerCategoryConfig final : public UAthenaLockerCategoryConfig
{
public:
	class UCosmeticLoadoutSchema*                 VehicleLoadoutSchema;                              // 0x0130(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetType>              AllowedAssetTypes;                                 // 0x0138(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLockerCategoryConfig">();
	}
	static class UDelMarLockerCategoryConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLockerCategoryConfig>();
	}
};
static_assert(alignof(UDelMarLockerCategoryConfig) == 0x000008, "Wrong alignment on UDelMarLockerCategoryConfig");
static_assert(sizeof(UDelMarLockerCategoryConfig) == 0x000148, "Wrong size on UDelMarLockerCategoryConfig");
static_assert(offsetof(UDelMarLockerCategoryConfig, VehicleLoadoutSchema) == 0x000130, "Member 'UDelMarLockerCategoryConfig::VehicleLoadoutSchema' has a wrong offset!");
static_assert(offsetof(UDelMarLockerCategoryConfig, AllowedAssetTypes) == 0x000138, "Member 'UDelMarLockerCategoryConfig::AllowedAssetTypes' has a wrong offset!");

// Class VehiclesFrontend.DelMarLockerCategoryVM
// 0x0000 (0x01B0 - 0x01B0)
class UDelMarLockerCategoryVM final : public UAthenaLockerCategoryVM
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLockerCategoryVM">();
	}
	static class UDelMarLockerCategoryVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLockerCategoryVM>();
	}
};
static_assert(alignof(UDelMarLockerCategoryVM) == 0x000008, "Wrong alignment on UDelMarLockerCategoryVM");
static_assert(sizeof(UDelMarLockerCategoryVM) == 0x0001B0, "Wrong size on UDelMarLockerCategoryVM");

}

