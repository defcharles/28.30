#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemCard_Base

#include "Basic.hpp"

#include "CommonUI_structs.hpp"
#include "S_UI_BackplateCornerRadiusValues_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Bind Preview Actions
// 0x03D0 (0x03D0 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions final
{
public:
	class UFortItemPreviewWidget*                 Preview_Widget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_ContextMenuAnchorButton_Base_C* Context_Menu_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFortItemVM*                            Item_VM;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetSpecialPreviewActions_ReturnValue;     // 0x0048(0x0010)(ReferenceParm)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCommonInputActionDataBase             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0360)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions) == 0x000010, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions) == 0x0003D0, "Wrong size on WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, Preview_Widget) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::Preview_Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, Context_Menu_0) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::Context_Menu_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, Item_VM) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::Item_VM' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_GetSpecialPreviewActions_ReturnValue) == 0x000048, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_GetSpecialPreviewActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003C0, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_Array_Length_ReturnValue) == 0x0003C4, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_Less_IntInt_ReturnValue) == 0x0003C8, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions, CallFunc_TextIsEmpty_ReturnValue) == 0x0003C9, "Member 'WBP_UIKit_ItemCard_Base_C_Bind_Preview_Actions::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.ExecuteUbergraph_WBP_UIKit_ItemCard_Base
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_CustomEvent_MaterialInterfaceValue;         // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0058(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0078(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base) == 0x0000A8, "Wrong size on WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, EntryPoint) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, Temp_bool_Variable) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, Temp_object_Variable) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_DynamicCast_AsMaterial_Interface) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_CustomEvent_MaterialInterfaceValue) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_CustomEvent_MaterialInterfaceValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000048, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000050, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000058, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_Select_Default) == 0x000078, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_Event_IsDesignTime) == 0x000098, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'WBP_UIKit_ItemCard_Base_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.InitializeItemCard
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_InitializeItemCard final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_InitializeItemCard) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_InitializeItemCard");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_InitializeItemCard) == 0x000008, "Wrong size on WBP_UIKit_ItemCard_Base_C_InitializeItemCard");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_InitializeItemCard, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_InitializeItemCard::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1) == 0x000008, "Wrong size on WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1, Loaded) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_OnLoaded_3676C6CA4C3EB62147F5FD96AF4186A1::Loaded' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.PlaySoundHovered
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_PlaySoundHovered final
{
public:
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_PlaySoundHovered) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_PlaySoundHovered");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_PlaySoundHovered) == 0x000010, "Wrong size on WBP_UIKit_ItemCard_Base_C_PlaySoundHovered");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PlaySoundHovered, CallFunc_SpawnSound2D_ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_PlaySoundHovered::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PlaySoundHovered, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_PlaySoundHovered::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.PlaySoundPressed
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_PlaySoundPressed final
{
public:
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_PlaySoundPressed) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_PlaySoundPressed");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_PlaySoundPressed) == 0x000010, "Wrong size on WBP_UIKit_ItemCard_Base_C_PlaySoundPressed");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PlaySoundPressed, CallFunc_SpawnSound2D_ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_PlaySoundPressed::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PlaySoundPressed, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_PlaySoundPressed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Base_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.PresetForDesignTime
// 0x000A (0x000A - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_PresetForDesignTime final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue_1;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_PresetForDesignTime");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime) == 0x00000A, "Wrong size on WBP_UIKit_ItemCard_Base_C_PresetForDesignTime");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, Temp_bool_Variable) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, CallFunc_HasAnyChildren_ReturnValue) == 0x000006, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, CallFunc_HasAnyChildren_ReturnValue_1) == 0x000007, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::CallFunc_HasAnyChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, K2Node_Select_Default) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_PresetForDesignTime, K2Node_Select_Default_1) == 0x000009, "Member 'WBP_UIKit_ItemCard_Base_C_PresetForDesignTime::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Refresh Equipped Visibility
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility final
{
public:
	int32                                         EquippedSlot;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, EquippedSlot) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::EquippedSlot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, Temp_bool_Variable) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, Temp_byte_Variable) == 0x000005, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility, K2Node_Select_Default) == 0x000022, "Member 'WBP_UIKit_ItemCard_Base_C_Refresh_Equipped_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Set Context Menu Action
// 0x0088 (0x0088 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action final
{
public:
	class UWBP_UIKit_ContextMenuAnchorButton_Base_C* Context_Menu_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Preview_Action_ID;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Preview_Action_Text;                               // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void()>                             Preview_Action_IteractionDelegate;                 // 0x0028(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIKitContextMenuActionInfo            K2Node_MakeStruct_UIKitContextMenuActionInfo;      // 0x0038(0x0050)(ContainsInstancedReference)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action) == 0x000088, "Wrong size on WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action, Context_Menu_0) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action::Context_Menu_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action, Preview_Action_ID) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action::Preview_Action_ID' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action, Preview_Action_Text) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action::Preview_Action_Text' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action, Preview_Action_IteractionDelegate) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action::Preview_Action_IteractionDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action, K2Node_MakeStruct_UIKitContextMenuActionInfo) == 0x000038, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Context_Menu_Action::K2Node_MakeStruct_UIKitContextMenuActionInfo' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Set Custom Widget
// 0x0058 (0x0058 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget final
{
public:
	class UFortItemVM*                            ItemVM;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFortLockerCategoryConfig*        CallFunc_GetItemCategory_ReturnValue;              // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModelByClass_NewValue_CastInput;   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModelByClass_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue_1;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget) == 0x000058, "Wrong size on WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, ItemVM) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::ItemVM' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_GetItemCategory_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_GetItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_IsValidClass_ReturnValue) == 0x000011, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_GetExtension_ReturnValue) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_SetContent_ReturnValue) == 0x000030, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_SetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_SetViewModelByClass_NewValue_CastInput) == 0x000038, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_SetViewModelByClass_NewValue_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_SetViewModelByClass_ReturnValue) == 0x000048, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_SetViewModelByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget, CallFunc_SetContent_ReturnValue_1) == 0x000050, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Custom_Widget::CallFunc_SetContent_ReturnValue_1' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Set Default Background
// 0x002C (0x002C - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Set_Default_Background final
{
public:
	struct FLinearColor                           Color_1;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_2;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradientStart;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradientEnd;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradientAngle;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background) == 0x000004, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Set_Default_Background");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background) == 0x00002C, "Wrong size on WBP_UIKit_ItemCard_Base_C_Set_Default_Background");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background, Color_1) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Default_Background::Color_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background, Color_2) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Default_Background::Color_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background, GradientStart) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Default_Background::GradientStart' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background, GradientEnd) == 0x000024, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Default_Background::GradientEnd' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Default_Background, GradientAngle) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Default_Background::GradientAngle' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Set Item Color
// 0x0014 (0x0014 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Set_Item_Color final
{
public:
	struct FSlateColor                            VariantColor;                                      // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Set_Item_Color) == 0x000004, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Set_Item_Color");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Set_Item_Color) == 0x000014, "Wrong size on WBP_UIKit_ItemCard_Base_C_Set_Item_Color");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Item_Color, VariantColor) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Item_Color::VariantColor' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.Set Item Is Juno
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno final
{
public:
	bool                                          IsIconVisible;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno, IsIconVisible) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno::IsIconVisible' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_Set_Item_Is_Juno::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetAsyncBackground
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetAsyncBackground final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      MaterialInterfaceValue;                            // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetAsyncBackground) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetAsyncBackground");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetAsyncBackground) == 0x000020, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetAsyncBackground");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetAsyncBackground, MaterialInterfaceValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetAsyncBackground::MaterialInterfaceValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetBackgroundBlendMode
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode final
{
public:
	bool                                          UseAdaptiveColor;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode) == 0x000004, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode) == 0x000020, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, UseAdaptiveColor) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::UseAdaptiveColor' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, Temp_real_Variable) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, Temp_real_Variable_1) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, Temp_real_Variable_2) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, Temp_real_Variable_3) == 0x000014, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, K2Node_Select_Default) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode, K2Node_Select_Default_1) == 0x00001C, "Member 'WBP_UIKit_ItemCard_Base_C_SetBackgroundBlendMode::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetFocusState
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetFocusState final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetFocusState) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetFocusState");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetFocusState) == 0x000018, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetFocusState");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetFocusState, IsFocused) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetFocusState::IsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetFocusState, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetFocusState::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetFocusState, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetFocusState::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetGridAlignment
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetGridAlignment final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Horizontal;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Vertical;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetGridAlignment");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment) == 0x000020, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetGridAlignment");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment, Widget) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridAlignment::Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment, Horizontal) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridAlignment::Horizontal' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment, Vertical) == 0x000009, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridAlignment::Vertical' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment, K2Node_DynamicCast_AsGrid_Slot) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridAlignment::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridAlignment, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridAlignment::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetGridColumnAndRow
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row_Span;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column_Span;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, Widget) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, Row) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::Row' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, Row_Span) == 0x00000C, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::Row_Span' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, Column) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::Column' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, Column_Span) == 0x000014, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::Column_Span' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, K2Node_DynamicCast_AsGrid_Slot) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridColumnAndRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetGridLayer
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetGridLayer final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Layer;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetGridLayer) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetGridLayer");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetGridLayer) == 0x000020, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetGridLayer");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridLayer, Widget) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridLayer::Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridLayer, Layer) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridLayer::Layer' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridLayer, K2Node_DynamicCast_AsGrid_Slot) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridLayer::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridLayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridLayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetGridNudge
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetGridNudge final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Nudge;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetGridNudge) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetGridNudge");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetGridNudge) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetGridNudge");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridNudge, Widget) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridNudge::Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridNudge, Nudge) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridNudge::Nudge' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridNudge, K2Node_DynamicCast_AsGrid_Slot) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridNudge::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridNudge, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridNudge::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetGridPadding
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetGridPadding final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Padding_0;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetGridPadding) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetGridPadding");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetGridPadding) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetGridPadding");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridPadding, Widget) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridPadding::Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridPadding, Padding_0) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridPadding::Padding_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridPadding, K2Node_DynamicCast_AsGrid_Slot) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridPadding::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetGridPadding, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_SetGridPadding::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemAnimationScale
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale final
{
public:
	double                                        Item_Scale;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale) == 0x000018, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale, Item_Scale) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale::Item_Scale' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000014, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemAnimationScale::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemCardSize
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemCardSize final
{
public:
	struct FVector2D                              ItemSize;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemCardSize");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemCardSize");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize, ItemSize) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemCardSize::ItemSize' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemCardSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemCardSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemCardSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemCardSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000024, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemCardSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemHasConflict
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemHasConflict final
{
public:
	bool                                          HasConflict;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemHasConflict");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemHasConflict");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict, HasConflict) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemHasConflict::HasConflict' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemHasConflict::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemHasConflict::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemHasConflict::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemHasConflict, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemHasConflict::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemImage
// 0x0070 (0x0070 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemImage final
{
public:
	TSoftObjectPtr<class UTexture2D>              Item_Image;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0028(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0050(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemImage) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemImage");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemImage) == 0x000070, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemImage");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, Item_Image) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::Item_Image' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, CallFunc_InEditor_ReturnValue) == 0x000021, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::CallFunc_InEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, Temp_bool_Variable) == 0x000049, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemImage, K2Node_Select_Default) == 0x000050, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemImage::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsAgeGated
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated final
{
public:
	bool                                          IsAgeGated;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated, IsAgeGated) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated::IsAgeGated' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsAgeGated::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsArchived
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsArchived final
{
public:
	bool                                          Is_Archived;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsArchived");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsArchived");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived, Is_Archived) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsArchived::Is_Archived' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsArchived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsArchived::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsArchived::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsArchived, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsArchived::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsEnhanced
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced final
{
public:
	bool                                          Is_Enhanced;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced, Is_Enhanced) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsEnhanced::Is_Enhanced' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped final
{
public:
	bool                                          Is_Equipped_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped, Is_Equipped_0) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsEquipped::Is_Equipped_0' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsEquippedSecondary
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary final
{
public:
	bool                                          Is_Equipped_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquippedSlot;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary) == 0x000004, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary) == 0x000008, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary, Is_Equipped_0) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary::Is_Equipped_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary, EquippedSlot) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsEquippedSecondary::EquippedSlot' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsFavorite
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite final
{
public:
	bool                                          Is_Favorite;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite, Is_Favorite) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite::Is_Favorite' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsFavorite::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsLocked
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsLocked final
{
public:
	bool                                          Is_Locked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsLocked");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsLocked");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked, Is_Locked) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsLocked::Is_Locked' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsLocked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsLocked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsLocked, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsLocked::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsMultiGame
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame final
{
public:
	bool                                          Has_Transference;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame, Has_Transference) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsMultiGame::Has_Transference' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsNew
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsNew final
{
public:
	bool                                          Is_New;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsNew");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew) == 0x000005, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsNew");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew, Is_New) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsNew::Is_New' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsNew::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsNew::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsNew::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsNew, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsNew::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemIsRestricted
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted final
{
public:
	bool                                          IsCompatible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted) == 0x000018, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted, IsCompatible) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted::IsCompatible' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted, CallFunc_SetOpacity_InOpacity_ImplicitCast) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemIsRestricted::CallFunc_SetOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.SetItemMaterial
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_SetItemMaterial final
{
public:
	class UMaterialInstance*                      Material_Instance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_SetItemMaterial) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_SetItemMaterial");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_SetItemMaterial) == 0x000010, "Wrong size on WBP_UIKit_ItemCard_Base_C_SetItemMaterial");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemMaterial, Material_Instance) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemMaterial::Material_Instance' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_SetItemMaterial, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_SetItemMaterial::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.UpdateRoundCorners
// 0x0040 (0x0040 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners final
{
public:
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_UI_BackplateCornerRadiusValues      CornerRadius;                                      // 0x0008(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners) == 0x000040, "Wrong size on WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners, DynamicMaterialInstance) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners, CornerRadius) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners::CornerRadius' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000030, "Member 'WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000034, "Member 'WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000038, "Member 'WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00003C, "Member 'WBP_UIKit_ItemCard_Base_C_UpdateRoundCorners::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.GetAreItemsAgeGated
// 0x0058 (0x0058 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated final
{
public:
	TArray<class UFortItemVM*>                    ItemVMs;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Is_Item_Gated;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalPlayer*                           CallFunc_GetOwningLocalPlayer_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortItemVM*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAthenaCosmeticItemDefinition*          K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICosmeticItemGatingInterface> CallFunc_HasRatingRestrictions_CosmeticItemGatingInterface_CastInput; // 0x0040(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasRatingRestrictions_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated) == 0x000058, "Wrong size on WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, ItemVMs) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::ItemVMs' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, Is_Item_Gated) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::Is_Item_Gated' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_GetOwningLocalPlayer_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_GetOwningLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition) == 0x000030, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_HasRatingRestrictions_CosmeticItemGatingInterface_CastInput) == 0x000040, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_HasRatingRestrictions_CosmeticItemGatingInterface_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_HasRatingRestrictions_ReturnValue) == 0x000050, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_HasRatingRestrictions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WBP_UIKit_ItemCard_Base_C_GetAreItemsAgeGated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.GetIsItemAgeGated
// 0x0040 (0x0040 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated final
{
public:
	class UFortItemDefinition*                    Item_Def;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Item_Gated;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalPlayer*                           CallFunc_GetOwningLocalPlayer_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAthenaCosmeticItemDefinition*          K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICosmeticItemGatingInterface> CallFunc_HasRatingRestrictions_CosmeticItemGatingInterface_CastInput; // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasRatingRestrictions_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated) == 0x000040, "Wrong size on WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, Item_Def) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::Item_Def' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, Is_Item_Gated) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::Is_Item_Gated' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, CallFunc_GetOwningLocalPlayer_ReturnValue) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::CallFunc_GetOwningLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, CallFunc_HasRatingRestrictions_CosmeticItemGatingInterface_CastInput) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::CallFunc_HasRatingRestrictions_CosmeticItemGatingInterface_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated, CallFunc_HasRatingRestrictions_ReturnValue) == 0x000038, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGated::CallFunc_HasRatingRestrictions_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Base.WBP_UIKit_ItemCard_Base_C.GetIsItemAgeGatedFortCurrentExperience
// 0x0040 (0x0040 - 0x0000)
struct WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience final
{
public:
	class UFortItemDefinition*                    Item_Def;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Item_Gated;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalPlayer*                           CallFunc_GetOwningLocalPlayer_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAthenaCosmeticItemDefinition*          K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICosmeticItemGatingInterface> CallFunc_ConvertCosmeticItemDefinitionToInterface_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBeGatedByAgeRating_ReturnValue;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience");
static_assert(sizeof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience) == 0x000040, "Wrong size on WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, Item_Def) == 0x000000, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::Item_Def' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, Is_Item_Gated) == 0x000008, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::Is_Item_Gated' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, CallFunc_GetOwningLocalPlayer_ReturnValue) == 0x000010, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::CallFunc_GetOwningLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition) == 0x000018, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, CallFunc_ConvertCosmeticItemDefinitionToInterface_ReturnValue) == 0x000028, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::CallFunc_ConvertCosmeticItemDefinitionToInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience, CallFunc_ShouldBeGatedByAgeRating_ReturnValue) == 0x000038, "Member 'WBP_UIKit_ItemCard_Base_C_GetIsItemAgeGatedFortCurrentExperience::CallFunc_ShouldBeGatedByAgeRating_ReturnValue' has a wrong offset!");

}

