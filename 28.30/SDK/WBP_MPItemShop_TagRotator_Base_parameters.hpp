#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_TagRotator_Base

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base
// 0x0050 (0x0050 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base) == 0x000050, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, EntryPoint) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000028, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000030, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_TextIsEmpty_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WBP_MPItemShop_TagRotator_Base_C_ExecuteUbergraph_WBP_MPItemShop_TagRotator_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.InitializeTagRotator
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator) == 0x000060, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, Temp_byte_Variable) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, Temp_bool_Variable) == 0x000002, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, K2Node_Select_Default) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_IsMobileGame_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000048, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000058, "Member 'WBP_MPItemShop_TagRotator_Base_C_InitializeTagRotator::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.OnEnhancedUpdated
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated final
{
public:
	bool                                          IsEnhanced_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated) == 0x000018, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, IsEnhanced_0) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::IsEnhanced_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, Temp_byte_Variable) == 0x000002, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, K2Node_Select_Default) == 0x000004, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnEnhancedUpdated::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.OnTextsUpdated
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated final
{
public:
	TArray<class FText>                           texts;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated) == 0x000030, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated, texts) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated::texts' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_MPItemShop_TagRotator_Base_C_OnTextsUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.PlayHoverAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation final
{
public:
	bool                                          IsImmediate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetHoverAnimationLerp_LerpValue_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation) == 0x000020, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation, IsImmediate) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation::IsImmediate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation, CallFunc_GetRenderOpacity_ReturnValue) == 0x000004, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation, K2Node_Select_Default) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation, CallFunc_SetHoverAnimationLerp_LerpValue_ImplicitCast) == 0x000018, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayHoverAnimation::CallFunc_SetHoverAnimationLerp_LerpValue_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.PlayUnhoverAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation final
{
public:
	bool                                          IsImmediate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetHoverAnimationLerp_LerpValue_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation) == 0x000020, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation, IsImmediate) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation::IsImmediate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation, CallFunc_GetRenderOpacity_ReturnValue) == 0x000004, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation, K2Node_Select_Default) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation, CallFunc_SetHoverAnimationLerp_LerpValue_ImplicitCast) == 0x000018, "Member 'WBP_MPItemShop_TagRotator_Base_C_PlayUnhoverAnimation::CallFunc_SetHoverAnimationLerp_LerpValue_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_PreConstruct");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_PreConstruct");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.Set Focused State
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State final
{
public:
	bool                                          IsFocused_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsImmediate;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State) == 0x000018, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, IsFocused_0) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::IsFocused_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, IsImmediate) == 0x000001, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::IsImmediate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, CallFunc_IsUsingTouch_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'WBP_MPItemShop_TagRotator_Base_C_Set_Focused_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.SetHoverAnimationLerp
// 0x0078 (0x0078 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp final
{
public:
	double                                        LerpValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp) == 0x000078, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, LerpValue) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::LerpValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_X) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_X_1) == 0x000018, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_Y_1) == 0x000020, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_X_2) == 0x000028, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_Y_2) == 0x000030, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_X_3) == 0x000038, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_BreakVector2D_Y_3) == 0x000040, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp, CallFunc_MakeVector2D_ReturnValue_1) == 0x000068, "Member 'WBP_MPItemShop_TagRotator_Base_C_SetHoverAnimationLerp::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.TransitionToNextTitle
// 0x000C (0x000C - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Wrap_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle) == 0x000004, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle) == 0x00000C, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle, CallFunc_Wrap_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_TagRotator_Base_C_TransitionToNextTitle::CallFunc_Wrap_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_TagRotator_Base.WBP_MPItemShop_TagRotator_Base_C.UpdateTagText
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_TagRotator_Base_C_UpdateTagText final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(WBP_MPItemShop_TagRotator_Base_C_UpdateTagText) == 0x000008, "Wrong alignment on WBP_MPItemShop_TagRotator_Base_C_UpdateTagText");
static_assert(sizeof(WBP_MPItemShop_TagRotator_Base_C_UpdateTagText) == 0x000018, "Wrong size on WBP_MPItemShop_TagRotator_Base_C_UpdateTagText");
static_assert(offsetof(WBP_MPItemShop_TagRotator_Base_C_UpdateTagText, TitleText) == 0x000000, "Member 'WBP_MPItemShop_TagRotator_Base_C_UpdateTagText::TitleText' has a wrong offset!");

}

