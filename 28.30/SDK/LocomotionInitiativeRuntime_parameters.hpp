#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LocomotionInitiativeRuntime

#include "Basic.hpp"

#include "LocomotionInitiativeRuntime_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LocomotionInitiativeRuntime.FortLocomotionLayerMaskDataAsset.ApplyTo
// 0x0020 (0x0020 - 0x0000)
struct FortLocomotionLayerMaskDataAsset_ApplyTo final
{
public:
	struct FFortLocomotionLayerMaskDataSet        DataAsset;                                         // 0x0000(0x0020)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLocomotionLayerMaskDataAsset_ApplyTo) == 0x000004, "Wrong alignment on FortLocomotionLayerMaskDataAsset_ApplyTo");
static_assert(sizeof(FortLocomotionLayerMaskDataAsset_ApplyTo) == 0x000020, "Wrong size on FortLocomotionLayerMaskDataAsset_ApplyTo");
static_assert(offsetof(FortLocomotionLayerMaskDataAsset_ApplyTo, DataAsset) == 0x000000, "Member 'FortLocomotionLayerMaskDataAsset_ApplyTo::DataAsset' has a wrong offset!");

// Function LocomotionInitiativeRuntime.FortPlayerMotionMatchingLocomotionAnimInstance.OnUpdateMotionMatching
// 0x0020 (0x0020 - 0x0000)
struct FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching) == 0x000008, "Wrong alignment on FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching");
static_assert(sizeof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching) == 0x000020, "Wrong size on FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching");
static_assert(offsetof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching, Context) == 0x000000, "Member 'FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching::Context' has a wrong offset!");
static_assert(offsetof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching, Node) == 0x000010, "Member 'FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatching::Node' has a wrong offset!");

// Function LocomotionInitiativeRuntime.FortPlayerMotionMatchingLocomotionAnimInstance.OnUpdateMotionMatchingState
// 0x0020 (0x0020 - 0x0000)
struct FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState) == 0x000008, "Wrong alignment on FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState");
static_assert(sizeof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState) == 0x000020, "Wrong size on FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState");
static_assert(offsetof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState, Context) == 0x000000, "Member 'FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState::Context' has a wrong offset!");
static_assert(offsetof(FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState, Node) == 0x000010, "Member 'FortPlayerMotionMatchingLocomotionAnimInstance_OnUpdateMotionMatchingState::Node' has a wrong offset!");

// Function LocomotionInitiativeRuntime.FortPlayerMotionMatchingLocomotionAnimInstance.GetMotionMatchingBlendProfile
// 0x0008 (0x0008 - 0x0000)
struct FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile final
{
public:
	class UBlendProfile*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile) == 0x000008, "Wrong alignment on FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile");
static_assert(sizeof(FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile) == 0x000008, "Wrong size on FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile");
static_assert(offsetof(FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile, ReturnValue) == 0x000000, "Member 'FortPlayerMotionMatchingLocomotionAnimInstance_GetMotionMatchingBlendProfile::ReturnValue' has a wrong offset!");

}

