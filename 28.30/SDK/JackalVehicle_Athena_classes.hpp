#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JackalVehicle_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass JackalVehicle_Athena.JackalVehicle_Athena_C
// 0x0200 (0x2290 - 0x2090)
class AJackalVehicle_Athena_C : public AFortAthenaJackalVehicle
{
public:
	uint8                                         Pad_2088[0x8];                                     // 0x2088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2090(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortVehicleAudioVoice*                 AudioWind;                                         // 0x2098(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioLand;                                         // 0x20A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioBoost;                                        // 0x20A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioMovement;                                     // 0x20B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioJump;                                         // 0x20B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Hoverboard_Lightbeams;                          // 0x20C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LoopingFX;                                         // 0x20C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               BoostFX;                                           // 0x20D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    BackLight;                                         // 0x20D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight;                                        // 0x20E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           FortCollisionAudioImpacts;                         // 0x20E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OverlapVolume;                                     // 0x20F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        DriverPawn;                                        // 0x20F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      DrivingPlayerController;                           // 0x2100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        LocalPlayerPawn;                                   // 0x2108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x2110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bJumpCharging;                                     // 0x2118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2119[0x7];                                     // 0x2119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             MountSound;                                        // 0x2120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               InWaterFX;                                         // 0x2128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InWaterLoop;                                       // 0x2130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckWaterTimer;                                   // 0x2138(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RumbleIntensity;                                   // 0x2140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_NoCameraShake;                               // 0x2148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2149[0x7];                                     // 0x2149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULegacyCameraShake*                     DriverCameraShake;                                 // 0x2150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        EngineSoundMaxDistance;                            // 0x2158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Jumped;                                            // 0x2160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2161[0x7];                                     // 0x2161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               BoostMeterMID;                                     // 0x2168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BoostTImelineAlpha;                                // 0x2170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FXBoostEnd_0;                                      // 0x2178(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DismountSound;                                     // 0x2190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FXFrontSpringOffset;                               // 0x2198(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FXRearSpringOffset;                                // 0x21B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FXSurfaceType;                                     // 0x21C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21CC[0x4];                                     // 0x21CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SavedDamageValueForMID;                            // 0x21D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSpeedToDestroy;                                 // 0x21D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealthToDestroy;                                // 0x21E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SavedHeadlightValueForMID;                         // 0x21E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BoostTimeValueForMID;                              // 0x21F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 VehicleHitActor;                                   // 0x21F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DestructionAngle;                                  // 0x2200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LandingFXImpactThreshold;                          // 0x2208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LandingFX;                                         // 0x2210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OnDeathSound;                                      // 0x2218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BumpForceAngle;                                    // 0x2220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 JumpCameraShake;                                   // 0x2228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MovementVisualUpdate;                              // 0x2230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MovementVisualTimer;                               // 0x2238(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SlipStreamImpulseForce;                            // 0x2240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     WrapBaseMaterial;                                  // 0x2248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CooldownCueEvent;                                  // 0x2250(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Boost;                                          // 0x2258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GameplayEvent;                                     // 0x2260(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2264[0x4];                                     // 0x2264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WaterFXHeightOffset;                               // 0x2268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterHeight;                                       // 0x2270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Water_Test_Socket_Name;                            // 0x2278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseAudio;                                         // 0x227C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_227D[0x3];                                     // 0x227D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   MontagesToStopOnBoost;                             // 0x2280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ChangeOutMaterials();
	void CheckWaterEvent();
	void CurrentBoostCharge(double* Charge_Value);
	void DeactivateComponents();
	void DestroyBuildingPiece(class ABuildingActor* BuildingActor, double DestroyThreshold);
	void ExecuteUbergraph_JackalVehicle_Athena(int32 EntryPoint);
	void GetMaxAudibleDistance(double* Max_Distance);
	void HapticsOnHit(double HitMagnitude);
	void HideQuickBarForSecondaryAbility(bool Hide);
	void IsBoostCharging(bool* Is_Charging);
	void K2_ApplyCosmeticWrap(const class UAthenaItemWrapDefinition* LoadedWrap);
	void OnBoostBegin();
	void OnBoostEnd();
	void OnCollisionHitEffects(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, const struct FVector& HitFrictionImpulse, const struct FVector& HitNormal, class AActor* HitActor, EPhysicalSurface HitSurfaceType);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody);
	void OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint);
	void OnExitedWaterBody(class AFortWaterBodyActor* WaterBody);
	void OnExitedWaterVolume(const struct FVector& WaterSurfacePoint);
	void OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration);
	void OnHoldExitStopped(class AFortPawn* ExitingPawn);
	void OnIsSprintingChanged();
	void OnJumpChargeBegin();
	void OnJumpChargeEnd(float Charge);
	void OnJumped(float Charge);
	void OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx);
	void OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName);
	void OnRep_bUseAudio();
	void OnStopTick();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RemoveCooldownCueEvent(class AFortPlayerPawn* PlayerPawn);
	void SendBoostTimeToMaterials(double ParameterValue);
	void SendDamageValueToMaterials(double ParameterValue);
	void SendHeadlightValueToMaterials(double ParameterValue);
	void SetupCosmetics();
	void ShouldBump(const struct FVector& Hit_Normal, class AFortPlayerPawn* PlayerPawn, bool* Bump);
	bool ShouldDestroyProp_(const struct FVector& HitNormal);
	void ShowCooldownCue(class AFortPlayerPawn* Pawn, float duration);
	void SlipStreamCheck();
	void StartDriverCameraShake();
	void StopDriverCameraShake();
	void UpdateSurfaceType(EPhysicalSurface Surface, int32* Output);
	void UserConstructionScript();

	void GetIconPlacement(const class AActor* SelfActor, const class AActor* ViewingActor, struct FVector* OutLocation, struct FVector* OutExtents) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"JackalVehicle_Athena_C">();
	}
	static class AJackalVehicle_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AJackalVehicle_Athena_C>();
	}
};
static_assert(alignof(AJackalVehicle_Athena_C) == 0x000010, "Wrong alignment on AJackalVehicle_Athena_C");
static_assert(sizeof(AJackalVehicle_Athena_C) == 0x002290, "Wrong size on AJackalVehicle_Athena_C");
static_assert(offsetof(AJackalVehicle_Athena_C, UberGraphFrame) == 0x002090, "Member 'AJackalVehicle_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, AudioWind) == 0x002098, "Member 'AJackalVehicle_Athena_C::AudioWind' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, AudioLand) == 0x0020A0, "Member 'AJackalVehicle_Athena_C::AudioLand' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, AudioBoost) == 0x0020A8, "Member 'AJackalVehicle_Athena_C::AudioBoost' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, AudioMovement) == 0x0020B0, "Member 'AJackalVehicle_Athena_C::AudioMovement' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, AudioJump) == 0x0020B8, "Member 'AJackalVehicle_Athena_C::AudioJump' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, SM_Hoverboard_Lightbeams) == 0x0020C0, "Member 'AJackalVehicle_Athena_C::SM_Hoverboard_Lightbeams' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, LoopingFX) == 0x0020C8, "Member 'AJackalVehicle_Athena_C::LoopingFX' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, BoostFX) == 0x0020D0, "Member 'AJackalVehicle_Athena_C::BoostFX' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, BackLight) == 0x0020D8, "Member 'AJackalVehicle_Athena_C::BackLight' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, FrontLight) == 0x0020E0, "Member 'AJackalVehicle_Athena_C::FrontLight' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, FortCollisionAudioImpacts) == 0x0020E8, "Member 'AJackalVehicle_Athena_C::FortCollisionAudioImpacts' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, OverlapVolume) == 0x0020F0, "Member 'AJackalVehicle_Athena_C::OverlapVolume' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, DriverPawn) == 0x0020F8, "Member 'AJackalVehicle_Athena_C::DriverPawn' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, DrivingPlayerController) == 0x002100, "Member 'AJackalVehicle_Athena_C::DrivingPlayerController' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, LocalPlayerPawn) == 0x002108, "Member 'AJackalVehicle_Athena_C::LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, Delta) == 0x002110, "Member 'AJackalVehicle_Athena_C::Delta' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, bJumpCharging) == 0x002118, "Member 'AJackalVehicle_Athena_C::bJumpCharging' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, MountSound) == 0x002120, "Member 'AJackalVehicle_Athena_C::MountSound' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, InWaterFX) == 0x002128, "Member 'AJackalVehicle_Athena_C::InWaterFX' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, InWaterLoop) == 0x002130, "Member 'AJackalVehicle_Athena_C::InWaterLoop' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, CheckWaterTimer) == 0x002138, "Member 'AJackalVehicle_Athena_C::CheckWaterTimer' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, RumbleIntensity) == 0x002140, "Member 'AJackalVehicle_Athena_C::RumbleIntensity' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, Debug_NoCameraShake) == 0x002148, "Member 'AJackalVehicle_Athena_C::Debug_NoCameraShake' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, DriverCameraShake) == 0x002150, "Member 'AJackalVehicle_Athena_C::DriverCameraShake' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, EngineSoundMaxDistance) == 0x002158, "Member 'AJackalVehicle_Athena_C::EngineSoundMaxDistance' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, Jumped) == 0x002160, "Member 'AJackalVehicle_Athena_C::Jumped' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, BoostMeterMID) == 0x002168, "Member 'AJackalVehicle_Athena_C::BoostMeterMID' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, BoostTImelineAlpha) == 0x002170, "Member 'AJackalVehicle_Athena_C::BoostTImelineAlpha' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, FXBoostEnd_0) == 0x002178, "Member 'AJackalVehicle_Athena_C::FXBoostEnd_0' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, DismountSound) == 0x002190, "Member 'AJackalVehicle_Athena_C::DismountSound' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, FXFrontSpringOffset) == 0x002198, "Member 'AJackalVehicle_Athena_C::FXFrontSpringOffset' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, FXRearSpringOffset) == 0x0021B0, "Member 'AJackalVehicle_Athena_C::FXRearSpringOffset' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, FXSurfaceType) == 0x0021C8, "Member 'AJackalVehicle_Athena_C::FXSurfaceType' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, SavedDamageValueForMID) == 0x0021D0, "Member 'AJackalVehicle_Athena_C::SavedDamageValueForMID' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, MaxSpeedToDestroy) == 0x0021D8, "Member 'AJackalVehicle_Athena_C::MaxSpeedToDestroy' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, MaxHealthToDestroy) == 0x0021E0, "Member 'AJackalVehicle_Athena_C::MaxHealthToDestroy' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, SavedHeadlightValueForMID) == 0x0021E8, "Member 'AJackalVehicle_Athena_C::SavedHeadlightValueForMID' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, BoostTimeValueForMID) == 0x0021F0, "Member 'AJackalVehicle_Athena_C::BoostTimeValueForMID' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, VehicleHitActor) == 0x0021F8, "Member 'AJackalVehicle_Athena_C::VehicleHitActor' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, DestructionAngle) == 0x002200, "Member 'AJackalVehicle_Athena_C::DestructionAngle' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, LandingFXImpactThreshold) == 0x002208, "Member 'AJackalVehicle_Athena_C::LandingFXImpactThreshold' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, LandingFX) == 0x002210, "Member 'AJackalVehicle_Athena_C::LandingFX' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, OnDeathSound) == 0x002218, "Member 'AJackalVehicle_Athena_C::OnDeathSound' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, BumpForceAngle) == 0x002220, "Member 'AJackalVehicle_Athena_C::BumpForceAngle' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, JumpCameraShake) == 0x002228, "Member 'AJackalVehicle_Athena_C::JumpCameraShake' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, MovementVisualUpdate) == 0x002230, "Member 'AJackalVehicle_Athena_C::MovementVisualUpdate' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, MovementVisualTimer) == 0x002238, "Member 'AJackalVehicle_Athena_C::MovementVisualTimer' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, SlipStreamImpulseForce) == 0x002240, "Member 'AJackalVehicle_Athena_C::SlipStreamImpulseForce' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, WrapBaseMaterial) == 0x002248, "Member 'AJackalVehicle_Athena_C::WrapBaseMaterial' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, CooldownCueEvent) == 0x002250, "Member 'AJackalVehicle_Athena_C::CooldownCueEvent' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, GE_Boost) == 0x002258, "Member 'AJackalVehicle_Athena_C::GE_Boost' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, GameplayEvent) == 0x002260, "Member 'AJackalVehicle_Athena_C::GameplayEvent' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, WaterFXHeightOffset) == 0x002268, "Member 'AJackalVehicle_Athena_C::WaterFXHeightOffset' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, WaterHeight) == 0x002270, "Member 'AJackalVehicle_Athena_C::WaterHeight' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, Water_Test_Socket_Name) == 0x002278, "Member 'AJackalVehicle_Athena_C::Water_Test_Socket_Name' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, bUseAudio) == 0x00227C, "Member 'AJackalVehicle_Athena_C::bUseAudio' has a wrong offset!");
static_assert(offsetof(AJackalVehicle_Athena_C, MontagesToStopOnBoost) == 0x002280, "Member 'AJackalVehicle_Athena_C::MontagesToStopOnBoost' has a wrong offset!");

}

