#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserLobbyTileButton_MinimalStyle

#include "Basic.hpp"

#include "ActivityBrowserLobbyTileButton_MinimalStyle_classes.hpp"
#include "ActivityBrowserLobbyTileButton_MinimalStyle_parameters.hpp"


namespace SDK
{

// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle");

	Params::ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.Limit Text Characters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Max_Spaces                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max_Length                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Trimmed_Text                                           (Parm, OutParm)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::Limit_Text_Characters(const class FText& Text, int32 Max_Spaces, int32 Max_Length, class FText* Trimmed_Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Limit Text Characters");

	Params::ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters Parms{};

	Parms.Text = std::move(Text);
	Parms.Max_Spaces = Max_Spaces;
	Parms.Max_Length = Max_Length;

	UObject::ProcessEvent(Func, &Parms);

	if (Trimmed_Text != nullptr)
		*Trimmed_Text = std::move(Parms.Trimmed_Text);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.OnDetailsUpdated
// (Event, Protected, BlueprintEvent)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::OnDetailsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDetailsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.OnHideChildActivityFirstTimeNotification
// (BlueprintEvent)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::OnHideChildActivityFirstTimeNotification()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnHideChildActivityFirstTimeNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.OnShowChildActivityChangedNotification
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             DisplayName                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::OnShowChildActivityChangedNotification(const class FText& DisplayName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowChildActivityChangedNotification");

	Params::ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification Parms{};

	Parms.DisplayName = std::move(DisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.OnShowChildActivityFirstTimeNotification
// (BlueprintEvent)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::OnShowChildActivityFirstTimeNotification()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnShowChildActivityFirstTimeNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.OnUnSelectedMatchmakingCanceled
// (Public, BlueprintCallable, BlueprintEvent)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::OnUnSelectedMatchmakingCanceled()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUnSelectedMatchmakingCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActivityBrowserLobbyTileButton_MinimalStyle_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

