#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MilkshakeRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK
{

// ScriptStruct MilkshakeRuntime.MilkshakeEarthquakePhysicsActorInfo
// 0x0010 (0x0010 - 0x0000)
struct FMilkshakeEarthquakePhysicsActorInfo final
{
public:
	TWeakObjectPtr<class AActor>                  PhysicsActor;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceDirectionUpdateGameTime;                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsForceForward;                                   // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortPhysicsSimSize                           PhysicsSimSize;                                    // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMilkshakeEarthquakePhysicsActorInfo) == 0x000004, "Wrong alignment on FMilkshakeEarthquakePhysicsActorInfo");
static_assert(sizeof(FMilkshakeEarthquakePhysicsActorInfo) == 0x000010, "Wrong size on FMilkshakeEarthquakePhysicsActorInfo");
static_assert(offsetof(FMilkshakeEarthquakePhysicsActorInfo, PhysicsActor) == 0x000000, "Member 'FMilkshakeEarthquakePhysicsActorInfo::PhysicsActor' has a wrong offset!");
static_assert(offsetof(FMilkshakeEarthquakePhysicsActorInfo, ForceDirectionUpdateGameTime) == 0x000008, "Member 'FMilkshakeEarthquakePhysicsActorInfo::ForceDirectionUpdateGameTime' has a wrong offset!");
static_assert(offsetof(FMilkshakeEarthquakePhysicsActorInfo, bIsForceForward) == 0x00000C, "Member 'FMilkshakeEarthquakePhysicsActorInfo::bIsForceForward' has a wrong offset!");
static_assert(offsetof(FMilkshakeEarthquakePhysicsActorInfo, PhysicsSimSize) == 0x00000D, "Member 'FMilkshakeEarthquakePhysicsActorInfo::PhysicsSimSize' has a wrong offset!");

}

