#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Blade

#include "Basic.hpp"

#include "E_BladeUIAnchor_structs.hpp"
#include "E_BladeAnimationState_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Blade.WBP_Blade_C
// 0x0998 (0x0C80 - 0x02E8)
class UWBP_Blade_C final : public UFortBladeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_BetweenPeekStates;                            // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_BackplateOpacity;                             // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ExpandContract;                               // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                EmptyButton_ClickCatcherCloseBlade;                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                EmptyButton_ForPeekMode;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FullBackplate_Image;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Grid_BladeBase;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_BladeContent;                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_BladeContent;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_BladeUIAnchor                               EBladeAlignment;                                   // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartExpanded;                                    // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x2];                                      // 0x0342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RowSpan_Content;                                   // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row_Content;                                       // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnSpan_Content;                                // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column_Content;                                    // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ContentWidth;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContentHeight;                                     // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LerpAnimatorExpandContractBlade;                   // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        NudgeForOffscreen;                                 // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFullscreenBlade;                                // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PeekPushPercent;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PeekPushPercent_Mobile;                            // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSecondaryPeekState;                          // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PeekPushPercentSecondary;                          // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PeekPushPercentSecondary_Mobile;                   // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            BackplateImageBrush;                               // 0x03B0(0x00C0)(Edit, BlueprintVisible)
	bool                                          bHasClickCatcherButton;                            // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsClickCatcherButtonTransparent;                  // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472[0xE];                                      // 0x0472(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           ClickCatcherButtonStyle;                           // 0x0480(0x03B0)(Edit, BlueprintVisible)
	struct FButtonStyle                           TransparentButtonStyle;                            // 0x0830(0x03B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_BladeAnimationState                         EBladeAnimState;                                   // 0x0BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE1[0x3];                                      // 0x0BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ContentPadding;                                    // 0x0BE4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF4[0x4];                                      // 0x0BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnNotifyParentBladeCatcherClicked;                 // 0x0BF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AnimateBackplateWhenExpanding;                     // 0x0C08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnNotifyParentBladeContractStart;                  // 0x0C10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnNotifyParentBladeExpandStart;                    // 0x0C20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HidePeekButton;                                    // 0x0C30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinishedTransitionToSecondPeekState;               // 0x0C31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C32[0x6];                                      // 0x0C32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LerpAnimatorBetweenPeekStates;                     // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnNotifyParentPeekButtonClicked;                   // 0x0C40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnNotifyParentBladeTransitionFinished;             // 0x0C50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          StartedTransitionToSecondPeekState;                // 0x0C60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C61[0x7];                                      // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnNotifyParentBladePeekStateTransitionFinished;    // 0x0C68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Blade_EmptyButton_ForPeekModeExpand_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_Blade_TransparentButton_OnClickCloseBlade_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void CalculateNudgeValue(double PeekValue);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_Blade(int32 EntryPoint);
	void GetContentOrViewport_SizeAndSetNudgeValue(bool* IsSizeZero);
	void OnBladeContract();
	void OnBladeExpand();
	void OnContractOrExpandAnimFinished();
	void OnPeekStateAnimFinished();
	void OnViewportResized();
	void PreConstruct(bool IsDesignTime);
	void SetLerpAnimatorBetweenPeekStates(double CurrentAnimatorValue);
	void SetLerpAnimatorExpandContractBlade(double CurrentAnimatorValue);
	void SetPeekButtonVisibility(bool HidePeekButton_0);
	void SetShouldStartInSecondPeekState(bool ShouldStartInSecondPeekState);
	void TransitionToFirstPeekState();
	void TransitionToSecondPeekState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Blade_C">();
	}
	static class UWBP_Blade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Blade_C>();
	}
};
static_assert(alignof(UWBP_Blade_C) == 0x000010, "Wrong alignment on UWBP_Blade_C");
static_assert(sizeof(UWBP_Blade_C) == 0x000C80, "Wrong size on UWBP_Blade_C");
static_assert(offsetof(UWBP_Blade_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_Blade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Anim_BetweenPeekStates) == 0x0002F0, "Member 'UWBP_Blade_C::Anim_BetweenPeekStates' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Anim_BackplateOpacity) == 0x0002F8, "Member 'UWBP_Blade_C::Anim_BackplateOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Anim_ExpandContract) == 0x000300, "Member 'UWBP_Blade_C::Anim_ExpandContract' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, EmptyButton_ClickCatcherCloseBlade) == 0x000308, "Member 'UWBP_Blade_C::EmptyButton_ClickCatcherCloseBlade' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, EmptyButton_ForPeekMode) == 0x000310, "Member 'UWBP_Blade_C::EmptyButton_ForPeekMode' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, FullBackplate_Image) == 0x000318, "Member 'UWBP_Blade_C::FullBackplate_Image' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Grid_BladeBase) == 0x000320, "Member 'UWBP_Blade_C::Grid_BladeBase' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, NamedSlot_BladeContent) == 0x000328, "Member 'UWBP_Blade_C::NamedSlot_BladeContent' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Overlay_BladeContent) == 0x000330, "Member 'UWBP_Blade_C::Overlay_BladeContent' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, SafeZone) == 0x000338, "Member 'UWBP_Blade_C::SafeZone' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, EBladeAlignment) == 0x000340, "Member 'UWBP_Blade_C::EBladeAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, bStartExpanded) == 0x000341, "Member 'UWBP_Blade_C::bStartExpanded' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, RowSpan_Content) == 0x000344, "Member 'UWBP_Blade_C::RowSpan_Content' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Row_Content) == 0x000348, "Member 'UWBP_Blade_C::Row_Content' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, ColumnSpan_Content) == 0x00034C, "Member 'UWBP_Blade_C::ColumnSpan_Content' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, Column_Content) == 0x000350, "Member 'UWBP_Blade_C::Column_Content' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, ContentWidth) == 0x000358, "Member 'UWBP_Blade_C::ContentWidth' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, ContentHeight) == 0x000360, "Member 'UWBP_Blade_C::ContentHeight' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, LerpAnimatorExpandContractBlade) == 0x000368, "Member 'UWBP_Blade_C::LerpAnimatorExpandContractBlade' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, NudgeForOffscreen) == 0x000370, "Member 'UWBP_Blade_C::NudgeForOffscreen' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, UseFullscreenBlade) == 0x000378, "Member 'UWBP_Blade_C::UseFullscreenBlade' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, PeekPushPercent) == 0x000380, "Member 'UWBP_Blade_C::PeekPushPercent' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, PeekPushPercent_Mobile) == 0x000388, "Member 'UWBP_Blade_C::PeekPushPercent_Mobile' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, EnableSecondaryPeekState) == 0x000390, "Member 'UWBP_Blade_C::EnableSecondaryPeekState' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, PeekPushPercentSecondary) == 0x000398, "Member 'UWBP_Blade_C::PeekPushPercentSecondary' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, PeekPushPercentSecondary_Mobile) == 0x0003A0, "Member 'UWBP_Blade_C::PeekPushPercentSecondary_Mobile' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, BackplateImageBrush) == 0x0003B0, "Member 'UWBP_Blade_C::BackplateImageBrush' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, bHasClickCatcherButton) == 0x000470, "Member 'UWBP_Blade_C::bHasClickCatcherButton' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, bIsClickCatcherButtonTransparent) == 0x000471, "Member 'UWBP_Blade_C::bIsClickCatcherButtonTransparent' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, ClickCatcherButtonStyle) == 0x000480, "Member 'UWBP_Blade_C::ClickCatcherButtonStyle' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, TransparentButtonStyle) == 0x000830, "Member 'UWBP_Blade_C::TransparentButtonStyle' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, EBladeAnimState) == 0x000BE0, "Member 'UWBP_Blade_C::EBladeAnimState' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, ContentPadding) == 0x000BE4, "Member 'UWBP_Blade_C::ContentPadding' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, OnNotifyParentBladeCatcherClicked) == 0x000BF8, "Member 'UWBP_Blade_C::OnNotifyParentBladeCatcherClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, AnimateBackplateWhenExpanding) == 0x000C08, "Member 'UWBP_Blade_C::AnimateBackplateWhenExpanding' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, OnNotifyParentBladeContractStart) == 0x000C10, "Member 'UWBP_Blade_C::OnNotifyParentBladeContractStart' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, OnNotifyParentBladeExpandStart) == 0x000C20, "Member 'UWBP_Blade_C::OnNotifyParentBladeExpandStart' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, HidePeekButton) == 0x000C30, "Member 'UWBP_Blade_C::HidePeekButton' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, FinishedTransitionToSecondPeekState) == 0x000C31, "Member 'UWBP_Blade_C::FinishedTransitionToSecondPeekState' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, LerpAnimatorBetweenPeekStates) == 0x000C38, "Member 'UWBP_Blade_C::LerpAnimatorBetweenPeekStates' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, OnNotifyParentPeekButtonClicked) == 0x000C40, "Member 'UWBP_Blade_C::OnNotifyParentPeekButtonClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, OnNotifyParentBladeTransitionFinished) == 0x000C50, "Member 'UWBP_Blade_C::OnNotifyParentBladeTransitionFinished' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, StartedTransitionToSecondPeekState) == 0x000C60, "Member 'UWBP_Blade_C::StartedTransitionToSecondPeekState' has a wrong offset!");
static_assert(offsetof(UWBP_Blade_C, OnNotifyParentBladePeekStateTransitionFinished) == 0x000C68, "Member 'UWBP_Blade_C::OnNotifyParentBladePeekStateTransitionFinished' has a wrong offset!");

}

