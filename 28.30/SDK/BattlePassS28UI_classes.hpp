#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS28UI

#include "Basic.hpp"

#include "BattlePassBase_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "BattlePassS28UI_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class BattlePassS28UI.BattlePassBulkBuyPageS28
// 0x0000 (0x05A0 - 0x05A0)
class UBattlePassBulkBuyPageS28 : public UFortBattlePassBulkBuyPageBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassBulkBuyPageS28">();
	}
	static class UBattlePassBulkBuyPageS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassBulkBuyPageS28>();
	}
};
static_assert(alignof(UBattlePassBulkBuyPageS28) == 0x000008, "Wrong alignment on UBattlePassBulkBuyPageS28");
static_assert(sizeof(UBattlePassBulkBuyPageS28) == 0x0005A0, "Wrong size on UBattlePassBulkBuyPageS28");

// Class BattlePassS28UI.BattlePassLandingPageS28
// 0x0068 (0x05C0 - 0x0558)
class UBattlePassLandingPageS28 : public UBattlePassLandingPageBase
{
public:
	class UBattlePassLandingPageButton*           Button_Rewards;                                    // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_CharacterCustomizer;                        // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BonusRewards;                               // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_Quests;                                     // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_JoinSubscription;                           // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_WeeklyRewards;                              // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SeasonNumber;                                 // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_598[0x28];                                     // 0x0598(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassLandingPageS28">();
	}
	static class UBattlePassLandingPageS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassLandingPageS28>();
	}
};
static_assert(alignof(UBattlePassLandingPageS28) == 0x000008, "Wrong alignment on UBattlePassLandingPageS28");
static_assert(sizeof(UBattlePassLandingPageS28) == 0x0005C0, "Wrong size on UBattlePassLandingPageS28");
static_assert(offsetof(UBattlePassLandingPageS28, Button_Rewards) == 0x000558, "Member 'UBattlePassLandingPageS28::Button_Rewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, Button_CharacterCustomizer) == 0x000560, "Member 'UBattlePassLandingPageS28::Button_CharacterCustomizer' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, Button_BonusRewards) == 0x000568, "Member 'UBattlePassLandingPageS28::Button_BonusRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, Button_Quests) == 0x000570, "Member 'UBattlePassLandingPageS28::Button_Quests' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, Button_JoinSubscription) == 0x000578, "Member 'UBattlePassLandingPageS28::Button_JoinSubscription' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, Button_WeeklyRewards) == 0x000580, "Member 'UBattlePassLandingPageS28::Button_WeeklyRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, Text_SeasonNumber) == 0x000588, "Member 'UBattlePassLandingPageS28::Text_SeasonNumber' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS28, SeasonData_BattleStar) == 0x000590, "Member 'UBattlePassLandingPageS28::SeasonData_BattleStar' has a wrong offset!");

// Class BattlePassS28UI.BattlePassRewardPageS28
// 0x00A0 (0x05B8 - 0x0518)
class UBattlePassRewardPageS28 : public UBattlePassRewardPageBase
{
public:
	TSubclassOf<class UFortBattlePassRewardTrack> RewardsTrackClass;                                 // 0x0518(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTile*                    FocusedReward;                                     // 0x0520(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortBattlePassRewardTrack*>     TrackPages;                                        // 0x0528(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_538[0x4];                                      // 0x0538(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	ERewardPageType                               RewardPageType;                                    // 0x053C(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HoldTileTooltip_ClaimedRewardsToHide;              // 0x0540(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         HoldTileTooltip_ClaimedBattlePassToHide;           // 0x0544(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         HoldTileTooltip_RequiredBattleStarsToShow;         // 0x0548(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LevelRequirementUnlockTooltip_RequiredLevel;       // 0x054C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ClaimAllRewardsTooltip_RequiredLevelToShow;        // 0x0550(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonAnimatedSwitcher*                Switcher_RewardTracks;                             // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS28*      TutorialTooltip_LevelRequirementUnlock;            // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS28*      TutorialTooltip_ClaimAllRewards;                   // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS28*      TutorialTooltip_HoldTile;                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0578(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassBulkBuyInputData*            BulkBuyInputData;                                  // 0x0580(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_NextPage;                                   // 0x0588(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_PreviousPage;                               // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_598[0x20];                                     // 0x0598(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* HandleRewardTracksBoundaryNavigation(EUINavigation InNavigation);
	void OnInitForPageType(const ERewardPageType InRewardPageType);
	void OnInputMethodChanged(const ECommonInputType InputType);
	void OnLoadingScreenSelectedChanged(bool bIsSelected);
	void OnPageChanged(const int32 PageNumber, const int32 RewardPageTotal);

	struct FVaultWorldBackgroundData GetRewardPageBackgroundData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassRewardPageS28">();
	}
	static class UBattlePassRewardPageS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassRewardPageS28>();
	}
};
static_assert(alignof(UBattlePassRewardPageS28) == 0x000008, "Wrong alignment on UBattlePassRewardPageS28");
static_assert(sizeof(UBattlePassRewardPageS28) == 0x0005B8, "Wrong size on UBattlePassRewardPageS28");
static_assert(offsetof(UBattlePassRewardPageS28, RewardsTrackClass) == 0x000518, "Member 'UBattlePassRewardPageS28::RewardsTrackClass' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, FocusedReward) == 0x000520, "Member 'UBattlePassRewardPageS28::FocusedReward' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, TrackPages) == 0x000528, "Member 'UBattlePassRewardPageS28::TrackPages' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, RewardPageType) == 0x00053C, "Member 'UBattlePassRewardPageS28::RewardPageType' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, HoldTileTooltip_ClaimedRewardsToHide) == 0x000540, "Member 'UBattlePassRewardPageS28::HoldTileTooltip_ClaimedRewardsToHide' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, HoldTileTooltip_ClaimedBattlePassToHide) == 0x000544, "Member 'UBattlePassRewardPageS28::HoldTileTooltip_ClaimedBattlePassToHide' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, HoldTileTooltip_RequiredBattleStarsToShow) == 0x000548, "Member 'UBattlePassRewardPageS28::HoldTileTooltip_RequiredBattleStarsToShow' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, LevelRequirementUnlockTooltip_RequiredLevel) == 0x00054C, "Member 'UBattlePassRewardPageS28::LevelRequirementUnlockTooltip_RequiredLevel' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, ClaimAllRewardsTooltip_RequiredLevelToShow) == 0x000550, "Member 'UBattlePassRewardPageS28::ClaimAllRewardsTooltip_RequiredLevelToShow' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, Switcher_RewardTracks) == 0x000558, "Member 'UBattlePassRewardPageS28::Switcher_RewardTracks' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, TutorialTooltip_LevelRequirementUnlock) == 0x000560, "Member 'UBattlePassRewardPageS28::TutorialTooltip_LevelRequirementUnlock' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, TutorialTooltip_ClaimAllRewards) == 0x000568, "Member 'UBattlePassRewardPageS28::TutorialTooltip_ClaimAllRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, TutorialTooltip_HoldTile) == 0x000570, "Member 'UBattlePassRewardPageS28::TutorialTooltip_HoldTile' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, SeasonData_BattleStar) == 0x000578, "Member 'UBattlePassRewardPageS28::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, BulkBuyInputData) == 0x000580, "Member 'UBattlePassRewardPageS28::BulkBuyInputData' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, Button_NextPage) == 0x000588, "Member 'UBattlePassRewardPageS28::Button_NextPage' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS28, Button_PreviousPage) == 0x000590, "Member 'UBattlePassRewardPageS28::Button_PreviousPage' has a wrong offset!");

// Class BattlePassS28UI.BattlePassScreenS28
// 0x04E0 (0x0E20 - 0x0940)
class UBattlePassScreenS28 : public UBattlePassScreenBase
{
public:
	TSubclassOf<class UFortBattlePassPurchaseResourcesWidget> ResourcePurchaseScreenClass;                       // 0x0940(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_948[0x8];                                      // 0x0948(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      Button_Close;                                      // 0x0950(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_TouchClose;                                 // 0x0958(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ToggleViewDetails;                          // 0x0960(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ReplayTrailer;                              // 0x0968(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ReplayTrailer_Mobile;                       // 0x0970(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAbout;                                  // 0x0978(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAbout_Mobile;                           // 0x0980(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAboutCustomization;                     // 0x0988(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAboutCustomization_Mobile;              // 0x0990(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_BulkBuyRewards;                             // 0x0998(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_PageComplete;                               // 0x09A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_GiftBattlePass;                             // 0x09A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              VisibilitySwitcher_PlatformBasedButtons;           // 0x09B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassResourcesWidgetBase*     BattlePassCurrencyPanel;                           // 0x09B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaExclusiveRewardBanner*           AthenaExclusiveRewardBanner;                       // 0x09C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_Description;                                  // 0x09C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_ItemName;                                     // 0x09D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaRewardItemTypeRarityTag*         ItemRewardTag;                                     // 0x09D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SetDetails;                                   // 0x09E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        Switcher_PrerequisiteInfo;                         // 0x09E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_Prerequisite;                                 // 0x09F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                Widget_PrerequisiteProgress;                       // 0x09F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                Widget_LevelUpMessageFree;                         // 0x0A00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                Widget_LevelUpMessagePremium;                      // 0x0A08(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                Widget_CustomResourceMessage;                      // 0x0A10(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        Switcher_PrimaryAction;                            // 0x0A18(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCTAButton*                         Button_BuyLevels;                                  // 0x0A20(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCTAButton*                         Button_BuyBattlePass;                              // 0x0A28(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCTAButton*                         Button_ClaimReward;                                // 0x0A30(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ViewQuests;                                 // 0x0A38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_PreviewLoadingScreen;                       // 0x0A40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDynamicEntryBox*                   ItemVMCards;                                       // 0x0A48(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_RequiresBP;                                    // 0x0A50(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_PageLocked;                                    // 0x0A58(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_BaseItem;                                      // 0x0A60(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Prerequisite;                                  // 0x0A68(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_CompletePage;                                  // 0x0A70(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_NotEnough_Currency;                            // 0x0A78(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Cost;                                          // 0x0A80(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Owned;                                         // 0x0A88(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Delayed;                                       // 0x0A90(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           QuestCategoryParentTag;                            // 0x0A98(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9C[0x4];                                      // 0x0A9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAthenaLoadingScreenPreviewPanel> PreviewLoadingScreenWidgetClass;                   // 0x0AA0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AA8[0x58];                                     // 0x0AA8(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0B00(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaSeasonItemEntryBase*             CurrentSelectedEntry;                              // 0x0B08(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<EBattlePassView>                       SwitcherSubPageTypes;                              // 0x0B10(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              VisibilitySwitcher_SubPage;                        // 0x0B20(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B28[0x100];                                    // 0x0B28(0x0100)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    SeasonalBaseCustomizationItem;                     // 0x0C28(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasSubscription;                                  // 0x0C30(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C31[0x7];                                      // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortBattlePassTutorialTooltipS28*      TutorialTooltip_BattleStars;                       // 0x0C38(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS28*      TutorialTooltip_StylePoints;                       // 0x0C40(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortSwipePanel*                        SwipePanel_Navigation;                             // 0x0C48(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C50[0x1D0];                                    // 0x0C50(0x01D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GoBackOneScreen();
	void HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList);
	void HandleFullScreenMapToggled(bool bMapVisible);
	void HandleItemVMCardClicked(const class UFortItemVM* ItemVM, const class UAthenaSeasonItemEntryBase* EntrySelected);
	void HandleSwitcherVisibilityShown();
	void OnBattlePassGiftingAllowed(const bool bGiftingAllowed);
	void OnBattlePassOwned();
	void OnGameModeCompatibilityTagUpdate(const class UFortItemVM* FortItem);
	void OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType);
	void OnInsufficientResource(const class UFortPersistentResourceItemDefinition* PersistentResource);
	void OnItemDelayed(const struct FTimespan& Delay);
	void OnItemVmCardUpdate(const struct FExpandedItemVM& ItemVMs, const class UAthenaSeasonItemEntryBase* EntrySelected);
	void OnSetBaseRewardsInfo(const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages);
	void OnSetBonusInfo(const struct FBonusInfoMiniTagData& BonusInfo);
	void OnSetBonusRewardsInfo(const bool bIsUnlocked, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages, const int32 ClaimedOutfits, const int32 TotalOutfits);
	void OnSetCoverPageData(const class FText& Title, const class FText& Description, const bool bPageComplete);
	void OnSetCrewInfo(bool bIsNextMonthRewards, const class FText& MonthText, const struct FTimespan& NextMonthlyRewardTimespan, const class FText& CharacterDisplayName, const class FText& CharacterDescription);
	void OnSetEquipButtonEnable(bool bIsEnable);
	void OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType);
	void OnSetPrerequisiteInfo(const class FText& Description, const int32 CurrentAmount, const int32 NeededAmount, EBattlePassRewardPrerequisiteType PrerequisiteType, const bool bShowPrerequisiteLock);
	void OnSetQuestRewardsInfo(const struct FTimespan& DelayTimespan, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages);
	void OnSetResourcePrice(const int32 Cost, const class UFortPersistentResourceItemDefinition* PersistentResource);
	void OnSetWarningToolTip(const ERewardWarningTooltipType28& WarningTooltipType, const class FText& Description);
	void OnSetWeeklyRewardsInfo(const struct FTimespan& DelayTimespan, const int32 AvailableRewards, const int32 OwnedRewards, const int32 TotalRewards, const int32 AvailablePages, const int32 CompletedPages, const int32 TotalPages);
	void OnTransitionItemDetails(const bool bTransitionForward);
	void OnUpdateBattlePassRequiredBar(const bool bPassRequiredVisible);
	void OnUpdateOwnedOrEquippedTag(const class FText& StatusText);
	void OnUpdateStatusBar(const class FText& StatusText, const EBattlePassStatusBarTypeS28& BarType);
	void OverviewShowAnimationFinished();

	bool GetEquipButtonEnable() const;
	struct FTimespan GetQuestPageDelay() const;
	bool IsSeasonalCustomizationItemOwned() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassScreenS28">();
	}
	static class UBattlePassScreenS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassScreenS28>();
	}
};
static_assert(alignof(UBattlePassScreenS28) == 0x000008, "Wrong alignment on UBattlePassScreenS28");
static_assert(sizeof(UBattlePassScreenS28) == 0x000E20, "Wrong size on UBattlePassScreenS28");
static_assert(offsetof(UBattlePassScreenS28, ResourcePurchaseScreenClass) == 0x000940, "Member 'UBattlePassScreenS28::ResourcePurchaseScreenClass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_Close) == 0x000950, "Member 'UBattlePassScreenS28::Button_Close' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_TouchClose) == 0x000958, "Member 'UBattlePassScreenS28::Button_TouchClose' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ToggleViewDetails) == 0x000960, "Member 'UBattlePassScreenS28::Button_ToggleViewDetails' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ReplayTrailer) == 0x000968, "Member 'UBattlePassScreenS28::Button_ReplayTrailer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ReplayTrailer_Mobile) == 0x000970, "Member 'UBattlePassScreenS28::Button_ReplayTrailer_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ShowAbout) == 0x000978, "Member 'UBattlePassScreenS28::Button_ShowAbout' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ShowAbout_Mobile) == 0x000980, "Member 'UBattlePassScreenS28::Button_ShowAbout_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ShowAboutCustomization) == 0x000988, "Member 'UBattlePassScreenS28::Button_ShowAboutCustomization' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ShowAboutCustomization_Mobile) == 0x000990, "Member 'UBattlePassScreenS28::Button_ShowAboutCustomization_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_BulkBuyRewards) == 0x000998, "Member 'UBattlePassScreenS28::Button_BulkBuyRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_PageComplete) == 0x0009A0, "Member 'UBattlePassScreenS28::Button_PageComplete' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_GiftBattlePass) == 0x0009A8, "Member 'UBattlePassScreenS28::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, VisibilitySwitcher_PlatformBasedButtons) == 0x0009B0, "Member 'UBattlePassScreenS28::VisibilitySwitcher_PlatformBasedButtons' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, BattlePassCurrencyPanel) == 0x0009B8, "Member 'UBattlePassScreenS28::BattlePassCurrencyPanel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, AthenaExclusiveRewardBanner) == 0x0009C0, "Member 'UBattlePassScreenS28::AthenaExclusiveRewardBanner' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Text_Description) == 0x0009C8, "Member 'UBattlePassScreenS28::Text_Description' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Text_ItemName) == 0x0009D0, "Member 'UBattlePassScreenS28::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, ItemRewardTag) == 0x0009D8, "Member 'UBattlePassScreenS28::ItemRewardTag' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Text_SetDetails) == 0x0009E0, "Member 'UBattlePassScreenS28::Text_SetDetails' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Switcher_PrerequisiteInfo) == 0x0009E8, "Member 'UBattlePassScreenS28::Switcher_PrerequisiteInfo' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Text_Prerequisite) == 0x0009F0, "Member 'UBattlePassScreenS28::Text_Prerequisite' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Widget_PrerequisiteProgress) == 0x0009F8, "Member 'UBattlePassScreenS28::Widget_PrerequisiteProgress' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Widget_LevelUpMessageFree) == 0x000A00, "Member 'UBattlePassScreenS28::Widget_LevelUpMessageFree' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Widget_LevelUpMessagePremium) == 0x000A08, "Member 'UBattlePassScreenS28::Widget_LevelUpMessagePremium' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Widget_CustomResourceMessage) == 0x000A10, "Member 'UBattlePassScreenS28::Widget_CustomResourceMessage' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Switcher_PrimaryAction) == 0x000A18, "Member 'UBattlePassScreenS28::Switcher_PrimaryAction' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_BuyLevels) == 0x000A20, "Member 'UBattlePassScreenS28::Button_BuyLevels' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_BuyBattlePass) == 0x000A28, "Member 'UBattlePassScreenS28::Button_BuyBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ClaimReward) == 0x000A30, "Member 'UBattlePassScreenS28::Button_ClaimReward' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_ViewQuests) == 0x000A38, "Member 'UBattlePassScreenS28::Button_ViewQuests' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Button_PreviewLoadingScreen) == 0x000A40, "Member 'UBattlePassScreenS28::Button_PreviewLoadingScreen' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, ItemVMCards) == 0x000A48, "Member 'UBattlePassScreenS28::ItemVMCards' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_RequiresBP) == 0x000A50, "Member 'UBattlePassScreenS28::Tag_RequiresBP' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_PageLocked) == 0x000A58, "Member 'UBattlePassScreenS28::Tag_PageLocked' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_BaseItem) == 0x000A60, "Member 'UBattlePassScreenS28::Tag_BaseItem' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_Prerequisite) == 0x000A68, "Member 'UBattlePassScreenS28::Tag_Prerequisite' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_CompletePage) == 0x000A70, "Member 'UBattlePassScreenS28::Tag_CompletePage' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_NotEnough_Currency) == 0x000A78, "Member 'UBattlePassScreenS28::Tag_NotEnough_Currency' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_Cost) == 0x000A80, "Member 'UBattlePassScreenS28::Tag_Cost' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_Owned) == 0x000A88, "Member 'UBattlePassScreenS28::Tag_Owned' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, Tag_Delayed) == 0x000A90, "Member 'UBattlePassScreenS28::Tag_Delayed' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, QuestCategoryParentTag) == 0x000A98, "Member 'UBattlePassScreenS28::QuestCategoryParentTag' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, PreviewLoadingScreenWidgetClass) == 0x000AA0, "Member 'UBattlePassScreenS28::PreviewLoadingScreenWidgetClass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, SeasonData_BattleStar) == 0x000B00, "Member 'UBattlePassScreenS28::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, CurrentSelectedEntry) == 0x000B08, "Member 'UBattlePassScreenS28::CurrentSelectedEntry' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, SwitcherSubPageTypes) == 0x000B10, "Member 'UBattlePassScreenS28::SwitcherSubPageTypes' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, VisibilitySwitcher_SubPage) == 0x000B20, "Member 'UBattlePassScreenS28::VisibilitySwitcher_SubPage' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, SeasonalBaseCustomizationItem) == 0x000C28, "Member 'UBattlePassScreenS28::SeasonalBaseCustomizationItem' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, bHasSubscription) == 0x000C30, "Member 'UBattlePassScreenS28::bHasSubscription' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, TutorialTooltip_BattleStars) == 0x000C38, "Member 'UBattlePassScreenS28::TutorialTooltip_BattleStars' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, TutorialTooltip_StylePoints) == 0x000C40, "Member 'UBattlePassScreenS28::TutorialTooltip_StylePoints' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS28, SwipePanel_Navigation) == 0x000C48, "Member 'UBattlePassScreenS28::SwipePanel_Navigation' has a wrong offset!");

// Class BattlePassS28UI.FortBattlePassCustomSkinPageS28
// 0x0018 (0x05E0 - 0x05C8)
class UFortBattlePassCustomSkinPageS28 : public UFortBattlePassCustomSkinPageBase
{
public:
	class FString                                 ClaimBaseItemTooltip_ClaimCheckTemplateId;         // 0x05C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassTutorialTooltip*         TutorialTooltip_ClaimBaseItem;                     // 0x05D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassCustomSkinPageS28">();
	}
	static class UFortBattlePassCustomSkinPageS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassCustomSkinPageS28>();
	}
};
static_assert(alignof(UFortBattlePassCustomSkinPageS28) == 0x000008, "Wrong alignment on UFortBattlePassCustomSkinPageS28");
static_assert(sizeof(UFortBattlePassCustomSkinPageS28) == 0x0005E0, "Wrong size on UFortBattlePassCustomSkinPageS28");
static_assert(offsetof(UFortBattlePassCustomSkinPageS28, ClaimBaseItemTooltip_ClaimCheckTemplateId) == 0x0005C8, "Member 'UFortBattlePassCustomSkinPageS28::ClaimBaseItemTooltip_ClaimCheckTemplateId' has a wrong offset!");
static_assert(offsetof(UFortBattlePassCustomSkinPageS28, TutorialTooltip_ClaimBaseItem) == 0x0005D8, "Member 'UFortBattlePassCustomSkinPageS28::TutorialTooltip_ClaimBaseItem' has a wrong offset!");

// Class BattlePassS28UI.FortBattlePassResourcesWidgetS28
// 0x0020 (0x0318 - 0x02F8)
class UFortBattlePassResourcesWidgetS28 final : public UFortBattlePassResourcesWidgetBase
{
public:
	class UCommonTextBlock*                       Text_BattleStarsAmount;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_StylePointsAmount;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_StylePointsRewardsTag;                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_BattleStarsRewardsTag;                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnBattleStarRewardsSet(const int32 Rewards);
	void OnStylePointsRewardsSet(const int32 Rewards);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassResourcesWidgetS28">();
	}
	static class UFortBattlePassResourcesWidgetS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassResourcesWidgetS28>();
	}
};
static_assert(alignof(UFortBattlePassResourcesWidgetS28) == 0x000008, "Wrong alignment on UFortBattlePassResourcesWidgetS28");
static_assert(sizeof(UFortBattlePassResourcesWidgetS28) == 0x000318, "Wrong size on UFortBattlePassResourcesWidgetS28");
static_assert(offsetof(UFortBattlePassResourcesWidgetS28, Text_BattleStarsAmount) == 0x0002F8, "Member 'UFortBattlePassResourcesWidgetS28::Text_BattleStarsAmount' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS28, Text_StylePointsAmount) == 0x000300, "Member 'UFortBattlePassResourcesWidgetS28::Text_StylePointsAmount' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS28, Border_StylePointsRewardsTag) == 0x000308, "Member 'UFortBattlePassResourcesWidgetS28::Border_StylePointsRewardsTag' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS28, Border_BattleStarsRewardsTag) == 0x000310, "Member 'UFortBattlePassResourcesWidgetS28::Border_BattleStarsRewardsTag' has a wrong offset!");

// Class BattlePassS28UI.FortBattlePassTutorialTooltipS28
// 0x0010 (0x02F8 - 0x02E8)
class UFortBattlePassTutorialTooltipS28 : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Tooltip;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F0[0x8];                                      // 0x02F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideTooltip();
	void SetText(const class FText& Text);
	void ShowTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassTutorialTooltipS28">();
	}
	static class UFortBattlePassTutorialTooltipS28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassTutorialTooltipS28>();
	}
};
static_assert(alignof(UFortBattlePassTutorialTooltipS28) == 0x000008, "Wrong alignment on UFortBattlePassTutorialTooltipS28");
static_assert(sizeof(UFortBattlePassTutorialTooltipS28) == 0x0002F8, "Wrong size on UFortBattlePassTutorialTooltipS28");
static_assert(offsetof(UFortBattlePassTutorialTooltipS28, Text_Tooltip) == 0x0002E8, "Member 'UFortBattlePassTutorialTooltipS28::Text_Tooltip' has a wrong offset!");

}

