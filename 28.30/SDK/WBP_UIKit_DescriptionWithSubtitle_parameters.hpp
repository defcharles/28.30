#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_DescriptionWithSubtitle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "E_UI_TagType_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle) == 0x000004, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle) == 0x000008, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle, EntryPoint) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ExecuteUbergraph_WBP_UIKit_DescriptionWithSubtitle::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.MakeDynamicSubtitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle final
{
public:
	class UWBP_DynamicSubtitle_C*                 CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle) == 0x000008, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle) == 0x000018, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle, CallFunc_AddChildToGrid_ReturnValue) == 0x000010, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_MakeDynamicSubtitle::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.SetFortItemDetailsVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM final
{
public:
	class UFortItemDetailsVM*                     ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM) == 0x000008, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM) == 0x000028, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetFortItemDetailsVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.SetRarityTag
// 0x0038 (0x0038 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag final
{
public:
	class FText                                   TagPrimaryText;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TagSecondaryText;                                  // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_UI_TagType                                  TagType;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag) == 0x000008, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag) == 0x000038, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag, TagPrimaryText) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag::TagPrimaryText' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag, TagSecondaryText) == 0x000018, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag::TagSecondaryText' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag, TagType) == 0x000030, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTag::TagType' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.SetRarityTagType
// 0x0058 (0x0058 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType final
{
public:
	E_UI_TagType                                  RarityTagType_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      CallFunc_GetRarityColors_OutputPin;                // 0x0004(0x0050)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType) == 0x000004, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType) == 0x000058, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType, RarityTagType_0) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType::RarityTagType_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType, CallFunc_GetRarityColors_OutputPin) == 0x000004, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType::CallFunc_GetRarityColors_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetRarityTagType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.SetSubtitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle final
{
public:
	class FText                                   SubTitleText;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle) == 0x000008, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle) == 0x000018, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle, SubTitleText) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitle::SubTitleText' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.SetSubtitleText
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText) == 0x000008, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText) == 0x000020, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText, InText) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText::InText' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetSubtitleText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.SetWidgetLayout
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout final
{
public:
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout) == 0x000008, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout) == 0x000008, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_SetWidgetLayout::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.ShowDynamicSubtitle
// 0x0006 (0x0006 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle) == 0x000001, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle) == 0x000006, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle, Show) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle::Show' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle, Temp_byte_Variable) == 0x000003, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle, K2Node_Select_Default) == 0x000005, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_ShowDynamicSubtitle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.__96e8e66b-402a-a6aa-9e19-2688f5dec065_SourceToDest
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest final
{
public:
	struct FFortColorPalette                      OutputPin;                                         // 0x0000(0x0050)(Parm, OutParm, NoDestructor)
	struct FFortColorPalette                      CallFunc_GetRarityColors_OutputPin;                // 0x0050(0x0050)(NoDestructor)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest) == 0x000004, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest) == 0x0000A0, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest, OutputPin) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest::OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest, CallFunc_GetRarityColors_OutputPin) == 0x000050, "Member 'WBP_UIKit_DescriptionWithSubtitle_C___96e8e66b_402a_a6aa_9e19_2688f5dec065_SourceToDest::CallFunc_GetRarityColors_OutputPin' has a wrong offset!");

// Function WBP_UIKit_DescriptionWithSubtitle.WBP_UIKit_DescriptionWithSubtitle_C.GetRarityColors
// 0x01AC (0x01AC - 0x0000)
struct WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors final
{
public:
	bool                                          IsSeries;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      FortColorPalette;                                  // 0x0004(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FFortColorPalette                      OutputPin;                                         // 0x0054(0x0050)(Parm, OutParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      K2Node_MakeStruct_FortColorPalette;                // 0x00BC(0x0050)(NoDestructor)
	struct FFortColorPalette                      K2Node_MakeStruct_FortColorPalette_1;              // 0x010C(0x0050)(NoDestructor)
	struct FFortColorPalette                      K2Node_Select_Default;                             // 0x015C(0x0050)(NoDestructor)
};
static_assert(alignof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors) == 0x000004, "Wrong alignment on WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors");
static_assert(sizeof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors) == 0x0001AC, "Wrong size on WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, IsSeries) == 0x000000, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::IsSeries' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, FortColorPalette) == 0x000004, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::FortColorPalette' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, OutputPin) == 0x000054, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, Temp_bool_Variable) == 0x0000A4, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, CallFunc_SelectColor_ReturnValue) == 0x0000A8, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, K2Node_MakeStruct_FortColorPalette) == 0x0000BC, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::K2Node_MakeStruct_FortColorPalette' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, K2Node_MakeStruct_FortColorPalette_1) == 0x00010C, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::K2Node_MakeStruct_FortColorPalette_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors, K2Node_Select_Default) == 0x00015C, "Member 'WBP_UIKit_DescriptionWithSubtitle_C_GetRarityColors::K2Node_Select_Default' has a wrong offset!");

}

