#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MassLOD

#include "Basic.hpp"

#include "MassEntity_classes.hpp"
#include "MassLOD_structs.hpp"
#include "Engine_structs.hpp"
#include "MassSpawner_classes.hpp"


namespace SDK
{

// Class MassLOD.MassLODCollectorProcessor
// 0x0AA0 (0x0B60 - 0x00C0)
class UMassLODCollectorProcessor final : public UMassProcessor
{
public:
	uint8                                         Pad_C0[0xAA0];                                     // 0x00C0(0x0AA0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassLODCollectorProcessor">();
	}
	static class UMassLODCollectorProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassLODCollectorProcessor>();
	}
};
static_assert(alignof(UMassLODCollectorProcessor) == 0x000008, "Wrong alignment on UMassLODCollectorProcessor");
static_assert(sizeof(UMassLODCollectorProcessor) == 0x000B60, "Wrong size on UMassLODCollectorProcessor");

// Class MassLOD.MassLODDistanceCollectorProcessor
// 0x0AA0 (0x0B60 - 0x00C0)
class UMassLODDistanceCollectorProcessor final : public UMassProcessor
{
public:
	uint8                                         Pad_C0[0xAA0];                                     // 0x00C0(0x0AA0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassLODDistanceCollectorProcessor">();
	}
	static class UMassLODDistanceCollectorProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassLODDistanceCollectorProcessor>();
	}
};
static_assert(alignof(UMassLODDistanceCollectorProcessor) == 0x000008, "Wrong alignment on UMassLODDistanceCollectorProcessor");
static_assert(sizeof(UMassLODDistanceCollectorProcessor) == 0x000B60, "Wrong size on UMassLODDistanceCollectorProcessor");

// Class MassLOD.MassLODSubsystem
// 0x00C8 (0x0100 - 0x0038)
class UMassLODSubsystem final : public UMassSubsystemBase
{
public:
	uint8                                         bGatherPlayerControllers : 1;                      // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bGatherStreamingSources : 1;                       // 0x0038(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bAllowNonPlayerViwerActors : 1;                    // 0x0038(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bUsePlayerPawnLocationInsteadOfCamera : 1;         // 0x0038(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FViewerInfo>                    Viewers;                                           // 0x0040(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<uint32, struct FMassViewerHandle>        ViewerMap;                                         // 0x0050(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                         RegisteredActorViewers;                            // 0x00A0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x50];                                      // 0x00B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerControllerEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassLODSubsystem">();
	}
	static class UMassLODSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassLODSubsystem>();
	}
};
static_assert(alignof(UMassLODSubsystem) == 0x000008, "Wrong alignment on UMassLODSubsystem");
static_assert(sizeof(UMassLODSubsystem) == 0x000100, "Wrong size on UMassLODSubsystem");
static_assert(offsetof(UMassLODSubsystem, Viewers) == 0x000040, "Member 'UMassLODSubsystem::Viewers' has a wrong offset!");
static_assert(offsetof(UMassLODSubsystem, ViewerMap) == 0x000050, "Member 'UMassLODSubsystem::ViewerMap' has a wrong offset!");
static_assert(offsetof(UMassLODSubsystem, RegisteredActorViewers) == 0x0000A0, "Member 'UMassLODSubsystem::RegisteredActorViewers' has a wrong offset!");

// Class MassLOD.MassLODCollectorTrait
// 0x0000 (0x0028 - 0x0028)
class UMassLODCollectorTrait final : public UMassEntityTraitBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassLODCollectorTrait">();
	}
	static class UMassLODCollectorTrait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassLODCollectorTrait>();
	}
};
static_assert(alignof(UMassLODCollectorTrait) == 0x000008, "Wrong alignment on UMassLODCollectorTrait");
static_assert(sizeof(UMassLODCollectorTrait) == 0x000028, "Wrong size on UMassLODCollectorTrait");

// Class MassLOD.MassDistanceLODCollectorTrait
// 0x0000 (0x0028 - 0x0028)
class UMassDistanceLODCollectorTrait final : public UMassEntityTraitBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassDistanceLODCollectorTrait">();
	}
	static class UMassDistanceLODCollectorTrait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassDistanceLODCollectorTrait>();
	}
};
static_assert(alignof(UMassDistanceLODCollectorTrait) == 0x000008, "Wrong alignment on UMassDistanceLODCollectorTrait");
static_assert(sizeof(UMassDistanceLODCollectorTrait) == 0x000028, "Wrong size on UMassDistanceLODCollectorTrait");

// Class MassLOD.MassSimulationLODTrait
// 0x0040 (0x0068 - 0x0028)
class UMassSimulationLODTrait final : public UMassEntityTraitBase
{
public:
	struct FMassSimulationLODParameters           Params_0;                                          // 0x0028(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bEnableVariableTicking;                            // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMassSimulationVariableTickParameters  VariableTickParams;                                // 0x0054(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSimulationLODTrait">();
	}
	static class UMassSimulationLODTrait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSimulationLODTrait>();
	}
};
static_assert(alignof(UMassSimulationLODTrait) == 0x000008, "Wrong alignment on UMassSimulationLODTrait");
static_assert(sizeof(UMassSimulationLODTrait) == 0x000068, "Wrong size on UMassSimulationLODTrait");
static_assert(offsetof(UMassSimulationLODTrait, Params_0) == 0x000028, "Member 'UMassSimulationLODTrait::Params_0' has a wrong offset!");
static_assert(offsetof(UMassSimulationLODTrait, bEnableVariableTicking) == 0x000050, "Member 'UMassSimulationLODTrait::bEnableVariableTicking' has a wrong offset!");
static_assert(offsetof(UMassSimulationLODTrait, VariableTickParams) == 0x000054, "Member 'UMassSimulationLODTrait::VariableTickParams' has a wrong offset!");

// Class MassLOD.MassSimulationLODProcessor
// 0x0D30 (0x0DF0 - 0x00C0)
class UMassSimulationLODProcessor final : public UMassProcessor
{
public:
	uint8                                         Pad_C0[0xD20];                                     // 0x00C0(0x0D20)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDoAdjustmentFromCount;                            // 0x0DE0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_DE1[0xF];                                      // 0x0DE1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSimulationLODProcessor">();
	}
	static class UMassSimulationLODProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSimulationLODProcessor>();
	}
};
static_assert(alignof(UMassSimulationLODProcessor) == 0x000008, "Wrong alignment on UMassSimulationLODProcessor");
static_assert(sizeof(UMassSimulationLODProcessor) == 0x000DF0, "Wrong size on UMassSimulationLODProcessor");
static_assert(offsetof(UMassSimulationLODProcessor, bDoAdjustmentFromCount) == 0x000DE0, "Member 'UMassSimulationLODProcessor::bDoAdjustmentFromCount' has a wrong offset!");

}

