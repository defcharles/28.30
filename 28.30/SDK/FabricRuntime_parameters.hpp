#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FabricRuntime

#include "Basic.hpp"

#include "MetasoundEngine_structs.hpp"
#include "Engine_structs.hpp"
#include "FabricRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "HarmonixMidi_structs.hpp"
#include "PlayspaceSystem_structs.hpp"
#include "GameplayMessages_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FMCoreRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "HarmonixMetasound_structs.hpp"


namespace SDK::Params
{

// Function FabricRuntime.FabricButtonBase.GetCloseTimeline
// 0x0008 (0x0008 - 0x0000)
struct FabricButtonBase_GetCloseTimeline final
{
public:
	class UTimelineComponent*                     ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_GetCloseTimeline) == 0x000008, "Wrong alignment on FabricButtonBase_GetCloseTimeline");
static_assert(sizeof(FabricButtonBase_GetCloseTimeline) == 0x000008, "Wrong size on FabricButtonBase_GetCloseTimeline");
static_assert(offsetof(FabricButtonBase_GetCloseTimeline, ReturnValue) == 0x000000, "Member 'FabricButtonBase_GetCloseTimeline::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.GetOpenTimeline
// 0x0008 (0x0008 - 0x0000)
struct FabricButtonBase_GetOpenTimeline final
{
public:
	class UTimelineComponent*                     ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_GetOpenTimeline) == 0x000008, "Wrong alignment on FabricButtonBase_GetOpenTimeline");
static_assert(sizeof(FabricButtonBase_GetOpenTimeline) == 0x000008, "Wrong size on FabricButtonBase_GetOpenTimeline");
static_assert(offsetof(FabricButtonBase_GetOpenTimeline, ReturnValue) == 0x000000, "Member 'FabricButtonBase_GetOpenTimeline::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonBase_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_IsEnabled) == 0x000001, "Wrong alignment on FabricButtonBase_IsEnabled");
static_assert(sizeof(FabricButtonBase_IsEnabled) == 0x000001, "Wrong size on FabricButtonBase_IsEnabled");
static_assert(offsetof(FabricButtonBase_IsEnabled, ReturnValue) == 0x000000, "Member 'FabricButtonBase_IsEnabled::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.IsHovered
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonBase_IsHovered final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_IsHovered) == 0x000001, "Wrong alignment on FabricButtonBase_IsHovered");
static_assert(sizeof(FabricButtonBase_IsHovered) == 0x000001, "Wrong size on FabricButtonBase_IsHovered");
static_assert(offsetof(FabricButtonBase_IsHovered, ReturnValue) == 0x000000, "Member 'FabricButtonBase_IsHovered::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.IsPressed
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonBase_IsPressed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_IsPressed) == 0x000001, "Wrong alignment on FabricButtonBase_IsPressed");
static_assert(sizeof(FabricButtonBase_IsPressed) == 0x000001, "Wrong size on FabricButtonBase_IsPressed");
static_assert(offsetof(FabricButtonBase_IsPressed, ReturnValue) == 0x000000, "Member 'FabricButtonBase_IsPressed::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.IsToggledOn
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonBase_IsToggledOn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_IsToggledOn) == 0x000001, "Wrong alignment on FabricButtonBase_IsToggledOn");
static_assert(sizeof(FabricButtonBase_IsToggledOn) == 0x000001, "Wrong size on FabricButtonBase_IsToggledOn");
static_assert(offsetof(FabricButtonBase_IsToggledOn, ReturnValue) == 0x000000, "Member 'FabricButtonBase_IsToggledOn::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.OnToggleStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonBase_OnToggleStateChanged final
{
public:
	bool                                          bIsToggled;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_OnToggleStateChanged) == 0x000001, "Wrong alignment on FabricButtonBase_OnToggleStateChanged");
static_assert(sizeof(FabricButtonBase_OnToggleStateChanged) == 0x000001, "Wrong size on FabricButtonBase_OnToggleStateChanged");
static_assert(offsetof(FabricButtonBase_OnToggleStateChanged, bIsToggled) == 0x000000, "Member 'FabricButtonBase_OnToggleStateChanged::bIsToggled' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonBase_SetEnabled final
{
public:
	bool                                          bNewEnabled;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_SetEnabled) == 0x000001, "Wrong alignment on FabricButtonBase_SetEnabled");
static_assert(sizeof(FabricButtonBase_SetEnabled) == 0x000001, "Wrong size on FabricButtonBase_SetEnabled");
static_assert(offsetof(FabricButtonBase_SetEnabled, bNewEnabled) == 0x000000, "Member 'FabricButtonBase_SetEnabled::bNewEnabled' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.SetToggleState
// 0x0003 (0x0003 - 0x0000)
struct FabricButtonBase_SetToggleState final
{
public:
	bool                                          bNewToggleState;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBroadcast;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_SetToggleState) == 0x000001, "Wrong alignment on FabricButtonBase_SetToggleState");
static_assert(sizeof(FabricButtonBase_SetToggleState) == 0x000003, "Wrong size on FabricButtonBase_SetToggleState");
static_assert(offsetof(FabricButtonBase_SetToggleState, bNewToggleState) == 0x000000, "Member 'FabricButtonBase_SetToggleState::bNewToggleState' has a wrong offset!");
static_assert(offsetof(FabricButtonBase_SetToggleState, bBroadcast) == 0x000001, "Member 'FabricButtonBase_SetToggleState::bBroadcast' has a wrong offset!");
static_assert(offsetof(FabricButtonBase_SetToggleState, bForce) == 0x000002, "Member 'FabricButtonBase_SetToggleState::bForce' has a wrong offset!");

// Function FabricRuntime.FabricButtonBase.SetWidgetViewModel
// 0x0008 (0x0008 - 0x0000)
struct FabricButtonBase_SetWidgetViewModel final
{
public:
	class UFabricInteractableViewModel*           ViewModel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonBase_SetWidgetViewModel) == 0x000008, "Wrong alignment on FabricButtonBase_SetWidgetViewModel");
static_assert(sizeof(FabricButtonBase_SetWidgetViewModel) == 0x000008, "Wrong size on FabricButtonBase_SetWidgetViewModel");
static_assert(offsetof(FabricButtonBase_SetWidgetViewModel, ViewModel) == 0x000000, "Member 'FabricButtonBase_SetWidgetViewModel::ViewModel' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.GetCloseTimeline
// 0x0008 (0x0008 - 0x0000)
struct FabricButtonComponentBase_GetCloseTimeline final
{
public:
	class UTimelineComponent*                     ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_GetCloseTimeline) == 0x000008, "Wrong alignment on FabricButtonComponentBase_GetCloseTimeline");
static_assert(sizeof(FabricButtonComponentBase_GetCloseTimeline) == 0x000008, "Wrong size on FabricButtonComponentBase_GetCloseTimeline");
static_assert(offsetof(FabricButtonComponentBase_GetCloseTimeline, ReturnValue) == 0x000000, "Member 'FabricButtonComponentBase_GetCloseTimeline::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.GetOpenTimeline
// 0x0008 (0x0008 - 0x0000)
struct FabricButtonComponentBase_GetOpenTimeline final
{
public:
	class UTimelineComponent*                     ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_GetOpenTimeline) == 0x000008, "Wrong alignment on FabricButtonComponentBase_GetOpenTimeline");
static_assert(sizeof(FabricButtonComponentBase_GetOpenTimeline) == 0x000008, "Wrong size on FabricButtonComponentBase_GetOpenTimeline");
static_assert(offsetof(FabricButtonComponentBase_GetOpenTimeline, ReturnValue) == 0x000000, "Member 'FabricButtonComponentBase_GetOpenTimeline::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonComponentBase_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_IsEnabled) == 0x000001, "Wrong alignment on FabricButtonComponentBase_IsEnabled");
static_assert(sizeof(FabricButtonComponentBase_IsEnabled) == 0x000001, "Wrong size on FabricButtonComponentBase_IsEnabled");
static_assert(offsetof(FabricButtonComponentBase_IsEnabled, ReturnValue) == 0x000000, "Member 'FabricButtonComponentBase_IsEnabled::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.IsHovered
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonComponentBase_IsHovered final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_IsHovered) == 0x000001, "Wrong alignment on FabricButtonComponentBase_IsHovered");
static_assert(sizeof(FabricButtonComponentBase_IsHovered) == 0x000001, "Wrong size on FabricButtonComponentBase_IsHovered");
static_assert(offsetof(FabricButtonComponentBase_IsHovered, ReturnValue) == 0x000000, "Member 'FabricButtonComponentBase_IsHovered::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.IsPressed
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonComponentBase_IsPressed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_IsPressed) == 0x000001, "Wrong alignment on FabricButtonComponentBase_IsPressed");
static_assert(sizeof(FabricButtonComponentBase_IsPressed) == 0x000001, "Wrong size on FabricButtonComponentBase_IsPressed");
static_assert(offsetof(FabricButtonComponentBase_IsPressed, ReturnValue) == 0x000000, "Member 'FabricButtonComponentBase_IsPressed::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.IsToggledOn
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonComponentBase_IsToggledOn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_IsToggledOn) == 0x000001, "Wrong alignment on FabricButtonComponentBase_IsToggledOn");
static_assert(sizeof(FabricButtonComponentBase_IsToggledOn) == 0x000001, "Wrong size on FabricButtonComponentBase_IsToggledOn");
static_assert(offsetof(FabricButtonComponentBase_IsToggledOn, ReturnValue) == 0x000000, "Member 'FabricButtonComponentBase_IsToggledOn::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.OnToggleStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonComponentBase_OnToggleStateChanged final
{
public:
	bool                                          bIsToggled;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_OnToggleStateChanged) == 0x000001, "Wrong alignment on FabricButtonComponentBase_OnToggleStateChanged");
static_assert(sizeof(FabricButtonComponentBase_OnToggleStateChanged) == 0x000001, "Wrong size on FabricButtonComponentBase_OnToggleStateChanged");
static_assert(offsetof(FabricButtonComponentBase_OnToggleStateChanged, bIsToggled) == 0x000000, "Member 'FabricButtonComponentBase_OnToggleStateChanged::bIsToggled' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricButtonComponentBase_SetEnabled final
{
public:
	bool                                          bNewEnabled;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_SetEnabled) == 0x000001, "Wrong alignment on FabricButtonComponentBase_SetEnabled");
static_assert(sizeof(FabricButtonComponentBase_SetEnabled) == 0x000001, "Wrong size on FabricButtonComponentBase_SetEnabled");
static_assert(offsetof(FabricButtonComponentBase_SetEnabled, bNewEnabled) == 0x000000, "Member 'FabricButtonComponentBase_SetEnabled::bNewEnabled' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.SetToggleState
// 0x0003 (0x0003 - 0x0000)
struct FabricButtonComponentBase_SetToggleState final
{
public:
	bool                                          bNewToggleState;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBroadcast;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_SetToggleState) == 0x000001, "Wrong alignment on FabricButtonComponentBase_SetToggleState");
static_assert(sizeof(FabricButtonComponentBase_SetToggleState) == 0x000003, "Wrong size on FabricButtonComponentBase_SetToggleState");
static_assert(offsetof(FabricButtonComponentBase_SetToggleState, bNewToggleState) == 0x000000, "Member 'FabricButtonComponentBase_SetToggleState::bNewToggleState' has a wrong offset!");
static_assert(offsetof(FabricButtonComponentBase_SetToggleState, bBroadcast) == 0x000001, "Member 'FabricButtonComponentBase_SetToggleState::bBroadcast' has a wrong offset!");
static_assert(offsetof(FabricButtonComponentBase_SetToggleState, bForce) == 0x000002, "Member 'FabricButtonComponentBase_SetToggleState::bForce' has a wrong offset!");

// Function FabricRuntime.FabricButtonComponentBase.SetWidgetViewModel
// 0x0008 (0x0008 - 0x0000)
struct FabricButtonComponentBase_SetWidgetViewModel final
{
public:
	class UFabricInteractableViewModel*           ViewModel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricButtonComponentBase_SetWidgetViewModel) == 0x000008, "Wrong alignment on FabricButtonComponentBase_SetWidgetViewModel");
static_assert(sizeof(FabricButtonComponentBase_SetWidgetViewModel) == 0x000008, "Wrong size on FabricButtonComponentBase_SetWidgetViewModel");
static_assert(offsetof(FabricButtonComponentBase_SetWidgetViewModel, ViewModel) == 0x000000, "Member 'FabricButtonComponentBase_SetWidgetViewModel::ViewModel' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchOwner.GetMetaSoundPatchWrapper
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper final
{
public:
	class UFabricMetaSoundPatchWrapper*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper) == 0x000008, "Wrong alignment on FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper");
static_assert(sizeof(FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper) == 0x000008, "Wrong size on FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper");
static_assert(offsetof(FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper, ReturnValue) == 0x000000, "Member 'FabricMetaSoundPatchOwner_GetMetaSoundPatchWrapper::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricAudioGenerator.GetAudioAnalyzer
// 0x0010 (0x0010 - 0x0000)
struct FabricAudioGenerator_GetAudioAnalyzer final
{
public:
	struct FSourceEffectChainEntry                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricAudioGenerator_GetAudioAnalyzer) == 0x000008, "Wrong alignment on FabricAudioGenerator_GetAudioAnalyzer");
static_assert(sizeof(FabricAudioGenerator_GetAudioAnalyzer) == 0x000010, "Wrong size on FabricAudioGenerator_GetAudioAnalyzer");
static_assert(offsetof(FabricAudioGenerator_GetAudioAnalyzer, ReturnValue) == 0x000000, "Member 'FabricAudioGenerator_GetAudioAnalyzer::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricAudioModifier.GetSourceEffectChainEntries
// 0x0010 (0x0010 - 0x0000)
struct FabricAudioModifier_GetSourceEffectChainEntries final
{
public:
	TArray<struct FSourceEffectChainEntry>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricAudioModifier_GetSourceEffectChainEntries) == 0x000008, "Wrong alignment on FabricAudioModifier_GetSourceEffectChainEntries");
static_assert(sizeof(FabricAudioModifier_GetSourceEffectChainEntries) == 0x000010, "Wrong size on FabricAudioModifier_GetSourceEffectChainEntries");
static_assert(offsetof(FabricAudioModifier_GetSourceEffectChainEntries, ReturnValue) == 0x000000, "Member 'FabricAudioModifier_GetSourceEffectChainEntries::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricAudioReceiver.GetSoundSourceBus
// 0x0008 (0x0008 - 0x0000)
struct FabricAudioReceiver_GetSoundSourceBus final
{
public:
	class USoundSourceBus*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricAudioReceiver_GetSoundSourceBus) == 0x000008, "Wrong alignment on FabricAudioReceiver_GetSoundSourceBus");
static_assert(sizeof(FabricAudioReceiver_GetSoundSourceBus) == 0x000008, "Wrong size on FabricAudioReceiver_GetSoundSourceBus");
static_assert(offsetof(FabricAudioReceiver_GetSoundSourceBus, ReturnValue) == 0x000000, "Member 'FabricAudioReceiver_GetSoundSourceBus::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatGenerator.GetFloatProvider
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatGenerator_GetFloatProvider final
{
public:
	class UFabricFloatProviderBase*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatGenerator_GetFloatProvider) == 0x000008, "Wrong alignment on FabricFloatGenerator_GetFloatProvider");
static_assert(sizeof(FabricFloatGenerator_GetFloatProvider) == 0x000008, "Wrong size on FabricFloatGenerator_GetFloatProvider");
static_assert(offsetof(FabricFloatGenerator_GetFloatProvider, ReturnValue) == 0x000000, "Member 'FabricFloatGenerator_GetFloatProvider::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatReceiver.SetFloatProviders
// 0x0010 (0x0010 - 0x0000)
struct FabricFloatReceiver_SetFloatProviders final
{
public:
	TArray<class UFabricFloatProviderBase*>       FloatProvider;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatReceiver_SetFloatProviders) == 0x000008, "Wrong alignment on FabricFloatReceiver_SetFloatProviders");
static_assert(sizeof(FabricFloatReceiver_SetFloatProviders) == 0x000010, "Wrong size on FabricFloatReceiver_SetFloatProviders");
static_assert(offsetof(FabricFloatReceiver_SetFloatProviders, FloatProvider) == 0x000000, "Member 'FabricFloatReceiver_SetFloatProviders::FloatProvider' has a wrong offset!");

// Function FabricRuntime.FabricTextureGenerator.GetTextureProvider
// 0x0008 (0x0008 - 0x0000)
struct FabricTextureGenerator_GetTextureProvider final
{
public:
	class UFabricTextureProviderBase*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTextureGenerator_GetTextureProvider) == 0x000008, "Wrong alignment on FabricTextureGenerator_GetTextureProvider");
static_assert(sizeof(FabricTextureGenerator_GetTextureProvider) == 0x000008, "Wrong size on FabricTextureGenerator_GetTextureProvider");
static_assert(offsetof(FabricTextureGenerator_GetTextureProvider, ReturnValue) == 0x000000, "Member 'FabricTextureGenerator_GetTextureProvider::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricTextureModifier.GetTextureModifier
// 0x0008 (0x0008 - 0x0000)
struct FabricTextureModifier_GetTextureModifier final
{
public:
	class UFabricTextureModifierBase*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTextureModifier_GetTextureModifier) == 0x000008, "Wrong alignment on FabricTextureModifier_GetTextureModifier");
static_assert(sizeof(FabricTextureModifier_GetTextureModifier) == 0x000008, "Wrong size on FabricTextureModifier_GetTextureModifier");
static_assert(offsetof(FabricTextureModifier_GetTextureModifier, ReturnValue) == 0x000000, "Member 'FabricTextureModifier_GetTextureModifier::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricTextureModifier.IsShowingTexturePreview
// 0x0001 (0x0001 - 0x0000)
struct FabricTextureModifier_IsShowingTexturePreview final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTextureModifier_IsShowingTexturePreview) == 0x000001, "Wrong alignment on FabricTextureModifier_IsShowingTexturePreview");
static_assert(sizeof(FabricTextureModifier_IsShowingTexturePreview) == 0x000001, "Wrong size on FabricTextureModifier_IsShowingTexturePreview");
static_assert(offsetof(FabricTextureModifier_IsShowingTexturePreview, ReturnValue) == 0x000000, "Member 'FabricTextureModifier_IsShowingTexturePreview::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricTextureReceiver.OnTexturesChanged
// 0x0010 (0x0010 - 0x0000)
struct FabricTextureReceiver_OnTexturesChanged final
{
public:
	TArray<struct FFabricTextureProviderTexture>  Texture;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTextureReceiver_OnTexturesChanged) == 0x000008, "Wrong alignment on FabricTextureReceiver_OnTexturesChanged");
static_assert(sizeof(FabricTextureReceiver_OnTexturesChanged) == 0x000010, "Wrong size on FabricTextureReceiver_OnTexturesChanged");
static_assert(offsetof(FabricTextureReceiver_OnTexturesChanged, Texture) == 0x000000, "Member 'FabricTextureReceiver_OnTexturesChanged::Texture' has a wrong offset!");

// Function FabricRuntime.FabricMeshGenerator.GetMeshProvider
// 0x0008 (0x0008 - 0x0000)
struct FabricMeshGenerator_GetMeshProvider final
{
public:
	class UFabricMeshProviderBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshGenerator_GetMeshProvider) == 0x000008, "Wrong alignment on FabricMeshGenerator_GetMeshProvider");
static_assert(sizeof(FabricMeshGenerator_GetMeshProvider) == 0x000008, "Wrong size on FabricMeshGenerator_GetMeshProvider");
static_assert(offsetof(FabricMeshGenerator_GetMeshProvider, ReturnValue) == 0x000000, "Member 'FabricMeshGenerator_GetMeshProvider::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMeshModifier.OnMeshesChanged
// 0x0018 (0x0018 - 0x0000)
struct FabricMeshModifier_OnMeshesChanged final
{
public:
	TArray<struct FFabricMeshInstanceReference>   InstanceMeshReferences;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bInstancesChanged;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMeshModifier_OnMeshesChanged) == 0x000008, "Wrong alignment on FabricMeshModifier_OnMeshesChanged");
static_assert(sizeof(FabricMeshModifier_OnMeshesChanged) == 0x000018, "Wrong size on FabricMeshModifier_OnMeshesChanged");
static_assert(offsetof(FabricMeshModifier_OnMeshesChanged, InstanceMeshReferences) == 0x000000, "Member 'FabricMeshModifier_OnMeshesChanged::InstanceMeshReferences' has a wrong offset!");
static_assert(offsetof(FabricMeshModifier_OnMeshesChanged, bInstancesChanged) == 0x000010, "Member 'FabricMeshModifier_OnMeshesChanged::bInstancesChanged' has a wrong offset!");

// Function FabricRuntime.FabricMeshModifier.GetMeshModifier
// 0x0008 (0x0008 - 0x0000)
struct FabricMeshModifier_GetMeshModifier final
{
public:
	class UFabricMeshModifierBase*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshModifier_GetMeshModifier) == 0x000008, "Wrong alignment on FabricMeshModifier_GetMeshModifier");
static_assert(sizeof(FabricMeshModifier_GetMeshModifier) == 0x000008, "Wrong size on FabricMeshModifier_GetMeshModifier");
static_assert(offsetof(FabricMeshModifier_GetMeshModifier, ReturnValue) == 0x000000, "Member 'FabricMeshModifier_GetMeshModifier::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMeshModifier.IsShowingMeshPreview
// 0x0001 (0x0001 - 0x0000)
struct FabricMeshModifier_IsShowingMeshPreview final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshModifier_IsShowingMeshPreview) == 0x000001, "Wrong alignment on FabricMeshModifier_IsShowingMeshPreview");
static_assert(sizeof(FabricMeshModifier_IsShowingMeshPreview) == 0x000001, "Wrong size on FabricMeshModifier_IsShowingMeshPreview");
static_assert(offsetof(FabricMeshModifier_IsShowingMeshPreview, ReturnValue) == 0x000000, "Member 'FabricMeshModifier_IsShowingMeshPreview::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMeshReceiver.OnMeshInstanceReferencesChanged
// 0x0018 (0x0018 - 0x0000)
struct FabricMeshReceiver_OnMeshInstanceReferencesChanged final
{
public:
	TArray<struct FFabricMeshInstanceReference>   MeshInstanceReferences;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bMeshChanged;                                      // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInstancesChanged;                                 // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMeshReceiver_OnMeshInstanceReferencesChanged) == 0x000008, "Wrong alignment on FabricMeshReceiver_OnMeshInstanceReferencesChanged");
static_assert(sizeof(FabricMeshReceiver_OnMeshInstanceReferencesChanged) == 0x000018, "Wrong size on FabricMeshReceiver_OnMeshInstanceReferencesChanged");
static_assert(offsetof(FabricMeshReceiver_OnMeshInstanceReferencesChanged, MeshInstanceReferences) == 0x000000, "Member 'FabricMeshReceiver_OnMeshInstanceReferencesChanged::MeshInstanceReferences' has a wrong offset!");
static_assert(offsetof(FabricMeshReceiver_OnMeshInstanceReferencesChanged, bMeshChanged) == 0x000010, "Member 'FabricMeshReceiver_OnMeshInstanceReferencesChanged::bMeshChanged' has a wrong offset!");
static_assert(offsetof(FabricMeshReceiver_OnMeshInstanceReferencesChanged, bInstancesChanged) == 0x000011, "Member 'FabricMeshReceiver_OnMeshInstanceReferencesChanged::bInstancesChanged' has a wrong offset!");

// Function FabricRuntime.FabricMeshReceiver.OnMeshInstancesChanged
// 0x0010 (0x0010 - 0x0000)
struct FabricMeshReceiver_OnMeshInstancesChanged final
{
public:
	TArray<struct FTransform>                     Meshes;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshReceiver_OnMeshInstancesChanged) == 0x000008, "Wrong alignment on FabricMeshReceiver_OnMeshInstancesChanged");
static_assert(sizeof(FabricMeshReceiver_OnMeshInstancesChanged) == 0x000010, "Wrong size on FabricMeshReceiver_OnMeshInstancesChanged");
static_assert(offsetof(FabricMeshReceiver_OnMeshInstancesChanged, Meshes) == 0x000000, "Member 'FabricMeshReceiver_OnMeshInstancesChanged::Meshes' has a wrong offset!");

// Function FabricRuntime.FabricMeshReceiver.OnMeshReferenceChanged
// 0x0038 (0x0038 - 0x0000)
struct FabricMeshReceiver_OnMeshReferenceChanged final
{
public:
	struct FFabricMeshProviderMeshReference       ReferenceMesh;                                     // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshReceiver_OnMeshReferenceChanged) == 0x000008, "Wrong alignment on FabricMeshReceiver_OnMeshReferenceChanged");
static_assert(sizeof(FabricMeshReceiver_OnMeshReferenceChanged) == 0x000038, "Wrong size on FabricMeshReceiver_OnMeshReferenceChanged");
static_assert(offsetof(FabricMeshReceiver_OnMeshReferenceChanged, ReferenceMesh) == 0x000000, "Member 'FabricMeshReceiver_OnMeshReferenceChanged::ReferenceMesh' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.OnModulatedPropertyChanged
// 0x0018 (0x0018 - 0x0000)
struct FabricModulatable_OnModulatedPropertyChanged final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ModulatorObject;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricModulatable_OnModulatedPropertyChanged) == 0x000008, "Wrong alignment on FabricModulatable_OnModulatedPropertyChanged");
static_assert(sizeof(FabricModulatable_OnModulatedPropertyChanged) == 0x000018, "Wrong size on FabricModulatable_OnModulatedPropertyChanged");
static_assert(offsetof(FabricModulatable_OnModulatedPropertyChanged, Value) == 0x000000, "Member 'FabricModulatable_OnModulatedPropertyChanged::Value' has a wrong offset!");
static_assert(offsetof(FabricModulatable_OnModulatedPropertyChanged, ModulatorObject) == 0x000010, "Member 'FabricModulatable_OnModulatedPropertyChanged::ModulatorObject' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.OnModulatorFloatProviderConnectionChanged
// 0x0010 (0x0010 - 0x0000)
struct FabricModulatable_OnModulatorFloatProviderConnectionChanged final
{
public:
	bool                                          bConnected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ModulatorObject;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricModulatable_OnModulatorFloatProviderConnectionChanged) == 0x000008, "Wrong alignment on FabricModulatable_OnModulatorFloatProviderConnectionChanged");
static_assert(sizeof(FabricModulatable_OnModulatorFloatProviderConnectionChanged) == 0x000010, "Wrong size on FabricModulatable_OnModulatorFloatProviderConnectionChanged");
static_assert(offsetof(FabricModulatable_OnModulatorFloatProviderConnectionChanged, bConnected) == 0x000000, "Member 'FabricModulatable_OnModulatorFloatProviderConnectionChanged::bConnected' has a wrong offset!");
static_assert(offsetof(FabricModulatable_OnModulatorFloatProviderConnectionChanged, ModulatorObject) == 0x000008, "Member 'FabricModulatable_OnModulatorFloatProviderConnectionChanged::ModulatorObject' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.GetModulatedActor
// 0x0008 (0x0008 - 0x0000)
struct FabricModulatable_GetModulatedActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricModulatable_GetModulatedActor) == 0x000008, "Wrong alignment on FabricModulatable_GetModulatedActor");
static_assert(sizeof(FabricModulatable_GetModulatedActor) == 0x000008, "Wrong size on FabricModulatable_GetModulatedActor");
static_assert(offsetof(FabricModulatable_GetModulatedActor, ReturnValue) == 0x000000, "Member 'FabricModulatable_GetModulatedActor::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.GetModulatedBool
// 0x0058 (0x0058 - 0x0000)
struct FabricModulatable_GetModulatedBool final
{
public:
	class FString                                 Param;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiSongPos                           SongPos;                                           // 0x0010(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          OutBool;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0051(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricModulatable_GetModulatedBool) == 0x000008, "Wrong alignment on FabricModulatable_GetModulatedBool");
static_assert(sizeof(FabricModulatable_GetModulatedBool) == 0x000058, "Wrong size on FabricModulatable_GetModulatedBool");
static_assert(offsetof(FabricModulatable_GetModulatedBool, Param) == 0x000000, "Member 'FabricModulatable_GetModulatedBool::Param' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedBool, SongPos) == 0x000010, "Member 'FabricModulatable_GetModulatedBool::SongPos' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedBool, OutBool) == 0x000050, "Member 'FabricModulatable_GetModulatedBool::OutBool' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedBool, ReturnValue) == 0x000051, "Member 'FabricModulatable_GetModulatedBool::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.GetModulatedEnum
// 0x0058 (0x0058 - 0x0000)
struct FabricModulatable_GetModulatedEnum final
{
public:
	class FString                                 Param;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiSongPos                           SongPos;                                           // 0x0010(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         OutEnum;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0051(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricModulatable_GetModulatedEnum) == 0x000008, "Wrong alignment on FabricModulatable_GetModulatedEnum");
static_assert(sizeof(FabricModulatable_GetModulatedEnum) == 0x000058, "Wrong size on FabricModulatable_GetModulatedEnum");
static_assert(offsetof(FabricModulatable_GetModulatedEnum, Param) == 0x000000, "Member 'FabricModulatable_GetModulatedEnum::Param' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedEnum, SongPos) == 0x000010, "Member 'FabricModulatable_GetModulatedEnum::SongPos' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedEnum, OutEnum) == 0x000050, "Member 'FabricModulatable_GetModulatedEnum::OutEnum' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedEnum, ReturnValue) == 0x000051, "Member 'FabricModulatable_GetModulatedEnum::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.GetModulatedFloat
// 0x0058 (0x0058 - 0x0000)
struct FabricModulatable_GetModulatedFloat final
{
public:
	class FString                                 Param;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiSongPos                           SongPos;                                           // 0x0010(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         OutFloat;                                          // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricModulatable_GetModulatedFloat) == 0x000008, "Wrong alignment on FabricModulatable_GetModulatedFloat");
static_assert(sizeof(FabricModulatable_GetModulatedFloat) == 0x000058, "Wrong size on FabricModulatable_GetModulatedFloat");
static_assert(offsetof(FabricModulatable_GetModulatedFloat, Param) == 0x000000, "Member 'FabricModulatable_GetModulatedFloat::Param' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedFloat, SongPos) == 0x000010, "Member 'FabricModulatable_GetModulatedFloat::SongPos' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedFloat, OutFloat) == 0x000050, "Member 'FabricModulatable_GetModulatedFloat::OutFloat' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedFloat, ReturnValue) == 0x000054, "Member 'FabricModulatable_GetModulatedFloat::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.GetModulatedInt
// 0x0058 (0x0058 - 0x0000)
struct FabricModulatable_GetModulatedInt final
{
public:
	class FString                                 Param;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiSongPos                           SongPos;                                           // 0x0010(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         OutInt;                                            // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricModulatable_GetModulatedInt) == 0x000008, "Wrong alignment on FabricModulatable_GetModulatedInt");
static_assert(sizeof(FabricModulatable_GetModulatedInt) == 0x000058, "Wrong size on FabricModulatable_GetModulatedInt");
static_assert(offsetof(FabricModulatable_GetModulatedInt, Param) == 0x000000, "Member 'FabricModulatable_GetModulatedInt::Param' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedInt, SongPos) == 0x000010, "Member 'FabricModulatable_GetModulatedInt::SongPos' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedInt, OutInt) == 0x000050, "Member 'FabricModulatable_GetModulatedInt::OutInt' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedInt, ReturnValue) == 0x000054, "Member 'FabricModulatable_GetModulatedInt::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.GetModulatedString
// 0x0068 (0x0068 - 0x0000)
struct FabricModulatable_GetModulatedString final
{
public:
	class FString                                 Param;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiSongPos                           SongPos;                                           // 0x0010(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutString;                                         // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricModulatable_GetModulatedString) == 0x000008, "Wrong alignment on FabricModulatable_GetModulatedString");
static_assert(sizeof(FabricModulatable_GetModulatedString) == 0x000068, "Wrong size on FabricModulatable_GetModulatedString");
static_assert(offsetof(FabricModulatable_GetModulatedString, Param) == 0x000000, "Member 'FabricModulatable_GetModulatedString::Param' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedString, SongPos) == 0x000010, "Member 'FabricModulatable_GetModulatedString::SongPos' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedString, OutString) == 0x000050, "Member 'FabricModulatable_GetModulatedString::OutString' has a wrong offset!");
static_assert(offsetof(FabricModulatable_GetModulatedString, ReturnValue) == 0x000060, "Member 'FabricModulatable_GetModulatedString::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatable.IsParamModulated
// 0x0018 (0x0018 - 0x0000)
struct FabricModulatable_IsParamModulated final
{
public:
	class FString                                 Param;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricModulatable_IsParamModulated) == 0x000008, "Wrong alignment on FabricModulatable_IsParamModulated");
static_assert(sizeof(FabricModulatable_IsParamModulated) == 0x000018, "Wrong size on FabricModulatable_IsParamModulated");
static_assert(offsetof(FabricModulatable_IsParamModulated, Param) == 0x000000, "Member 'FabricModulatable_IsParamModulated::Param' has a wrong offset!");
static_assert(offsetof(FabricModulatable_IsParamModulated, ReturnValue) == 0x000010, "Member 'FabricModulatable_IsParamModulated::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderBase_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_ReceiveTick) == 0x000004, "Wrong alignment on FabricFloatProviderBase_ReceiveTick");
static_assert(sizeof(FabricFloatProviderBase_ReceiveTick) == 0x000004, "Wrong size on FabricFloatProviderBase_ReceiveTick");
static_assert(offsetof(FabricFloatProviderBase_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'FabricFloatProviderBase_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.SetAssociatedPatchWrapper
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatProviderBase_SetAssociatedPatchWrapper final
{
public:
	class UFabricMetaSoundModulatorPatchWrapper*  PatchWrapper;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_SetAssociatedPatchWrapper) == 0x000008, "Wrong alignment on FabricFloatProviderBase_SetAssociatedPatchWrapper");
static_assert(sizeof(FabricFloatProviderBase_SetAssociatedPatchWrapper) == 0x000008, "Wrong size on FabricFloatProviderBase_SetAssociatedPatchWrapper");
static_assert(offsetof(FabricFloatProviderBase_SetAssociatedPatchWrapper, PatchWrapper) == 0x000000, "Member 'FabricFloatProviderBase_SetAssociatedPatchWrapper::PatchWrapper' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.SetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatProviderBase_SetMusicClock final
{
public:
	class UMusicClockComponent*                   NewMusicClock;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_SetMusicClock) == 0x000008, "Wrong alignment on FabricFloatProviderBase_SetMusicClock");
static_assert(sizeof(FabricFloatProviderBase_SetMusicClock) == 0x000008, "Wrong size on FabricFloatProviderBase_SetMusicClock");
static_assert(offsetof(FabricFloatProviderBase_SetMusicClock, NewMusicClock) == 0x000000, "Member 'FabricFloatProviderBase_SetMusicClock::NewMusicClock' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.SetProviderEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricFloatProviderBase_SetProviderEnabled final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_SetProviderEnabled) == 0x000001, "Wrong alignment on FabricFloatProviderBase_SetProviderEnabled");
static_assert(sizeof(FabricFloatProviderBase_SetProviderEnabled) == 0x000001, "Wrong size on FabricFloatProviderBase_SetProviderEnabled");
static_assert(offsetof(FabricFloatProviderBase_SetProviderEnabled, bInIsEnabled) == 0x000000, "Member 'FabricFloatProviderBase_SetProviderEnabled::bInIsEnabled' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.GetAssociatedPatchWrapper
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatProviderBase_GetAssociatedPatchWrapper final
{
public:
	class UFabricMetaSoundModulatorPatchWrapper*  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_GetAssociatedPatchWrapper) == 0x000008, "Wrong alignment on FabricFloatProviderBase_GetAssociatedPatchWrapper");
static_assert(sizeof(FabricFloatProviderBase_GetAssociatedPatchWrapper) == 0x000008, "Wrong size on FabricFloatProviderBase_GetAssociatedPatchWrapper");
static_assert(offsetof(FabricFloatProviderBase_GetAssociatedPatchWrapper, ReturnValue) == 0x000000, "Member 'FabricFloatProviderBase_GetAssociatedPatchWrapper::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.GetCurrentFloat
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderBase_GetCurrentFloat final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_GetCurrentFloat) == 0x000004, "Wrong alignment on FabricFloatProviderBase_GetCurrentFloat");
static_assert(sizeof(FabricFloatProviderBase_GetCurrentFloat) == 0x000004, "Wrong size on FabricFloatProviderBase_GetCurrentFloat");
static_assert(offsetof(FabricFloatProviderBase_GetCurrentFloat, ReturnValue) == 0x000000, "Member 'FabricFloatProviderBase_GetCurrentFloat::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.GetCurrentSongPos
// 0x0040 (0x0040 - 0x0000)
struct FabricFloatProviderBase_GetCurrentSongPos final
{
public:
	struct FMidiSongPos                           ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_GetCurrentSongPos) == 0x000008, "Wrong alignment on FabricFloatProviderBase_GetCurrentSongPos");
static_assert(sizeof(FabricFloatProviderBase_GetCurrentSongPos) == 0x000040, "Wrong size on FabricFloatProviderBase_GetCurrentSongPos");
static_assert(offsetof(FabricFloatProviderBase_GetCurrentSongPos, ReturnValue) == 0x000000, "Member 'FabricFloatProviderBase_GetCurrentSongPos::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.GetCurrentSongPosWithOffset
// 0x0048 (0x0048 - 0x0000)
struct FabricFloatProviderBase_GetCurrentSongPosWithOffset final
{
public:
	float                                         OffsetSeconds;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMidiSongPos                           ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_GetCurrentSongPosWithOffset) == 0x000008, "Wrong alignment on FabricFloatProviderBase_GetCurrentSongPosWithOffset");
static_assert(sizeof(FabricFloatProviderBase_GetCurrentSongPosWithOffset) == 0x000048, "Wrong size on FabricFloatProviderBase_GetCurrentSongPosWithOffset");
static_assert(offsetof(FabricFloatProviderBase_GetCurrentSongPosWithOffset, OffsetSeconds) == 0x000000, "Member 'FabricFloatProviderBase_GetCurrentSongPosWithOffset::OffsetSeconds' has a wrong offset!");
static_assert(offsetof(FabricFloatProviderBase_GetCurrentSongPosWithOffset, ReturnValue) == 0x000008, "Member 'FabricFloatProviderBase_GetCurrentSongPosWithOffset::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.GetFloatAtSongPos
// 0x0048 (0x0048 - 0x0000)
struct FabricFloatProviderBase_GetFloatAtSongPos final
{
public:
	struct FMidiSongPos                           SongPos;                                           // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricFloatProviderBase_GetFloatAtSongPos) == 0x000008, "Wrong alignment on FabricFloatProviderBase_GetFloatAtSongPos");
static_assert(sizeof(FabricFloatProviderBase_GetFloatAtSongPos) == 0x000048, "Wrong size on FabricFloatProviderBase_GetFloatAtSongPos");
static_assert(offsetof(FabricFloatProviderBase_GetFloatAtSongPos, SongPos) == 0x000000, "Member 'FabricFloatProviderBase_GetFloatAtSongPos::SongPos' has a wrong offset!");
static_assert(offsetof(FabricFloatProviderBase_GetFloatAtSongPos, ReturnValue) == 0x000040, "Member 'FabricFloatProviderBase_GetFloatAtSongPos::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderBase.GetFloatProviderType
// 0x0001 (0x0001 - 0x0000)
struct FabricFloatProviderBase_GetFloatProviderType final
{
public:
	EFabricFloatProviderType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderBase_GetFloatProviderType) == 0x000001, "Wrong alignment on FabricFloatProviderBase_GetFloatProviderType");
static_assert(sizeof(FabricFloatProviderBase_GetFloatProviderType) == 0x000001, "Wrong size on FabricFloatProviderBase_GetFloatProviderType");
static_assert(offsetof(FabricFloatProviderBase_GetFloatProviderType, ReturnValue) == 0x000000, "Member 'FabricFloatProviderBase_GetFloatProviderType::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.AddPreviewDisplayMesh
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatProviderWave_AddPreviewDisplayMesh final
{
public:
	class UStaticMeshComponent*                   Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_AddPreviewDisplayMesh) == 0x000008, "Wrong alignment on FabricFloatProviderWave_AddPreviewDisplayMesh");
static_assert(sizeof(FabricFloatProviderWave_AddPreviewDisplayMesh) == 0x000008, "Wrong size on FabricFloatProviderWave_AddPreviewDisplayMesh");
static_assert(offsetof(FabricFloatProviderWave_AddPreviewDisplayMesh, Mesh) == 0x000000, "Member 'FabricFloatProviderWave_AddPreviewDisplayMesh::Mesh' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.GetPreviewDisplayMeshes
// 0x0010 (0x0010 - 0x0000)
struct FabricFloatProviderWave_GetPreviewDisplayMeshes final
{
public:
	TArray<class UStaticMeshComponent*>           ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_GetPreviewDisplayMeshes) == 0x000008, "Wrong alignment on FabricFloatProviderWave_GetPreviewDisplayMeshes");
static_assert(sizeof(FabricFloatProviderWave_GetPreviewDisplayMeshes) == 0x000010, "Wrong size on FabricFloatProviderWave_GetPreviewDisplayMeshes");
static_assert(offsetof(FabricFloatProviderWave_GetPreviewDisplayMeshes, ReturnValue) == 0x000000, "Member 'FabricFloatProviderWave_GetPreviewDisplayMeshes::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.RemovePreviewDisplayMesh
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatProviderWave_RemovePreviewDisplayMesh final
{
public:
	class UStaticMeshComponent*                   Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_RemovePreviewDisplayMesh) == 0x000008, "Wrong alignment on FabricFloatProviderWave_RemovePreviewDisplayMesh");
static_assert(sizeof(FabricFloatProviderWave_RemovePreviewDisplayMesh) == 0x000008, "Wrong size on FabricFloatProviderWave_RemovePreviewDisplayMesh");
static_assert(offsetof(FabricFloatProviderWave_RemovePreviewDisplayMesh, Mesh) == 0x000000, "Member 'FabricFloatProviderWave_RemovePreviewDisplayMesh::Mesh' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.SetFreePhase
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderWave_SetFreePhase final
{
public:
	float                                         InFreePhase;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_SetFreePhase) == 0x000004, "Wrong alignment on FabricFloatProviderWave_SetFreePhase");
static_assert(sizeof(FabricFloatProviderWave_SetFreePhase) == 0x000004, "Wrong size on FabricFloatProviderWave_SetFreePhase");
static_assert(offsetof(FabricFloatProviderWave_SetFreePhase, InFreePhase) == 0x000000, "Member 'FabricFloatProviderWave_SetFreePhase::InFreePhase' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.SetRandomSeedByGuid
// 0x0010 (0x0010 - 0x0000)
struct FabricFloatProviderWave_SetRandomSeedByGuid final
{
public:
	struct FGuid                                  InRandomGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_SetRandomSeedByGuid) == 0x000004, "Wrong alignment on FabricFloatProviderWave_SetRandomSeedByGuid");
static_assert(sizeof(FabricFloatProviderWave_SetRandomSeedByGuid) == 0x000010, "Wrong size on FabricFloatProviderWave_SetRandomSeedByGuid");
static_assert(offsetof(FabricFloatProviderWave_SetRandomSeedByGuid, InRandomGuid) == 0x000000, "Member 'FabricFloatProviderWave_SetRandomSeedByGuid::InRandomGuid' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.GetCurrentFreePhase
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderWave_GetCurrentFreePhase final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_GetCurrentFreePhase) == 0x000004, "Wrong alignment on FabricFloatProviderWave_GetCurrentFreePhase");
static_assert(sizeof(FabricFloatProviderWave_GetCurrentFreePhase) == 0x000004, "Wrong size on FabricFloatProviderWave_GetCurrentFreePhase");
static_assert(offsetof(FabricFloatProviderWave_GetCurrentFreePhase, ReturnValue) == 0x000000, "Member 'FabricFloatProviderWave_GetCurrentFreePhase::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.GetCurrentPhase
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderWave_GetCurrentPhase final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_GetCurrentPhase) == 0x000004, "Wrong alignment on FabricFloatProviderWave_GetCurrentPhase");
static_assert(sizeof(FabricFloatProviderWave_GetCurrentPhase) == 0x000004, "Wrong size on FabricFloatProviderWave_GetCurrentPhase");
static_assert(offsetof(FabricFloatProviderWave_GetCurrentPhase, ReturnValue) == 0x000000, "Member 'FabricFloatProviderWave_GetCurrentPhase::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderWave.GetRandomSeed
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderWave_GetRandomSeed final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderWave_GetRandomSeed) == 0x000004, "Wrong alignment on FabricFloatProviderWave_GetRandomSeed");
static_assert(sizeof(FabricFloatProviderWave_GetRandomSeed) == 0x000004, "Wrong size on FabricFloatProviderWave_GetRandomSeed");
static_assert(offsetof(FabricFloatProviderWave_GetRandomSeed, ReturnValue) == 0x000000, "Member 'FabricFloatProviderWave_GetRandomSeed::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderStep.GetStepLengthBeats
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderStep_GetStepLengthBeats final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderStep_GetStepLengthBeats) == 0x000004, "Wrong alignment on FabricFloatProviderStep_GetStepLengthBeats");
static_assert(sizeof(FabricFloatProviderStep_GetStepLengthBeats) == 0x000004, "Wrong size on FabricFloatProviderStep_GetStepLengthBeats");
static_assert(offsetof(FabricFloatProviderStep_GetStepLengthBeats, ReturnValue) == 0x000000, "Member 'FabricFloatProviderStep_GetStepLengthBeats::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderValueSetter.BroadcastCurrentValue
// 0x0008 (0x0008 - 0x0000)
struct FabricFloatProviderValueSetter_BroadcastCurrentValue final
{
public:
	float                                         OverriddenBeat;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderValueSetter_BroadcastCurrentValue) == 0x000004, "Wrong alignment on FabricFloatProviderValueSetter_BroadcastCurrentValue");
static_assert(sizeof(FabricFloatProviderValueSetter_BroadcastCurrentValue) == 0x000008, "Wrong size on FabricFloatProviderValueSetter_BroadcastCurrentValue");
static_assert(offsetof(FabricFloatProviderValueSetter_BroadcastCurrentValue, OverriddenBeat) == 0x000000, "Member 'FabricFloatProviderValueSetter_BroadcastCurrentValue::OverriddenBeat' has a wrong offset!");
static_assert(offsetof(FabricFloatProviderValueSetter_BroadcastCurrentValue, ReturnValue) == 0x000004, "Member 'FabricFloatProviderValueSetter_BroadcastCurrentValue::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderValueSetter.CalculateTransitionTiming
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderValueSetter_CalculateTransitionTiming final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderValueSetter_CalculateTransitionTiming) == 0x000004, "Wrong alignment on FabricFloatProviderValueSetter_CalculateTransitionTiming");
static_assert(sizeof(FabricFloatProviderValueSetter_CalculateTransitionTiming) == 0x000004, "Wrong size on FabricFloatProviderValueSetter_CalculateTransitionTiming");
static_assert(offsetof(FabricFloatProviderValueSetter_CalculateTransitionTiming, ReturnValue) == 0x000000, "Member 'FabricFloatProviderValueSetter_CalculateTransitionTiming::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderValueSetter.CanUsePredictiveBeatBroadcasting
// 0x0001 (0x0001 - 0x0000)
struct FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting) == 0x000001, "Wrong alignment on FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting");
static_assert(sizeof(FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting) == 0x000001, "Wrong size on FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting");
static_assert(offsetof(FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting, ReturnValue) == 0x000000, "Member 'FabricFloatProviderValueSetter_CanUsePredictiveBeatBroadcasting::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricFloatProviderValueSetter.GetUpdateBeat
// 0x0004 (0x0004 - 0x0000)
struct FabricFloatProviderValueSetter_GetUpdateBeat final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricFloatProviderValueSetter_GetUpdateBeat) == 0x000004, "Wrong alignment on FabricFloatProviderValueSetter_GetUpdateBeat");
static_assert(sizeof(FabricFloatProviderValueSetter_GetUpdateBeat) == 0x000004, "Wrong size on FabricFloatProviderValueSetter_GetUpdateBeat");
static_assert(offsetof(FabricFloatProviderValueSetter_GetUpdateBeat, ReturnValue) == 0x000000, "Member 'FabricFloatProviderValueSetter_GetUpdateBeat::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractableControllerComponent.ClientReceiveDoesIslandContainFabricDevices
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices final
{
public:
	bool                                          bIslandContainsFabricDevices;                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices) == 0x000001, "Wrong alignment on FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices");
static_assert(sizeof(FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices) == 0x000001, "Wrong size on FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices");
static_assert(offsetof(FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices, bIslandContainsFabricDevices) == 0x000000, "Member 'FabricInteractableControllerComponent_ClientReceiveDoesIslandContainFabricDevices::bIslandContainsFabricDevices' has a wrong offset!");

// Function FabricRuntime.FabricInteractableControllerComponent.OnCreativeModeEnabledChangedDelegate
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate final
{
public:
	bool                                          bCreativeEnabled;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate) == 0x000001, "Wrong alignment on FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate");
static_assert(sizeof(FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate) == 0x000001, "Wrong size on FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate");
static_assert(offsetof(FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate, bCreativeEnabled) == 0x000000, "Member 'FabricInteractableControllerComponent_OnCreativeModeEnabledChangedDelegate::bCreativeEnabled' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.CanInteractWithHoldable
// 0x0018 (0x0018 - 0x0000)
struct FabricInteractable_CanInteractWithHoldable final
{
public:
	TScriptInterface<class IFabricHoldable>       Holdable;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricInteractable_CanInteractWithHoldable) == 0x000008, "Wrong alignment on FabricInteractable_CanInteractWithHoldable");
static_assert(sizeof(FabricInteractable_CanInteractWithHoldable) == 0x000018, "Wrong size on FabricInteractable_CanInteractWithHoldable");
static_assert(offsetof(FabricInteractable_CanInteractWithHoldable, Holdable) == 0x000000, "Member 'FabricInteractable_CanInteractWithHoldable::Holdable' has a wrong offset!");
static_assert(offsetof(FabricInteractable_CanInteractWithHoldable, ReturnValue) == 0x000010, "Member 'FabricInteractable_CanInteractWithHoldable::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.EndInteraction
// 0x0010 (0x0010 - 0x0000)
struct FabricInteractable_EndInteraction final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasDragAndDropInteraction;                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricInteractable_EndInteraction) == 0x000008, "Wrong alignment on FabricInteractable_EndInteraction");
static_assert(sizeof(FabricInteractable_EndInteraction) == 0x000010, "Wrong size on FabricInteractable_EndInteraction");
static_assert(offsetof(FabricInteractable_EndInteraction, PlayerController) == 0x000000, "Member 'FabricInteractable_EndInteraction::PlayerController' has a wrong offset!");
static_assert(offsetof(FabricInteractable_EndInteraction, bWasDragAndDropInteraction) == 0x000008, "Member 'FabricInteractable_EndInteraction::bWasDragAndDropInteraction' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetContinuousInteractableDirection
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractable_GetContinuousInteractableDirection final
{
public:
	EFabricContinuousInteractionDirection         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetContinuousInteractableDirection) == 0x000001, "Wrong alignment on FabricInteractable_GetContinuousInteractableDirection");
static_assert(sizeof(FabricInteractable_GetContinuousInteractableDirection) == 0x000001, "Wrong size on FabricInteractable_GetContinuousInteractableDirection");
static_assert(offsetof(FabricInteractable_GetContinuousInteractableDirection, ReturnValue) == 0x000000, "Member 'FabricInteractable_GetContinuousInteractableDirection::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetContinuousInteractableValueNormalized
// 0x0004 (0x0004 - 0x0000)
struct FabricInteractable_GetContinuousInteractableValueNormalized final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetContinuousInteractableValueNormalized) == 0x000004, "Wrong alignment on FabricInteractable_GetContinuousInteractableValueNormalized");
static_assert(sizeof(FabricInteractable_GetContinuousInteractableValueNormalized) == 0x000004, "Wrong size on FabricInteractable_GetContinuousInteractableValueNormalized");
static_assert(offsetof(FabricInteractable_GetContinuousInteractableValueNormalized, ReturnValue) == 0x000000, "Member 'FabricInteractable_GetContinuousInteractableValueNormalized::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetInteractableComponentLocation
// 0x0020 (0x0020 - 0x0000)
struct FabricInteractable_GetInteractableComponentLocation final
{
public:
	class USceneComponent*                        Interactable;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetInteractableComponentLocation) == 0x000008, "Wrong alignment on FabricInteractable_GetInteractableComponentLocation");
static_assert(sizeof(FabricInteractable_GetInteractableComponentLocation) == 0x000020, "Wrong size on FabricInteractable_GetInteractableComponentLocation");
static_assert(offsetof(FabricInteractable_GetInteractableComponentLocation, Interactable) == 0x000000, "Member 'FabricInteractable_GetInteractableComponentLocation::Interactable' has a wrong offset!");
static_assert(offsetof(FabricInteractable_GetInteractableComponentLocation, ReturnValue) == 0x000008, "Member 'FabricInteractable_GetInteractableComponentLocation::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetInteractableForwardVector
// 0x0020 (0x0020 - 0x0000)
struct FabricInteractable_GetInteractableForwardVector final
{
public:
	class USceneComponent*                        Interactable;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetInteractableForwardVector) == 0x000008, "Wrong alignment on FabricInteractable_GetInteractableForwardVector");
static_assert(sizeof(FabricInteractable_GetInteractableForwardVector) == 0x000020, "Wrong size on FabricInteractable_GetInteractableForwardVector");
static_assert(offsetof(FabricInteractable_GetInteractableForwardVector, Interactable) == 0x000000, "Member 'FabricInteractable_GetInteractableForwardVector::Interactable' has a wrong offset!");
static_assert(offsetof(FabricInteractable_GetInteractableForwardVector, ReturnValue) == 0x000008, "Member 'FabricInteractable_GetInteractableForwardVector::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetInteractableType
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractable_GetInteractableType final
{
public:
	EFabricInteractableType                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetInteractableType) == 0x000001, "Wrong alignment on FabricInteractable_GetInteractableType");
static_assert(sizeof(FabricInteractable_GetInteractableType) == 0x000001, "Wrong size on FabricInteractable_GetInteractableType");
static_assert(offsetof(FabricInteractable_GetInteractableType, ReturnValue) == 0x000000, "Member 'FabricInteractable_GetInteractableType::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetInteractionSFX
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractable_GetInteractionSFX final
{
public:
	class UAudioComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetInteractionSFX) == 0x000008, "Wrong alignment on FabricInteractable_GetInteractionSFX");
static_assert(sizeof(FabricInteractable_GetInteractionSFX) == 0x000008, "Wrong size on FabricInteractable_GetInteractionSFX");
static_assert(offsetof(FabricInteractable_GetInteractionSFX, ReturnValue) == 0x000000, "Member 'FabricInteractable_GetInteractionSFX::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.GetLinkedInteractable
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractable_GetLinkedInteractable final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_GetLinkedInteractable) == 0x000008, "Wrong alignment on FabricInteractable_GetLinkedInteractable");
static_assert(sizeof(FabricInteractable_GetLinkedInteractable) == 0x000008, "Wrong size on FabricInteractable_GetLinkedInteractable");
static_assert(offsetof(FabricInteractable_GetLinkedInteractable, ReturnValue) == 0x000000, "Member 'FabricInteractable_GetLinkedInteractable::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.IsFocusDependentOnInteractionContext
// 0x0010 (0x0010 - 0x0000)
struct FabricInteractable_IsFocusDependentOnInteractionContext final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricInteractable_IsFocusDependentOnInteractionContext) == 0x000008, "Wrong alignment on FabricInteractable_IsFocusDependentOnInteractionContext");
static_assert(sizeof(FabricInteractable_IsFocusDependentOnInteractionContext) == 0x000010, "Wrong size on FabricInteractable_IsFocusDependentOnInteractionContext");
static_assert(offsetof(FabricInteractable_IsFocusDependentOnInteractionContext, Controller) == 0x000000, "Member 'FabricInteractable_IsFocusDependentOnInteractionContext::Controller' has a wrong offset!");
static_assert(offsetof(FabricInteractable_IsFocusDependentOnInteractionContext, ReturnValue) == 0x000008, "Member 'FabricInteractable_IsFocusDependentOnInteractionContext::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.IsValidToInteractWith
// 0x0010 (0x0010 - 0x0000)
struct FabricInteractable_IsValidToInteractWith final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricInteractable_IsValidToInteractWith) == 0x000008, "Wrong alignment on FabricInteractable_IsValidToInteractWith");
static_assert(sizeof(FabricInteractable_IsValidToInteractWith) == 0x000010, "Wrong size on FabricInteractable_IsValidToInteractWith");
static_assert(offsetof(FabricInteractable_IsValidToInteractWith, Controller) == 0x000000, "Member 'FabricInteractable_IsValidToInteractWith::Controller' has a wrong offset!");
static_assert(offsetof(FabricInteractable_IsValidToInteractWith, ReturnValue) == 0x000008, "Member 'FabricInteractable_IsValidToInteractWith::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.OnInteractionFocusTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct FabricInteractable_OnInteractionFocusTargetChanged final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                FocusTarget;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFocused;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricInteractable_OnInteractionFocusTargetChanged) == 0x000008, "Wrong alignment on FabricInteractable_OnInteractionFocusTargetChanged");
static_assert(sizeof(FabricInteractable_OnInteractionFocusTargetChanged) == 0x000018, "Wrong size on FabricInteractable_OnInteractionFocusTargetChanged");
static_assert(offsetof(FabricInteractable_OnInteractionFocusTargetChanged, Controller) == 0x000000, "Member 'FabricInteractable_OnInteractionFocusTargetChanged::Controller' has a wrong offset!");
static_assert(offsetof(FabricInteractable_OnInteractionFocusTargetChanged, FocusTarget) == 0x000008, "Member 'FabricInteractable_OnInteractionFocusTargetChanged::FocusTarget' has a wrong offset!");
static_assert(offsetof(FabricInteractable_OnInteractionFocusTargetChanged, bIsFocused) == 0x000010, "Member 'FabricInteractable_OnInteractionFocusTargetChanged::bIsFocused' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.SetFocused
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractable_SetFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_SetFocused) == 0x000001, "Wrong alignment on FabricInteractable_SetFocused");
static_assert(sizeof(FabricInteractable_SetFocused) == 0x000001, "Wrong size on FabricInteractable_SetFocused");
static_assert(offsetof(FabricInteractable_SetFocused, bIsFocused) == 0x000000, "Member 'FabricInteractable_SetFocused::bIsFocused' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.SetHitComponent
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractable_SetHitComponent final
{
public:
	class USceneComponent*                        HitComponent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_SetHitComponent) == 0x000008, "Wrong alignment on FabricInteractable_SetHitComponent");
static_assert(sizeof(FabricInteractable_SetHitComponent) == 0x000008, "Wrong size on FabricInteractable_SetHitComponent");
static_assert(offsetof(FabricInteractable_SetHitComponent, HitComponent) == 0x000000, "Member 'FabricInteractable_SetHitComponent::HitComponent' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.SetInteractable
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractable_SetInteractable final
{
public:
	bool                                          bInteractable;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_SetInteractable) == 0x000001, "Wrong alignment on FabricInteractable_SetInteractable");
static_assert(sizeof(FabricInteractable_SetInteractable) == 0x000001, "Wrong size on FabricInteractable_SetInteractable");
static_assert(offsetof(FabricInteractable_SetInteractable, bInteractable) == 0x000000, "Member 'FabricInteractable_SetInteractable::bInteractable' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.ShouldPassInteractionToComponent
// 0x0010 (0x0010 - 0x0000)
struct FabricInteractable_ShouldPassInteractionToComponent final
{
public:
	class AFabricInteractionTool*                 InteractionTool;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricInteractable_ShouldPassInteractionToComponent) == 0x000008, "Wrong alignment on FabricInteractable_ShouldPassInteractionToComponent");
static_assert(sizeof(FabricInteractable_ShouldPassInteractionToComponent) == 0x000010, "Wrong size on FabricInteractable_ShouldPassInteractionToComponent");
static_assert(offsetof(FabricInteractable_ShouldPassInteractionToComponent, InteractionTool) == 0x000000, "Member 'FabricInteractable_ShouldPassInteractionToComponent::InteractionTool' has a wrong offset!");
static_assert(offsetof(FabricInteractable_ShouldPassInteractionToComponent, ReturnValue) == 0x000008, "Member 'FabricInteractable_ShouldPassInteractionToComponent::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.StartInteraction
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractable_StartInteraction final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_StartInteraction) == 0x000008, "Wrong alignment on FabricInteractable_StartInteraction");
static_assert(sizeof(FabricInteractable_StartInteraction) == 0x000008, "Wrong size on FabricInteractable_StartInteraction");
static_assert(offsetof(FabricInteractable_StartInteraction, Controller) == 0x000000, "Member 'FabricInteractable_StartInteraction::Controller' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.StartSpecialInteraction
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractable_StartSpecialInteraction final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_StartSpecialInteraction) == 0x000008, "Wrong alignment on FabricInteractable_StartSpecialInteraction");
static_assert(sizeof(FabricInteractable_StartSpecialInteraction) == 0x000008, "Wrong size on FabricInteractable_StartSpecialInteraction");
static_assert(offsetof(FabricInteractable_StartSpecialInteraction, Controller) == 0x000000, "Member 'FabricInteractable_StartSpecialInteraction::Controller' has a wrong offset!");

// Function FabricRuntime.FabricInteractable.DoesInteractionRequireHoldable
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractable_DoesInteractionRequireHoldable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractable_DoesInteractionRequireHoldable) == 0x000001, "Wrong alignment on FabricInteractable_DoesInteractionRequireHoldable");
static_assert(sizeof(FabricInteractable_DoesInteractionRequireHoldable) == 0x000001, "Wrong size on FabricInteractable_DoesInteractionRequireHoldable");
static_assert(offsetof(FabricInteractable_DoesInteractionRequireHoldable, ReturnValue) == 0x000000, "Member 'FabricInteractable_DoesInteractionRequireHoldable::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractablePlayspaceComponent.OnDownloadOnDemandCompleteIndividualClient
// 0x0038 (0x0038 - 0x0000)
struct FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient final
{
public:
	struct FEventMessageTag                       Channel;                                           // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClientFinishedDownloadOnDemand        Context;                                           // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient) == 0x000008, "Wrong alignment on FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient");
static_assert(sizeof(FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient) == 0x000038, "Wrong size on FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient");
static_assert(offsetof(FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient, Channel) == 0x000000, "Member 'FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient::Channel' has a wrong offset!");
static_assert(offsetof(FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient, Context) == 0x000008, "Member 'FabricInteractablePlayspaceComponent_OnDownloadOnDemandCompleteIndividualClient::Context' has a wrong offset!");

// Function FabricRuntime.FabricInteractablePlayspaceComponent.OnPlayspaceUserAdded
// 0x0058 (0x0058 - 0x0000)
struct FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded final
{
public:
	struct FPlayspaceUser                         PlayspaceUser;                                     // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded) == 0x000008, "Wrong alignment on FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded");
static_assert(sizeof(FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded) == 0x000058, "Wrong size on FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded");
static_assert(offsetof(FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded, PlayspaceUser) == 0x000000, "Member 'FabricInteractablePlayspaceComponent_OnPlayspaceUserAdded::PlayspaceUser' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetContinuousInteractableValueNormalized
// 0x0004 (0x0004 - 0x0000)
struct FabricInteractionTool_GetContinuousInteractableValueNormalized final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetContinuousInteractableValueNormalized) == 0x000004, "Wrong alignment on FabricInteractionTool_GetContinuousInteractableValueNormalized");
static_assert(sizeof(FabricInteractionTool_GetContinuousInteractableValueNormalized) == 0x000004, "Wrong size on FabricInteractionTool_GetContinuousInteractableValueNormalized");
static_assert(offsetof(FabricInteractionTool_GetContinuousInteractableValueNormalized, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetContinuousInteractableValueNormalized::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetContinuousInteractionDirection
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_GetContinuousInteractionDirection final
{
public:
	EFabricContinuousInteractionDirection         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetContinuousInteractionDirection) == 0x000001, "Wrong alignment on FabricInteractionTool_GetContinuousInteractionDirection");
static_assert(sizeof(FabricInteractionTool_GetContinuousInteractionDirection) == 0x000001, "Wrong size on FabricInteractionTool_GetContinuousInteractionDirection");
static_assert(offsetof(FabricInteractionTool_GetContinuousInteractionDirection, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetContinuousInteractionDirection::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetContinuousMovementValue
// 0x0004 (0x0004 - 0x0000)
struct FabricInteractionTool_GetContinuousMovementValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetContinuousMovementValue) == 0x000004, "Wrong alignment on FabricInteractionTool_GetContinuousMovementValue");
static_assert(sizeof(FabricInteractionTool_GetContinuousMovementValue) == 0x000004, "Wrong size on FabricInteractionTool_GetContinuousMovementValue");
static_assert(offsetof(FabricInteractionTool_GetContinuousMovementValue, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetContinuousMovementValue::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetContinuousStateValue
// 0x0004 (0x0004 - 0x0000)
struct FabricInteractionTool_GetContinuousStateValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetContinuousStateValue) == 0x000004, "Wrong alignment on FabricInteractionTool_GetContinuousStateValue");
static_assert(sizeof(FabricInteractionTool_GetContinuousStateValue) == 0x000004, "Wrong size on FabricInteractionTool_GetContinuousStateValue");
static_assert(offsetof(FabricInteractionTool_GetContinuousStateValue, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetContinuousStateValue::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetFabricInteractionToolState
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_GetFabricInteractionToolState final
{
public:
	EFabricInteractionToolStates                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetFabricInteractionToolState) == 0x000001, "Wrong alignment on FabricInteractionTool_GetFabricInteractionToolState");
static_assert(sizeof(FabricInteractionTool_GetFabricInteractionToolState) == 0x000001, "Wrong size on FabricInteractionTool_GetFabricInteractionToolState");
static_assert(offsetof(FabricInteractionTool_GetFabricInteractionToolState, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetFabricInteractionToolState::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetHoveredInteractableHitComponent
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractionTool_GetHoveredInteractableHitComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetHoveredInteractableHitComponent) == 0x000008, "Wrong alignment on FabricInteractionTool_GetHoveredInteractableHitComponent");
static_assert(sizeof(FabricInteractionTool_GetHoveredInteractableHitComponent) == 0x000008, "Wrong size on FabricInteractionTool_GetHoveredInteractableHitComponent");
static_assert(offsetof(FabricInteractionTool_GetHoveredInteractableHitComponent, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetHoveredInteractableHitComponent::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetHoveredInteractableType
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_GetHoveredInteractableType final
{
public:
	EFabricInteractableType                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetHoveredInteractableType) == 0x000001, "Wrong alignment on FabricInteractionTool_GetHoveredInteractableType");
static_assert(sizeof(FabricInteractionTool_GetHoveredInteractableType) == 0x000001, "Wrong size on FabricInteractionTool_GetHoveredInteractableType");
static_assert(offsetof(FabricInteractionTool_GetHoveredInteractableType, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetHoveredInteractableType::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.GetPressedInteractable
// 0x0008 (0x0008 - 0x0000)
struct FabricInteractionTool_GetPressedInteractable final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_GetPressedInteractable) == 0x000008, "Wrong alignment on FabricInteractionTool_GetPressedInteractable");
static_assert(sizeof(FabricInteractionTool_GetPressedInteractable) == 0x000008, "Wrong size on FabricInteractionTool_GetPressedInteractable");
static_assert(offsetof(FabricInteractionTool_GetPressedInteractable, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_GetPressedInteractable::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.HandleMetasoundGeneratorCrossfade
// 0x0004 (0x0004 - 0x0000)
struct FabricInteractionTool_HandleMetasoundGeneratorCrossfade final
{
public:
	float                                         CrossfadeSeconds;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_HandleMetasoundGeneratorCrossfade) == 0x000004, "Wrong alignment on FabricInteractionTool_HandleMetasoundGeneratorCrossfade");
static_assert(sizeof(FabricInteractionTool_HandleMetasoundGeneratorCrossfade) == 0x000004, "Wrong size on FabricInteractionTool_HandleMetasoundGeneratorCrossfade");
static_assert(offsetof(FabricInteractionTool_HandleMetasoundGeneratorCrossfade, CrossfadeSeconds) == 0x000000, "Member 'FabricInteractionTool_HandleMetasoundGeneratorCrossfade::CrossfadeSeconds' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.IsHoldingCables
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_IsHoldingCables final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_IsHoldingCables) == 0x000001, "Wrong alignment on FabricInteractionTool_IsHoldingCables");
static_assert(sizeof(FabricInteractionTool_IsHoldingCables) == 0x000001, "Wrong size on FabricInteractionTool_IsHoldingCables");
static_assert(offsetof(FabricInteractionTool_IsHoldingCables, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_IsHoldingCables::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.OnSplineUpdated
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_OnSplineUpdated final
{
public:
	EFabricInteractionToolStates                  NewInteractionState;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_OnSplineUpdated) == 0x000001, "Wrong alignment on FabricInteractionTool_OnSplineUpdated");
static_assert(sizeof(FabricInteractionTool_OnSplineUpdated) == 0x000001, "Wrong size on FabricInteractionTool_OnSplineUpdated");
static_assert(offsetof(FabricInteractionTool_OnSplineUpdated, NewInteractionState) == 0x000000, "Member 'FabricInteractionTool_OnSplineUpdated::NewInteractionState' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.ServerSetContinuousInteractableValue
// 0x0004 (0x0004 - 0x0000)
struct FabricInteractionTool_ServerSetContinuousInteractableValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_ServerSetContinuousInteractableValue) == 0x000004, "Wrong alignment on FabricInteractionTool_ServerSetContinuousInteractableValue");
static_assert(sizeof(FabricInteractionTool_ServerSetContinuousInteractableValue) == 0x000004, "Wrong size on FabricInteractionTool_ServerSetContinuousInteractableValue");
static_assert(offsetof(FabricInteractionTool_ServerSetContinuousInteractableValue, Value) == 0x000000, "Member 'FabricInteractionTool_ServerSetContinuousInteractableValue::Value' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.ServerSetInteractionData
// 0x000C (0x000C - 0x0000)
struct FabricInteractionTool_ServerSetInteractionData final
{
public:
	struct FInteractionData                       NewData;                                           // 0x0000(0x000C)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_ServerSetInteractionData) == 0x000004, "Wrong alignment on FabricInteractionTool_ServerSetInteractionData");
static_assert(sizeof(FabricInteractionTool_ServerSetInteractionData) == 0x00000C, "Wrong size on FabricInteractionTool_ServerSetInteractionData");
static_assert(offsetof(FabricInteractionTool_ServerSetInteractionData, NewData) == 0x000000, "Member 'FabricInteractionTool_ServerSetInteractionData::NewData' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.ServerSetIsHoldingCable
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_ServerSetIsHoldingCable final
{
public:
	bool                                          bHoldingCable;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_ServerSetIsHoldingCable) == 0x000001, "Wrong alignment on FabricInteractionTool_ServerSetIsHoldingCable");
static_assert(sizeof(FabricInteractionTool_ServerSetIsHoldingCable) == 0x000001, "Wrong size on FabricInteractionTool_ServerSetIsHoldingCable");
static_assert(offsetof(FabricInteractionTool_ServerSetIsHoldingCable, bHoldingCable) == 0x000000, "Member 'FabricInteractionTool_ServerSetIsHoldingCable::bHoldingCable' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.ServerSetSplinePoints
// 0x0060 (0x0060 - 0x0000)
struct FabricInteractionTool_ServerSetSplinePoints final
{
public:
	struct FInteractionSplinePoints               SplinePoints;                                      // 0x0000(0x0060)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_ServerSetSplinePoints) == 0x000008, "Wrong alignment on FabricInteractionTool_ServerSetSplinePoints");
static_assert(sizeof(FabricInteractionTool_ServerSetSplinePoints) == 0x000060, "Wrong size on FabricInteractionTool_ServerSetSplinePoints");
static_assert(offsetof(FabricInteractionTool_ServerSetSplinePoints, SplinePoints) == 0x000000, "Member 'FabricInteractionTool_ServerSetSplinePoints::SplinePoints' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.ServerSetTriggerPressed
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_ServerSetTriggerPressed final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_ServerSetTriggerPressed) == 0x000001, "Wrong alignment on FabricInteractionTool_ServerSetTriggerPressed");
static_assert(sizeof(FabricInteractionTool_ServerSetTriggerPressed) == 0x000001, "Wrong size on FabricInteractionTool_ServerSetTriggerPressed");
static_assert(offsetof(FabricInteractionTool_ServerSetTriggerPressed, bPressed) == 0x000000, "Member 'FabricInteractionTool_ServerSetTriggerPressed::bPressed' has a wrong offset!");

// Function FabricRuntime.FabricInteractionTool.IsRunningOnOwningClient
// 0x0001 (0x0001 - 0x0000)
struct FabricInteractionTool_IsRunningOnOwningClient final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricInteractionTool_IsRunningOnOwningClient) == 0x000001, "Wrong alignment on FabricInteractionTool_IsRunningOnOwningClient");
static_assert(sizeof(FabricInteractionTool_IsRunningOnOwningClient) == 0x000001, "Wrong size on FabricInteractionTool_IsRunningOnOwningClient");
static_assert(offsetof(FabricInteractionTool_IsRunningOnOwningClient, ReturnValue) == 0x000000, "Member 'FabricInteractionTool_IsRunningOnOwningClient::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMeshTreeNode.CopyProperties
// 0x0008 (0x0008 - 0x0000)
struct FabricMeshTreeNode_CopyProperties final
{
public:
	const class UFabricMeshTreeNode*              Other;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshTreeNode_CopyProperties) == 0x000008, "Wrong alignment on FabricMeshTreeNode_CopyProperties");
static_assert(sizeof(FabricMeshTreeNode_CopyProperties) == 0x000008, "Wrong size on FabricMeshTreeNode_CopyProperties");
static_assert(offsetof(FabricMeshTreeNode_CopyProperties, Other) == 0x000000, "Member 'FabricMeshTreeNode_CopyProperties::Other' has a wrong offset!");

// Function FabricRuntime.FabricMeshTreeNode.GenerateMeshInstanceReferences
// 0x0010 (0x0010 - 0x0000)
struct FabricMeshTreeNode_GenerateMeshInstanceReferences final
{
public:
	TArray<struct FFabricMeshInstanceReference>   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshTreeNode_GenerateMeshInstanceReferences) == 0x000008, "Wrong alignment on FabricMeshTreeNode_GenerateMeshInstanceReferences");
static_assert(sizeof(FabricMeshTreeNode_GenerateMeshInstanceReferences) == 0x000010, "Wrong size on FabricMeshTreeNode_GenerateMeshInstanceReferences");
static_assert(offsetof(FabricMeshTreeNode_GenerateMeshInstanceReferences, ReturnValue) == 0x000000, "Member 'FabricMeshTreeNode_GenerateMeshInstanceReferences::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMeshProviderBase.SetReferenceMesh
// 0x0038 (0x0038 - 0x0000)
struct FabricMeshProviderBase_SetReferenceMesh final
{
public:
	struct FFabricMeshProviderMeshReference       InMesh;                                            // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMeshProviderBase_SetReferenceMesh) == 0x000008, "Wrong alignment on FabricMeshProviderBase_SetReferenceMesh");
static_assert(sizeof(FabricMeshProviderBase_SetReferenceMesh) == 0x000038, "Wrong size on FabricMeshProviderBase_SetReferenceMesh");
static_assert(offsetof(FabricMeshProviderBase_SetReferenceMesh, InMesh) == 0x000000, "Member 'FabricMeshProviderBase_SetReferenceMesh::InMesh' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.AddToGraphOnFirstConnect
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect) == 0x000001, "Wrong alignment on FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect");
static_assert(sizeof(FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect) == 0x000001, "Wrong size on FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect");
static_assert(offsetof(FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect, ReturnValue) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_AddToGraphOnFirstConnect::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.AddToManagerGraph
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_AddToManagerGraph final
{
public:
	class UFabricMetaSoundManagerComponent*       Manager;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_AddToManagerGraph) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_AddToManagerGraph");
static_assert(sizeof(FabricMetaSoundPatchWrapper_AddToManagerGraph) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_AddToManagerGraph");
static_assert(offsetof(FabricMetaSoundPatchWrapper_AddToManagerGraph, Manager) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_AddToManagerGraph::Manager' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.OnAddedToManagerGraph
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_OnAddedToManagerGraph final
{
public:
	class UFabricMetaSoundManagerComponent*       Manager;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_OnAddedToManagerGraph) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_OnAddedToManagerGraph");
static_assert(sizeof(FabricMetaSoundPatchWrapper_OnAddedToManagerGraph) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_OnAddedToManagerGraph");
static_assert(offsetof(FabricMetaSoundPatchWrapper_OnAddedToManagerGraph, Manager) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_OnAddedToManagerGraph::Manager' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.OnConnectedModulatorEnable
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable final
{
public:
	class UFabricMetaSoundPatchWrapper*           EnabledPatchWrapper;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable");
static_assert(sizeof(FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable");
static_assert(offsetof(FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable, EnabledPatchWrapper) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_OnConnectedModulatorEnable::EnabledPatchWrapper' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.OnMetaSoundOutputChanged
// 0x0018 (0x0018 - 0x0000)
struct FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged final
{
public:
	class FName                                   OutputName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundOutput                       Output;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged");
static_assert(sizeof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged) == 0x000018, "Wrong size on FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged");
static_assert(offsetof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged, OutputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged::OutputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged, Output) == 0x000008, "Member 'FabricMetaSoundPatchWrapper_OnMetaSoundOutputChanged::Output' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.OnMetaSoundOutputValueChanged
// 0x0018 (0x0018 - 0x0000)
struct FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged final
{
public:
	class FName                                   OutputName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundOutput                       MetaSoundOutput;                                   // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged");
static_assert(sizeof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged) == 0x000018, "Wrong size on FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged");
static_assert(offsetof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged, OutputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged::OutputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged, MetaSoundOutput) == 0x000008, "Member 'FabricMetaSoundPatchWrapper_OnMetaSoundOutputValueChanged::MetaSoundOutput' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetBoolInput
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetBoolInput final
{
public:
	class FName                                   MetaSoundInputName;                                // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetBoolInput) == 0x000004, "Wrong alignment on FabricMetaSoundPatchWrapper_SetBoolInput");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetBoolInput) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_SetBoolInput");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetBoolInput, MetaSoundInputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetBoolInput::MetaSoundInputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetBoolInput, bValue) == 0x000004, "Member 'FabricMetaSoundPatchWrapper_SetBoolInput::bValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetEnumInput
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetEnumInput final
{
public:
	class FName                                   MetaSoundInputName;                                // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetEnumInput) == 0x000004, "Wrong alignment on FabricMetaSoundPatchWrapper_SetEnumInput");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetEnumInput) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_SetEnumInput");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetEnumInput, MetaSoundInputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetEnumInput::MetaSoundInputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetEnumInput, Value) == 0x000004, "Member 'FabricMetaSoundPatchWrapper_SetEnumInput::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetFloatInput
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetFloatInput final
{
public:
	class FName                                   MetaSoundInputName;                                // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetFloatInput) == 0x000004, "Wrong alignment on FabricMetaSoundPatchWrapper_SetFloatInput");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetFloatInput) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_SetFloatInput");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetFloatInput, MetaSoundInputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetFloatInput::MetaSoundInputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetFloatInput, Value) == 0x000004, "Member 'FabricMetaSoundPatchWrapper_SetFloatInput::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetIntInput
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetIntInput final
{
public:
	class FName                                   MetaSoundInputName;                                // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetIntInput) == 0x000004, "Wrong alignment on FabricMetaSoundPatchWrapper_SetIntInput");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetIntInput) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_SetIntInput");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetIntInput, MetaSoundInputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetIntInput::MetaSoundInputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetIntInput, Value) == 0x000004, "Member 'FabricMetaSoundPatchWrapper_SetIntInput::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetNodeEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetNodeEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetNodeEnabled) == 0x000001, "Wrong alignment on FabricMetaSoundPatchWrapper_SetNodeEnabled");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetNodeEnabled) == 0x000001, "Wrong size on FabricMetaSoundPatchWrapper_SetNodeEnabled");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetNodeEnabled, bEnabled) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetNodeEnabled::bEnabled' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetPositionalProxyActor
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetPositionalProxyActor final
{
public:
	class AActor*                                 InLocationProxyActor;                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetPositionalProxyActor) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_SetPositionalProxyActor");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetPositionalProxyActor) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_SetPositionalProxyActor");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetPositionalProxyActor, InLocationProxyActor) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetPositionalProxyActor::InLocationProxyActor' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetRunsOnServer
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetRunsOnServer final
{
public:
	bool                                          bAllowRunOnServer;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetRunsOnServer) == 0x000001, "Wrong alignment on FabricMetaSoundPatchWrapper_SetRunsOnServer");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetRunsOnServer) == 0x000001, "Wrong size on FabricMetaSoundPatchWrapper_SetRunsOnServer");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetRunsOnServer, bAllowRunOnServer) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetRunsOnServer::bAllowRunOnServer' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.SetStringInput
// 0x0018 (0x0018 - 0x0000)
struct FabricMetaSoundPatchWrapper_SetStringInput final
{
public:
	class FName                                   MetaSoundInputName;                                // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_SetStringInput) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_SetStringInput");
static_assert(sizeof(FabricMetaSoundPatchWrapper_SetStringInput) == 0x000018, "Wrong size on FabricMetaSoundPatchWrapper_SetStringInput");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetStringInput, MetaSoundInputName) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_SetStringInput::MetaSoundInputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundPatchWrapper_SetStringInput, Value) == 0x000008, "Member 'FabricMetaSoundPatchWrapper_SetStringInput::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.GetMetaSoundInputNames
// 0x0050 (0x0050 - 0x0000)
struct FabricMetaSoundPatchWrapper_GetMetaSoundInputNames final
{
public:
	TSet<class FName>                             ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_GetMetaSoundInputNames) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_GetMetaSoundInputNames");
static_assert(sizeof(FabricMetaSoundPatchWrapper_GetMetaSoundInputNames) == 0x000050, "Wrong size on FabricMetaSoundPatchWrapper_GetMetaSoundInputNames");
static_assert(offsetof(FabricMetaSoundPatchWrapper_GetMetaSoundInputNames, ReturnValue) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_GetMetaSoundInputNames::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.GetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundPatchWrapper_GetMusicClock final
{
public:
	class UMusicClockComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_GetMusicClock) == 0x000008, "Wrong alignment on FabricMetaSoundPatchWrapper_GetMusicClock");
static_assert(sizeof(FabricMetaSoundPatchWrapper_GetMusicClock) == 0x000008, "Wrong size on FabricMetaSoundPatchWrapper_GetMusicClock");
static_assert(offsetof(FabricMetaSoundPatchWrapper_GetMusicClock, ReturnValue) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_GetMusicClock::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.GetNodeEnabled
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundPatchWrapper_GetNodeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_GetNodeEnabled) == 0x000001, "Wrong alignment on FabricMetaSoundPatchWrapper_GetNodeEnabled");
static_assert(sizeof(FabricMetaSoundPatchWrapper_GetNodeEnabled) == 0x000001, "Wrong size on FabricMetaSoundPatchWrapper_GetNodeEnabled");
static_assert(offsetof(FabricMetaSoundPatchWrapper_GetNodeEnabled, ReturnValue) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_GetNodeEnabled::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundPatchWrapper.GetRunsOnServer
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundPatchWrapper_GetRunsOnServer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundPatchWrapper_GetRunsOnServer) == 0x000001, "Wrong alignment on FabricMetaSoundPatchWrapper_GetRunsOnServer");
static_assert(sizeof(FabricMetaSoundPatchWrapper_GetRunsOnServer) == 0x000001, "Wrong size on FabricMetaSoundPatchWrapper_GetRunsOnServer");
static_assert(offsetof(FabricMetaSoundPatchWrapper_GetRunsOnServer, ReturnValue) == 0x000000, "Member 'FabricMetaSoundPatchWrapper_GetRunsOnServer::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundDrumPlayerPatchWrapper.KitIndexChanged
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged final
{
public:
	class FName                                   Param;                                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged) == 0x000004, "Wrong alignment on FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged");
static_assert(sizeof(FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged) == 0x000008, "Wrong size on FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged, Param) == 0x000000, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged::Param' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged, Value) == 0x000004, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_KitIndexChanged::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundDrumPlayerPatchWrapper.LoadDrumPlayerSampleBanks
// 0x0060 (0x0060 - 0x0000)
struct FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks final
{
public:
	TArray<TSoftObjectPtr<class UFabricMetasoundDrumPlayerSampleBankAsset>> SampleBankArray;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	TSet<int32>                                   KitNumbersToLoad;                                  // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks) == 0x000008, "Wrong alignment on FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks");
static_assert(sizeof(FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks) == 0x000060, "Wrong size on FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks, SampleBankArray) == 0x000000, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks::SampleBankArray' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks, KitNumbersToLoad) == 0x000010, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_LoadDrumPlayerSampleBanks::KitNumbersToLoad' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundDrumPlayerPatchWrapper.PitchSampleParamChanged
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged final
{
public:
	int32                                         PitchSampleIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged) == 0x000004, "Wrong alignment on FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged");
static_assert(sizeof(FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged) == 0x000008, "Wrong size on FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged, PitchSampleIndex) == 0x000000, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged::PitchSampleIndex' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged, Value) == 0x000004, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_PitchSampleParamChanged::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundDrumPlayerPatchWrapper.SlotLinkedParamChanged
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged final
{
public:
	int32                                         PitchSampleIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged) == 0x000004, "Wrong alignment on FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged");
static_assert(sizeof(FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged) == 0x000008, "Wrong size on FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged, PitchSampleIndex) == 0x000000, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged::PitchSampleIndex' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged, Value) == 0x000004, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_SlotLinkedParamChanged::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundDrumPlayerPatchWrapper.SlotUnlinkedKitParamChanged
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged final
{
public:
	int32                                         PitchSampleIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged) == 0x000004, "Wrong alignment on FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged");
static_assert(sizeof(FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged) == 0x000008, "Wrong size on FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged, PitchSampleIndex) == 0x000000, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged::PitchSampleIndex' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged, Value) == 0x000004, "Member 'FabricMetaSoundDrumPlayerPatchWrapper_SlotUnlinkedKitParamChanged::Value' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundInstrumentPlayerPatchWrapper.DriveFFTDataOnPrimitive
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive) == 0x000008, "Wrong alignment on FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive");
static_assert(sizeof(FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive) == 0x000008, "Wrong size on FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive");
static_assert(offsetof(FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive, Primitive) == 0x000000, "Member 'FabricMetaSoundInstrumentPlayerPatchWrapper_DriveFFTDataOnPrimitive::Primitive' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundInstrumentPlayerPatchWrapper.SetFusionPatch
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch final
{
public:
	class UFusionPatch*                           FusionPatch;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch) == 0x000008, "Wrong alignment on FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch");
static_assert(sizeof(FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch) == 0x000008, "Wrong size on FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch");
static_assert(offsetof(FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch, FusionPatch) == 0x000000, "Member 'FabricMetaSoundInstrumentPlayerPatchWrapper_SetFusionPatch::FusionPatch' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundModulatorPatchWrapper.ConnectToInput
// 0x0100 (0x0100 - 0x0000)
struct FabricMetaSoundModulatorPatchWrapper_ConnectToInput final
{
public:
	struct FFabricMetaSoundNodeInfo               Node;                                              // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   InputName;                                         // 0x00F0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InputType;                                         // 0x00F4(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundModulatorPatchWrapper_ConnectToInput) == 0x000008, "Wrong alignment on FabricMetaSoundModulatorPatchWrapper_ConnectToInput");
static_assert(sizeof(FabricMetaSoundModulatorPatchWrapper_ConnectToInput) == 0x000100, "Wrong size on FabricMetaSoundModulatorPatchWrapper_ConnectToInput");
static_assert(offsetof(FabricMetaSoundModulatorPatchWrapper_ConnectToInput, Node) == 0x000000, "Member 'FabricMetaSoundModulatorPatchWrapper_ConnectToInput::Node' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundModulatorPatchWrapper_ConnectToInput, InputName) == 0x0000F0, "Member 'FabricMetaSoundModulatorPatchWrapper_ConnectToInput::InputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundModulatorPatchWrapper_ConnectToInput, InputType) == 0x0000F4, "Member 'FabricMetaSoundModulatorPatchWrapper_ConnectToInput::InputType' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundModulatorPatchWrapper_ConnectToInput, ReturnValue) == 0x0000F8, "Member 'FabricMetaSoundModulatorPatchWrapper_ConnectToInput::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundModulatorPatchWrapper.SetUserOption
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundModulatorPatchWrapper_SetUserOption final
{
public:
	class UPlaylistUserOptionBase*                UserOption;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundModulatorPatchWrapper_SetUserOption) == 0x000008, "Wrong alignment on FabricMetaSoundModulatorPatchWrapper_SetUserOption");
static_assert(sizeof(FabricMetaSoundModulatorPatchWrapper_SetUserOption) == 0x000008, "Wrong size on FabricMetaSoundModulatorPatchWrapper_SetUserOption");
static_assert(offsetof(FabricMetaSoundModulatorPatchWrapper_SetUserOption, UserOption) == 0x000000, "Member 'FabricMetaSoundModulatorPatchWrapper_SetUserOption::UserOption' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetMetasoundInputNodeName
// 0x000C (0x000C - 0x0000)
struct FabricMetaSoundManagerComponent_GetMetasoundInputNodeName final
{
public:
	class FName                                   NodeName;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InputName;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetMetasoundInputNodeName) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_GetMetasoundInputNodeName");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetMetasoundInputNodeName) == 0x00000C, "Wrong size on FabricMetaSoundManagerComponent_GetMetasoundInputNodeName");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetasoundInputNodeName, NodeName) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetMetasoundInputNodeName::NodeName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetasoundInputNodeName, InputName) == 0x000004, "Member 'FabricMetaSoundManagerComponent_GetMetasoundInputNodeName::InputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetasoundInputNodeName, ReturnValue) == 0x000008, "Member 'FabricMetaSoundManagerComponent_GetMetasoundInputNodeName::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetMetasoundOutputNodeName
// 0x000C (0x000C - 0x0000)
struct FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName final
{
public:
	class FName                                   NodeName;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutputName;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName) == 0x00000C, "Wrong size on FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName, NodeName) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName::NodeName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName, OutputName) == 0x000004, "Member 'FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName::OutputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName, ReturnValue) == 0x000008, "Member 'FabricMetaSoundManagerComponent_GetMetasoundOutputNodeName::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.AddInputNodeForNodeByNameBP
// 0x00F8 (0x00F8 - 0x0000)
struct FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP final
{
public:
	struct FFabricMetaSoundNodeInfo               InOutNode;                                         // 0x0000(0x00F0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFabricUserOptionType                         UserOptionType;                                    // 0x00F0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InputName;                                         // 0x00F4(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP");
static_assert(sizeof(FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP) == 0x0000F8, "Wrong size on FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP, InOutNode) == 0x000000, "Member 'FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP::InOutNode' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP, UserOptionType) == 0x0000F0, "Member 'FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP::UserOptionType' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP, InputName) == 0x0000F4, "Member 'FabricMetaSoundManagerComponent_AddInputNodeForNodeByNameBP::InputName' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.AddOutputNodeForOutputVertex
// 0x002C (0x002C - 0x0000)
struct FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex final
{
public:
	struct FMetaSoundBuilderNodeOutputHandle      OutputVertex;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NodeName;                                          // 0x0020(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutOutputName;                                     // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMetaSoundBuilderResult                       Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex");
static_assert(sizeof(FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex) == 0x00002C, "Wrong size on FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex, OutputVertex) == 0x000000, "Member 'FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex::OutputVertex' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex, NodeName) == 0x000020, "Member 'FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex::NodeName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex, OutOutputName) == 0x000024, "Member 'FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex::OutOutputName' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex, Result) == 0x000028, "Member 'FabricMetaSoundManagerComponent_AddOutputNodeForOutputVertex::Result' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.FreeMetaSoundNode
// 0x00F0 (0x00F0 - 0x0000)
struct FabricMetaSoundManagerComponent_FreeMetaSoundNode final
{
public:
	struct FFabricMetaSoundNodeInfo               Node;                                              // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_FreeMetaSoundNode) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_FreeMetaSoundNode");
static_assert(sizeof(FabricMetaSoundManagerComponent_FreeMetaSoundNode) == 0x0000F0, "Wrong size on FabricMetaSoundManagerComponent_FreeMetaSoundNode");
static_assert(offsetof(FabricMetaSoundManagerComponent_FreeMetaSoundNode, Node) == 0x000000, "Member 'FabricMetaSoundManagerComponent_FreeMetaSoundNode::Node' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetMetaSoundNodeForWrapper
// 0x00F8 (0x00F8 - 0x0000)
struct FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper final
{
public:
	class UFabricMetaSoundPatchWrapper*           PatchWrapper;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundNodeInfo               ReturnValue;                                       // 0x0008(0x00F0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper) == 0x0000F8, "Wrong size on FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper, PatchWrapper) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper::PatchWrapper' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper, ReturnValue) == 0x000008, "Member 'FabricMetaSoundManagerComponent_GetMetaSoundNodeForWrapper::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.OnGeneratorJustStarted
// 0x0004 (0x0004 - 0x0000)
struct FabricMetaSoundManagerComponent_OnGeneratorJustStarted final
{
public:
	int32                                         ComponentIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_OnGeneratorJustStarted) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_OnGeneratorJustStarted");
static_assert(sizeof(FabricMetaSoundManagerComponent_OnGeneratorJustStarted) == 0x000004, "Wrong size on FabricMetaSoundManagerComponent_OnGeneratorJustStarted");
static_assert(offsetof(FabricMetaSoundManagerComponent_OnGeneratorJustStarted, ComponentIndex) == 0x000000, "Member 'FabricMetaSoundManagerComponent_OnGeneratorJustStarted::ComponentIndex' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.PauseMetasound
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_PauseMetasound final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_PauseMetasound) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_PauseMetasound");
static_assert(sizeof(FabricMetaSoundManagerComponent_PauseMetasound) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_PauseMetasound");
static_assert(offsetof(FabricMetaSoundManagerComponent_PauseMetasound, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_PauseMetasound::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.PlayMetasound
// 0x0010 (0x0010 - 0x0000)
struct FabricMetaSoundManagerComponent_PlayMetasound final
{
public:
	class ABuildingActor*                         InStartMetasoundLockDevice;                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundManagerComponent_PlayMetasound) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_PlayMetasound");
static_assert(sizeof(FabricMetaSoundManagerComponent_PlayMetasound) == 0x000010, "Wrong size on FabricMetaSoundManagerComponent_PlayMetasound");
static_assert(offsetof(FabricMetaSoundManagerComponent_PlayMetasound, InStartMetasoundLockDevice) == 0x000000, "Member 'FabricMetaSoundManagerComponent_PlayMetasound::InStartMetasoundLockDevice' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_PlayMetasound, ReturnValue) == 0x000008, "Member 'FabricMetaSoundManagerComponent_PlayMetasound::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.RegisterAsAudible
// 0x0010 (0x0010 - 0x0000)
struct FabricMetaSoundManagerComponent_RegisterAsAudible final
{
public:
	class AActor*                                 Device;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AudibleEventGroup;                                 // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundManagerComponent_RegisterAsAudible) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_RegisterAsAudible");
static_assert(sizeof(FabricMetaSoundManagerComponent_RegisterAsAudible) == 0x000010, "Wrong size on FabricMetaSoundManagerComponent_RegisterAsAudible");
static_assert(offsetof(FabricMetaSoundManagerComponent_RegisterAsAudible, Device) == 0x000000, "Member 'FabricMetaSoundManagerComponent_RegisterAsAudible::Device' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_RegisterAsAudible, AudibleEventGroup) == 0x000008, "Member 'FabricMetaSoundManagerComponent_RegisterAsAudible::AudibleEventGroup' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SeekToMs
// 0x0004 (0x0004 - 0x0000)
struct FabricMetaSoundManagerComponent_SeekToMs final
{
public:
	float                                         Ms;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SeekToMs) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_SeekToMs");
static_assert(sizeof(FabricMetaSoundManagerComponent_SeekToMs) == 0x000004, "Wrong size on FabricMetaSoundManagerComponent_SeekToMs");
static_assert(offsetof(FabricMetaSoundManagerComponent_SeekToMs, Ms) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SeekToMs::Ms' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SeekToTimestamp
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_SeekToTimestamp final
{
public:
	struct FMusicTimestamp                        Timestamp;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SeekToTimestamp) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_SeekToTimestamp");
static_assert(sizeof(FabricMetaSoundManagerComponent_SeekToTimestamp) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_SeekToTimestamp");
static_assert(offsetof(FabricMetaSoundManagerComponent_SeekToTimestamp, Timestamp) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SeekToTimestamp::Timestamp' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetAudioComponents
// 0x0010 (0x0010 - 0x0000)
struct FabricMetaSoundManagerComponent_SetAudioComponents final
{
public:
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetAudioComponents) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_SetAudioComponents");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetAudioComponents) == 0x000010, "Wrong size on FabricMetaSoundManagerComponent_SetAudioComponents");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetAudioComponents, AudioComponents) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetAudioComponents::AudioComponents' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetCurrentJamSyncType
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_SetCurrentJamSyncType final
{
public:
	EJamFabricSyncType                            InJamSyncType;                                     // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetCurrentJamSyncType) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_SetCurrentJamSyncType");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetCurrentJamSyncType) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_SetCurrentJamSyncType");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetCurrentJamSyncType, InJamSyncType) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetCurrentJamSyncType::InJamSyncType' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_SetMusicClock final
{
public:
	class UMusicClockComponent*                   MusicClockComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetMusicClock) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_SetMusicClock");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetMusicClock) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_SetMusicClock");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetMusicClock, MusicClockComponent) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetMusicClock::MusicClockComponent' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetMusicEventPriority
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_SetMusicEventPriority final
{
public:
	EFabricMetasoundMusicEventPriority            InMusicEventPriority;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetMusicEventPriority) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_SetMusicEventPriority");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetMusicEventPriority) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_SetMusicEventPriority");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetMusicEventPriority, InMusicEventPriority) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetMusicEventPriority::InMusicEventPriority' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetMusicKey
// 0x0002 (0x0002 - 0x0000)
struct FabricMetaSoundManagerComponent_SetMusicKey final
{
public:
	EMusicKey                                     Key;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicKeyMode                                 Mode;                                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetMusicKey) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_SetMusicKey");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetMusicKey) == 0x000002, "Wrong size on FabricMetaSoundManagerComponent_SetMusicKey");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetMusicKey, Key) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetMusicKey::Key' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetMusicKey, Mode) == 0x000001, "Member 'FabricMetaSoundManagerComponent_SetMusicKey::Mode' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetSpeed
// 0x0004 (0x0004 - 0x0000)
struct FabricMetaSoundManagerComponent_SetSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetSpeed) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_SetSpeed");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetSpeed) == 0x000004, "Wrong size on FabricMetaSoundManagerComponent_SetSpeed");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetSpeed, Speed) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetSpeed::Speed' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetTempo
// 0x0004 (0x0004 - 0x0000)
struct FabricMetaSoundManagerComponent_SetTempo final
{
public:
	float                                         Tempo;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetTempo) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_SetTempo");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetTempo) == 0x000004, "Wrong size on FabricMetaSoundManagerComponent_SetTempo");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetTempo, Tempo) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetTempo::Tempo' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.SetTimeSignature
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_SetTimeSignature final
{
public:
	int32                                         Numerator;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Denominator;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_SetTimeSignature) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_SetTimeSignature");
static_assert(sizeof(FabricMetaSoundManagerComponent_SetTimeSignature) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_SetTimeSignature");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetTimeSignature, Numerator) == 0x000000, "Member 'FabricMetaSoundManagerComponent_SetTimeSignature::Numerator' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_SetTimeSignature, Denominator) == 0x000004, "Member 'FabricMetaSoundManagerComponent_SetTimeSignature::Denominator' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.StopMetasound
// 0x0010 (0x0010 - 0x0000)
struct FabricMetaSoundManagerComponent_StopMetasound final
{
public:
	class ABuildingActor*                         InStartMetasoundLockDevice;                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricMetaSoundManagerComponent_StopMetasound) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_StopMetasound");
static_assert(sizeof(FabricMetaSoundManagerComponent_StopMetasound) == 0x000010, "Wrong size on FabricMetaSoundManagerComponent_StopMetasound");
static_assert(offsetof(FabricMetaSoundManagerComponent_StopMetasound, InStartMetasoundLockDevice) == 0x000000, "Member 'FabricMetaSoundManagerComponent_StopMetasound::InStartMetasoundLockDevice' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_StopMetasound, ReturnValue) == 0x000008, "Member 'FabricMetaSoundManagerComponent_StopMetasound::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.UnregisterAsAudible
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_UnregisterAsAudible final
{
public:
	class AActor*                                 Device;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_UnregisterAsAudible) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_UnregisterAsAudible");
static_assert(sizeof(FabricMetaSoundManagerComponent_UnregisterAsAudible) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_UnregisterAsAudible");
static_assert(offsetof(FabricMetaSoundManagerComponent_UnregisterAsAudible, Device) == 0x000000, "Member 'FabricMetaSoundManagerComponent_UnregisterAsAudible::Device' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.AreAllPatchesReady
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_AreAllPatchesReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_AreAllPatchesReady) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_AreAllPatchesReady");
static_assert(sizeof(FabricMetaSoundManagerComponent_AreAllPatchesReady) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_AreAllPatchesReady");
static_assert(offsetof(FabricMetaSoundManagerComponent_AreAllPatchesReady, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_AreAllPatchesReady::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetBuilder
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_GetBuilder final
{
public:
	class UMetaSoundSourceBuilder*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetBuilder) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_GetBuilder");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetBuilder) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_GetBuilder");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetBuilder, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetBuilder::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetCurrentClientAudibleMusicEventGroup
// 0x0004 (0x0004 - 0x0000)
struct FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup) == 0x000004, "Wrong size on FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetCurrentClientAudibleMusicEventGroup::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetCurrentJamSyncType
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_GetCurrentJamSyncType final
{
public:
	EJamFabricSyncType                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetCurrentJamSyncType) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_GetCurrentJamSyncType");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetCurrentJamSyncType) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_GetCurrentJamSyncType");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetCurrentJamSyncType, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetCurrentJamSyncType::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetCurrentMusicEventTag
// 0x0004 (0x0004 - 0x0000)
struct FabricMetaSoundManagerComponent_GetCurrentMusicEventTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetCurrentMusicEventTag) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_GetCurrentMusicEventTag");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetCurrentMusicEventTag) == 0x000004, "Wrong size on FabricMetaSoundManagerComponent_GetCurrentMusicEventTag");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetCurrentMusicEventTag, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetCurrentMusicEventTag::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetCurrentPlaybackAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent final
{
public:
	class UAudioComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetCurrentPlaybackAudioComponent::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetCurrentPlaystate
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_GetCurrentPlaystate final
{
public:
	EFabricMetasoundPlayState                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetCurrentPlaystate) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_GetCurrentPlaystate");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetCurrentPlaystate) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_GetCurrentPlaystate");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetCurrentPlaystate, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetCurrentPlaystate::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_GetMusicClock final
{
public:
	class UMusicClockComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetMusicClock) == 0x000008, "Wrong alignment on FabricMetaSoundManagerComponent_GetMusicClock");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetMusicClock) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_GetMusicClock");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMusicClock, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetMusicClock::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetMusicEventPriority
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_GetMusicEventPriority final
{
public:
	EFabricMetasoundMusicEventPriority            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetMusicEventPriority) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_GetMusicEventPriority");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetMusicEventPriority) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_GetMusicEventPriority");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMusicEventPriority, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetMusicEventPriority::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.GetMusicEventTag
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundManagerComponent_GetMusicEventTag final
{
public:
	EFabricMetasoundMusicEventPriority            InMusicEventPriority;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_GetMusicEventTag) == 0x000004, "Wrong alignment on FabricMetaSoundManagerComponent_GetMusicEventTag");
static_assert(sizeof(FabricMetaSoundManagerComponent_GetMusicEventTag) == 0x000008, "Wrong size on FabricMetaSoundManagerComponent_GetMusicEventTag");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMusicEventTag, InMusicEventPriority) == 0x000000, "Member 'FabricMetaSoundManagerComponent_GetMusicEventTag::InMusicEventPriority' has a wrong offset!");
static_assert(offsetof(FabricMetaSoundManagerComponent_GetMusicEventTag, ReturnValue) == 0x000004, "Member 'FabricMetaSoundManagerComponent_GetMusicEventTag::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundManagerComponent.ShouldSeekToStartOnGameReset
// 0x0001 (0x0001 - 0x0000)
struct FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset) == 0x000001, "Wrong alignment on FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset");
static_assert(sizeof(FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset) == 0x000001, "Wrong size on FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset");
static_assert(offsetof(FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset, ReturnValue) == 0x000000, "Member 'FabricMetaSoundManagerComponent_ShouldSeekToStartOnGameReset::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricNoteTriggerPatchWrapper.OnMetaSoundMidiEventPassed
// 0x0018 (0x0018 - 0x0000)
struct FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed final
{
public:
	class FName                                   OutputName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundOutput                       Output;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed) == 0x000008, "Wrong alignment on FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed");
static_assert(sizeof(FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed) == 0x000018, "Wrong size on FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed");
static_assert(offsetof(FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed, OutputName) == 0x000000, "Member 'FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed::OutputName' has a wrong offset!");
static_assert(offsetof(FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed, Output) == 0x000008, "Member 'FabricNoteTriggerPatchWrapper_OnMetaSoundMidiEventPassed::Output' has a wrong offset!");

// Function FabricRuntime.FabricNoteTriggerPatchWrapper.OnOctaveChanged
// 0x0008 (0x0008 - 0x0000)
struct FabricNoteTriggerPatchWrapper_OnOctaveChanged final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InOctave;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricNoteTriggerPatchWrapper_OnOctaveChanged) == 0x000004, "Wrong alignment on FabricNoteTriggerPatchWrapper_OnOctaveChanged");
static_assert(sizeof(FabricNoteTriggerPatchWrapper_OnOctaveChanged) == 0x000008, "Wrong size on FabricNoteTriggerPatchWrapper_OnOctaveChanged");
static_assert(offsetof(FabricNoteTriggerPatchWrapper_OnOctaveChanged, ParamName) == 0x000000, "Member 'FabricNoteTriggerPatchWrapper_OnOctaveChanged::ParamName' has a wrong offset!");
static_assert(offsetof(FabricNoteTriggerPatchWrapper_OnOctaveChanged, InOctave) == 0x000004, "Member 'FabricNoteTriggerPatchWrapper_OnOctaveChanged::InOctave' has a wrong offset!");

// Function FabricRuntime.FabricNoteTriggerPatchWrapper.OnTriggerNoteChanged
// 0x0008 (0x0008 - 0x0000)
struct FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged final
{
public:
	int32                                         NoteIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerActive;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged) == 0x000004, "Wrong alignment on FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged");
static_assert(sizeof(FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged) == 0x000008, "Wrong size on FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged");
static_assert(offsetof(FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged, NoteIndex) == 0x000000, "Member 'FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged::NoteIndex' has a wrong offset!");
static_assert(offsetof(FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged, bTriggerActive) == 0x000004, "Member 'FabricNoteTriggerPatchWrapper_OnTriggerNoteChanged::bTriggerActive' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundTreeNode.GetValidChildren
// 0x0010 (0x0010 - 0x0000)
struct FabricMetaSoundTreeNode_GetValidChildren final
{
public:
	TArray<class UFabricMetaSoundTreeNode*>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundTreeNode_GetValidChildren) == 0x000008, "Wrong alignment on FabricMetaSoundTreeNode_GetValidChildren");
static_assert(sizeof(FabricMetaSoundTreeNode_GetValidChildren) == 0x000010, "Wrong size on FabricMetaSoundTreeNode_GetValidChildren");
static_assert(offsetof(FabricMetaSoundTreeNode_GetValidChildren, ReturnValue) == 0x000000, "Member 'FabricMetaSoundTreeNode_GetValidChildren::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundSequencerPatchWrapper.SetMidiStepSequence
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence final
{
public:
	class UMidiStepSequence*                      StepSequence;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence) == 0x000008, "Wrong alignment on FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence");
static_assert(sizeof(FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence) == 0x000008, "Wrong size on FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence");
static_assert(offsetof(FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence, StepSequence) == 0x000000, "Member 'FabricMetaSoundSequencerPatchWrapper_SetMidiStepSequence::StepSequence' has a wrong offset!");

// Function FabricRuntime.FabricMetaSoundSpeakerPatchWrapper.SetAudioBusFromSourceBus
// 0x0008 (0x0008 - 0x0000)
struct FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus final
{
public:
	class USoundSourceBus*                        Bus;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus) == 0x000008, "Wrong alignment on FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus");
static_assert(sizeof(FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus) == 0x000008, "Wrong size on FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus");
static_assert(offsetof(FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus, Bus) == 0x000000, "Member 'FabricMetaSoundSpeakerPatchWrapper_SetAudioBusFromSourceBus::Bus' has a wrong offset!");

// Function FabricRuntime.FabricModulatorSource.GetModulators
// 0x0008 (0x0008 - 0x0000)
struct FabricModulatorSource_GetModulators final
{
public:
	class UFabricModulatable*                     Modulatable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricModulatorSource_GetModulators) == 0x000008, "Wrong alignment on FabricModulatorSource_GetModulators");
static_assert(sizeof(FabricModulatorSource_GetModulators) == 0x000008, "Wrong size on FabricModulatorSource_GetModulators");
static_assert(offsetof(FabricModulatorSource_GetModulators, Modulatable) == 0x000000, "Member 'FabricModulatorSource_GetModulators::Modulatable' has a wrong offset!");

// Function FabricRuntime.FabricModulatorSource.GetUserOption
// 0x0018 (0x0018 - 0x0000)
struct FabricModulatorSource_GetUserOption final
{
public:
	class FString                                 Property;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlaylistUserOptionBase*                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricModulatorSource_GetUserOption) == 0x000008, "Wrong alignment on FabricModulatorSource_GetUserOption");
static_assert(sizeof(FabricModulatorSource_GetUserOption) == 0x000018, "Wrong size on FabricModulatorSource_GetUserOption");
static_assert(offsetof(FabricModulatorSource_GetUserOption, Property) == 0x000000, "Member 'FabricModulatorSource_GetUserOption::Property' has a wrong offset!");
static_assert(offsetof(FabricModulatorSource_GetUserOption, ReturnValue) == 0x000010, "Member 'FabricModulatorSource_GetUserOption::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricModulatorDevice.SetUserOption
// 0x0018 (0x0018 - 0x0000)
struct FabricModulatorDevice_SetUserOption final
{
public:
	EFabricUserOptionType                         UserOptionType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaylistUserOptionBase*                UserOption;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ModulatorObject;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricModulatorDevice_SetUserOption) == 0x000008, "Wrong alignment on FabricModulatorDevice_SetUserOption");
static_assert(sizeof(FabricModulatorDevice_SetUserOption) == 0x000018, "Wrong size on FabricModulatorDevice_SetUserOption");
static_assert(offsetof(FabricModulatorDevice_SetUserOption, UserOptionType) == 0x000000, "Member 'FabricModulatorDevice_SetUserOption::UserOptionType' has a wrong offset!");
static_assert(offsetof(FabricModulatorDevice_SetUserOption, UserOption) == 0x000008, "Member 'FabricModulatorDevice_SetUserOption::UserOption' has a wrong offset!");
static_assert(offsetof(FabricModulatorDevice_SetUserOption, ModulatorObject) == 0x000010, "Member 'FabricModulatorDevice_SetUserOption::ModulatorObject' has a wrong offset!");

// Function FabricRuntime.FabricProgressorManager.IsProgressionGlobal
// 0x0030 (0x0030 - 0x0000)
struct FabricProgressorManager_IsProgressionGlobal final
{
public:
	struct FFabricProgressionPreset               InProgression;                                     // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricProgressorManager_IsProgressionGlobal) == 0x000008, "Wrong alignment on FabricProgressorManager_IsProgressionGlobal");
static_assert(sizeof(FabricProgressorManager_IsProgressionGlobal) == 0x000030, "Wrong size on FabricProgressorManager_IsProgressionGlobal");
static_assert(offsetof(FabricProgressorManager_IsProgressionGlobal, InProgression) == 0x000000, "Member 'FabricProgressorManager_IsProgressionGlobal::InProgression' has a wrong offset!");
static_assert(offsetof(FabricProgressorManager_IsProgressionGlobal, ReturnValue) == 0x000028, "Member 'FabricProgressorManager_IsProgressionGlobal::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricProgressorManager.SetGlobalProgression
// 0x0030 (0x0030 - 0x0000)
struct FabricProgressorManager_SetGlobalProgression final
{
public:
	struct FFabricProgressionPreset               InProgression;                                     // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         InPresetNumber;                                    // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricProgressorManager_SetGlobalProgression) == 0x000008, "Wrong alignment on FabricProgressorManager_SetGlobalProgression");
static_assert(sizeof(FabricProgressorManager_SetGlobalProgression) == 0x000030, "Wrong size on FabricProgressorManager_SetGlobalProgression");
static_assert(offsetof(FabricProgressorManager_SetGlobalProgression, InProgression) == 0x000000, "Member 'FabricProgressorManager_SetGlobalProgression::InProgression' has a wrong offset!");
static_assert(offsetof(FabricProgressorManager_SetGlobalProgression, InPresetNumber) == 0x000028, "Member 'FabricProgressorManager_SetGlobalProgression::InPresetNumber' has a wrong offset!");

// Function FabricRuntime.FabricProgressorManager.GetGlobalPresetNumber
// 0x0004 (0x0004 - 0x0000)
struct FabricProgressorManager_GetGlobalPresetNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricProgressorManager_GetGlobalPresetNumber) == 0x000004, "Wrong alignment on FabricProgressorManager_GetGlobalPresetNumber");
static_assert(sizeof(FabricProgressorManager_GetGlobalPresetNumber) == 0x000004, "Wrong size on FabricProgressorManager_GetGlobalPresetNumber");
static_assert(offsetof(FabricProgressorManager_GetGlobalPresetNumber, ReturnValue) == 0x000000, "Member 'FabricProgressorManager_GetGlobalPresetNumber::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricProgressorManager.GetGlobalProgression
// 0x0028 (0x0028 - 0x0000)
struct FabricProgressorManager_GetGlobalProgression final
{
public:
	struct FFabricProgressionPreset               ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricProgressorManager_GetGlobalProgression) == 0x000008, "Wrong alignment on FabricProgressorManager_GetGlobalProgression");
static_assert(sizeof(FabricProgressorManager_GetGlobalProgression) == 0x000028, "Wrong size on FabricProgressorManager_GetGlobalProgression");
static_assert(offsetof(FabricProgressorManager_GetGlobalProgression, ReturnValue) == 0x000000, "Member 'FabricProgressorManager_GetGlobalProgression::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricProgressorManager.HasActiveGlobalProgression
// 0x0001 (0x0001 - 0x0000)
struct FabricProgressorManager_HasActiveGlobalProgression final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricProgressorManager_HasActiveGlobalProgression) == 0x000001, "Wrong alignment on FabricProgressorManager_HasActiveGlobalProgression");
static_assert(sizeof(FabricProgressorManager_HasActiveGlobalProgression) == 0x000001, "Wrong size on FabricProgressorManager_HasActiveGlobalProgression");
static_assert(offsetof(FabricProgressorManager_HasActiveGlobalProgression, ReturnValue) == 0x000000, "Member 'FabricProgressorManager_HasActiveGlobalProgression::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.ConstructPreviewVisuals
// 0x000C (0x000C - 0x0000)
struct FabricSteppedPreviewFXComponent_ConstructPreviewVisuals final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StepBeatLength;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceUpdateTransform;                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInTestNotesOn;                                    // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSteppedPreviewFXComponent_ConstructPreviewVisuals) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_ConstructPreviewVisuals");
static_assert(sizeof(FabricSteppedPreviewFXComponent_ConstructPreviewVisuals) == 0x00000C, "Wrong size on FabricSteppedPreviewFXComponent_ConstructPreviewVisuals");
static_assert(offsetof(FabricSteppedPreviewFXComponent_ConstructPreviewVisuals, NumSteps) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_ConstructPreviewVisuals::NumSteps' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_ConstructPreviewVisuals, StepBeatLength) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_ConstructPreviewVisuals::StepBeatLength' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_ConstructPreviewVisuals, bForceUpdateTransform) == 0x000008, "Member 'FabricSteppedPreviewFXComponent_ConstructPreviewVisuals::bForceUpdateTransform' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_ConstructPreviewVisuals, bInTestNotesOn) == 0x000009, "Member 'FabricSteppedPreviewFXComponent_ConstructPreviewVisuals::bInTestNotesOn' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.GetNoteOn
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_GetNoteOn final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_GetNoteOn) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_GetNoteOn");
static_assert(sizeof(FabricSteppedPreviewFXComponent_GetNoteOn) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_GetNoteOn");
static_assert(offsetof(FabricSteppedPreviewFXComponent_GetNoteOn, InstanceIndex) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_GetNoteOn::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_GetNoteOn, ReturnValue) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_GetNoteOn::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnBeatOffsetChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnBeatOffsetChanged final
{
public:
	float                                         BeatOffset;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnBeatOffsetChanged) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_OnBeatOffsetChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnBeatOffsetChanged) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_OnBeatOffsetChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnBeatOffsetChanged, BeatOffset) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnBeatOffsetChanged::BeatOffset' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnBeatScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnBeatScaleChanged final
{
public:
	float                                         BeatScale;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnBeatScaleChanged) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_OnBeatScaleChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnBeatScaleChanged) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_OnBeatScaleChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnBeatScaleChanged, BeatScale) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnBeatScaleChanged::BeatScale' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnNoteStyleChanged
// 0x0001 (0x0001 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnNoteStyleChanged final
{
public:
	EFabricNoteStyle                              style;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnNoteStyleChanged) == 0x000001, "Wrong alignment on FabricSteppedPreviewFXComponent_OnNoteStyleChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnNoteStyleChanged) == 0x000001, "Wrong size on FabricSteppedPreviewFXComponent_OnNoteStyleChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnNoteStyleChanged, style) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnNoteStyleChanged::style' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnNumStepsChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnNumStepsChanged final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnNumStepsChanged) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_OnNumStepsChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnNumStepsChanged) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_OnNumStepsChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnNumStepsChanged, NumSteps) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnNumStepsChanged::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnNumTracksChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnNumTracksChanged final
{
public:
	int32                                         NumTracks;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnNumTracksChanged) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_OnNumTracksChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnNumTracksChanged) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_OnNumTracksChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnNumTracksChanged, NumTracks) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnNumTracksChanged::NumTracks' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnPageChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnPageChanged final
{
public:
	int32                                         CurrentPage;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnPageChanged) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_OnPageChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnPageChanged) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_OnPageChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnPageChanged, CurrentPage) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnPageChanged::CurrentPage' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.OnQuarterNotesLengthChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged final
{
public:
	float                                         QuarterNoteLength;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged");
static_assert(sizeof(FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged");
static_assert(offsetof(FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged, QuarterNoteLength) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_OnQuarterNotesLengthChanged::QuarterNoteLength' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.SetGenericFloatValue
// 0x000C (0x000C - 0x0000)
struct FabricSteppedPreviewFXComponent_SetGenericFloatValue final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSteppedPreviewFXComponent_SetGenericFloatValue) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_SetGenericFloatValue");
static_assert(sizeof(FabricSteppedPreviewFXComponent_SetGenericFloatValue) == 0x00000C, "Wrong size on FabricSteppedPreviewFXComponent_SetGenericFloatValue");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetGenericFloatValue, InstanceIndex) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_SetGenericFloatValue::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetGenericFloatValue, FloatValue) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_SetGenericFloatValue::FloatValue' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetGenericFloatValue, bMarkRenderStateDirty) == 0x000008, "Member 'FabricSteppedPreviewFXComponent_SetGenericFloatValue::bMarkRenderStateDirty' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.SetNoteLength
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_SetNoteLength final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoteLengthBeats;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_SetNoteLength) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_SetNoteLength");
static_assert(sizeof(FabricSteppedPreviewFXComponent_SetNoteLength) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_SetNoteLength");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteLength, InstanceIndex) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_SetNoteLength::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteLength, NoteLengthBeats) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_SetNoteLength::NoteLengthBeats' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.SetNoteOn
// 0x000C (0x000C - 0x0000)
struct FabricSteppedPreviewFXComponent_SetNoteOn final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoteOn;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSteppedPreviewFXComponent_SetNoteOn) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_SetNoteOn");
static_assert(sizeof(FabricSteppedPreviewFXComponent_SetNoteOn) == 0x00000C, "Wrong size on FabricSteppedPreviewFXComponent_SetNoteOn");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteOn, InstanceIndex) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_SetNoteOn::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteOn, NoteOn) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_SetNoteOn::NoteOn' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteOn, bMarkRenderStateDirty) == 0x000008, "Member 'FabricSteppedPreviewFXComponent_SetNoteOn::bMarkRenderStateDirty' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.SetNoteTime
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_SetNoteTime final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoteTimeOffsetBeats;                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_SetNoteTime) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_SetNoteTime");
static_assert(sizeof(FabricSteppedPreviewFXComponent_SetNoteTime) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_SetNoteTime");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteTime, InstanceIndex) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_SetNoteTime::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNoteTime, NoteTimeOffsetBeats) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_SetNoteTime::NoteTimeOffsetBeats' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.SetNumSteps
// 0x0004 (0x0004 - 0x0000)
struct FabricSteppedPreviewFXComponent_SetNumSteps final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_SetNumSteps) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_SetNumSteps");
static_assert(sizeof(FabricSteppedPreviewFXComponent_SetNumSteps) == 0x000004, "Wrong size on FabricSteppedPreviewFXComponent_SetNumSteps");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetNumSteps, NumSteps) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_SetNumSteps::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.SetSpanLength
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_SetSpanLength final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpanLengthBeats;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_SetSpanLength) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_SetSpanLength");
static_assert(sizeof(FabricSteppedPreviewFXComponent_SetSpanLength) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_SetSpanLength");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetSpanLength, InstanceIndex) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_SetSpanLength::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_SetSpanLength, SpanLengthBeats) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_SetSpanLength::SpanLengthBeats' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.UpdateAllCurrentStepData
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StepLengthBeats;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData");
static_assert(sizeof(FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData, NumSteps) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData::NumSteps' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData, StepLengthBeats) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_UpdateAllCurrentStepData::StepLengthBeats' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.UpdateDeviceEnabledFX
// 0x0001 (0x0001 - 0x0000)
struct FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX) == 0x000001, "Wrong alignment on FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX");
static_assert(sizeof(FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX) == 0x000001, "Wrong size on FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX, bEnabled) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_UpdateDeviceEnabledFX::bEnabled' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.UpdateExistingTransforms
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_UpdateExistingTransforms final
{
public:
	int32                                         NumInstances;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSteps;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSteppedPreviewFXComponent_UpdateExistingTransforms) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_UpdateExistingTransforms");
static_assert(sizeof(FabricSteppedPreviewFXComponent_UpdateExistingTransforms) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_UpdateExistingTransforms");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateExistingTransforms, NumInstances) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_UpdateExistingTransforms::NumInstances' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateExistingTransforms, NumSteps) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_UpdateExistingTransforms::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricSteppedPreviewFXComponent.UpdateStepData
// 0x0008 (0x0008 - 0x0000)
struct FabricSteppedPreviewFXComponent_UpdateStepData final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSteppedPreviewFXComponent_UpdateStepData) == 0x000004, "Wrong alignment on FabricSteppedPreviewFXComponent_UpdateStepData");
static_assert(sizeof(FabricSteppedPreviewFXComponent_UpdateStepData) == 0x000008, "Wrong size on FabricSteppedPreviewFXComponent_UpdateStepData");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateStepData, Index_0) == 0x000000, "Member 'FabricSteppedPreviewFXComponent_UpdateStepData::Index_0' has a wrong offset!");
static_assert(offsetof(FabricSteppedPreviewFXComponent_UpdateStepData, bMarkRenderStateDirty) == 0x000004, "Member 'FabricSteppedPreviewFXComponent_UpdateStepData::bMarkRenderStateDirty' has a wrong offset!");

// Function FabricRuntime.FabricSequencerPreviewFXComponent.InitializePreviewFXComponent
// 0x0018 (0x0018 - 0x0000)
struct FabricSequencerPreviewFXComponent_InitializePreviewFXComponent final
{
public:
	class UFabricStepSequencerComponent*          InStepSequencer;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFabricStepSequencerGridComponent*      InStepSequencerGrid;                               // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInTestNotesOn;                                    // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSequencerPreviewFXComponent_InitializePreviewFXComponent) == 0x000008, "Wrong alignment on FabricSequencerPreviewFXComponent_InitializePreviewFXComponent");
static_assert(sizeof(FabricSequencerPreviewFXComponent_InitializePreviewFXComponent) == 0x000018, "Wrong size on FabricSequencerPreviewFXComponent_InitializePreviewFXComponent");
static_assert(offsetof(FabricSequencerPreviewFXComponent_InitializePreviewFXComponent, InStepSequencer) == 0x000000, "Member 'FabricSequencerPreviewFXComponent_InitializePreviewFXComponent::InStepSequencer' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_InitializePreviewFXComponent, InStepSequencerGrid) == 0x000008, "Member 'FabricSequencerPreviewFXComponent_InitializePreviewFXComponent::InStepSequencerGrid' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_InitializePreviewFXComponent, bInTestNotesOn) == 0x000010, "Member 'FabricSequencerPreviewFXComponent_InitializePreviewFXComponent::bInTestNotesOn' has a wrong offset!");

// Function FabricRuntime.FabricSequencerPreviewFXComponent.OnStepChanged
// 0x0010 (0x0010 - 0x0000)
struct FabricSequencerPreviewFXComponent_OnStepChanged final
{
public:
	struct FFabricSequencerStepChangedInfo        StepInfo;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerPreviewFXComponent_OnStepChanged) == 0x000004, "Wrong alignment on FabricSequencerPreviewFXComponent_OnStepChanged");
static_assert(sizeof(FabricSequencerPreviewFXComponent_OnStepChanged) == 0x000010, "Wrong size on FabricSequencerPreviewFXComponent_OnStepChanged");
static_assert(offsetof(FabricSequencerPreviewFXComponent_OnStepChanged, StepInfo) == 0x000000, "Member 'FabricSequencerPreviewFXComponent_OnStepChanged::StepInfo' has a wrong offset!");

// Function FabricRuntime.FabricSequencerPreviewFXComponent.SetSingleTrackNoteOn
// 0x0010 (0x0010 - 0x0000)
struct FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackPICDIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoteOn;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn) == 0x000004, "Wrong alignment on FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn");
static_assert(sizeof(FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn) == 0x000010, "Wrong size on FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn");
static_assert(offsetof(FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn, InstanceIndex) == 0x000000, "Member 'FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn, TrackPICDIndex) == 0x000004, "Member 'FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn::TrackPICDIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn, NoteOn) == 0x000008, "Member 'FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn::NoteOn' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn, bMarkRenderStateDirty) == 0x00000C, "Member 'FabricSequencerPreviewFXComponent_SetSingleTrackNoteOn::bMarkRenderStateDirty' has a wrong offset!");

// Function FabricRuntime.FabricSequencerPreviewFXComponent.SetSustainLength
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerPreviewFXComponent_SetSustainLength final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SustainLengthBeats;                                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerPreviewFXComponent_SetSustainLength) == 0x000004, "Wrong alignment on FabricSequencerPreviewFXComponent_SetSustainLength");
static_assert(sizeof(FabricSequencerPreviewFXComponent_SetSustainLength) == 0x000008, "Wrong size on FabricSequencerPreviewFXComponent_SetSustainLength");
static_assert(offsetof(FabricSequencerPreviewFXComponent_SetSustainLength, InstanceIndex) == 0x000000, "Member 'FabricSequencerPreviewFXComponent_SetSustainLength::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_SetSustainLength, SustainLengthBeats) == 0x000004, "Member 'FabricSequencerPreviewFXComponent_SetSustainLength::SustainLengthBeats' has a wrong offset!");

// Function FabricRuntime.FabricSequencerPreviewFXComponent.UpdateNoteOn
// 0x000C (0x000C - 0x0000)
struct FabricSequencerPreviewFXComponent_UpdateNoteOn final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSteps;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMarkRenderStateDirty;                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSequencerPreviewFXComponent_UpdateNoteOn) == 0x000004, "Wrong alignment on FabricSequencerPreviewFXComponent_UpdateNoteOn");
static_assert(sizeof(FabricSequencerPreviewFXComponent_UpdateNoteOn) == 0x00000C, "Wrong size on FabricSequencerPreviewFXComponent_UpdateNoteOn");
static_assert(offsetof(FabricSequencerPreviewFXComponent_UpdateNoteOn, Index_0) == 0x000000, "Member 'FabricSequencerPreviewFXComponent_UpdateNoteOn::Index_0' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_UpdateNoteOn, NumSteps) == 0x000004, "Member 'FabricSequencerPreviewFXComponent_UpdateNoteOn::NumSteps' has a wrong offset!");
static_assert(offsetof(FabricSequencerPreviewFXComponent_UpdateNoteOn, bMarkRenderStateDirty) == 0x000008, "Member 'FabricSequencerPreviewFXComponent_UpdateNoteOn::bMarkRenderStateDirty' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.AddSustainInstance
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_AddSustainInstance final
{
public:
	int32                                         StepIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_AddSustainInstance) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_AddSustainInstance");
static_assert(sizeof(FabricSequencerSustainComponent_AddSustainInstance) == 0x000008, "Wrong size on FabricSequencerSustainComponent_AddSustainInstance");
static_assert(offsetof(FabricSequencerSustainComponent_AddSustainInstance, StepIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_AddSustainInstance::StepIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_AddSustainInstance, TrackIndex) == 0x000004, "Member 'FabricSequencerSustainComponent_AddSustainInstance::TrackIndex' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.CalculateSustainLength
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_CalculateSustainLength final
{
public:
	float                                         NumStepsCoveredBySustain;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_CalculateSustainLength) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_CalculateSustainLength");
static_assert(sizeof(FabricSequencerSustainComponent_CalculateSustainLength) == 0x000008, "Wrong size on FabricSequencerSustainComponent_CalculateSustainLength");
static_assert(offsetof(FabricSequencerSustainComponent_CalculateSustainLength, NumStepsCoveredBySustain) == 0x000000, "Member 'FabricSequencerSustainComponent_CalculateSustainLength::NumStepsCoveredBySustain' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_CalculateSustainLength, ReturnValue) == 0x000004, "Member 'FabricSequencerSustainComponent_CalculateSustainLength::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.FindAndDeleteInstance
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_FindAndDeleteInstance final
{
public:
	int32                                         StepIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_FindAndDeleteInstance) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_FindAndDeleteInstance");
static_assert(sizeof(FabricSequencerSustainComponent_FindAndDeleteInstance) == 0x000008, "Wrong size on FabricSequencerSustainComponent_FindAndDeleteInstance");
static_assert(offsetof(FabricSequencerSustainComponent_FindAndDeleteInstance, StepIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_FindAndDeleteInstance::StepIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_FindAndDeleteInstance, TrackIndex) == 0x000004, "Member 'FabricSequencerSustainComponent_FindAndDeleteInstance::TrackIndex' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.FindHeadNoteAndUpdateInstance
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance final
{
public:
	int32                                         StepIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance");
static_assert(sizeof(FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance) == 0x000008, "Wrong size on FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance");
static_assert(offsetof(FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance, StepIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance::StepIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance, TrackIndex) == 0x000004, "Member 'FabricSequencerSustainComponent_FindHeadNoteAndUpdateInstance::TrackIndex' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.InitializeSustainComponent
// 0x0010 (0x0010 - 0x0000)
struct FabricSequencerSustainComponent_InitializeSustainComponent final
{
public:
	class UFabricStepSequencerComponent*          InStepSequencer;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFabricStepSequencerGridComponent*      InStepSequencerGrid;                               // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_InitializeSustainComponent) == 0x000008, "Wrong alignment on FabricSequencerSustainComponent_InitializeSustainComponent");
static_assert(sizeof(FabricSequencerSustainComponent_InitializeSustainComponent) == 0x000010, "Wrong size on FabricSequencerSustainComponent_InitializeSustainComponent");
static_assert(offsetof(FabricSequencerSustainComponent_InitializeSustainComponent, InStepSequencer) == 0x000000, "Member 'FabricSequencerSustainComponent_InitializeSustainComponent::InStepSequencer' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_InitializeSustainComponent, InStepSequencerGrid) == 0x000008, "Member 'FabricSequencerSustainComponent_InitializeSustainComponent::InStepSequencerGrid' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.OnNumStepsChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSequencerSustainComponent_OnNumStepsChanged final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_OnNumStepsChanged) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_OnNumStepsChanged");
static_assert(sizeof(FabricSequencerSustainComponent_OnNumStepsChanged) == 0x000004, "Wrong size on FabricSequencerSustainComponent_OnNumStepsChanged");
static_assert(offsetof(FabricSequencerSustainComponent_OnNumStepsChanged, NumSteps) == 0x000000, "Member 'FabricSequencerSustainComponent_OnNumStepsChanged::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.OnNumTracksChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSequencerSustainComponent_OnNumTracksChanged final
{
public:
	int32                                         NumTracks;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_OnNumTracksChanged) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_OnNumTracksChanged");
static_assert(sizeof(FabricSequencerSustainComponent_OnNumTracksChanged) == 0x000004, "Wrong size on FabricSequencerSustainComponent_OnNumTracksChanged");
static_assert(offsetof(FabricSequencerSustainComponent_OnNumTracksChanged, NumTracks) == 0x000000, "Member 'FabricSequencerSustainComponent_OnNumTracksChanged::NumTracks' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.OnPageChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricSequencerSustainComponent_OnPageChanged final
{
public:
	int32                                         CurrentPage;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_OnPageChanged) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_OnPageChanged");
static_assert(sizeof(FabricSequencerSustainComponent_OnPageChanged) == 0x000004, "Wrong size on FabricSequencerSustainComponent_OnPageChanged");
static_assert(offsetof(FabricSequencerSustainComponent_OnPageChanged, CurrentPage) == 0x000000, "Member 'FabricSequencerSustainComponent_OnPageChanged::CurrentPage' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.OnStepChanged
// 0x0010 (0x0010 - 0x0000)
struct FabricSequencerSustainComponent_OnStepChanged final
{
public:
	struct FFabricSequencerStepChangedInfo        StepInfo;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_OnStepChanged) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_OnStepChanged");
static_assert(sizeof(FabricSequencerSustainComponent_OnStepChanged) == 0x000010, "Wrong size on FabricSequencerSustainComponent_OnStepChanged");
static_assert(offsetof(FabricSequencerSustainComponent_OnStepChanged, StepInfo) == 0x000000, "Member 'FabricSequencerSustainComponent_OnStepChanged::StepInfo' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.SetEndBeat
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_SetEndBeat final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndBeatValue;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_SetEndBeat) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_SetEndBeat");
static_assert(sizeof(FabricSequencerSustainComponent_SetEndBeat) == 0x000008, "Wrong size on FabricSequencerSustainComponent_SetEndBeat");
static_assert(offsetof(FabricSequencerSustainComponent_SetEndBeat, InstanceIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_SetEndBeat::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_SetEndBeat, EndBeatValue) == 0x000004, "Member 'FabricSequencerSustainComponent_SetEndBeat::EndBeatValue' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.SetLoopBeat
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_SetLoopBeat final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoopBeatValue;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_SetLoopBeat) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_SetLoopBeat");
static_assert(sizeof(FabricSequencerSustainComponent_SetLoopBeat) == 0x000008, "Wrong size on FabricSequencerSustainComponent_SetLoopBeat");
static_assert(offsetof(FabricSequencerSustainComponent_SetLoopBeat, InstanceIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_SetLoopBeat::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_SetLoopBeat, LoopBeatValue) == 0x000004, "Member 'FabricSequencerSustainComponent_SetLoopBeat::LoopBeatValue' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.SetStartBeat
// 0x0008 (0x0008 - 0x0000)
struct FabricSequencerSustainComponent_SetStartBeat final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartBeatValue;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_SetStartBeat) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_SetStartBeat");
static_assert(sizeof(FabricSequencerSustainComponent_SetStartBeat) == 0x000008, "Wrong size on FabricSequencerSustainComponent_SetStartBeat");
static_assert(offsetof(FabricSequencerSustainComponent_SetStartBeat, InstanceIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_SetStartBeat::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_SetStartBeat, StartBeatValue) == 0x000004, "Member 'FabricSequencerSustainComponent_SetStartBeat::StartBeatValue' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.UpdateDeviceEnabledOnSustain
// 0x0001 (0x0001 - 0x0000)
struct FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain) == 0x000001, "Wrong alignment on FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain");
static_assert(sizeof(FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain) == 0x000001, "Wrong size on FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain, bEnabled) == 0x000000, "Member 'FabricSequencerSustainComponent_UpdateDeviceEnabledOnSustain::bEnabled' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.UpdateSustainInstance
// 0x0010 (0x0010 - 0x0000)
struct FabricSequencerSustainComponent_UpdateSustainInstance final
{
public:
	int32                                         StepIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PageIndex;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bContinuous;                                       // 0x000D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStepChanged;                                      // 0x000E(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricSequencerSustainComponent_UpdateSustainInstance) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_UpdateSustainInstance");
static_assert(sizeof(FabricSequencerSustainComponent_UpdateSustainInstance) == 0x000010, "Wrong size on FabricSequencerSustainComponent_UpdateSustainInstance");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainInstance, StepIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_UpdateSustainInstance::StepIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainInstance, TrackIndex) == 0x000004, "Member 'FabricSequencerSustainComponent_UpdateSustainInstance::TrackIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainInstance, PageIndex) == 0x000008, "Member 'FabricSequencerSustainComponent_UpdateSustainInstance::PageIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainInstance, bEnabled) == 0x00000C, "Member 'FabricSequencerSustainComponent_UpdateSustainInstance::bEnabled' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainInstance, bContinuous) == 0x00000D, "Member 'FabricSequencerSustainComponent_UpdateSustainInstance::bContinuous' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainInstance, bStepChanged) == 0x00000E, "Member 'FabricSequencerSustainComponent_UpdateSustainInstance::bStepChanged' has a wrong offset!");

// Function FabricRuntime.FabricSequencerSustainComponent.UpdateSustainMaterial
// 0x000C (0x000C - 0x0000)
struct FabricSequencerSustainComponent_UpdateSustainMaterial final
{
public:
	int32                                         InstanceIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeadNoteStepIndex;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricSequencerSustainComponent_UpdateSustainMaterial) == 0x000004, "Wrong alignment on FabricSequencerSustainComponent_UpdateSustainMaterial");
static_assert(sizeof(FabricSequencerSustainComponent_UpdateSustainMaterial) == 0x00000C, "Wrong size on FabricSequencerSustainComponent_UpdateSustainMaterial");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainMaterial, InstanceIndex) == 0x000000, "Member 'FabricSequencerSustainComponent_UpdateSustainMaterial::InstanceIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainMaterial, HeadNoteStepIndex) == 0x000004, "Member 'FabricSequencerSustainComponent_UpdateSustainMaterial::HeadNoteStepIndex' has a wrong offset!");
static_assert(offsetof(FabricSequencerSustainComponent_UpdateSustainMaterial, TrackIndex) == 0x000008, "Member 'FabricSequencerSustainComponent_UpdateSustainMaterial::TrackIndex' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.ApplyPage
// 0x0018 (0x0018 - 0x0000)
struct FabricStepSequencerComponent_ApplyPage final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStepSequencePage                      PageData;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_ApplyPage) == 0x000008, "Wrong alignment on FabricStepSequencerComponent_ApplyPage");
static_assert(sizeof(FabricStepSequencerComponent_ApplyPage) == 0x000018, "Wrong size on FabricStepSequencerComponent_ApplyPage");
static_assert(offsetof(FabricStepSequencerComponent_ApplyPage, PageIndex) == 0x000000, "Member 'FabricStepSequencerComponent_ApplyPage::PageIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ApplyPage, PageData) == 0x000008, "Member 'FabricStepSequencerComponent_ApplyPage::PageData' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.ApplyTemplate
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerComponent_ApplyTemplate final
{
public:
	const class UMidiStepSequence*                Template;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StepSequencePageIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateSaveRecord;                                 // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_ApplyTemplate) == 0x000008, "Wrong alignment on FabricStepSequencerComponent_ApplyTemplate");
static_assert(sizeof(FabricStepSequencerComponent_ApplyTemplate) == 0x000010, "Wrong size on FabricStepSequencerComponent_ApplyTemplate");
static_assert(offsetof(FabricStepSequencerComponent_ApplyTemplate, Template) == 0x000000, "Member 'FabricStepSequencerComponent_ApplyTemplate::Template' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ApplyTemplate, StepSequencePageIndex) == 0x000008, "Member 'FabricStepSequencerComponent_ApplyTemplate::StepSequencePageIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ApplyTemplate, bUpdateSaveRecord) == 0x00000C, "Member 'FabricStepSequencerComponent_ApplyTemplate::bUpdateSaveRecord' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.ClearPage
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_ClearPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateSaveRecord;                                 // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_ClearPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_ClearPage");
static_assert(sizeof(FabricStepSequencerComponent_ClearPage) == 0x000008, "Wrong size on FabricStepSequencerComponent_ClearPage");
static_assert(offsetof(FabricStepSequencerComponent_ClearPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_ClearPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ClearPage, bUpdateSaveRecord) == 0x000004, "Member 'FabricStepSequencerComponent_ClearPage::bUpdateSaveRecord' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetContinuationFocusIndeces
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_GetContinuationFocusIndeces final
{
public:
	int32                                         OutRowIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutStepIndex;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutNumContinuationSteps;                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetContinuationFocusIndeces) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetContinuationFocusIndeces");
static_assert(sizeof(FabricStepSequencerComponent_GetContinuationFocusIndeces) == 0x00000C, "Wrong size on FabricStepSequencerComponent_GetContinuationFocusIndeces");
static_assert(offsetof(FabricStepSequencerComponent_GetContinuationFocusIndeces, OutRowIndex) == 0x000000, "Member 'FabricStepSequencerComponent_GetContinuationFocusIndeces::OutRowIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetContinuationFocusIndeces, OutStepIndex) == 0x000004, "Member 'FabricStepSequencerComponent_GetContinuationFocusIndeces::OutStepIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetContinuationFocusIndeces, OutNumContinuationSteps) == 0x000008, "Member 'FabricStepSequencerComponent_GetContinuationFocusIndeces::OutNumContinuationSteps' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetMidiStepSequence
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_GetMidiStepSequence final
{
public:
	class UMidiStepSequence*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetMidiStepSequence) == 0x000008, "Wrong alignment on FabricStepSequencerComponent_GetMidiStepSequence");
static_assert(sizeof(FabricStepSequencerComponent_GetMidiStepSequence) == 0x000008, "Wrong size on FabricStepSequencerComponent_GetMidiStepSequence");
static_assert(offsetof(FabricStepSequencerComponent_GetMidiStepSequence, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetMidiStepSequence::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.RandomizePage
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_RandomizePage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_RandomizePage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_RandomizePage");
static_assert(sizeof(FabricStepSequencerComponent_RandomizePage) == 0x000004, "Wrong size on FabricStepSequencerComponent_RandomizePage");
static_assert(offsetof(FabricStepSequencerComponent_RandomizePage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_RandomizePage::Page' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetBeatScale
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetBeatScale final
{
public:
	float                                         BeatScale;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetBeatScale) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetBeatScale");
static_assert(sizeof(FabricStepSequencerComponent_SetBeatScale) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetBeatScale");
static_assert(offsetof(FabricStepSequencerComponent_SetBeatScale, BeatScale) == 0x000000, "Member 'FabricStepSequencerComponent_SetBeatScale::BeatScale' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetCurrentPage
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetCurrentPage final
{
public:
	int32                                         NewPage;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetCurrentPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetCurrentPage");
static_assert(sizeof(FabricStepSequencerComponent_SetCurrentPage) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetCurrentPage");
static_assert(offsetof(FabricStepSequencerComponent_SetCurrentPage, NewPage) == 0x000000, "Member 'FabricStepSequencerComponent_SetCurrentPage::NewPage' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetLoop
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerComponent_SetLoop final
{
public:
	bool                                          bNewLoop;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetLoop) == 0x000001, "Wrong alignment on FabricStepSequencerComponent_SetLoop");
static_assert(sizeof(FabricStepSequencerComponent_SetLoop) == 0x000001, "Wrong size on FabricStepSequencerComponent_SetLoop");
static_assert(offsetof(FabricStepSequencerComponent_SetLoop, bNewLoop) == 0x000000, "Member 'FabricStepSequencerComponent_SetLoop::bNewLoop' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetMaxSteps
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetMaxSteps final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetMaxSteps) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetMaxSteps");
static_assert(sizeof(FabricStepSequencerComponent_SetMaxSteps) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetMaxSteps");
static_assert(offsetof(FabricStepSequencerComponent_SetMaxSteps, NumSteps) == 0x000000, "Member 'FabricStepSequencerComponent_SetMaxSteps::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetMonophonic
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerComponent_SetMonophonic final
{
public:
	bool                                          bNewMonophonic;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetMonophonic) == 0x000001, "Wrong alignment on FabricStepSequencerComponent_SetMonophonic");
static_assert(sizeof(FabricStepSequencerComponent_SetMonophonic) == 0x000001, "Wrong size on FabricStepSequencerComponent_SetMonophonic");
static_assert(offsetof(FabricStepSequencerComponent_SetMonophonic, bNewMonophonic) == 0x000000, "Member 'FabricStepSequencerComponent_SetMonophonic::bNewMonophonic' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetMusicClock
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_SetMusicClock final
{
public:
	class UMusicClockComponent*                   InMusicClock;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetMusicClock) == 0x000008, "Wrong alignment on FabricStepSequencerComponent_SetMusicClock");
static_assert(sizeof(FabricStepSequencerComponent_SetMusicClock) == 0x000008, "Wrong size on FabricStepSequencerComponent_SetMusicClock");
static_assert(offsetof(FabricStepSequencerComponent_SetMusicClock, InMusicClock) == 0x000000, "Member 'FabricStepSequencerComponent_SetMusicClock::InMusicClock' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetNoteForTrack
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_SetNoteForTrack final
{
public:
	struct FMidiNote                              Note;                                              // 0x0000(0x0001)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Track;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetNoteForTrack) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetNoteForTrack");
static_assert(sizeof(FabricStepSequencerComponent_SetNoteForTrack) == 0x000008, "Wrong size on FabricStepSequencerComponent_SetNoteForTrack");
static_assert(offsetof(FabricStepSequencerComponent_SetNoteForTrack, Note) == 0x000000, "Member 'FabricStepSequencerComponent_SetNoteForTrack::Note' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetNoteForTrack, Track) == 0x000004, "Member 'FabricStepSequencerComponent_SetNoteForTrack::Track' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetNoteStyle
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerComponent_SetNoteStyle final
{
public:
	EFabricNoteStyle                              style;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetNoteStyle) == 0x000001, "Wrong alignment on FabricStepSequencerComponent_SetNoteStyle");
static_assert(sizeof(FabricStepSequencerComponent_SetNoteStyle) == 0x000001, "Wrong size on FabricStepSequencerComponent_SetNoteStyle");
static_assert(offsetof(FabricStepSequencerComponent_SetNoteStyle, style) == 0x000000, "Member 'FabricStepSequencerComponent_SetNoteStyle::style' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetNumberPages
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetNumberPages final
{
public:
	int32                                         NumPages;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetNumberPages) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetNumberPages");
static_assert(sizeof(FabricStepSequencerComponent_SetNumberPages) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetNumberPages");
static_assert(offsetof(FabricStepSequencerComponent_SetNumberPages, NumPages) == 0x000000, "Member 'FabricStepSequencerComponent_SetNumberPages::NumPages' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetNumberSteps
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetNumberSteps final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetNumberSteps) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetNumberSteps");
static_assert(sizeof(FabricStepSequencerComponent_SetNumberSteps) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetNumberSteps");
static_assert(offsetof(FabricStepSequencerComponent_SetNumberSteps, NumSteps) == 0x000000, "Member 'FabricStepSequencerComponent_SetNumberSteps::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetNumberTracks
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetNumberTracks final
{
public:
	int32                                         NumTracks;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetNumberTracks) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetNumberTracks");
static_assert(sizeof(FabricStepSequencerComponent_SetNumberTracks) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetNumberTracks");
static_assert(offsetof(FabricStepSequencerComponent_SetNumberTracks, NumTracks) == 0x000000, "Member 'FabricStepSequencerComponent_SetNumberTracks::NumTracks' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetPlaying
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerComponent_SetPlaying final
{
public:
	bool                                          bNewPlaying;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetPlaying) == 0x000001, "Wrong alignment on FabricStepSequencerComponent_SetPlaying");
static_assert(sizeof(FabricStepSequencerComponent_SetPlaying) == 0x000001, "Wrong size on FabricStepSequencerComponent_SetPlaying");
static_assert(offsetof(FabricStepSequencerComponent_SetPlaying, bNewPlaying) == 0x000000, "Member 'FabricStepSequencerComponent_SetPlaying::bNewPlaying' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetQuarterNotesLength
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_SetQuarterNotesLength final
{
public:
	float                                         QuarterNotes;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_SetQuarterNotesLength) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetQuarterNotesLength");
static_assert(sizeof(FabricStepSequencerComponent_SetQuarterNotesLength) == 0x000004, "Wrong size on FabricStepSequencerComponent_SetQuarterNotesLength");
static_assert(offsetof(FabricStepSequencerComponent_SetQuarterNotesLength, QuarterNotes) == 0x000000, "Member 'FabricStepSequencerComponent_SetQuarterNotesLength::QuarterNotes' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetStepContinuation
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_SetStepContinuation final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsContinuation;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_SetStepContinuation) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetStepContinuation");
static_assert(sizeof(FabricStepSequencerComponent_SetStepContinuation) == 0x00000C, "Wrong size on FabricStepSequencerComponent_SetStepContinuation");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuation, Row) == 0x000000, "Member 'FabricStepSequencerComponent_SetStepContinuation::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuation, Column) == 0x000004, "Member 'FabricStepSequencerComponent_SetStepContinuation::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuation, bIsContinuation) == 0x000008, "Member 'FabricStepSequencerComponent_SetStepContinuation::bIsContinuation' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetStepContinuationOnPage
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerComponent_SetStepContinuationOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsContinuation;                                   // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_SetStepContinuationOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetStepContinuationOnPage");
static_assert(sizeof(FabricStepSequencerComponent_SetStepContinuationOnPage) == 0x000010, "Wrong size on FabricStepSequencerComponent_SetStepContinuationOnPage");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuationOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_SetStepContinuationOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuationOnPage, Row) == 0x000004, "Member 'FabricStepSequencerComponent_SetStepContinuationOnPage::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuationOnPage, Column) == 0x000008, "Member 'FabricStepSequencerComponent_SetStepContinuationOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepContinuationOnPage, bIsContinuation) == 0x00000C, "Member 'FabricStepSequencerComponent_SetStepContinuationOnPage::bIsContinuation' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetStepEnabled
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_SetStepEnabled final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bState;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_SetStepEnabled) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetStepEnabled");
static_assert(sizeof(FabricStepSequencerComponent_SetStepEnabled) == 0x00000C, "Wrong size on FabricStepSequencerComponent_SetStepEnabled");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabled, Row) == 0x000000, "Member 'FabricStepSequencerComponent_SetStepEnabled::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabled, Column) == 0x000004, "Member 'FabricStepSequencerComponent_SetStepEnabled::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabled, bState) == 0x000008, "Member 'FabricStepSequencerComponent_SetStepEnabled::bState' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.SetStepEnabledOnPage
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerComponent_SetStepEnabledOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bState;                                            // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_SetStepEnabledOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_SetStepEnabledOnPage");
static_assert(sizeof(FabricStepSequencerComponent_SetStepEnabledOnPage) == 0x000010, "Wrong size on FabricStepSequencerComponent_SetStepEnabledOnPage");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabledOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_SetStepEnabledOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabledOnPage, Row) == 0x000004, "Member 'FabricStepSequencerComponent_SetStepEnabledOnPage::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabledOnPage, Column) == 0x000008, "Member 'FabricStepSequencerComponent_SetStepEnabledOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_SetStepEnabledOnPage, bState) == 0x00000C, "Member 'FabricStepSequencerComponent_SetStepEnabledOnPage::bState' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.ToggleStepEnabled
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_ToggleStepEnabled final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_ToggleStepEnabled) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_ToggleStepEnabled");
static_assert(sizeof(FabricStepSequencerComponent_ToggleStepEnabled) == 0x000008, "Wrong size on FabricStepSequencerComponent_ToggleStepEnabled");
static_assert(offsetof(FabricStepSequencerComponent_ToggleStepEnabled, Row) == 0x000000, "Member 'FabricStepSequencerComponent_ToggleStepEnabled::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ToggleStepEnabled, Column) == 0x000004, "Member 'FabricStepSequencerComponent_ToggleStepEnabled::Column' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.ToggleStepEnabledOnPage
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_ToggleStepEnabledOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_ToggleStepEnabledOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_ToggleStepEnabledOnPage");
static_assert(sizeof(FabricStepSequencerComponent_ToggleStepEnabledOnPage) == 0x00000C, "Wrong size on FabricStepSequencerComponent_ToggleStepEnabledOnPage");
static_assert(offsetof(FabricStepSequencerComponent_ToggleStepEnabledOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_ToggleStepEnabledOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ToggleStepEnabledOnPage, Row) == 0x000004, "Member 'FabricStepSequencerComponent_ToggleStepEnabledOnPage::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_ToggleStepEnabledOnPage, Column) == 0x000008, "Member 'FabricStepSequencerComponent_ToggleStepEnabledOnPage::Column' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.UpdatePackedStepTableSaveRecordIfChanged
// 0x0028 (0x0028 - 0x0000)
struct FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged final
{
public:
	struct FFabricStepTablePacked                 InPackedStepTable;                                 // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged) == 0x000008, "Wrong alignment on FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged");
static_assert(sizeof(FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged) == 0x000028, "Wrong size on FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged");
static_assert(offsetof(FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged, InPackedStepTable) == 0x000000, "Member 'FabricStepSequencerComponent_UpdatePackedStepTableSaveRecordIfChanged::InPackedStepTable' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetCurrentPage
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetCurrentPage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetCurrentPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetCurrentPage");
static_assert(sizeof(FabricStepSequencerComponent_GetCurrentPage) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetCurrentPage");
static_assert(offsetof(FabricStepSequencerComponent_GetCurrentPage, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetCurrentPage::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetLengthStepBeats
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetLengthStepBeats final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetLengthStepBeats) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetLengthStepBeats");
static_assert(sizeof(FabricStepSequencerComponent_GetLengthStepBeats) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetLengthStepBeats");
static_assert(offsetof(FabricStepSequencerComponent_GetLengthStepBeats, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetLengthStepBeats::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetLengthStepQuarterNotes
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetLengthStepQuarterNotes final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetLengthStepQuarterNotes) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetLengthStepQuarterNotes");
static_assert(sizeof(FabricStepSequencerComponent_GetLengthStepQuarterNotes) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetLengthStepQuarterNotes");
static_assert(offsetof(FabricStepSequencerComponent_GetLengthStepQuarterNotes, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetLengthStepQuarterNotes::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetLengthTrackBeats
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetLengthTrackBeats final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetLengthTrackBeats) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetLengthTrackBeats");
static_assert(sizeof(FabricStepSequencerComponent_GetLengthTrackBeats) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetLengthTrackBeats");
static_assert(offsetof(FabricStepSequencerComponent_GetLengthTrackBeats, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetLengthTrackBeats::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetLengthTrackQuarterNotes
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetLengthTrackQuarterNotes final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetLengthTrackQuarterNotes) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetLengthTrackQuarterNotes");
static_assert(sizeof(FabricStepSequencerComponent_GetLengthTrackQuarterNotes) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetLengthTrackQuarterNotes");
static_assert(offsetof(FabricStepSequencerComponent_GetLengthTrackQuarterNotes, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetLengthTrackQuarterNotes::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetLongestContinuationLengthForColumn
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_GetLongestContinuationLengthForColumn final
{
public:
	int32                                         Column;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumn) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetLongestContinuationLengthForColumn");
static_assert(sizeof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumn) == 0x000008, "Wrong size on FabricStepSequencerComponent_GetLongestContinuationLengthForColumn");
static_assert(offsetof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumn, Column) == 0x000000, "Member 'FabricStepSequencerComponent_GetLongestContinuationLengthForColumn::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumn, ReturnValue) == 0x000004, "Member 'FabricStepSequencerComponent_GetLongestContinuationLengthForColumn::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetLongestContinuationLengthForColumnOnPage
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage");
static_assert(sizeof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage) == 0x00000C, "Wrong size on FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage");
static_assert(offsetof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage, Column) == 0x000004, "Member 'FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage, ReturnValue) == 0x000008, "Member 'FabricStepSequencerComponent_GetLongestContinuationLengthForColumnOnPage::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetMaxSteps
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetMaxSteps final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetMaxSteps) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetMaxSteps");
static_assert(sizeof(FabricStepSequencerComponent_GetMaxSteps) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetMaxSteps");
static_assert(offsetof(FabricStepSequencerComponent_GetMaxSteps, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetMaxSteps::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetNumberSteps
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetNumberSteps final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetNumberSteps) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetNumberSteps");
static_assert(sizeof(FabricStepSequencerComponent_GetNumberSteps) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetNumberSteps");
static_assert(offsetof(FabricStepSequencerComponent_GetNumberSteps, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetNumberSteps::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetNumberTracks
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerComponent_GetNumberTracks final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetNumberTracks) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetNumberTracks");
static_assert(sizeof(FabricStepSequencerComponent_GetNumberTracks) == 0x000004, "Wrong size on FabricStepSequencerComponent_GetNumberTracks");
static_assert(offsetof(FabricStepSequencerComponent_GetNumberTracks, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetNumberTracks::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetNumUsedSteps
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_GetNumUsedSteps final
{
public:
	int32                                         TotalSteps;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetNumUsedSteps) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetNumUsedSteps");
static_assert(sizeof(FabricStepSequencerComponent_GetNumUsedSteps) == 0x000008, "Wrong size on FabricStepSequencerComponent_GetNumUsedSteps");
static_assert(offsetof(FabricStepSequencerComponent_GetNumUsedSteps, TotalSteps) == 0x000000, "Member 'FabricStepSequencerComponent_GetNumUsedSteps::TotalSteps' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetNumUsedSteps, ReturnValue) == 0x000004, "Member 'FabricStepSequencerComponent_GetNumUsedSteps::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetPageData
// 0x0018 (0x0018 - 0x0000)
struct FabricStepSequencerComponent_GetPageData final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStepSequencePage                      OutPageData;                                       // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetPageData) == 0x000008, "Wrong alignment on FabricStepSequencerComponent_GetPageData");
static_assert(sizeof(FabricStepSequencerComponent_GetPageData) == 0x000018, "Wrong size on FabricStepSequencerComponent_GetPageData");
static_assert(offsetof(FabricStepSequencerComponent_GetPageData, PageIndex) == 0x000000, "Member 'FabricStepSequencerComponent_GetPageData::PageIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetPageData, OutPageData) == 0x000008, "Member 'FabricStepSequencerComponent_GetPageData::OutPageData' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepContinuationLength
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_GetStepContinuationLength final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetStepContinuationLength) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepContinuationLength");
static_assert(sizeof(FabricStepSequencerComponent_GetStepContinuationLength) == 0x00000C, "Wrong size on FabricStepSequencerComponent_GetStepContinuationLength");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLength, Row) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepContinuationLength::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLength, Column) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepContinuationLength::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLength, ReturnValue) == 0x000008, "Member 'FabricStepSequencerComponent_GetStepContinuationLength::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepContinuationLengthOnPage
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerComponent_GetStepContinuationLengthOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetStepContinuationLengthOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepContinuationLengthOnPage");
static_assert(sizeof(FabricStepSequencerComponent_GetStepContinuationLengthOnPage) == 0x000010, "Wrong size on FabricStepSequencerComponent_GetStepContinuationLengthOnPage");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLengthOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepContinuationLengthOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLengthOnPage, Row) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepContinuationLengthOnPage::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLengthOnPage, Column) == 0x000008, "Member 'FabricStepSequencerComponent_GetStepContinuationLengthOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepContinuationLengthOnPage, ReturnValue) == 0x00000C, "Member 'FabricStepSequencerComponent_GetStepContinuationLengthOnPage::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepEnabled
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_GetStepEnabled final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_GetStepEnabled) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepEnabled");
static_assert(sizeof(FabricStepSequencerComponent_GetStepEnabled) == 0x00000C, "Wrong size on FabricStepSequencerComponent_GetStepEnabled");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabled, Row) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepEnabled::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabled, Column) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepEnabled::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabled, ReturnValue) == 0x000008, "Member 'FabricStepSequencerComponent_GetStepEnabled::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepEnabledOnPage
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerComponent_GetStepEnabledOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_GetStepEnabledOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepEnabledOnPage");
static_assert(sizeof(FabricStepSequencerComponent_GetStepEnabledOnPage) == 0x000010, "Wrong size on FabricStepSequencerComponent_GetStepEnabledOnPage");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabledOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepEnabledOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabledOnPage, Row) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepEnabledOnPage::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabledOnPage, Column) == 0x000008, "Member 'FabricStepSequencerComponent_GetStepEnabledOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepEnabledOnPage, ReturnValue) == 0x00000C, "Member 'FabricStepSequencerComponent_GetStepEnabledOnPage::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepIsContinuation
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_GetStepIsContinuation final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_GetStepIsContinuation) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepIsContinuation");
static_assert(sizeof(FabricStepSequencerComponent_GetStepIsContinuation) == 0x00000C, "Wrong size on FabricStepSequencerComponent_GetStepIsContinuation");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuation, Row) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepIsContinuation::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuation, Column) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepIsContinuation::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuation, ReturnValue) == 0x000008, "Member 'FabricStepSequencerComponent_GetStepIsContinuation::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepIsContinuationOnPage
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerComponent_GetStepIsContinuationOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_GetStepIsContinuationOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepIsContinuationOnPage");
static_assert(sizeof(FabricStepSequencerComponent_GetStepIsContinuationOnPage) == 0x000010, "Wrong size on FabricStepSequencerComponent_GetStepIsContinuationOnPage");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuationOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepIsContinuationOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuationOnPage, Row) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepIsContinuationOnPage::Row' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuationOnPage, Column) == 0x000008, "Member 'FabricStepSequencerComponent_GetStepIsContinuationOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepIsContinuationOnPage, ReturnValue) == 0x00000C, "Member 'FabricStepSequencerComponent_GetStepIsContinuationOnPage::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepStartBeat
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_GetStepStartBeat final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetStepStartBeat) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepStartBeat");
static_assert(sizeof(FabricStepSequencerComponent_GetStepStartBeat) == 0x000008, "Wrong size on FabricStepSequencerComponent_GetStepStartBeat");
static_assert(offsetof(FabricStepSequencerComponent_GetStepStartBeat, Step) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepStartBeat::Step' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepStartBeat, ReturnValue) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepStartBeat::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetStepStartQuarterNotes
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_GetStepStartQuarterNotes final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetStepStartQuarterNotes) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_GetStepStartQuarterNotes");
static_assert(sizeof(FabricStepSequencerComponent_GetStepStartQuarterNotes) == 0x000008, "Wrong size on FabricStepSequencerComponent_GetStepStartQuarterNotes");
static_assert(offsetof(FabricStepSequencerComponent_GetStepStartQuarterNotes, Step) == 0x000000, "Member 'FabricStepSequencerComponent_GetStepStartQuarterNotes::Step' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_GetStepStartQuarterNotes, ReturnValue) == 0x000004, "Member 'FabricStepSequencerComponent_GetStepStartQuarterNotes::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.GetSupportsContinuation
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerComponent_GetSupportsContinuation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerComponent_GetSupportsContinuation) == 0x000001, "Wrong alignment on FabricStepSequencerComponent_GetSupportsContinuation");
static_assert(sizeof(FabricStepSequencerComponent_GetSupportsContinuation) == 0x000001, "Wrong size on FabricStepSequencerComponent_GetSupportsContinuation");
static_assert(offsetof(FabricStepSequencerComponent_GetSupportsContinuation, ReturnValue) == 0x000000, "Member 'FabricStepSequencerComponent_GetSupportsContinuation::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.IsPageBlank
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_IsPageBlank final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_IsPageBlank) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_IsPageBlank");
static_assert(sizeof(FabricStepSequencerComponent_IsPageBlank) == 0x000008, "Wrong size on FabricStepSequencerComponent_IsPageBlank");
static_assert(offsetof(FabricStepSequencerComponent_IsPageBlank, PageIndex) == 0x000000, "Member 'FabricStepSequencerComponent_IsPageBlank::PageIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_IsPageBlank, ReturnValue) == 0x000004, "Member 'FabricStepSequencerComponent_IsPageBlank::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.IsStepEnabledForAnyTrack
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerComponent_IsStepEnabledForAnyTrack final
{
public:
	int32                                         Column;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_IsStepEnabledForAnyTrack) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_IsStepEnabledForAnyTrack");
static_assert(sizeof(FabricStepSequencerComponent_IsStepEnabledForAnyTrack) == 0x000008, "Wrong size on FabricStepSequencerComponent_IsStepEnabledForAnyTrack");
static_assert(offsetof(FabricStepSequencerComponent_IsStepEnabledForAnyTrack, Column) == 0x000000, "Member 'FabricStepSequencerComponent_IsStepEnabledForAnyTrack::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_IsStepEnabledForAnyTrack, ReturnValue) == 0x000004, "Member 'FabricStepSequencerComponent_IsStepEnabledForAnyTrack::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerComponent.IsStepEnabledForAnyTrackOnPage
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage) == 0x000004, "Wrong alignment on FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage");
static_assert(sizeof(FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage) == 0x00000C, "Wrong size on FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage");
static_assert(offsetof(FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage, Page) == 0x000000, "Member 'FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage::Page' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage, Column) == 0x000004, "Member 'FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage::Column' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage, ReturnValue) == 0x000008, "Member 'FabricStepSequencerComponent_IsStepEnabledForAnyTrackOnPage::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.GetGridSquareXPosition
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerGridComponent_GetGridSquareXPosition final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StepIndex;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_GetGridSquareXPosition) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_GetGridSquareXPosition");
static_assert(sizeof(FabricStepSequencerGridComponent_GetGridSquareXPosition) == 0x00000C, "Wrong size on FabricStepSequencerGridComponent_GetGridSquareXPosition");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareXPosition, NumSteps) == 0x000000, "Member 'FabricStepSequencerGridComponent_GetGridSquareXPosition::NumSteps' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareXPosition, StepIndex) == 0x000004, "Member 'FabricStepSequencerGridComponent_GetGridSquareXPosition::StepIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareXPosition, ReturnValue) == 0x000008, "Member 'FabricStepSequencerGridComponent_GetGridSquareXPosition::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.GetGridSquareYPosition
// 0x000C (0x000C - 0x0000)
struct FabricStepSequencerGridComponent_GetGridSquareYPosition final
{
public:
	int32                                         NumRows;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RowIndex;                                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_GetGridSquareYPosition) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_GetGridSquareYPosition");
static_assert(sizeof(FabricStepSequencerGridComponent_GetGridSquareYPosition) == 0x00000C, "Wrong size on FabricStepSequencerGridComponent_GetGridSquareYPosition");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareYPosition, NumRows) == 0x000000, "Member 'FabricStepSequencerGridComponent_GetGridSquareYPosition::NumRows' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareYPosition, RowIndex) == 0x000004, "Member 'FabricStepSequencerGridComponent_GetGridSquareYPosition::RowIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareYPosition, ReturnValue) == 0x000008, "Member 'FabricStepSequencerGridComponent_GetGridSquareYPosition::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.IsBypassed
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerGridComponent_IsBypassed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_IsBypassed) == 0x000001, "Wrong alignment on FabricStepSequencerGridComponent_IsBypassed");
static_assert(sizeof(FabricStepSequencerGridComponent_IsBypassed) == 0x000001, "Wrong size on FabricStepSequencerGridComponent_IsBypassed");
static_assert(offsetof(FabricStepSequencerGridComponent_IsBypassed, ReturnValue) == 0x000000, "Member 'FabricStepSequencerGridComponent_IsBypassed::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.NotifyInteractionFocusTargetExternallyChanged
// 0x0020 (0x0020 - 0x0000)
struct FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SourceRowIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SourceColumnIndex;                                 // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FocusRowIndex;                                     // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FocusColumnIndex;                                  // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFocused;                                        // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged) == 0x000008, "Wrong alignment on FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged) == 0x000020, "Wrong size on FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged, PlayerController) == 0x000000, "Member 'FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged::PlayerController' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged, SourceRowIndex) == 0x000008, "Member 'FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged::SourceRowIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged, SourceColumnIndex) == 0x00000C, "Member 'FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged::SourceColumnIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged, FocusRowIndex) == 0x000010, "Member 'FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged::FocusRowIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged, FocusColumnIndex) == 0x000014, "Member 'FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged::FocusColumnIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged, bIsFocused) == 0x000018, "Member 'FabricStepSequencerGridComponent_NotifyInteractionFocusTargetExternallyChanged::bIsFocused' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnBeatOffsetChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_OnBeatOffsetChanged final
{
public:
	float                                         BeatOffset;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnBeatOffsetChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnBeatOffsetChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnBeatOffsetChanged) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_OnBeatOffsetChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnBeatOffsetChanged, BeatOffset) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnBeatOffsetChanged::BeatOffset' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnBeatScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_OnBeatScaleChanged final
{
public:
	float                                         BeatScale;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnBeatScaleChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnBeatScaleChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnBeatScaleChanged) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_OnBeatScaleChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnBeatScaleChanged, BeatScale) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnBeatScaleChanged::BeatScale' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnCurrentPageChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_OnCurrentPageChanged final
{
public:
	int32                                         NewPage;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnCurrentPageChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnCurrentPageChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnCurrentPageChanged) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_OnCurrentPageChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnCurrentPageChanged, NewPage) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnCurrentPageChanged::NewPage' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnNoteStyleChanged
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerGridComponent_OnNoteStyleChanged final
{
public:
	EFabricNoteStyle                              style;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnNoteStyleChanged) == 0x000001, "Wrong alignment on FabricStepSequencerGridComponent_OnNoteStyleChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnNoteStyleChanged) == 0x000001, "Wrong size on FabricStepSequencerGridComponent_OnNoteStyleChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnNoteStyleChanged, style) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnNoteStyleChanged::style' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnNumStepsChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_OnNumStepsChanged final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnNumStepsChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnNumStepsChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnNumStepsChanged) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_OnNumStepsChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnNumStepsChanged, NumSteps) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnNumStepsChanged::NumSteps' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnNumTracksChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_OnNumTracksChanged final
{
public:
	int32                                         NumTracks;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnNumTracksChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnNumTracksChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnNumTracksChanged) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_OnNumTracksChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnNumTracksChanged, NumTracks) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnNumTracksChanged::NumTracks' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnQuarterNotesLengthChanged
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged final
{
public:
	float                                         QuarterNotesLength;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged, QuarterNotesLength) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnQuarterNotesLengthChanged::QuarterNotesLength' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.OnStepChanged
// 0x0010 (0x0010 - 0x0000)
struct FabricStepSequencerGridComponent_OnStepChanged final
{
public:
	struct FFabricSequencerStepChangedInfo        StepInfo;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_OnStepChanged) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_OnStepChanged");
static_assert(sizeof(FabricStepSequencerGridComponent_OnStepChanged) == 0x000010, "Wrong size on FabricStepSequencerGridComponent_OnStepChanged");
static_assert(offsetof(FabricStepSequencerGridComponent_OnStepChanged, StepInfo) == 0x000000, "Member 'FabricStepSequencerGridComponent_OnStepChanged::StepInfo' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.SetActiveTrackIndex
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridComponent_SetActiveTrackIndex final
{
public:
	int32                                         ActiveTrackIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_SetActiveTrackIndex) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_SetActiveTrackIndex");
static_assert(sizeof(FabricStepSequencerGridComponent_SetActiveTrackIndex) == 0x000004, "Wrong size on FabricStepSequencerGridComponent_SetActiveTrackIndex");
static_assert(offsetof(FabricStepSequencerGridComponent_SetActiveTrackIndex, ActiveTrackIndex) == 0x000000, "Member 'FabricStepSequencerGridComponent_SetActiveTrackIndex::ActiveTrackIndex' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.SetBypassed
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerGridComponent_SetBypassed final
{
public:
	bool                                          bBypassed;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_SetBypassed) == 0x000001, "Wrong alignment on FabricStepSequencerGridComponent_SetBypassed");
static_assert(sizeof(FabricStepSequencerGridComponent_SetBypassed) == 0x000001, "Wrong size on FabricStepSequencerGridComponent_SetBypassed");
static_assert(offsetof(FabricStepSequencerGridComponent_SetBypassed, bBypassed) == 0x000000, "Member 'FabricStepSequencerGridComponent_SetBypassed::bBypassed' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.SetGridVisible
// 0x0002 (0x0002 - 0x0000)
struct FabricStepSequencerGridComponent_SetGridVisible final
{
public:
	bool                                          bInGridVisible;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_SetGridVisible) == 0x000001, "Wrong alignment on FabricStepSequencerGridComponent_SetGridVisible");
static_assert(sizeof(FabricStepSequencerGridComponent_SetGridVisible) == 0x000002, "Wrong size on FabricStepSequencerGridComponent_SetGridVisible");
static_assert(offsetof(FabricStepSequencerGridComponent_SetGridVisible, bInGridVisible) == 0x000000, "Member 'FabricStepSequencerGridComponent_SetGridVisible::bInGridVisible' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_SetGridVisible, bForceRefresh) == 0x000001, "Member 'FabricStepSequencerGridComponent_SetGridVisible::bForceRefresh' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.GetGridSquareExtents
// 0x0020 (0x0020 - 0x0000)
struct FabricStepSequencerGridComponent_GetGridSquareExtents final
{
public:
	int32                                         RowIndex;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColumnIndex;                                       // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_GetGridSquareExtents) == 0x000008, "Wrong alignment on FabricStepSequencerGridComponent_GetGridSquareExtents");
static_assert(sizeof(FabricStepSequencerGridComponent_GetGridSquareExtents) == 0x000020, "Wrong size on FabricStepSequencerGridComponent_GetGridSquareExtents");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareExtents, RowIndex) == 0x000000, "Member 'FabricStepSequencerGridComponent_GetGridSquareExtents::RowIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareExtents, ColumnIndex) == 0x000004, "Member 'FabricStepSequencerGridComponent_GetGridSquareExtents::ColumnIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareExtents, ReturnValue) == 0x000008, "Member 'FabricStepSequencerGridComponent_GetGridSquareExtents::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.GetGridSquareSize
// 0x0018 (0x0018 - 0x0000)
struct FabricStepSequencerGridComponent_GetGridSquareSize final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumRows;                                           // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridComponent_GetGridSquareSize) == 0x000008, "Wrong alignment on FabricStepSequencerGridComponent_GetGridSquareSize");
static_assert(sizeof(FabricStepSequencerGridComponent_GetGridSquareSize) == 0x000018, "Wrong size on FabricStepSequencerGridComponent_GetGridSquareSize");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareSize, NumSteps) == 0x000000, "Member 'FabricStepSequencerGridComponent_GetGridSquareSize::NumSteps' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareSize, NumRows) == 0x000004, "Member 'FabricStepSequencerGridComponent_GetGridSquareSize::NumRows' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_GetGridSquareSize, ReturnValue) == 0x000008, "Member 'FabricStepSequencerGridComponent_GetGridSquareSize::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridComponent.IsStepToggledOnForAnyTrack
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack final
{
public:
	int32                                         StepIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack) == 0x000004, "Wrong alignment on FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack");
static_assert(sizeof(FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack) == 0x000008, "Wrong size on FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack");
static_assert(offsetof(FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack, StepIndex) == 0x000000, "Member 'FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack::StepIndex' has a wrong offset!");
static_assert(offsetof(FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack, ReturnValue) == 0x000004, "Member 'FabricStepSequencerGridComponent_IsStepToggledOnForAnyTrack::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridSquareComponent.OnContinuationControl_EndInteraction
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction) == 0x000008, "Wrong alignment on FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction");
static_assert(sizeof(FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction) == 0x000008, "Wrong size on FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction");
static_assert(offsetof(FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction, Controller) == 0x000000, "Member 'FabricStepSequencerGridSquareComponent_OnContinuationControl_EndInteraction::Controller' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridSquareComponent.OnContinuationControl_StartInteraction
// 0x0008 (0x0008 - 0x0000)
struct FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction) == 0x000008, "Wrong alignment on FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction");
static_assert(sizeof(FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction) == 0x000008, "Wrong size on FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction");
static_assert(offsetof(FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction, Controller) == 0x000000, "Member 'FabricStepSequencerGridSquareComponent_OnContinuationControl_StartInteraction::Controller' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridSquareComponent.SetActiveTrack
// 0x0004 (0x0004 - 0x0000)
struct FabricStepSequencerGridSquareComponent_SetActiveTrack final
{
public:
	int32                                         Track;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridSquareComponent_SetActiveTrack) == 0x000004, "Wrong alignment on FabricStepSequencerGridSquareComponent_SetActiveTrack");
static_assert(sizeof(FabricStepSequencerGridSquareComponent_SetActiveTrack) == 0x000004, "Wrong size on FabricStepSequencerGridSquareComponent_SetActiveTrack");
static_assert(offsetof(FabricStepSequencerGridSquareComponent_SetActiveTrack, Track) == 0x000000, "Member 'FabricStepSequencerGridSquareComponent_SetActiveTrack::Track' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridSquareComponent.CanDoInteractionLogicOnEndInteraction
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction) == 0x000001, "Wrong alignment on FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction");
static_assert(sizeof(FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction) == 0x000001, "Wrong size on FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction");
static_assert(offsetof(FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction, ReturnValue) == 0x000000, "Member 'FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnEndInteraction::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricStepSequencerGridSquareComponent.CanDoInteractionLogicOnStartInteraction
// 0x0001 (0x0001 - 0x0000)
struct FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction) == 0x000001, "Wrong alignment on FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction");
static_assert(sizeof(FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction) == 0x000001, "Wrong size on FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction");
static_assert(offsetof(FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction, ReturnValue) == 0x000000, "Member 'FabricStepSequencerGridSquareComponent_CanDoInteractionLogicOnStartInteraction::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricTextureTreeNode.CopyProperties
// 0x0008 (0x0008 - 0x0000)
struct FabricTextureTreeNode_CopyProperties final
{
public:
	const class UFabricTextureTreeNode*           Other;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTextureTreeNode_CopyProperties) == 0x000008, "Wrong alignment on FabricTextureTreeNode_CopyProperties");
static_assert(sizeof(FabricTextureTreeNode_CopyProperties) == 0x000008, "Wrong size on FabricTextureTreeNode_CopyProperties");
static_assert(offsetof(FabricTextureTreeNode_CopyProperties, Other) == 0x000000, "Member 'FabricTextureTreeNode_CopyProperties::Other' has a wrong offset!");

// Function FabricRuntime.FabricTextureProviderBase.SetSourceTexture
// 0x0018 (0x0018 - 0x0000)
struct FabricTextureProviderBase_SetSourceTexture final
{
public:
	struct FFabricTextureProviderTexture          InTexture;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTextureProviderBase_SetSourceTexture) == 0x000008, "Wrong alignment on FabricTextureProviderBase_SetSourceTexture");
static_assert(sizeof(FabricTextureProviderBase_SetSourceTexture) == 0x000018, "Wrong size on FabricTextureProviderBase_SetSourceTexture");
static_assert(offsetof(FabricTextureProviderBase_SetSourceTexture, InTexture) == 0x000000, "Member 'FabricTextureProviderBase_SetSourceTexture::InTexture' has a wrong offset!");

// Function FabricRuntime.FabricTimelinePreviewComponent.PreviewTimeline
// 0x0010 (0x0010 - 0x0000)
struct FabricTimelinePreviewComponent_PreviewTimeline final
{
public:
	class UTimelineComponent*                     Timeline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsToPlay;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReverseAnimation;                                 // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FabricTimelinePreviewComponent_PreviewTimeline) == 0x000008, "Wrong alignment on FabricTimelinePreviewComponent_PreviewTimeline");
static_assert(sizeof(FabricTimelinePreviewComponent_PreviewTimeline) == 0x000010, "Wrong size on FabricTimelinePreviewComponent_PreviewTimeline");
static_assert(offsetof(FabricTimelinePreviewComponent_PreviewTimeline, Timeline) == 0x000000, "Member 'FabricTimelinePreviewComponent_PreviewTimeline::Timeline' has a wrong offset!");
static_assert(offsetof(FabricTimelinePreviewComponent_PreviewTimeline, SecondsToPlay) == 0x000008, "Member 'FabricTimelinePreviewComponent_PreviewTimeline::SecondsToPlay' has a wrong offset!");
static_assert(offsetof(FabricTimelinePreviewComponent_PreviewTimeline, bReverseAnimation) == 0x00000C, "Member 'FabricTimelinePreviewComponent_PreviewTimeline::bReverseAnimation' has a wrong offset!");

// Function FabricRuntime.FabricTimelinePreviewComponent.GetShouldPreview
// 0x0001 (0x0001 - 0x0000)
struct FabricTimelinePreviewComponent_GetShouldPreview final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTimelinePreviewComponent_GetShouldPreview) == 0x000001, "Wrong alignment on FabricTimelinePreviewComponent_GetShouldPreview");
static_assert(sizeof(FabricTimelinePreviewComponent_GetShouldPreview) == 0x000001, "Wrong size on FabricTimelinePreviewComponent_GetShouldPreview");
static_assert(offsetof(FabricTimelinePreviewComponent_GetShouldPreview, ReturnValue) == 0x000000, "Member 'FabricTimelinePreviewComponent_GetShouldPreview::ReturnValue' has a wrong offset!");

// Function FabricRuntime.FabricTimelineSyncComponent.OnTimelinePlayingChanged
// 0x0001 (0x0001 - 0x0000)
struct FabricTimelineSyncComponent_OnTimelinePlayingChanged final
{
public:
	EMusicClockState                              State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTimelineSyncComponent_OnTimelinePlayingChanged) == 0x000001, "Wrong alignment on FabricTimelineSyncComponent_OnTimelinePlayingChanged");
static_assert(sizeof(FabricTimelineSyncComponent_OnTimelinePlayingChanged) == 0x000001, "Wrong size on FabricTimelineSyncComponent_OnTimelinePlayingChanged");
static_assert(offsetof(FabricTimelineSyncComponent_OnTimelinePlayingChanged, State) == 0x000000, "Member 'FabricTimelineSyncComponent_OnTimelinePlayingChanged::State' has a wrong offset!");

// Function FabricRuntime.FabricTimelineSyncComponent.SetFabricMetaSoundManager
// 0x0008 (0x0008 - 0x0000)
struct FabricTimelineSyncComponent_SetFabricMetaSoundManager final
{
public:
	class UFabricMetaSoundManagerComponent*       InMetaSoundManager;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricTimelineSyncComponent_SetFabricMetaSoundManager) == 0x000008, "Wrong alignment on FabricTimelineSyncComponent_SetFabricMetaSoundManager");
static_assert(sizeof(FabricTimelineSyncComponent_SetFabricMetaSoundManager) == 0x000008, "Wrong size on FabricTimelineSyncComponent_SetFabricMetaSoundManager");
static_assert(offsetof(FabricTimelineSyncComponent_SetFabricMetaSoundManager, InMetaSoundManager) == 0x000000, "Member 'FabricTimelineSyncComponent_SetFabricMetaSoundManager::InMetaSoundManager' has a wrong offset!");

// Function FabricRuntime.FabricWaveformTexture.AddMultipleValuesToWaveformTexture
// 0x0010 (0x0010 - 0x0000)
struct FabricWaveformTexture_AddMultipleValuesToWaveformTexture final
{
public:
	TArray<float>                                 Values;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricWaveformTexture_AddMultipleValuesToWaveformTexture) == 0x000008, "Wrong alignment on FabricWaveformTexture_AddMultipleValuesToWaveformTexture");
static_assert(sizeof(FabricWaveformTexture_AddMultipleValuesToWaveformTexture) == 0x000010, "Wrong size on FabricWaveformTexture_AddMultipleValuesToWaveformTexture");
static_assert(offsetof(FabricWaveformTexture_AddMultipleValuesToWaveformTexture, Values) == 0x000000, "Member 'FabricWaveformTexture_AddMultipleValuesToWaveformTexture::Values' has a wrong offset!");

// Function FabricRuntime.FabricWaveformTexture.AddNewValueToWaveformTexture
// 0x0004 (0x0004 - 0x0000)
struct FabricWaveformTexture_AddNewValueToWaveformTexture final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricWaveformTexture_AddNewValueToWaveformTexture) == 0x000004, "Wrong alignment on FabricWaveformTexture_AddNewValueToWaveformTexture");
static_assert(sizeof(FabricWaveformTexture_AddNewValueToWaveformTexture) == 0x000004, "Wrong size on FabricWaveformTexture_AddNewValueToWaveformTexture");
static_assert(offsetof(FabricWaveformTexture_AddNewValueToWaveformTexture, Value) == 0x000000, "Member 'FabricWaveformTexture_AddNewValueToWaveformTexture::Value' has a wrong offset!");

// Function FabricRuntime.FabricWaveformTexture.GetWaveformTexture
// 0x0008 (0x0008 - 0x0000)
struct FabricWaveformTexture_GetWaveformTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FabricWaveformTexture_GetWaveformTexture) == 0x000008, "Wrong alignment on FabricWaveformTexture_GetWaveformTexture");
static_assert(sizeof(FabricWaveformTexture_GetWaveformTexture) == 0x000008, "Wrong size on FabricWaveformTexture_GetWaveformTexture");
static_assert(offsetof(FabricWaveformTexture_GetWaveformTexture, ReturnValue) == 0x000000, "Member 'FabricWaveformTexture_GetWaveformTexture::ReturnValue' has a wrong offset!");

}

