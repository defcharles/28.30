#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_RequiredCurrency_Preview

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_LinedNotebook_RequiredCurrency_Preview.WBP_LinedNotebook_RequiredCurrency_Preview_C.ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview
// 0x0210 (0x0210 - 0x0000)
struct WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_2;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortEventScreenData*             K2Node_Event_InEventScreenData;                    // 0x0060(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ResourceNeeded;                       // 0x006C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalResourceRequired;                // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRequiresPremiumTrackPurchase;        // 0x0074(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0108(0x0018)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0128(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0190(0x0018)()
	double                                        K2Node_Select_Default_2;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C8(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  K2Node_Select_Default_3;                           // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview");
static_assert(sizeof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview) == 0x000210, "Wrong size on WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, EntryPoint) == 0x000000, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_byte_Variable) == 0x000004, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_bool_Variable) == 0x000011, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_real_Variable) == 0x000014, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_real_Variable_1) == 0x000018, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000020, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Select_Default) == 0x000028, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_real_Variable_2) == 0x000040, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_real_Variable_3) == 0x000048, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_bool_Variable_2) == 0x000050, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_byte_Variable_1) == 0x000051, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_byte_Variable_2) == 0x000052, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_bool_Variable_3) == 0x000053, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_real_Variable_4) == 0x000054, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_real_Variable_5) == 0x000058, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Event_InEventScreenData) == 0x000060, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Event_InEventScreenData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_byte_Variable_3) == 0x000068, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Event_ResourceNeeded) == 0x00006C, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Event_ResourceNeeded' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Event_TotalResourceRequired) == 0x000070, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Event_TotalResourceRequired' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Event_bRequiresPremiumTrackPurchase) == 0x000074, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Event_bRequiresPremiumTrackPurchase' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, Temp_bool_Variable_4) == 0x000075, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Conv_IntToString_ReturnValue) == 0x0000F8, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000108, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Len_ReturnValue) == 0x000120, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_MakeStruct_FormatArgumentData_1) == 0x000128, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000178, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_MakeArray_Array_1) == 0x000180, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Format_ReturnValue) == 0x000190, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Select_Default_2) == 0x0001A8, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_MakeVector2D_ReturnValue) == 0x0001B0, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C0, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_CustomEvent_bNewInputType) == 0x0001C1, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_Format_ReturnValue_1) == 0x0001C8, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_PlayAnimationForward_ReturnValue) == 0x0001E0, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Event_IsDesignTime) == 0x0001E8, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_IsMobileGame_ReturnValue) == 0x0001E9, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Select_Default_3) == 0x0001EA, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_IsMobileGame_ReturnValue_1) == 0x0001EB, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, K2Node_Select_Default_4) == 0x0001EC, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001F0, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000200, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000208, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_ExecuteUbergraph_WBP_LinedNotebook_RequiredCurrency_Preview::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function WBP_LinedNotebook_RequiredCurrency_Preview.WBP_LinedNotebook_RequiredCurrency_Preview_C.InitializeEventScreenData
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData final
{
public:
	const class UFortEventScreenData*             EventScreenData;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData");
static_assert(sizeof(WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData) == 0x000008, "Wrong size on WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData, EventScreenData) == 0x000000, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_InitializeEventScreenData::EventScreenData' has a wrong offset!");

// Function WBP_LinedNotebook_RequiredCurrency_Preview.WBP_LinedNotebook_RequiredCurrency_Preview_C.InputChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged) == 0x000001, "Wrong alignment on WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged");
static_assert(sizeof(WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged) == 0x000001, "Wrong size on WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged, bNewInputType) == 0x000000, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_InputChanged::bNewInputType' has a wrong offset!");

// Function WBP_LinedNotebook_RequiredCurrency_Preview.WBP_LinedNotebook_RequiredCurrency_Preview_C.OnModuleInitialized
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized final
{
public:
	const class UFortEventScreenData*             InEventScreenData;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized");
static_assert(sizeof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized) == 0x000008, "Wrong size on WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized, InEventScreenData) == 0x000000, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_OnModuleInitialized::InEventScreenData' has a wrong offset!");

// Function WBP_LinedNotebook_RequiredCurrency_Preview.WBP_LinedNotebook_RequiredCurrency_Preview_C.OnPopulateRemaining
// 0x000C (0x000C - 0x0000)
struct WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining final
{
public:
	int32                                         ResourceNeeded;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalResourceRequired;                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequiresPremiumTrackPurchase;                     // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining) == 0x000004, "Wrong alignment on WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining");
static_assert(sizeof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining) == 0x00000C, "Wrong size on WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining, ResourceNeeded) == 0x000000, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining::ResourceNeeded' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining, TotalResourceRequired) == 0x000004, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining::TotalResourceRequired' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining, bRequiresPremiumTrackPurchase) == 0x000008, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_OnPopulateRemaining::bRequiresPremiumTrackPurchase' has a wrong offset!");

// Function WBP_LinedNotebook_RequiredCurrency_Preview.WBP_LinedNotebook_RequiredCurrency_Preview_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct");
static_assert(sizeof(WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct) == 0x000001, "Wrong size on WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct");
static_assert(offsetof(WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_LinedNotebook_RequiredCurrency_Preview_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

