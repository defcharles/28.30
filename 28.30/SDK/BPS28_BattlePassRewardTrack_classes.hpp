#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS28_BattlePassRewardTrack

#include "Basic.hpp"

#include "BattlePassBase_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPS28_BattlePassRewardTrack.BPS28_BattlePassRewardTrack_C
// 0x0088 (0x0528 - 0x04A0)
class UBPS28_BattlePassRewardTrack_C final : public UFortBattlePassRewardTrack
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPS28_BattlePassPrerequisiteHeader_C*  BP_BattlePassPrerequisiteHeader;                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassPrerequisiteHeader_C*  BP_BattlePassPrerequisiteHeader_31;                // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile;                                 // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_1;                               // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_2;                               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_3;                               // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_4;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_5;                               // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_6;                               // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_7;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS28_BattlePassTile_C*                BP_BattlePassTile_8;                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_ExtraRoom;                                  // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_ExtraRoom_Bottom;                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_NoHeader;                                   // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasHeader;                                         // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_BPS28_BattlePassRewardTrack(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS28_BattlePassRewardTrack_C">();
	}
	static class UBPS28_BattlePassRewardTrack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPS28_BattlePassRewardTrack_C>();
	}
};
static_assert(alignof(UBPS28_BattlePassRewardTrack_C) == 0x000008, "Wrong alignment on UBPS28_BattlePassRewardTrack_C");
static_assert(sizeof(UBPS28_BattlePassRewardTrack_C) == 0x000528, "Wrong size on UBPS28_BattlePassRewardTrack_C");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, UberGraphFrame) == 0x0004A0, "Member 'UBPS28_BattlePassRewardTrack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassPrerequisiteHeader) == 0x0004A8, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassPrerequisiteHeader' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassPrerequisiteHeader_31) == 0x0004B0, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassPrerequisiteHeader_31' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile) == 0x0004B8, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_1) == 0x0004C0, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_1' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_2) == 0x0004C8, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_2' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_3) == 0x0004D0, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_3' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_4) == 0x0004D8, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_4' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_5) == 0x0004E0, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_5' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_6) == 0x0004E8, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_6' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_7) == 0x0004F0, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_7' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, BP_BattlePassTile_8) == 0x0004F8, "Member 'UBPS28_BattlePassRewardTrack_C::BP_BattlePassTile_8' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, Spacer_ExtraRoom) == 0x000500, "Member 'UBPS28_BattlePassRewardTrack_C::Spacer_ExtraRoom' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, Spacer_ExtraRoom_Bottom) == 0x000508, "Member 'UBPS28_BattlePassRewardTrack_C::Spacer_ExtraRoom_Bottom' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, Spacer_NoHeader) == 0x000510, "Member 'UBPS28_BattlePassRewardTrack_C::Spacer_NoHeader' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, VerticalBox_0) == 0x000518, "Member 'UBPS28_BattlePassRewardTrack_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UBPS28_BattlePassRewardTrack_C, HasHeader) == 0x000520, "Member 'UBPS28_BattlePassRewardTrack_C::HasHeader' has a wrong offset!");

}

