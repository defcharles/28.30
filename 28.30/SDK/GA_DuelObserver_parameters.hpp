#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DuelObserver

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GA_DuelObserver.GA_DuelObserver_C.ExecuteUbergraph_GA_DuelObserver
// 0x01B0 (0x01B0 - 0x0000)
struct GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDuelState                                    K2Node_Event_NewDuelState;                         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDuelOverlayData                       K2Node_Event_ChangedDuelOverlayData;               // 0x00E0(0x0078)(ConstParm)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0158(0x0048)(ContainsInstancedReference)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver) == 0x000008, "Wrong alignment on GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver");
static_assert(sizeof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver) == 0x0001B0, "Wrong size on GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, EntryPoint) == 0x000000, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_Event_EventData) == 0x000008, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, CallFunc_IsServer_ReturnValue) == 0x0000B8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000C0, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x0000D0, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_Event_NewDuelState) == 0x0000D9, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_Event_NewDuelState' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_Event_ChangedDuelOverlayData) == 0x0000E0, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_Event_ChangedDuelOverlayData' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, CallFunc_GetActorInfo_ReturnValue) == 0x000158, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x0001A0, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, CallFunc_IsValid_ReturnValue) == 0x0001A9, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_DuelObserver.GA_DuelObserver_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_DuelObserver_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_DuelObserver_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_DuelObserver_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_DuelObserver_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_DuelObserver_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_DuelObserver_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_DuelObserver_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_DuelObserver.GA_DuelObserver_C.OnDuelChange
// 0x0080 (0x0080 - 0x0000)
struct GA_DuelObserver_C_OnDuelChange final
{
public:
	EDuelState                                    NewDuelState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDuelOverlayData                       ChangedDuelOverlayData;                            // 0x0008(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_DuelObserver_C_OnDuelChange) == 0x000008, "Wrong alignment on GA_DuelObserver_C_OnDuelChange");
static_assert(sizeof(GA_DuelObserver_C_OnDuelChange) == 0x000080, "Wrong size on GA_DuelObserver_C_OnDuelChange");
static_assert(offsetof(GA_DuelObserver_C_OnDuelChange, NewDuelState) == 0x000000, "Member 'GA_DuelObserver_C_OnDuelChange::NewDuelState' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_OnDuelChange, ChangedDuelOverlayData) == 0x000008, "Member 'GA_DuelObserver_C_OnDuelChange::ChangedDuelOverlayData' has a wrong offset!");

}

