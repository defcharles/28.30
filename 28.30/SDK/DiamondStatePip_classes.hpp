#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DiamondStatePip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DiamondStatePip.DiamondStatePip_C
// 0x0028 (0x0310 - 0x02E8)
class UDiamondStatePip_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Selection;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 PIP;                                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Pip_Outline;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Is_Hovered;                                        // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Selected;                                       // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_DiamondStatePip(int32 EntryPoint);
	void ResetState();
	void SetHoverState(bool IsHovered_0);
	void SetSelectedState(bool IsSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DiamondStatePip_C">();
	}
	static class UDiamondStatePip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDiamondStatePip_C>();
	}
};
static_assert(alignof(UDiamondStatePip_C) == 0x000008, "Wrong alignment on UDiamondStatePip_C");
static_assert(sizeof(UDiamondStatePip_C) == 0x000310, "Wrong size on UDiamondStatePip_C");
static_assert(offsetof(UDiamondStatePip_C, UberGraphFrame) == 0x0002E8, "Member 'UDiamondStatePip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDiamondStatePip_C, Selection) == 0x0002F0, "Member 'UDiamondStatePip_C::Selection' has a wrong offset!");
static_assert(offsetof(UDiamondStatePip_C, PIP) == 0x0002F8, "Member 'UDiamondStatePip_C::PIP' has a wrong offset!");
static_assert(offsetof(UDiamondStatePip_C, Pip_Outline) == 0x000300, "Member 'UDiamondStatePip_C::Pip_Outline' has a wrong offset!");
static_assert(offsetof(UDiamondStatePip_C, Is_Hovered) == 0x000308, "Member 'UDiamondStatePip_C::Is_Hovered' has a wrong offset!");
static_assert(offsetof(UDiamondStatePip_C, Is_Selected) == 0x000309, "Member 'UDiamondStatePip_C::Is_Selected' has a wrong offset!");

}

