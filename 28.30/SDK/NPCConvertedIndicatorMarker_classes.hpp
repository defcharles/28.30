#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCConvertedIndicatorMarker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteAI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NPCConvertedIndicatorMarker.NPCConvertedIndicatorMarker_C
// 0x0028 (0x0688 - 0x0660)
class UNPCConvertedIndicatorMarker_C final : public UAthenaMarkedActorIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IrwinIndicator;                                    // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UConvertedMarkerInfo_C*                 RidingMarkerInfo;                                  // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           CachedColor;                                       // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_NPCConvertedIndicatorMarker(int32 EntryPoint);
	void OnPingCommandEvent(EPingCommandType CommandType);
	void OnSetMarkerData(const struct FFortWorldMarkerData& FortWorldMarkerData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPCConvertedIndicatorMarker_C">();
	}
	static class UNPCConvertedIndicatorMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCConvertedIndicatorMarker_C>();
	}
};
static_assert(alignof(UNPCConvertedIndicatorMarker_C) == 0x000008, "Wrong alignment on UNPCConvertedIndicatorMarker_C");
static_assert(sizeof(UNPCConvertedIndicatorMarker_C) == 0x000688, "Wrong size on UNPCConvertedIndicatorMarker_C");
static_assert(offsetof(UNPCConvertedIndicatorMarker_C, UberGraphFrame) == 0x000660, "Member 'UNPCConvertedIndicatorMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNPCConvertedIndicatorMarker_C, IrwinIndicator) == 0x000668, "Member 'UNPCConvertedIndicatorMarker_C::IrwinIndicator' has a wrong offset!");
static_assert(offsetof(UNPCConvertedIndicatorMarker_C, RidingMarkerInfo) == 0x000670, "Member 'UNPCConvertedIndicatorMarker_C::RidingMarkerInfo' has a wrong offset!");
static_assert(offsetof(UNPCConvertedIndicatorMarker_C, CachedColor) == 0x000678, "Member 'UNPCConvertedIndicatorMarker_C::CachedColor' has a wrong offset!");

}

