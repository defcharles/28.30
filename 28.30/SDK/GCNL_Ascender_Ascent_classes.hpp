#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Ascender_Ascent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Ascender_Ascent.GCNL_Ascender_Ascent_C
// 0x0060 (0x0A10 - 0x09B0)
class AGCNL_Ascender_Ascent_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MinCamShakeAmp;                                    // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxCamShakeAmp;                                    // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinCamShakeFreq;                                   // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxCamShakeFreq;                                   // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULegacyCameraShake*                     matineeCamShake;                                   // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MaxAscenderSpeed;                                  // 0x09E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CameraShakeTimer();
	void ExecuteUbergraph_GCNL_Ascender_Ascent(int32 EntryPoint);
	void OnApplicationGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class ULegacyCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStartGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class ULegacyCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Ascender_Ascent_C">();
	}
	static class AGCNL_Ascender_Ascent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Ascender_Ascent_C>();
	}
};
static_assert(alignof(AGCNL_Ascender_Ascent_C) == 0x000008, "Wrong alignment on AGCNL_Ascender_Ascent_C");
static_assert(sizeof(AGCNL_Ascender_Ascent_C) == 0x000A10, "Wrong size on AGCNL_Ascender_Ascent_C");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, UberGraphFrame) == 0x0009B0, "Member 'AGCNL_Ascender_Ascent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, PlayerPawn) == 0x0009B8, "Member 'AGCNL_Ascender_Ascent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, MinCamShakeAmp) == 0x0009C0, "Member 'AGCNL_Ascender_Ascent_C::MinCamShakeAmp' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, MaxCamShakeAmp) == 0x0009C8, "Member 'AGCNL_Ascender_Ascent_C::MaxCamShakeAmp' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, MinCamShakeFreq) == 0x0009D0, "Member 'AGCNL_Ascender_Ascent_C::MinCamShakeFreq' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, MaxCamShakeFreq) == 0x0009D8, "Member 'AGCNL_Ascender_Ascent_C::MaxCamShakeFreq' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, matineeCamShake) == 0x0009E0, "Member 'AGCNL_Ascender_Ascent_C::matineeCamShake' has a wrong offset!");
static_assert(offsetof(AGCNL_Ascender_Ascent_C, MaxAscenderSpeed) == 0x0009E8, "Member 'AGCNL_Ascender_Ascent_C::MaxAscenderSpeed' has a wrong offset!");

}

