#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimCoreUI

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "PilgrimCoreRuntime_classes.hpp"
#include "ModelViewViewModel_classes.hpp"


namespace SDK
{

// Class PilgrimCoreUI.FortSettingRegistryExtension_Pilgrim
// 0x0078 (0x00A0 - 0x0028)
class UFortSettingRegistryExtension_Pilgrim final : public UFortGameSettingRegistryExtension
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimPresetSelector*                 PilgrimPresetSelectorInstance;                     // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x50];                                      // 0x0050(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSettingRegistryExtension_Pilgrim">();
	}
	static class UFortSettingRegistryExtension_Pilgrim* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSettingRegistryExtension_Pilgrim>();
	}
};
static_assert(alignof(UFortSettingRegistryExtension_Pilgrim) == 0x000008, "Wrong alignment on UFortSettingRegistryExtension_Pilgrim");
static_assert(sizeof(UFortSettingRegistryExtension_Pilgrim) == 0x0000A0, "Wrong size on UFortSettingRegistryExtension_Pilgrim");
static_assert(offsetof(UFortSettingRegistryExtension_Pilgrim, PilgrimPresetSelectorInstance) == 0x000048, "Member 'UFortSettingRegistryExtension_Pilgrim::PilgrimPresetSelectorInstance' has a wrong offset!");

// Class PilgrimCoreUI.PilgrimPlayerInfoWidgetBase
// 0x0000 (0x02C0 - 0x02C0)
class UPilgrimPlayerInfoWidgetBase final : public UUserWidget
{
public:
	void HookUpVoiceIcon(class UFortVoiceChatStatusIcon* Icon, class AFortPlayerStateAthena* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPlayerInfoWidgetBase">();
	}
	static class UPilgrimPlayerInfoWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPlayerInfoWidgetBase>();
	}
};
static_assert(alignof(UPilgrimPlayerInfoWidgetBase) == 0x000008, "Wrong alignment on UPilgrimPlayerInfoWidgetBase");
static_assert(sizeof(UPilgrimPlayerInfoWidgetBase) == 0x0002C0, "Wrong size on UPilgrimPlayerInfoWidgetBase");

// Class PilgrimCoreUI.PilgrimPostGameProgressWidget
// 0x0000 (0x02E8 - 0x02E8)
class UPilgrimPostGameProgressWidget final : public UFortSeasonDataWidget
{
public:
	int32 GetMatchXP() const;
	int32 GetTotalXP() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPostGameProgressWidget">();
	}
	static class UPilgrimPostGameProgressWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPostGameProgressWidget>();
	}
};
static_assert(alignof(UPilgrimPostGameProgressWidget) == 0x000008, "Wrong alignment on UPilgrimPostGameProgressWidget");
static_assert(sizeof(UPilgrimPostGameProgressWidget) == 0x0002E8, "Wrong size on UPilgrimPostGameProgressWidget");

// Class PilgrimCoreUI.PilgrimPresetSelector
// 0x0028 (0x0050 - 0x0028)
class UPilgrimPresetSelector final : public UPilgrimPresetSelectorBase
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumLanes;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHardwareDevicePrimaryType                    DeviceType;                                        // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0xB];                                       // 0x003D(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimPresetConfiguration*            PilgrimPresetConfiguration;                        // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnPresetSelected(int32 SelectedNumLanes, int32 SelectedPresetIndex);
	void OnPresetSelectionCancelled();
	void OnPresetSelectionRequested(class APlayerController* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPresetSelector">();
	}
	static class UPilgrimPresetSelector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPresetSelector>();
	}
};
static_assert(alignof(UPilgrimPresetSelector) == 0x000008, "Wrong alignment on UPilgrimPresetSelector");
static_assert(sizeof(UPilgrimPresetSelector) == 0x000050, "Wrong size on UPilgrimPresetSelector");
static_assert(offsetof(UPilgrimPresetSelector, NumLanes) == 0x000038, "Member 'UPilgrimPresetSelector::NumLanes' has a wrong offset!");
static_assert(offsetof(UPilgrimPresetSelector, DeviceType) == 0x00003C, "Member 'UPilgrimPresetSelector::DeviceType' has a wrong offset!");
static_assert(offsetof(UPilgrimPresetSelector, PilgrimPresetConfiguration) == 0x000048, "Member 'UPilgrimPresetSelector::PilgrimPresetConfiguration' has a wrong offset!");

// Class PilgrimCoreUI.PilgrimPresetSwitcher
// 0x0028 (0x0310 - 0x02E8)
class UPilgrimPresetSwitcher final : public UCommonUserWidget
{
public:
	int32                                         NumLanes;                                          // 0x02E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSettingsRotator*                   Rotator_Preset;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_Decrease_Preset;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_Increase_Preset;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetSelectedItems(int32* OutSelectedLaneNum, int32* OutSelectedIndex);
	void InitializeForLanes(int32 NewNumLanes, const TArray<class UFortInputMappingContext*>& InputMappingContexts);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPresetSwitcher">();
	}
	static class UPilgrimPresetSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPresetSwitcher>();
	}
};
static_assert(alignof(UPilgrimPresetSwitcher) == 0x000008, "Wrong alignment on UPilgrimPresetSwitcher");
static_assert(sizeof(UPilgrimPresetSwitcher) == 0x000310, "Wrong size on UPilgrimPresetSwitcher");
static_assert(offsetof(UPilgrimPresetSwitcher, NumLanes) == 0x0002E8, "Member 'UPilgrimPresetSwitcher::NumLanes' has a wrong offset!");
static_assert(offsetof(UPilgrimPresetSwitcher, Rotator_Preset) == 0x0002F0, "Member 'UPilgrimPresetSwitcher::Rotator_Preset' has a wrong offset!");
static_assert(offsetof(UPilgrimPresetSwitcher, Button_Decrease_Preset) == 0x0002F8, "Member 'UPilgrimPresetSwitcher::Button_Decrease_Preset' has a wrong offset!");
static_assert(offsetof(UPilgrimPresetSwitcher, Button_Increase_Preset) == 0x000300, "Member 'UPilgrimPresetSwitcher::Button_Increase_Preset' has a wrong offset!");

// Class PilgrimCoreUI.PilgrimSongSortVM
// 0x0048 (0x00D0 - 0x0088)
class UPilgrimSongSortVM : public UFortSortItemVM
{
public:
	uint8                                         Pad_88[0x48];                                      // 0x0088(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongSortVM">();
	}
	static class UPilgrimSongSortVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongSortVM>();
	}
};
static_assert(alignof(UPilgrimSongSortVM) == 0x000008, "Wrong alignment on UPilgrimSongSortVM");
static_assert(sizeof(UPilgrimSongSortVM) == 0x0000D0, "Wrong size on UPilgrimSongSortVM");

// Class PilgrimCoreUI.PilgrimSongAlphaSortVM
// 0x0010 (0x00E0 - 0x00D0)
class UPilgrimSongAlphaSortVM final : public UPilgrimSongSortVM
{
public:
	uint8                                         Pad_D0[0x10];                                      // 0x00D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongAlphaSortVM">();
	}
	static class UPilgrimSongAlphaSortVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongAlphaSortVM>();
	}
};
static_assert(alignof(UPilgrimSongAlphaSortVM) == 0x000008, "Wrong alignment on UPilgrimSongAlphaSortVM");
static_assert(sizeof(UPilgrimSongAlphaSortVM) == 0x0000E0, "Wrong size on UPilgrimSongAlphaSortVM");

// Class PilgrimCoreUI.PilgrimSongFilterItemVM
// 0x0048 (0x00D0 - 0x0088)
class UPilgrimSongFilterItemVM : public UFortFilterItemVM
{
public:
	uint8                                         Pad_88[0x48];                                      // 0x0088(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongFilterItemVM">();
	}
	static class UPilgrimSongFilterItemVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongFilterItemVM>();
	}
};
static_assert(alignof(UPilgrimSongFilterItemVM) == 0x000008, "Wrong alignment on UPilgrimSongFilterItemVM");
static_assert(sizeof(UPilgrimSongFilterItemVM) == 0x0000D0, "Wrong size on UPilgrimSongFilterItemVM");

// Class PilgrimCoreUI.PilgrimSongFilterOwnedVM
// 0x0000 (0x00D0 - 0x00D0)
class UPilgrimSongFilterOwnedVM final : public UPilgrimSongFilterItemVM
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongFilterOwnedVM">();
	}
	static class UPilgrimSongFilterOwnedVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongFilterOwnedVM>();
	}
};
static_assert(alignof(UPilgrimSongFilterOwnedVM) == 0x000008, "Wrong alignment on UPilgrimSongFilterOwnedVM");
static_assert(sizeof(UPilgrimSongFilterOwnedVM) == 0x0000D0, "Wrong size on UPilgrimSongFilterOwnedVM");

// Class PilgrimCoreUI.PilgrimSongFilterAvailableVM
// 0x0000 (0x00D0 - 0x00D0)
class UPilgrimSongFilterAvailableVM final : public UPilgrimSongFilterItemVM
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongFilterAvailableVM">();
	}
	static class UPilgrimSongFilterAvailableVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongFilterAvailableVM>();
	}
};
static_assert(alignof(UPilgrimSongFilterAvailableVM) == 0x000008, "Wrong alignment on UPilgrimSongFilterAvailableVM");
static_assert(sizeof(UPilgrimSongFilterAvailableVM) == 0x0000D0, "Wrong size on UPilgrimSongFilterAvailableVM");

// Class PilgrimCoreUI.PilgrimSongSearchTextVM
// 0x0040 (0x00C0 - 0x0080)
class UPilgrimSongSearchTextVM final : public UFortSortFilterSearchTextVM
{
public:
	uint8                                         Pad_80[0x40];                                      // 0x0080(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongSearchTextVM">();
	}
	static class UPilgrimSongSearchTextVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongSearchTextVM>();
	}
};
static_assert(alignof(UPilgrimSongSearchTextVM) == 0x000008, "Wrong alignment on UPilgrimSongSearchTextVM");
static_assert(sizeof(UPilgrimSongSearchTextVM) == 0x0000C0, "Wrong size on UPilgrimSongSearchTextVM");

// Class PilgrimCoreUI.PilgrimSongFilterVM
// 0x0020 (0x0088 - 0x0068)
class UPilgrimSongFilterVM final : public UMVVMViewModelBase
{
public:
	class UFortSortFilterVM*                      SortFilter;                                        // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPilgrimSongMetadata*>           FilteredItems;                                     // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class APlayerController*                      OwningController;                                  // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Initialize(class APlayerController* InOwningController);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongFilterVM">();
	}
	static class UPilgrimSongFilterVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongFilterVM>();
	}
};
static_assert(alignof(UPilgrimSongFilterVM) == 0x000008, "Wrong alignment on UPilgrimSongFilterVM");
static_assert(sizeof(UPilgrimSongFilterVM) == 0x000088, "Wrong size on UPilgrimSongFilterVM");
static_assert(offsetof(UPilgrimSongFilterVM, SortFilter) == 0x000068, "Member 'UPilgrimSongFilterVM::SortFilter' has a wrong offset!");
static_assert(offsetof(UPilgrimSongFilterVM, FilteredItems) == 0x000070, "Member 'UPilgrimSongFilterVM::FilteredItems' has a wrong offset!");
static_assert(offsetof(UPilgrimSongFilterVM, OwningController) == 0x000080, "Member 'UPilgrimSongFilterVM::OwningController' has a wrong offset!");

// Class PilgrimCoreUI.PilgrimCoreUIGlobals
// 0x0000 (0x0028 - 0x0028)
class UPilgrimCoreUIGlobals final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimCoreUIGlobals">();
	}
	static class UPilgrimCoreUIGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimCoreUIGlobals>();
	}
};
static_assert(alignof(UPilgrimCoreUIGlobals) == 0x000008, "Wrong alignment on UPilgrimCoreUIGlobals");
static_assert(sizeof(UPilgrimCoreUIGlobals) == 0x000028, "Wrong size on UPilgrimCoreUIGlobals");

}

