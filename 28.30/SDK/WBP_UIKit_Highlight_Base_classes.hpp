#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Highlight_Base

#include "Basic.hpp"

#include "E_UI_HighlightSize_structs.hpp"
#include "Engine_structs.hpp"
#include "S_UI_HighlightColors_structs.hpp"
#include "E_UI_HighlightType_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UIKit_Highlight_Base.WBP_UIKit_Highlight_Base_C
// 0x0190 (0x0450 - 0x02C0)
class UWBP_UIKit_Highlight_Base_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Highlight;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         HighlightFont_Default;                             // 0x02E0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FMargin                                HighlightPadding;                                  // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FS_UI_HighlightColors                  HighlightColors;                                   // 0x0348(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_HighlightType                            HighlightType;                                     // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HighlightText;                                     // 0x03D0(0x0018)(Edit, BlueprintVisible)
	double                                        MaxWidth;                                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_HighlightSize                            HighlightSize;                                     // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         HighlightFont_Small;                               // 0x03F8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BP_OnWidgetStyled();
	void ExecuteUbergraph_WBP_UIKit_Highlight_Base(int32 EntryPoint);
	void InitializeHighlight();
	void PreConstruct(bool IsDesignTime);
	void SetBackgroundColor(const struct FLinearColor& Color);
	void SetFontSize(E_UI_HighlightSize FontSize);
	void SetText(const class FText& Text);
	void SetTextColor(const struct FLinearColor& Color);
	void SetTextPadding(const struct FMargin& Padding_0);
	void SetType(E_UI_HighlightType Type);
	void SetWidth(double MaxWidth_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UIKit_Highlight_Base_C">();
	}
	static class UWBP_UIKit_Highlight_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UIKit_Highlight_Base_C>();
	}
};
static_assert(alignof(UWBP_UIKit_Highlight_Base_C) == 0x000008, "Wrong alignment on UWBP_UIKit_Highlight_Base_C");
static_assert(sizeof(UWBP_UIKit_Highlight_Base_C) == 0x000450, "Wrong size on UWBP_UIKit_Highlight_Base_C");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_UIKit_Highlight_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, Background) == 0x0002C8, "Member 'UWBP_UIKit_Highlight_Base_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, SizeBox) == 0x0002D0, "Member 'UWBP_UIKit_Highlight_Base_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, Text_Highlight) == 0x0002D8, "Member 'UWBP_UIKit_Highlight_Base_C::Text_Highlight' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightFont_Default) == 0x0002E0, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightFont_Default' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightPadding) == 0x000338, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightPadding' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightColors) == 0x000348, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightColors' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightType) == 0x0003C8, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightType' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightText) == 0x0003D0, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightText' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, MaxWidth) == 0x0003E8, "Member 'UWBP_UIKit_Highlight_Base_C::MaxWidth' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightSize) == 0x0003F0, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightSize' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_Highlight_Base_C, HighlightFont_Small) == 0x0003F8, "Member 'UWBP_UIKit_Highlight_Base_C::HighlightFont_Small' has a wrong offset!");

}

