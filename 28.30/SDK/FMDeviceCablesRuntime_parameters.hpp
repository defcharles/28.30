#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMDeviceCablesRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FMDeviceCablesRuntime_structs.hpp"
#include "FabricRuntime_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorBase.AddMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorBase_AddMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               InMaterialInstance;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorBase_AddMaterialInstance) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorBase_AddMaterialInstance");
static_assert(sizeof(FMDeviceCableAnimatorBase_AddMaterialInstance) == 0x000008, "Wrong size on FMDeviceCableAnimatorBase_AddMaterialInstance");
static_assert(offsetof(FMDeviceCableAnimatorBase_AddMaterialInstance, InMaterialInstance) == 0x000000, "Member 'FMDeviceCableAnimatorBase_AddMaterialInstance::InMaterialInstance' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorBase.OnConnectionEnded
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorBase_OnConnectionEnded final
{
public:
	class UFMDeviceCableConnectionBase*           EndedConnection;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorBase_OnConnectionEnded) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorBase_OnConnectionEnded");
static_assert(sizeof(FMDeviceCableAnimatorBase_OnConnectionEnded) == 0x000008, "Wrong size on FMDeviceCableAnimatorBase_OnConnectionEnded");
static_assert(offsetof(FMDeviceCableAnimatorBase_OnConnectionEnded, EndedConnection) == 0x000000, "Member 'FMDeviceCableAnimatorBase_OnConnectionEnded::EndedConnection' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorBase.OnConnectionStarted
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorBase_OnConnectionStarted final
{
public:
	class UFMDeviceCableConnectionBase*           NewConnection;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorBase_OnConnectionStarted) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorBase_OnConnectionStarted");
static_assert(sizeof(FMDeviceCableAnimatorBase_OnConnectionStarted) == 0x000008, "Wrong size on FMDeviceCableAnimatorBase_OnConnectionStarted");
static_assert(offsetof(FMDeviceCableAnimatorBase_OnConnectionStarted, NewConnection) == 0x000000, "Member 'FMDeviceCableAnimatorBase_OnConnectionStarted::NewConnection' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorBase.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct FMDeviceCableAnimatorBase_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorBase_ReceiveTick) == 0x000004, "Wrong alignment on FMDeviceCableAnimatorBase_ReceiveTick");
static_assert(sizeof(FMDeviceCableAnimatorBase_ReceiveTick) == 0x000004, "Wrong size on FMDeviceCableAnimatorBase_ReceiveTick");
static_assert(offsetof(FMDeviceCableAnimatorBase_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'FMDeviceCableAnimatorBase_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorBase.RemoveMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorBase_RemoveMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               InMaterialInstance;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorBase_RemoveMaterialInstance) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorBase_RemoveMaterialInstance");
static_assert(sizeof(FMDeviceCableAnimatorBase_RemoveMaterialInstance) == 0x000008, "Wrong size on FMDeviceCableAnimatorBase_RemoveMaterialInstance");
static_assert(offsetof(FMDeviceCableAnimatorBase_RemoveMaterialInstance, InMaterialInstance) == 0x000000, "Member 'FMDeviceCableAnimatorBase_RemoveMaterialInstance::InMaterialInstance' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorBase.SetOwnerPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorBase_SetOwnerPort final
{
public:
	class UFMDeviceCablePortComponent*            OwnerPort_0;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorBase_SetOwnerPort) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorBase_SetOwnerPort");
static_assert(sizeof(FMDeviceCableAnimatorBase_SetOwnerPort) == 0x000008, "Wrong size on FMDeviceCableAnimatorBase_SetOwnerPort");
static_assert(offsetof(FMDeviceCableAnimatorBase_SetOwnerPort, OwnerPort_0) == 0x000000, "Member 'FMDeviceCableAnimatorBase_SetOwnerPort::OwnerPort_0' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorAudioAnalyzer.OnMetaSoundOutputFloatChangedBatch
// 0x0040 (0x0040 - 0x0000)
struct FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch final
{
public:
	class FName                                   OutputName;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Output;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundPatchWrapperPeakTamer  PeakTamer;                                         // 0x0018(0x0024)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DeltaSeconds;                                      // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch");
static_assert(sizeof(FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch) == 0x000040, "Wrong size on FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch");
static_assert(offsetof(FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch, OutputName) == 0x000000, "Member 'FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch::OutputName' has a wrong offset!");
static_assert(offsetof(FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch, Output) == 0x000008, "Member 'FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch::Output' has a wrong offset!");
static_assert(offsetof(FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch, PeakTamer) == 0x000018, "Member 'FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch::PeakTamer' has a wrong offset!");
static_assert(offsetof(FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch, DeltaSeconds) == 0x00003C, "Member 'FMDeviceCableAnimatorAudioAnalyzer_OnMetaSoundOutputFloatChangedBatch::DeltaSeconds' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorAudioAnalyzer.SetAnalyzerName
// 0x0004 (0x0004 - 0x0000)
struct FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName final
{
public:
	class FName                                   AnalyzerName;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName) == 0x000004, "Wrong alignment on FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName");
static_assert(sizeof(FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName) == 0x000004, "Wrong size on FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName");
static_assert(offsetof(FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName, AnalyzerName) == 0x000000, "Member 'FMDeviceCableAnimatorAudioAnalyzer_SetAnalyzerName::AnalyzerName' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorAudioAnalyzer.GetLastAnalyzerValue
// 0x0004 (0x0004 - 0x0000)
struct FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue) == 0x000004, "Wrong alignment on FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue");
static_assert(sizeof(FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue) == 0x000004, "Wrong size on FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue");
static_assert(offsetof(FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue, ReturnValue) == 0x000000, "Member 'FMDeviceCableAnimatorAudioAnalyzer_GetLastAnalyzerValue::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.BuildMeshOnSpline
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_BuildMeshOnSpline final
{
public:
	bool                                          bCollisionEnabled;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_BuildMeshOnSpline) == 0x000001, "Wrong alignment on FMDeviceCable_BuildMeshOnSpline");
static_assert(sizeof(FMDeviceCable_BuildMeshOnSpline) == 0x000001, "Wrong size on FMDeviceCable_BuildMeshOnSpline");
static_assert(offsetof(FMDeviceCable_BuildMeshOnSpline, bCollisionEnabled) == 0x000000, "Member 'FMDeviceCable_BuildMeshOnSpline::bCollisionEnabled' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.ConnectConstantPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_ConnectConstantPort final
{
public:
	class UFMDeviceCablePortComponent*            Port;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_ConnectConstantPort) == 0x000008, "Wrong alignment on FMDeviceCable_ConnectConstantPort");
static_assert(sizeof(FMDeviceCable_ConnectConstantPort) == 0x000008, "Wrong size on FMDeviceCable_ConnectConstantPort");
static_assert(offsetof(FMDeviceCable_ConnectConstantPort, Port) == 0x000000, "Member 'FMDeviceCable_ConnectConstantPort::Port' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.ConnectPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_ConnectPort final
{
public:
	class UFMDeviceCablePortComponent*            Port;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_ConnectPort) == 0x000008, "Wrong alignment on FMDeviceCable_ConnectPort");
static_assert(sizeof(FMDeviceCable_ConnectPort) == 0x000008, "Wrong size on FMDeviceCable_ConnectPort");
static_assert(offsetof(FMDeviceCable_ConnectPort, Port) == 0x000000, "Member 'FMDeviceCable_ConnectPort::Port' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.OnCableConnected
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_OnCableConnected final
{
public:
	bool                                          bThroughReplication;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_OnCableConnected) == 0x000001, "Wrong alignment on FMDeviceCable_OnCableConnected");
static_assert(sizeof(FMDeviceCable_OnCableConnected) == 0x000001, "Wrong size on FMDeviceCable_OnCableConnected");
static_assert(offsetof(FMDeviceCable_OnCableConnected, bThroughReplication) == 0x000000, "Member 'FMDeviceCable_OnCableConnected::bThroughReplication' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.OnCableDisconnected
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_OnCableDisconnected final
{
public:
	bool                                          bThroughReplication;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_OnCableDisconnected) == 0x000001, "Wrong alignment on FMDeviceCable_OnCableDisconnected");
static_assert(sizeof(FMDeviceCable_OnCableDisconnected) == 0x000001, "Wrong size on FMDeviceCable_OnCableDisconnected");
static_assert(offsetof(FMDeviceCable_OnCableDisconnected, bThroughReplication) == 0x000000, "Member 'FMDeviceCable_OnCableDisconnected::bThroughReplication' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.OnCableGrabbed
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_OnCableGrabbed final
{
public:
	bool                                          bThroughReplication;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_OnCableGrabbed) == 0x000001, "Wrong alignment on FMDeviceCable_OnCableGrabbed");
static_assert(sizeof(FMDeviceCable_OnCableGrabbed) == 0x000001, "Wrong size on FMDeviceCable_OnCableGrabbed");
static_assert(offsetof(FMDeviceCable_OnCableGrabbed, bThroughReplication) == 0x000000, "Member 'FMDeviceCable_OnCableGrabbed::bThroughReplication' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.OnScalesUpdated
// 0x0030 (0x0030 - 0x0000)
struct FMDeviceCable_OnScalesUpdated final
{
public:
	struct FVector                                StartScale;                                        // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndScale;                                          // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_OnScalesUpdated) == 0x000008, "Wrong alignment on FMDeviceCable_OnScalesUpdated");
static_assert(sizeof(FMDeviceCable_OnScalesUpdated) == 0x000030, "Wrong size on FMDeviceCable_OnScalesUpdated");
static_assert(offsetof(FMDeviceCable_OnScalesUpdated, StartScale) == 0x000000, "Member 'FMDeviceCable_OnScalesUpdated::StartScale' has a wrong offset!");
static_assert(offsetof(FMDeviceCable_OnScalesUpdated, EndScale) == 0x000018, "Member 'FMDeviceCable_OnScalesUpdated::EndScale' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.OnSplineUpdated
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_OnSplineUpdated final
{
public:
	bool                                          bCollisionEnabled;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_OnSplineUpdated) == 0x000001, "Wrong alignment on FMDeviceCable_OnSplineUpdated");
static_assert(sizeof(FMDeviceCable_OnSplineUpdated) == 0x000001, "Wrong size on FMDeviceCable_OnSplineUpdated");
static_assert(offsetof(FMDeviceCable_OnSplineUpdated, bCollisionEnabled) == 0x000000, "Member 'FMDeviceCable_OnSplineUpdated::bCollisionEnabled' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.SetFocusedVisuals
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_SetFocusedVisuals final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_SetFocusedVisuals) == 0x000001, "Wrong alignment on FMDeviceCable_SetFocusedVisuals");
static_assert(sizeof(FMDeviceCable_SetFocusedVisuals) == 0x000001, "Wrong size on FMDeviceCable_SetFocusedVisuals");
static_assert(offsetof(FMDeviceCable_SetFocusedVisuals, bIsFocused) == 0x000000, "Member 'FMDeviceCable_SetFocusedVisuals::bIsFocused' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.GetCableDataType
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCable_GetCableDataType final
{
public:
	EDeviceCablePortDataType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_GetCableDataType) == 0x000001, "Wrong alignment on FMDeviceCable_GetCableDataType");
static_assert(sizeof(FMDeviceCable_GetCableDataType) == 0x000001, "Wrong size on FMDeviceCable_GetCableDataType");
static_assert(offsetof(FMDeviceCable_GetCableDataType, ReturnValue) == 0x000000, "Member 'FMDeviceCable_GetCableDataType::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.GetCableSpline
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_GetCableSpline final
{
public:
	class USplineComponent*                       ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_GetCableSpline) == 0x000008, "Wrong alignment on FMDeviceCable_GetCableSpline");
static_assert(sizeof(FMDeviceCable_GetCableSpline) == 0x000008, "Wrong size on FMDeviceCable_GetCableSpline");
static_assert(offsetof(FMDeviceCable_GetCableSpline, ReturnValue) == 0x000000, "Member 'FMDeviceCable_GetCableSpline::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.GetConstantPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_GetConstantPort final
{
public:
	class UFMDeviceCablePortComponent*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_GetConstantPort) == 0x000008, "Wrong alignment on FMDeviceCable_GetConstantPort");
static_assert(sizeof(FMDeviceCable_GetConstantPort) == 0x000008, "Wrong size on FMDeviceCable_GetConstantPort");
static_assert(offsetof(FMDeviceCable_GetConstantPort, ReturnValue) == 0x000000, "Member 'FMDeviceCable_GetConstantPort::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.GetDeviceCableHead
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_GetDeviceCableHead final
{
public:
	class UStaticMeshComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_GetDeviceCableHead) == 0x000008, "Wrong alignment on FMDeviceCable_GetDeviceCableHead");
static_assert(sizeof(FMDeviceCable_GetDeviceCableHead) == 0x000008, "Wrong size on FMDeviceCable_GetDeviceCableHead");
static_assert(offsetof(FMDeviceCable_GetDeviceCableHead, ReturnValue) == 0x000000, "Member 'FMDeviceCable_GetDeviceCableHead::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.GetPortA
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_GetPortA final
{
public:
	class UFMDeviceCablePortComponent*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_GetPortA) == 0x000008, "Wrong alignment on FMDeviceCable_GetPortA");
static_assert(sizeof(FMDeviceCable_GetPortA) == 0x000008, "Wrong size on FMDeviceCable_GetPortA");
static_assert(offsetof(FMDeviceCable_GetPortA, ReturnValue) == 0x000000, "Member 'FMDeviceCable_GetPortA::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCable.GetPortB
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCable_GetPortB final
{
public:
	class UFMDeviceCablePortComponent*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCable_GetPortB) == 0x000008, "Wrong alignment on FMDeviceCable_GetPortB");
static_assert(sizeof(FMDeviceCable_GetPortB) == 0x000008, "Wrong size on FMDeviceCable_GetPortB");
static_assert(offsetof(FMDeviceCable_GetPortB, ReturnValue) == 0x000000, "Member 'FMDeviceCable_GetPortB::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorMidiEvent.OnMetaSoundOutputIntChangedBatch
// 0x0018 (0x0018 - 0x0000)
struct FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch final
{
public:
	class FName                                   OutputName;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Output;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch");
static_assert(sizeof(FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch) == 0x000018, "Wrong size on FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch");
static_assert(offsetof(FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch, OutputName) == 0x000000, "Member 'FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch::OutputName' has a wrong offset!");
static_assert(offsetof(FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch, Output) == 0x000008, "Member 'FMDeviceCableAnimatorMidiEvent_OnMetaSoundOutputIntChangedBatch::Output' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorFloatProvider.OnFloatChanged
// 0x0004 (0x0004 - 0x0000)
struct FMDeviceCableAnimatorFloatProvider_OnFloatChanged final
{
public:
	float                                         CurrentFloat;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorFloatProvider_OnFloatChanged) == 0x000004, "Wrong alignment on FMDeviceCableAnimatorFloatProvider_OnFloatChanged");
static_assert(sizeof(FMDeviceCableAnimatorFloatProvider_OnFloatChanged) == 0x000004, "Wrong size on FMDeviceCableAnimatorFloatProvider_OnFloatChanged");
static_assert(offsetof(FMDeviceCableAnimatorFloatProvider_OnFloatChanged, CurrentFloat) == 0x000000, "Member 'FMDeviceCableAnimatorFloatProvider_OnFloatChanged::CurrentFloat' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorFloatProvider.SetFloatProvider
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorFloatProvider_SetFloatProvider final
{
public:
	class UFabricFloatProviderBase*               InFloatProvider;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorFloatProvider_SetFloatProvider) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorFloatProvider_SetFloatProvider");
static_assert(sizeof(FMDeviceCableAnimatorFloatProvider_SetFloatProvider) == 0x000008, "Wrong size on FMDeviceCableAnimatorFloatProvider_SetFloatProvider");
static_assert(offsetof(FMDeviceCableAnimatorFloatProvider_SetFloatProvider, InFloatProvider) == 0x000000, "Member 'FMDeviceCableAnimatorFloatProvider_SetFloatProvider::InFloatProvider' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorTextureProvider.SetTextureProvider
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorTextureProvider_SetTextureProvider final
{
public:
	class UFabricTextureProviderBase*             InTextureProvider;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorTextureProvider_SetTextureProvider) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorTextureProvider_SetTextureProvider");
static_assert(sizeof(FMDeviceCableAnimatorTextureProvider_SetTextureProvider) == 0x000008, "Wrong size on FMDeviceCableAnimatorTextureProvider_SetTextureProvider");
static_assert(offsetof(FMDeviceCableAnimatorTextureProvider_SetTextureProvider, InTextureProvider) == 0x000000, "Member 'FMDeviceCableAnimatorTextureProvider_SetTextureProvider::InTextureProvider' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableAnimatorMeshProvider.SetMeshProvider
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableAnimatorMeshProvider_SetMeshProvider final
{
public:
	class UFabricMeshProviderBase*                InMeshProvider;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableAnimatorMeshProvider_SetMeshProvider) == 0x000008, "Wrong alignment on FMDeviceCableAnimatorMeshProvider_SetMeshProvider");
static_assert(sizeof(FMDeviceCableAnimatorMeshProvider_SetMeshProvider) == 0x000008, "Wrong size on FMDeviceCableAnimatorMeshProvider_SetMeshProvider");
static_assert(offsetof(FMDeviceCableAnimatorMeshProvider_SetMeshProvider, InMeshProvider) == 0x000000, "Member 'FMDeviceCableAnimatorMeshProvider_SetMeshProvider::InMeshProvider' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.OnCreativePlotLinkedVolumeChanged
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged final
{
public:
	class AFortVolume*                            FortVolume;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged");
static_assert(sizeof(FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged) == 0x000008, "Wrong size on FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged");
static_assert(offsetof(FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged, FortVolume) == 0x000000, "Member 'FMDeviceCableControllerComponent_OnCreativePlotLinkedVolumeChanged::FortVolume' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.OnFortPawnChanged
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableControllerComponent_OnFortPawnChanged final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_OnFortPawnChanged) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_OnFortPawnChanged");
static_assert(sizeof(FMDeviceCableControllerComponent_OnFortPawnChanged) == 0x000008, "Wrong size on FMDeviceCableControllerComponent_OnFortPawnChanged");
static_assert(offsetof(FMDeviceCableControllerComponent_OnFortPawnChanged, Pawn) == 0x000000, "Member 'FMDeviceCableControllerComponent_OnFortPawnChanged::Pawn' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.OnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableControllerComponent_OnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_OnWeaponEquipped) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_OnWeaponEquipped");
static_assert(sizeof(FMDeviceCableControllerComponent_OnWeaponEquipped) == 0x000010, "Wrong size on FMDeviceCableControllerComponent_OnWeaponEquipped");
static_assert(offsetof(FMDeviceCableControllerComponent_OnWeaponEquipped, NewWeapon) == 0x000000, "Member 'FMDeviceCableControllerComponent_OnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(FMDeviceCableControllerComponent_OnWeaponEquipped, PrevWeapon) == 0x000008, "Member 'FMDeviceCableControllerComponent_OnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.SelectPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableControllerComponent_SelectPort final
{
public:
	class UFMDeviceCablePortComponent*            SelectedPort;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_SelectPort) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_SelectPort");
static_assert(sizeof(FMDeviceCableControllerComponent_SelectPort) == 0x000008, "Wrong size on FMDeviceCableControllerComponent_SelectPort");
static_assert(offsetof(FMDeviceCableControllerComponent_SelectPort, SelectedPort) == 0x000000, "Member 'FMDeviceCableControllerComponent_SelectPort::SelectedPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.ServerPortActivatedStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableControllerComponent_ServerPortActivatedStateChanged final
{
public:
	class UFMDeviceCablePortComponent*            Port;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDeviceCableActivatedState                    ActivatedState;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCableControllerComponent_ServerPortActivatedStateChanged) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_ServerPortActivatedStateChanged");
static_assert(sizeof(FMDeviceCableControllerComponent_ServerPortActivatedStateChanged) == 0x000010, "Wrong size on FMDeviceCableControllerComponent_ServerPortActivatedStateChanged");
static_assert(offsetof(FMDeviceCableControllerComponent_ServerPortActivatedStateChanged, Port) == 0x000000, "Member 'FMDeviceCableControllerComponent_ServerPortActivatedStateChanged::Port' has a wrong offset!");
static_assert(offsetof(FMDeviceCableControllerComponent_ServerPortActivatedStateChanged, ActivatedState) == 0x000008, "Member 'FMDeviceCableControllerComponent_ServerPortActivatedStateChanged::ActivatedState' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.ServerPortsUpdated
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableControllerComponent_ServerPortsUpdated final
{
public:
	TArray<struct FPortUpdateInfo>                PortChangeInfos;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_ServerPortsUpdated) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_ServerPortsUpdated");
static_assert(sizeof(FMDeviceCableControllerComponent_ServerPortsUpdated) == 0x000010, "Wrong size on FMDeviceCableControllerComponent_ServerPortsUpdated");
static_assert(offsetof(FMDeviceCableControllerComponent_ServerPortsUpdated, PortChangeInfos) == 0x000000, "Member 'FMDeviceCableControllerComponent_ServerPortsUpdated::PortChangeInfos' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.ServerSelectPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableControllerComponent_ServerSelectPort final
{
public:
	class UFMDeviceCablePortComponent*            SelectedPort;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_ServerSelectPort) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_ServerSelectPort");
static_assert(sizeof(FMDeviceCableControllerComponent_ServerSelectPort) == 0x000008, "Wrong size on FMDeviceCableControllerComponent_ServerSelectPort");
static_assert(offsetof(FMDeviceCableControllerComponent_ServerSelectPort, SelectedPort) == 0x000000, "Member 'FMDeviceCableControllerComponent_ServerSelectPort::SelectedPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.SetControllerTargetForControllerPortBP
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP final
{
public:
	class AActor*                                 ControllerPortActor;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP");
static_assert(sizeof(FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP) == 0x000010, "Wrong size on FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP");
static_assert(offsetof(FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP, ControllerPortActor) == 0x000000, "Member 'FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP::ControllerPortActor' has a wrong offset!");
static_assert(offsetof(FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP, Controller) == 0x000008, "Member 'FMDeviceCableControllerComponent_SetControllerTargetForControllerPortBP::Controller' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.IsCableConnectionValid
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableControllerComponent_IsCableConnectionValid final
{
public:
	class UFMDeviceCablePortComponent*            OtherPort;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCableControllerComponent_IsCableConnectionValid) == 0x000008, "Wrong alignment on FMDeviceCableControllerComponent_IsCableConnectionValid");
static_assert(sizeof(FMDeviceCableControllerComponent_IsCableConnectionValid) == 0x000010, "Wrong size on FMDeviceCableControllerComponent_IsCableConnectionValid");
static_assert(offsetof(FMDeviceCableControllerComponent_IsCableConnectionValid, OtherPort) == 0x000000, "Member 'FMDeviceCableControllerComponent_IsCableConnectionValid::OtherPort' has a wrong offset!");
static_assert(offsetof(FMDeviceCableControllerComponent_IsCableConnectionValid, ReturnValue) == 0x000008, "Member 'FMDeviceCableControllerComponent_IsCableConnectionValid::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableControllerComponent.IsHoldingCable
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCableControllerComponent_IsHoldingCable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableControllerComponent_IsHoldingCable) == 0x000001, "Wrong alignment on FMDeviceCableControllerComponent_IsHoldingCable");
static_assert(sizeof(FMDeviceCableControllerComponent_IsHoldingCable) == 0x000001, "Wrong size on FMDeviceCableControllerComponent_IsHoldingCable");
static_assert(offsetof(FMDeviceCableControllerComponent_IsHoldingCable, ReturnValue) == 0x000000, "Member 'FMDeviceCableControllerComponent_IsHoldingCable::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableManagerComponent.GetCableInteractionType
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCableManagerComponent_GetCableInteractionType final
{
public:
	EDeviceCableInteractionType                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableManagerComponent_GetCableInteractionType) == 0x000001, "Wrong alignment on FMDeviceCableManagerComponent_GetCableInteractionType");
static_assert(sizeof(FMDeviceCableManagerComponent_GetCableInteractionType) == 0x000001, "Wrong size on FMDeviceCableManagerComponent_GetCableInteractionType");
static_assert(offsetof(FMDeviceCableManagerComponent_GetCableInteractionType, ReturnValue) == 0x000000, "Member 'FMDeviceCableManagerComponent_GetCableInteractionType::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.ActorHasValidControllerBP
// 0x0020 (0x0020 - 0x0000)
struct FMDeviceCablePortComponent_ActorHasValidControllerBP final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                        OutFortPlayerPawn;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      OutPlayerController;                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCablePortComponent_ActorHasValidControllerBP) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_ActorHasValidControllerBP");
static_assert(sizeof(FMDeviceCablePortComponent_ActorHasValidControllerBP) == 0x000020, "Wrong size on FMDeviceCablePortComponent_ActorHasValidControllerBP");
static_assert(offsetof(FMDeviceCablePortComponent_ActorHasValidControllerBP, Actor) == 0x000000, "Member 'FMDeviceCablePortComponent_ActorHasValidControllerBP::Actor' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_ActorHasValidControllerBP, OutFortPlayerPawn) == 0x000008, "Member 'FMDeviceCablePortComponent_ActorHasValidControllerBP::OutFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_ActorHasValidControllerBP, OutPlayerController) == 0x000010, "Member 'FMDeviceCablePortComponent_ActorHasValidControllerBP::OutPlayerController' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_ActorHasValidControllerBP, ReturnValue) == 0x000018, "Member 'FMDeviceCablePortComponent_ActorHasValidControllerBP::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.EndConnectionWithPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCablePortComponent_EndConnectionWithPort final
{
public:
	class UFMDeviceCablePortComponent*            OtherPort;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_EndConnectionWithPort) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_EndConnectionWithPort");
static_assert(sizeof(FMDeviceCablePortComponent_EndConnectionWithPort) == 0x000008, "Wrong size on FMDeviceCablePortComponent_EndConnectionWithPort");
static_assert(offsetof(FMDeviceCablePortComponent_EndConnectionWithPort, OtherPort) == 0x000000, "Member 'FMDeviceCablePortComponent_EndConnectionWithPort::OtherPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetConstantCable
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCablePortComponent_GetConstantCable final
{
public:
	class AFMDeviceCable*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetConstantCable) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetConstantCable");
static_assert(sizeof(FMDeviceCablePortComponent_GetConstantCable) == 0x000008, "Wrong size on FMDeviceCablePortComponent_GetConstantCable");
static_assert(offsetof(FMDeviceCablePortComponent_GetConstantCable, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetConstantCable::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetDeviceCableAnimator
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCablePortComponent_GetDeviceCableAnimator final
{
public:
	class UFMDeviceCableAnimatorBase*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetDeviceCableAnimator) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetDeviceCableAnimator");
static_assert(sizeof(FMDeviceCablePortComponent_GetDeviceCableAnimator) == 0x000008, "Wrong size on FMDeviceCablePortComponent_GetDeviceCableAnimator");
static_assert(offsetof(FMDeviceCablePortComponent_GetDeviceCableAnimator, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetDeviceCableAnimator::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetGuid
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_GetGuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetGuid) == 0x000004, "Wrong alignment on FMDeviceCablePortComponent_GetGuid");
static_assert(sizeof(FMDeviceCablePortComponent_GetGuid) == 0x000010, "Wrong size on FMDeviceCablePortComponent_GetGuid");
static_assert(offsetof(FMDeviceCablePortComponent_GetGuid, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetGuid::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.OnPlayerControllerPortConnected
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_OnPlayerControllerPortConnected final
{
public:
	TArray<class UFMDeviceCablePortComponent*>    ControllerPorts;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_OnPlayerControllerPortConnected) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_OnPlayerControllerPortConnected");
static_assert(sizeof(FMDeviceCablePortComponent_OnPlayerControllerPortConnected) == 0x000010, "Wrong size on FMDeviceCablePortComponent_OnPlayerControllerPortConnected");
static_assert(offsetof(FMDeviceCablePortComponent_OnPlayerControllerPortConnected, ControllerPorts) == 0x000000, "Member 'FMDeviceCablePortComponent_OnPlayerControllerPortConnected::ControllerPorts' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.OpenConnectionToPort
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCablePortComponent_OpenConnectionToPort final
{
public:
	class UFMDeviceCablePortComponent*            OtherPort;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_OpenConnectionToPort) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_OpenConnectionToPort");
static_assert(sizeof(FMDeviceCablePortComponent_OpenConnectionToPort) == 0x000008, "Wrong size on FMDeviceCablePortComponent_OpenConnectionToPort");
static_assert(offsetof(FMDeviceCablePortComponent_OpenConnectionToPort, OtherPort) == 0x000000, "Member 'FMDeviceCablePortComponent_OpenConnectionToPort::OtherPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.Select
// 0x0020 (0x0020 - 0x0000)
struct FMDeviceCablePortComponent_Select final
{
public:
	class UFMDeviceCablePortComponent*            PlayerSelectionPort;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPortUpdateInfo>                OutPortUpdates;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EPortSelectStatus                             ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCablePortComponent_Select) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_Select");
static_assert(sizeof(FMDeviceCablePortComponent_Select) == 0x000020, "Wrong size on FMDeviceCablePortComponent_Select");
static_assert(offsetof(FMDeviceCablePortComponent_Select, PlayerSelectionPort) == 0x000000, "Member 'FMDeviceCablePortComponent_Select::PlayerSelectionPort' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_Select, OutPortUpdates) == 0x000008, "Member 'FMDeviceCablePortComponent_Select::OutPortUpdates' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_Select, ReturnValue) == 0x000018, "Member 'FMDeviceCablePortComponent_Select::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.SelectWithStaticOutputInteraction
// 0x0020 (0x0020 - 0x0000)
struct FMDeviceCablePortComponent_SelectWithStaticOutputInteraction final
{
public:
	class UFMDeviceCablePortComponent*            PlayerSelectionPort;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPortUpdateInfo>                OutPortUpdates;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EPortSelectStatus                             ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCablePortComponent_SelectWithStaticOutputInteraction) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_SelectWithStaticOutputInteraction");
static_assert(sizeof(FMDeviceCablePortComponent_SelectWithStaticOutputInteraction) == 0x000020, "Wrong size on FMDeviceCablePortComponent_SelectWithStaticOutputInteraction");
static_assert(offsetof(FMDeviceCablePortComponent_SelectWithStaticOutputInteraction, PlayerSelectionPort) == 0x000000, "Member 'FMDeviceCablePortComponent_SelectWithStaticOutputInteraction::PlayerSelectionPort' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_SelectWithStaticOutputInteraction, OutPortUpdates) == 0x000008, "Member 'FMDeviceCablePortComponent_SelectWithStaticOutputInteraction::OutPortUpdates' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_SelectWithStaticOutputInteraction, ReturnValue) == 0x000018, "Member 'FMDeviceCablePortComponent_SelectWithStaticOutputInteraction::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.SetCachedArtifact
// 0x0020 (0x0020 - 0x0000)
struct FMDeviceCablePortComponent_SetCachedArtifact final
{
public:
	struct FFMDeviceCableArtifact                 InCachedArtifact;                                  // 0x0000(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_SetCachedArtifact) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_SetCachedArtifact");
static_assert(sizeof(FMDeviceCablePortComponent_SetCachedArtifact) == 0x000020, "Wrong size on FMDeviceCablePortComponent_SetCachedArtifact");
static_assert(offsetof(FMDeviceCablePortComponent_SetCachedArtifact, InCachedArtifact) == 0x000000, "Member 'FMDeviceCablePortComponent_SetCachedArtifact::InCachedArtifact' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.SetDeviceCableAnimator
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCablePortComponent_SetDeviceCableAnimator final
{
public:
	class UFMDeviceCableAnimatorBase*             InAnimator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_SetDeviceCableAnimator) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_SetDeviceCableAnimator");
static_assert(sizeof(FMDeviceCablePortComponent_SetDeviceCableAnimator) == 0x000008, "Wrong size on FMDeviceCablePortComponent_SetDeviceCableAnimator");
static_assert(offsetof(FMDeviceCablePortComponent_SetDeviceCableAnimator, InAnimator) == 0x000000, "Member 'FMDeviceCablePortComponent_SetDeviceCableAnimator::InAnimator' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.SetPortActivatedState
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_SetPortActivatedState final
{
public:
	EDeviceCableActivatedState                    NewActivatedState;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_SetPortActivatedState) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_SetPortActivatedState");
static_assert(sizeof(FMDeviceCablePortComponent_SetPortActivatedState) == 0x000001, "Wrong size on FMDeviceCablePortComponent_SetPortActivatedState");
static_assert(offsetof(FMDeviceCablePortComponent_SetPortActivatedState, NewActivatedState) == 0x000000, "Member 'FMDeviceCablePortComponent_SetPortActivatedState::NewActivatedState' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.SetPortSelectableState
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_SetPortSelectableState final
{
public:
	EDeviceCablePortSelectableState               NewSelectableState;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_SetPortSelectableState) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_SetPortSelectableState");
static_assert(sizeof(FMDeviceCablePortComponent_SetPortSelectableState) == 0x000001, "Wrong size on FMDeviceCablePortComponent_SetPortSelectableState");
static_assert(offsetof(FMDeviceCablePortComponent_SetPortSelectableState, NewSelectableState) == 0x000000, "Member 'FMDeviceCablePortComponent_SetPortSelectableState::NewSelectableState' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.SetPortVisibility
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_SetPortVisibility final
{
public:
	bool                                          bPortVisible;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_SetPortVisibility) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_SetPortVisibility");
static_assert(sizeof(FMDeviceCablePortComponent_SetPortVisibility) == 0x000001, "Wrong size on FMDeviceCablePortComponent_SetPortVisibility");
static_assert(offsetof(FMDeviceCablePortComponent_SetPortVisibility, bPortVisible) == 0x000000, "Member 'FMDeviceCablePortComponent_SetPortVisibility::bPortVisible' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetAnimationSyncType
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_GetAnimationSyncType final
{
public:
	EDeviceCablePortAnimationSyncType             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetAnimationSyncType) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetAnimationSyncType");
static_assert(sizeof(FMDeviceCablePortComponent_GetAnimationSyncType) == 0x000001, "Wrong size on FMDeviceCablePortComponent_GetAnimationSyncType");
static_assert(offsetof(FMDeviceCablePortComponent_GetAnimationSyncType, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetAnimationSyncType::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetCachedArtifact
// 0x0020 (0x0020 - 0x0000)
struct FMDeviceCablePortComponent_GetCachedArtifact final
{
public:
	struct FFMDeviceCableArtifact                 ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetCachedArtifact) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetCachedArtifact");
static_assert(sizeof(FMDeviceCablePortComponent_GetCachedArtifact) == 0x000020, "Wrong size on FMDeviceCablePortComponent_GetCachedArtifact");
static_assert(offsetof(FMDeviceCablePortComponent_GetCachedArtifact, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetCachedArtifact::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetConnectedPorts
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_GetConnectedPorts final
{
public:
	TArray<class UFMDeviceCablePortComponent*>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetConnectedPorts) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetConnectedPorts");
static_assert(sizeof(FMDeviceCablePortComponent_GetConnectedPorts) == 0x000010, "Wrong size on FMDeviceCablePortComponent_GetConnectedPorts");
static_assert(offsetof(FMDeviceCablePortComponent_GetConnectedPorts, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetConnectedPorts::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetConnections
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_GetConnections final
{
public:
	TArray<class UFMDeviceCableConnectionBase*>   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetConnections) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetConnections");
static_assert(sizeof(FMDeviceCablePortComponent_GetConnections) == 0x000010, "Wrong size on FMDeviceCablePortComponent_GetConnections");
static_assert(offsetof(FMDeviceCablePortComponent_GetConnections, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetConnections::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetIsPlayerPort
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_GetIsPlayerPort final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetIsPlayerPort) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetIsPlayerPort");
static_assert(sizeof(FMDeviceCablePortComponent_GetIsPlayerPort) == 0x000001, "Wrong size on FMDeviceCablePortComponent_GetIsPlayerPort");
static_assert(offsetof(FMDeviceCablePortComponent_GetIsPlayerPort, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetIsPlayerPort::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetIsTerminalPort
// 0x0002 (0x0002 - 0x0000)
struct FMDeviceCablePortComponent_GetIsTerminalPort final
{
public:
	EDeviceCablePortFlowType                      FlowType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetIsTerminalPort) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetIsTerminalPort");
static_assert(sizeof(FMDeviceCablePortComponent_GetIsTerminalPort) == 0x000002, "Wrong size on FMDeviceCablePortComponent_GetIsTerminalPort");
static_assert(offsetof(FMDeviceCablePortComponent_GetIsTerminalPort, FlowType) == 0x000000, "Member 'FMDeviceCablePortComponent_GetIsTerminalPort::FlowType' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_GetIsTerminalPort, ReturnValue) == 0x000001, "Member 'FMDeviceCablePortComponent_GetIsTerminalPort::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetNextPortsInConnections
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_GetNextPortsInConnections final
{
public:
	TArray<class UFMDeviceCablePortComponent*>    ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetNextPortsInConnections) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetNextPortsInConnections");
static_assert(sizeof(FMDeviceCablePortComponent_GetNextPortsInConnections) == 0x000010, "Wrong size on FMDeviceCablePortComponent_GetNextPortsInConnections");
static_assert(offsetof(FMDeviceCablePortComponent_GetNextPortsInConnections, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetNextPortsInConnections::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetOtherPortsOnActor
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_GetOtherPortsOnActor final
{
public:
	TArray<class UFMDeviceCablePortComponent*>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetOtherPortsOnActor) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetOtherPortsOnActor");
static_assert(sizeof(FMDeviceCablePortComponent_GetOtherPortsOnActor) == 0x000010, "Wrong size on FMDeviceCablePortComponent_GetOtherPortsOnActor");
static_assert(offsetof(FMDeviceCablePortComponent_GetOtherPortsOnActor, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetOtherPortsOnActor::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetPortActivatedState
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_GetPortActivatedState final
{
public:
	EDeviceCableActivatedState                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetPortActivatedState) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetPortActivatedState");
static_assert(sizeof(FMDeviceCablePortComponent_GetPortActivatedState) == 0x000001, "Wrong size on FMDeviceCablePortComponent_GetPortActivatedState");
static_assert(offsetof(FMDeviceCablePortComponent_GetPortActivatedState, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetPortActivatedState::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetPortDataType
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_GetPortDataType final
{
public:
	EDeviceCablePortDataType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetPortDataType) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetPortDataType");
static_assert(sizeof(FMDeviceCablePortComponent_GetPortDataType) == 0x000001, "Wrong size on FMDeviceCablePortComponent_GetPortDataType");
static_assert(offsetof(FMDeviceCablePortComponent_GetPortDataType, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetPortDataType::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetPortFlowType
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_GetPortFlowType final
{
public:
	EDeviceCablePortFlowType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetPortFlowType) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetPortFlowType");
static_assert(sizeof(FMDeviceCablePortComponent_GetPortFlowType) == 0x000001, "Wrong size on FMDeviceCablePortComponent_GetPortFlowType");
static_assert(offsetof(FMDeviceCablePortComponent_GetPortFlowType, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetPortFlowType::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetPortSelectableState
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_GetPortSelectableState final
{
public:
	EDeviceCablePortSelectableState               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetPortSelectableState) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_GetPortSelectableState");
static_assert(sizeof(FMDeviceCablePortComponent_GetPortSelectableState) == 0x000001, "Wrong size on FMDeviceCablePortComponent_GetPortSelectableState");
static_assert(offsetof(FMDeviceCablePortComponent_GetPortSelectableState, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetPortSelectableState::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.GetPreviousPortsInConnections
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_GetPreviousPortsInConnections final
{
public:
	TArray<class UFMDeviceCablePortComponent*>    ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_GetPreviousPortsInConnections) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_GetPreviousPortsInConnections");
static_assert(sizeof(FMDeviceCablePortComponent_GetPreviousPortsInConnections) == 0x000010, "Wrong size on FMDeviceCablePortComponent_GetPreviousPortsInConnections");
static_assert(offsetof(FMDeviceCablePortComponent_GetPreviousPortsInConnections, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_GetPreviousPortsInConnections::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.HasSavedConnections
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_HasSavedConnections final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_HasSavedConnections) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_HasSavedConnections");
static_assert(sizeof(FMDeviceCablePortComponent_HasSavedConnections) == 0x000001, "Wrong size on FMDeviceCablePortComponent_HasSavedConnections");
static_assert(offsetof(FMDeviceCablePortComponent_HasSavedConnections, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_HasSavedConnections::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.IsConnected
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCablePortComponent_IsConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablePortComponent_IsConnected) == 0x000001, "Wrong alignment on FMDeviceCablePortComponent_IsConnected");
static_assert(sizeof(FMDeviceCablePortComponent_IsConnected) == 0x000001, "Wrong size on FMDeviceCablePortComponent_IsConnected");
static_assert(offsetof(FMDeviceCablePortComponent_IsConnected, ReturnValue) == 0x000000, "Member 'FMDeviceCablePortComponent_IsConnected::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.IsConnectedToPort
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_IsConnectedToPort final
{
public:
	class UFMDeviceCablePortComponent*            Port;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCablePortComponent_IsConnectedToPort) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_IsConnectedToPort");
static_assert(sizeof(FMDeviceCablePortComponent_IsConnectedToPort) == 0x000010, "Wrong size on FMDeviceCablePortComponent_IsConnectedToPort");
static_assert(offsetof(FMDeviceCablePortComponent_IsConnectedToPort, Port) == 0x000000, "Member 'FMDeviceCablePortComponent_IsConnectedToPort::Port' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_IsConnectedToPort, ReturnValue) == 0x000008, "Member 'FMDeviceCablePortComponent_IsConnectedToPort::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablePortComponent.MatchesPortConnectionType
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCablePortComponent_MatchesPortConnectionType final
{
public:
	class UFMDeviceCablePortComponent*            OtherPort;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCablePortComponent_MatchesPortConnectionType) == 0x000008, "Wrong alignment on FMDeviceCablePortComponent_MatchesPortConnectionType");
static_assert(sizeof(FMDeviceCablePortComponent_MatchesPortConnectionType) == 0x000010, "Wrong size on FMDeviceCablePortComponent_MatchesPortConnectionType");
static_assert(offsetof(FMDeviceCablePortComponent_MatchesPortConnectionType, OtherPort) == 0x000000, "Member 'FMDeviceCablePortComponent_MatchesPortConnectionType::OtherPort' has a wrong offset!");
static_assert(offsetof(FMDeviceCablePortComponent_MatchesPortConnectionType, ReturnValue) == 0x000008, "Member 'FMDeviceCablePortComponent_MatchesPortConnectionType::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableModulatorPortComponent.SetDeviceCableManager
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableModulatorPortComponent_SetDeviceCableManager final
{
public:
	class UFMDeviceCableManagerComponent*         InDeviceCableManager;                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableModulatorPortComponent_SetDeviceCableManager) == 0x000008, "Wrong alignment on FMDeviceCableModulatorPortComponent_SetDeviceCableManager");
static_assert(sizeof(FMDeviceCableModulatorPortComponent_SetDeviceCableManager) == 0x000008, "Wrong size on FMDeviceCableModulatorPortComponent_SetDeviceCableManager");
static_assert(offsetof(FMDeviceCableModulatorPortComponent_SetDeviceCableManager, InDeviceCableManager) == 0x000000, "Member 'FMDeviceCableModulatorPortComponent_SetDeviceCableManager::InDeviceCableManager' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablesFunctionLibrary.DeepCopySoundSourceBus
// 0x0020 (0x0020 - 0x0000)
struct FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus final
{
public:
	const class UObject*                          Context;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Outer_0;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSourceBus*                        Source;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSourceBus*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus) == 0x000008, "Wrong alignment on FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus");
static_assert(sizeof(FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus) == 0x000020, "Wrong size on FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus");
static_assert(offsetof(FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus, Context) == 0x000000, "Member 'FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus::Context' has a wrong offset!");
static_assert(offsetof(FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus, Outer_0) == 0x000008, "Member 'FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus::Outer_0' has a wrong offset!");
static_assert(offsetof(FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus, Source) == 0x000010, "Member 'FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus::Source' has a wrong offset!");
static_assert(offsetof(FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus, ReturnValue) == 0x000018, "Member 'FMDeviceCablesFunctionLibrary_DeepCopySoundSourceBus::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCablesFunctionLibrary.MakeSoundSourceBusSendInfo
// 0x00C0 (0x00C0 - 0x0000)
struct FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo final
{
public:
	class USoundSourceBus*                        SoundSourceBus;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundSourceBusSendInfo                ReturnValue;                                       // 0x0008(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo) == 0x000008, "Wrong alignment on FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo");
static_assert(sizeof(FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo) == 0x0000C0, "Wrong size on FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo");
static_assert(offsetof(FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo, SoundSourceBus) == 0x000000, "Member 'FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo::SoundSourceBus' has a wrong offset!");
static_assert(offsetof(FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo, ReturnValue) == 0x000008, "Member 'FMDeviceCablesFunctionLibrary_MakeSoundSourceBusSendInfo::ReturnValue' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.OnInputPortConnected
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_OnInputPortConnected final
{
public:
	class UFMDeviceCablePortComponent*            ConnectedPort;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_OnInputPortConnected) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_OnInputPortConnected");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_OnInputPortConnected) == 0x000008, "Wrong size on FMDeviceCableWildcardOrderingComponent_OnInputPortConnected");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnInputPortConnected, ConnectedPort) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_OnInputPortConnected::ConnectedPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.OnInputPortDataTypeChanged
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged final
{
public:
	class UFMDeviceCableWildcardPortComponent*    WildcardPort;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDeviceCablePortDataType                      DataType;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged) == 0x000010, "Wrong size on FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged, WildcardPort) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged::WildcardPort' has a wrong offset!");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged, DataType) == 0x000008, "Member 'FMDeviceCableWildcardOrderingComponent_OnInputPortDataTypeChanged::DataType' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.OnInputPortDisconnected
// 0x0008 (0x0008 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected final
{
public:
	class UFMDeviceCablePortComponent*            DisconnectedPort;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected) == 0x000008, "Wrong size on FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected, DisconnectedPort) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_OnInputPortDisconnected::DisconnectedPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.OnOutputPortConnected
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected final
{
public:
	class UFMDeviceCablePortComponent*            SourcePort;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMDeviceCablePortComponent*            ConnectedPort;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected) == 0x000010, "Wrong size on FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected, SourcePort) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected::SourcePort' has a wrong offset!");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected, ConnectedPort) == 0x000008, "Member 'FMDeviceCableWildcardOrderingComponent_OnOutputPortConnected::ConnectedPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.OnOutputPortDisconnected
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected final
{
public:
	class UFMDeviceCablePortComponent*            SourcePort;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMDeviceCablePortComponent*            DisconnectedPort;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected) == 0x000010, "Wrong size on FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected, SourcePort) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected::SourcePort' has a wrong offset!");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected, DisconnectedPort) == 0x000008, "Member 'FMDeviceCableWildcardOrderingComponent_OnOutputPortDisconnected::DisconnectedPort' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.OnOutputPortSlotSetFromSave
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave final
{
public:
	class UFMDeviceCableWildcardPortComponent*    WildcardPort;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasConnections;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave) == 0x000010, "Wrong size on FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave, WildcardPort) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave::WildcardPort' has a wrong offset!");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave, bHasConnections) == 0x000008, "Member 'FMDeviceCableWildcardOrderingComponent_OnOutputPortSlotSetFromSave::bHasConnections' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.SetInputRoot
// 0x0018 (0x0018 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_SetInputRoot final
{
public:
	struct FVector                                RootLocation;                                      // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_SetInputRoot) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_SetInputRoot");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_SetInputRoot) == 0x000018, "Wrong size on FMDeviceCableWildcardOrderingComponent_SetInputRoot");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_SetInputRoot, RootLocation) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_SetInputRoot::RootLocation' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.SetOutputPortsExpanded
// 0x0001 (0x0001 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded final
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded) == 0x000001, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded) == 0x000001, "Wrong size on FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded, bExpanded) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_SetOutputPortsExpanded::bExpanded' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardOrderingComponent.SetOutputRoot
// 0x0018 (0x0018 - 0x0000)
struct FMDeviceCableWildcardOrderingComponent_SetOutputRoot final
{
public:
	struct FVector                                RootLocation;                                      // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardOrderingComponent_SetOutputRoot) == 0x000008, "Wrong alignment on FMDeviceCableWildcardOrderingComponent_SetOutputRoot");
static_assert(sizeof(FMDeviceCableWildcardOrderingComponent_SetOutputRoot) == 0x000018, "Wrong size on FMDeviceCableWildcardOrderingComponent_SetOutputRoot");
static_assert(offsetof(FMDeviceCableWildcardOrderingComponent_SetOutputRoot, RootLocation) == 0x000000, "Member 'FMDeviceCableWildcardOrderingComponent_SetOutputRoot::RootLocation' has a wrong offset!");

// Function FMDeviceCablesRuntime.FMDeviceCableWildcardPortComponent.OnPlayerControllerPortConnectedWildcard
// 0x0010 (0x0010 - 0x0000)
struct FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard final
{
public:
	TArray<class UFMDeviceCablePortComponent*>    ControllerPorts;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard) == 0x000008, "Wrong alignment on FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard");
static_assert(sizeof(FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard) == 0x000010, "Wrong size on FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard");
static_assert(offsetof(FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard, ControllerPorts) == 0x000000, "Member 'FMDeviceCableWildcardPortComponent_OnPlayerControllerPortConnectedWildcard::ControllerPorts' has a wrong offset!");

}

