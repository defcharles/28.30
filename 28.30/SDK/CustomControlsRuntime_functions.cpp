#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomControlsRuntime

#include "Basic.hpp"

#include "CustomControlsRuntime_classes.hpp"
#include "CustomControlsRuntime_parameters.hpp"


namespace SDK
{

// Function CustomControlsRuntime.CustomControlOptions_Base.BP_OnActivate
// (Event, Protected, BlueprintEvent)

void UCustomControlOptions_Base::BP_OnActivate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomControlsRuntime.CustomControlOptions_Base.BP_OnDeactivate
// (Event, Protected, BlueprintEvent)

void UCustomControlOptions_Base::BP_OnDeactivate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomControlsRuntime.CustomControlOptions_Base.GetOwningComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortControllerComponent_CustomControls*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortControllerComponent_CustomControls* UCustomControlOptions_Base::GetOwningComponent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOwningComponent");

	Params::CustomControlOptions_Base_GetOwningComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.CustomControlOptions_ThirdPerson.BP_InitAimingTargetingPreset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingPreset*                 Preset                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_ThirdPerson::BP_InitAimingTargetingPreset(class UTargetingPreset* Preset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_InitAimingTargetingPreset");

	Params::CustomControlOptions_ThirdPerson_BP_InitAimingTargetingPreset Parms{};

	Parms.Preset = Preset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.CustomControlOptions_ThirdPerson.BP_InitMeleeTargetingPreset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingPreset*                 Preset                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_ThirdPerson::BP_InitMeleeTargetingPreset(class UTargetingPreset* Preset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_InitMeleeTargetingPreset");

	Params::CustomControlOptions_ThirdPerson_BP_InitMeleeTargetingPreset Parms{};

	Parms.Preset = Preset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.CustomControlOptions_ThirdPerson.BP_InitRangedTargetingPreset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingPreset*                 Preset                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_ThirdPerson::BP_InitRangedTargetingPreset(class UTargetingPreset* Preset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_InitRangedTargetingPreset");

	Params::CustomControlOptions_ThirdPerson_BP_InitRangedTargetingPreset Parms{};

	Parms.Preset = Preset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.CustomControlOptions_ThirdPerson.BP_InitRetentionTargetingPreset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingPreset*                 Preset                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_ThirdPerson::BP_InitRetentionTargetingPreset(class UTargetingPreset* Preset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_InitRetentionTargetingPreset");

	Params::CustomControlOptions_ThirdPerson_BP_InitRetentionTargetingPreset Parms{};

	Parms.Preset = Preset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ClientRegisterTagsQueries
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void UFortControllerComponent_CustomControls::ClientRegisterTagsQueries()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClientRegisterTagsQueries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.CreateOptionsWithPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UCustomControlOptions_Base>OptionsClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomControlOptions_Base*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomControlOptions_Base* UFortControllerComponent_CustomControls::CreateOptionsWithPriority(const class UObject* ContextObject, TSubclassOf<class UCustomControlOptions_Base> OptionsClass, float Priority, bool bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreateOptionsWithPriority");

	Params::FortControllerComponent_CustomControls_CreateOptionsWithPriority Parms{};

	Parms.ContextObject = ContextObject;
	Parms.OptionsClass = OptionsClass;
	Parms.Priority = Priority;
	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.GetOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomControlOptions_Base*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomControlOptions_Base* UFortControllerComponent_CustomControls::GetOptions(const class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOptions");

	Params::FortControllerComponent_CustomControls_GetOptions Parms{};

	Parms.ContextObject = ContextObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.NotifyOptionsUpdated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCustomControlOptions_Base*       Options                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::NotifyOptionsUpdated(const class UCustomControlOptions_Base* Options)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NotifyOptionsUpdated");

	Params::FortControllerComponent_CustomControls_NotifyOptionsUpdated Parms{};

	Parms.Options = Options;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.OnRep_ActiveOptions
// (Final, Native, Private)
// Parameters:
// class UCustomControlOptions_Base*       OldOptions                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::OnRep_ActiveOptions(class UCustomControlOptions_Base* OldOptions)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ActiveOptions");

	Params::FortControllerComponent_CustomControls_OnRep_ActiveOptions Parms{};

	Parms.OldOptions = OldOptions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.OnRep_NotifyActiveOptionsUpdated
// (Final, Native, Private)

void UFortControllerComponent_CustomControls::OnRep_NotifyActiveOptionsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_NotifyActiveOptionsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.RemoveOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::RemoveOptions(const class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveOptions");

	Params::FortControllerComponent_CustomControls_RemoveOptions Parms{};

	Parms.ContextObject = ContextObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerSetFocusTarget
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AActor*                           NewFocusTarget                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ServerSetFocusTarget(const class AActor* NewFocusTarget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetFocusTarget");

	Params::FortControllerComponent_CustomControls_ServerSetFocusTarget Parms{};

	Parms.NewFocusTarget = NewFocusTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerSetOptionsQueueBlocked
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bIsBlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ServerSetOptionsQueueBlocked(bool bIsBlocked)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ServerSetOptionsQueueBlocked");

	Params::FortControllerComponent_CustomControls_ServerSetOptionsQueueBlocked Parms{};

	Parms.bIsBlocked = bIsBlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.SetOptionsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::SetOptionsEnabled(const class UObject* ContextObject, bool bEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetOptionsEnabled");

	Params::FortControllerComponent_CustomControls_SetOptionsEnabled Parms{};

	Parms.ContextObject = ContextObject;
	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.WeaponGetAimRotOverride
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AFortWeapon*                      Weapon                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortAbilityTargetingSource             TargetingSource                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutOverrideAimRot                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bOutExecutionResult                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::WeaponGetAimRotOverride(const class AFortWeapon* Weapon, const EFortAbilityTargetingSource TargetingSource, struct FRotator* OutOverrideAimRot, bool* bOutExecutionResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("WeaponGetAimRotOverride");

	Params::FortControllerComponent_CustomControls_WeaponGetAimRotOverride Parms{};

	Parms.Weapon = Weapon;
	Parms.TargetingSource = TargetingSource;

	UObject::ProcessEvent(Func, &Parms);

	if (OutOverrideAimRot != nullptr)
		*OutOverrideAimRot = std::move(Parms.OutOverrideAimRot);

	if (bOutExecutionResult != nullptr)
		*bOutExecutionResult = Parms.bOutExecutionResult;
}

}

