#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksMidiParser

#include "Basic.hpp"

#include "SparksMidiParser_structs.hpp"
#include "SparksCoreRuntime_structs.hpp"


namespace SDK::Params
{

// Function SparksMidiParser.AsyncAction_ListenForMidiNoteEvent.ListenForMidiNoteEvent
// 0x0028 (0x0028 - 0x0000)
struct AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MidiTrackName;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         EventNote;                                         // 0x0014(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SecondsBeforeEventStart;                           // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeEventEnd;                             // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiNoteEvent*    ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent");
static_assert(sizeof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent) == 0x000028, "Wrong size on AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent, MidiTrackName) == 0x000010, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent::MidiTrackName' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent, EventNote) == 0x000014, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent::EventNote' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent, SecondsBeforeEventStart) == 0x000018, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent::SecondsBeforeEventStart' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent, SecondsBeforeEventEnd) == 0x00001C, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent::SecondsBeforeEventEnd' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent, ReturnValue) == 0x000020, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvent::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiNoteEvent.ListenForMidiNoteEvents
// 0x0038 (0x0038 - 0x0000)
struct AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MidiTrackName;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 EventNotes;                                        // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeEventStart;                           // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeEventEnd;                             // 0x002C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiNoteEvent*    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents");
static_assert(sizeof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents) == 0x000038, "Wrong size on AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents, MidiTrackName) == 0x000010, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents::MidiTrackName' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents, EventNotes) == 0x000018, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents::EventNotes' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents, SecondsBeforeEventStart) == 0x000028, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents::SecondsBeforeEventStart' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents, SecondsBeforeEventEnd) == 0x00002C, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents::SecondsBeforeEventEnd' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents, ReturnValue) == 0x000030, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiNoteEvent.ListenForMidiNoteEvents_WithParams
// 0x0038 (0x0038 - 0x0000)
struct AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiNoteEventListenerParams           Params_0;                                          // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiNoteEvent*    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams");
static_assert(sizeof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams) == 0x000038, "Wrong size on AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams, Params_0) == 0x000010, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams::Params_0' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams, ReturnValue) == 0x000030, "Member 'AsyncAction_ListenForMidiNoteEvent_ListenForMidiNoteEvents_WithParams::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiTextEvent.ListenForMidiTextEvent
// 0x0038 (0x0038 - 0x0000)
struct AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MidiTrackName;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EventString;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeEventStart;                           // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForMidiTextEvent*    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent");
static_assert(sizeof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent) == 0x000038, "Wrong size on AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent, MidiTrackName) == 0x000010, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent::MidiTrackName' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent, EventString) == 0x000018, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent::EventString' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent, SecondsBeforeEventStart) == 0x000028, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent::SecondsBeforeEventStart' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent, ReturnValue) == 0x000030, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvent::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiTextEvent.ListenForMidiTextEvents
// 0x0038 (0x0038 - 0x0000)
struct AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MidiTrackName;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         EventStrings;                                      // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeEventStart;                           // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForMidiTextEvent*    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents");
static_assert(sizeof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents) == 0x000038, "Wrong size on AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents, MidiTrackName) == 0x000010, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents::MidiTrackName' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents, EventStrings) == 0x000018, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents::EventStrings' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents, SecondsBeforeEventStart) == 0x000028, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents::SecondsBeforeEventStart' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents, ReturnValue) == 0x000030, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiTextEvent.ListenForMidiTextEvents_WithParams
// 0x0038 (0x0038 - 0x0000)
struct AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiTextEventListenerParams           Params_0;                                          // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiTextEvent*    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams");
static_assert(sizeof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams) == 0x000038, "Wrong size on AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams, Params_0) == 0x000010, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams::Params_0' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams, ReturnValue) == 0x000030, "Member 'AsyncAction_ListenForMidiTextEvent_ListenForMidiTextEvents_WithParams::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiNoteEventPools.ListenForMidiNoteEventPools
// 0x0040 (0x0040 - 0x0000)
struct AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MidiTrackName;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         EventNote;                                         // 0x0014(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 WatchNotes;                                        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FMidiNoteEvent_DelayPool>       DelayPools;                                        // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiNoteEventPools* ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools");
static_assert(sizeof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools) == 0x000040, "Wrong size on AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools, MidiTrackName) == 0x000010, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools::MidiTrackName' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools, EventNote) == 0x000014, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools::EventNote' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools, WatchNotes) == 0x000018, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools::WatchNotes' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools, DelayPools) == 0x000028, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools::DelayPools' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools, ReturnValue) == 0x000038, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventPools::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiNoteEventPools.ListenForMidiNoteEventsPools
// 0x0050 (0x0050 - 0x0000)
struct AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MidiTrackName;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 EventNotes;                                        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 WatchNotes;                                        // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FMidiNoteEvent_DelayPool>       DelayPools;                                        // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiNoteEventPools* ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools");
static_assert(sizeof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools) == 0x000050, "Wrong size on AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools, MidiTrackName) == 0x000010, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools::MidiTrackName' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools, EventNotes) == 0x000018, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools::EventNotes' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools, WatchNotes) == 0x000028, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools::WatchNotes' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools, DelayPools) == 0x000038, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools::DelayPools' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools, ReturnValue) == 0x000048, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.AsyncAction_ListenForMidiNoteEventPools.ListenForMidiNoteEventsPools_WithParams
// 0x0050 (0x0050 - 0x0000)
struct AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMidiNotePoolEventListenerParams       Params_0;                                          // 0x0010(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UAsyncAction_ListenForMidiNoteEventPools* ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams) == 0x000008, "Wrong alignment on AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams");
static_assert(sizeof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams) == 0x000050, "Wrong size on AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams, MidiEventDriver) == 0x000000, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams::MidiEventDriver' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams, Params_0) == 0x000010, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams::Params_0' has a wrong offset!");
static_assert(offsetof(AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams, ReturnValue) == 0x000048, "Member 'AsyncAction_ListenForMidiNoteEventPools_ListenForMidiNoteEventsPools_WithParams::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.GetCurrentMidiSeconds
// 0x0004 (0x0004 - 0x0000)
struct MidiEventDriverInterface_GetCurrentMidiSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_GetCurrentMidiSeconds) == 0x000004, "Wrong alignment on MidiEventDriverInterface_GetCurrentMidiSeconds");
static_assert(sizeof(MidiEventDriverInterface_GetCurrentMidiSeconds) == 0x000004, "Wrong size on MidiEventDriverInterface_GetCurrentMidiSeconds");
static_assert(offsetof(MidiEventDriverInterface_GetCurrentMidiSeconds, ReturnValue) == 0x000000, "Member 'MidiEventDriverInterface_GetCurrentMidiSeconds::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.GetCurrentMidiTick
// 0x0004 (0x0004 - 0x0000)
struct MidiEventDriverInterface_GetCurrentMidiTick final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_GetCurrentMidiTick) == 0x000004, "Wrong alignment on MidiEventDriverInterface_GetCurrentMidiTick");
static_assert(sizeof(MidiEventDriverInterface_GetCurrentMidiTick) == 0x000004, "Wrong size on MidiEventDriverInterface_GetCurrentMidiTick");
static_assert(offsetof(MidiEventDriverInterface_GetCurrentMidiTick, ReturnValue) == 0x000000, "Member 'MidiEventDriverInterface_GetCurrentMidiTick::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.GetMidiPlaybackState
// 0x000C (0x000C - 0x0000)
struct MidiEventDriverInterface_GetMidiPlaybackState final
{
public:
	struct FMidiPlaybackState                     ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_GetMidiPlaybackState) == 0x000004, "Wrong alignment on MidiEventDriverInterface_GetMidiPlaybackState");
static_assert(sizeof(MidiEventDriverInterface_GetMidiPlaybackState) == 0x00000C, "Wrong size on MidiEventDriverInterface_GetMidiPlaybackState");
static_assert(offsetof(MidiEventDriverInterface_GetMidiPlaybackState, ReturnValue) == 0x000000, "Member 'MidiEventDriverInterface_GetMidiPlaybackState::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.GetMidiTrackNameFromSparksInstrument
// 0x0008 (0x0008 - 0x0000)
struct MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument final
{
public:
	ESparksInstrumentType                         InstrumentType;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument) == 0x000004, "Wrong alignment on MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument");
static_assert(sizeof(MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument) == 0x000008, "Wrong size on MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument");
static_assert(offsetof(MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument, InstrumentType) == 0x000000, "Member 'MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument::InstrumentType' has a wrong offset!");
static_assert(offsetof(MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument, ReturnValue) == 0x000004, "Member 'MidiEventDriverInterface_GetMidiTrackNameFromSparksInstrument::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.GetParsedMidiEventData
// 0x0008 (0x0008 - 0x0000)
struct MidiEventDriverInterface_GetParsedMidiEventData final
{
public:
	class UParsedMidiEventData*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_GetParsedMidiEventData) == 0x000008, "Wrong alignment on MidiEventDriverInterface_GetParsedMidiEventData");
static_assert(sizeof(MidiEventDriverInterface_GetParsedMidiEventData) == 0x000008, "Wrong size on MidiEventDriverInterface_GetParsedMidiEventData");
static_assert(offsetof(MidiEventDriverInterface_GetParsedMidiEventData, ReturnValue) == 0x000000, "Member 'MidiEventDriverInterface_GetParsedMidiEventData::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.GetSparksInstrumentFromMidiTrackName
// 0x0008 (0x0008 - 0x0000)
struct MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName) == 0x000004, "Wrong alignment on MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName");
static_assert(sizeof(MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName) == 0x000008, "Wrong size on MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName");
static_assert(offsetof(MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName, TrackName) == 0x000000, "Member 'MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName::TrackName' has a wrong offset!");
static_assert(offsetof(MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName, ReturnValue) == 0x000004, "Member 'MidiEventDriverInterface_GetSparksInstrumentFromMidiTrackName::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.IsPlaybackEnded
// 0x0001 (0x0001 - 0x0000)
struct MidiEventDriverInterface_IsPlaybackEnded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_IsPlaybackEnded) == 0x000001, "Wrong alignment on MidiEventDriverInterface_IsPlaybackEnded");
static_assert(sizeof(MidiEventDriverInterface_IsPlaybackEnded) == 0x000001, "Wrong size on MidiEventDriverInterface_IsPlaybackEnded");
static_assert(offsetof(MidiEventDriverInterface_IsPlaybackEnded, ReturnValue) == 0x000000, "Member 'MidiEventDriverInterface_IsPlaybackEnded::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.SecondsToTick
// 0x0008 (0x0008 - 0x0000)
struct MidiEventDriverInterface_SecondsToTick final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_SecondsToTick) == 0x000004, "Wrong alignment on MidiEventDriverInterface_SecondsToTick");
static_assert(sizeof(MidiEventDriverInterface_SecondsToTick) == 0x000008, "Wrong size on MidiEventDriverInterface_SecondsToTick");
static_assert(offsetof(MidiEventDriverInterface_SecondsToTick, Seconds) == 0x000000, "Member 'MidiEventDriverInterface_SecondsToTick::Seconds' has a wrong offset!");
static_assert(offsetof(MidiEventDriverInterface_SecondsToTick, ReturnValue) == 0x000004, "Member 'MidiEventDriverInterface_SecondsToTick::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventDriverInterface.TickToSeconds
// 0x0008 (0x0008 - 0x0000)
struct MidiEventDriverInterface_TickToSeconds final
{
public:
	int32                                         Tick;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventDriverInterface_TickToSeconds) == 0x000004, "Wrong alignment on MidiEventDriverInterface_TickToSeconds");
static_assert(sizeof(MidiEventDriverInterface_TickToSeconds) == 0x000008, "Wrong size on MidiEventDriverInterface_TickToSeconds");
static_assert(offsetof(MidiEventDriverInterface_TickToSeconds, Tick) == 0x000000, "Member 'MidiEventDriverInterface_TickToSeconds::Tick' has a wrong offset!");
static_assert(offsetof(MidiEventDriverInterface_TickToSeconds, ReturnValue) == 0x000004, "Member 'MidiEventDriverInterface_TickToSeconds::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.MidiEventListenerSubsystem.CancelAllListenersForDriver
// 0x0010 (0x0010 - 0x0000)
struct MidiEventListenerSubsystem_CancelAllListenersForDriver final
{
public:
	TScriptInterface<class IMidiEventDriverInterface> Driver;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventListenerSubsystem_CancelAllListenersForDriver) == 0x000008, "Wrong alignment on MidiEventListenerSubsystem_CancelAllListenersForDriver");
static_assert(sizeof(MidiEventListenerSubsystem_CancelAllListenersForDriver) == 0x000010, "Wrong size on MidiEventListenerSubsystem_CancelAllListenersForDriver");
static_assert(offsetof(MidiEventListenerSubsystem_CancelAllListenersForDriver, Driver) == 0x000000, "Member 'MidiEventListenerSubsystem_CancelAllListenersForDriver::Driver' has a wrong offset!");

// Function SparksMidiParser.MidiEventListenerSubsystem.CancelListener
// 0x0010 (0x0010 - 0x0000)
struct MidiEventListenerSubsystem_CancelListener final
{
public:
	struct FMidiEventListenerHandle               Handle;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MidiEventListenerSubsystem_CancelListener) == 0x000008, "Wrong alignment on MidiEventListenerSubsystem_CancelListener");
static_assert(sizeof(MidiEventListenerSubsystem_CancelListener) == 0x000010, "Wrong size on MidiEventListenerSubsystem_CancelListener");
static_assert(offsetof(MidiEventListenerSubsystem_CancelListener, Handle) == 0x000000, "Member 'MidiEventListenerSubsystem_CancelListener::Handle' has a wrong offset!");

// Function SparksMidiParser.MidiEventListenerSubsystem.IsListenerActive
// 0x0018 (0x0018 - 0x0000)
struct MidiEventListenerSubsystem_IsListenerActive final
{
public:
	struct FMidiEventListenerHandle               Handle;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MidiEventListenerSubsystem_IsListenerActive) == 0x000008, "Wrong alignment on MidiEventListenerSubsystem_IsListenerActive");
static_assert(sizeof(MidiEventListenerSubsystem_IsListenerActive) == 0x000018, "Wrong size on MidiEventListenerSubsystem_IsListenerActive");
static_assert(offsetof(MidiEventListenerSubsystem_IsListenerActive, Handle) == 0x000000, "Member 'MidiEventListenerSubsystem_IsListenerActive::Handle' has a wrong offset!");
static_assert(offsetof(MidiEventListenerSubsystem_IsListenerActive, ReturnValue) == 0x000010, "Member 'MidiEventListenerSubsystem_IsListenerActive::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetAllMidiNoteEvents
// 0x0050 (0x0050 - 0x0000)
struct ParsedMidiEventData_GetAllMidiNoteEvents final
{
public:
	TMap<class FName, struct FMidiNoteEventList>  ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetAllMidiNoteEvents) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetAllMidiNoteEvents");
static_assert(sizeof(ParsedMidiEventData_GetAllMidiNoteEvents) == 0x000050, "Wrong size on ParsedMidiEventData_GetAllMidiNoteEvents");
static_assert(offsetof(ParsedMidiEventData_GetAllMidiNoteEvents, ReturnValue) == 0x000000, "Member 'ParsedMidiEventData_GetAllMidiNoteEvents::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetAllMidiTextEvents
// 0x0050 (0x0050 - 0x0000)
struct ParsedMidiEventData_GetAllMidiTextEvents final
{
public:
	TMap<class FName, struct FMidiTextEventList>  ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetAllMidiTextEvents) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetAllMidiTextEvents");
static_assert(sizeof(ParsedMidiEventData_GetAllMidiTextEvents) == 0x000050, "Wrong size on ParsedMidiEventData_GetAllMidiTextEvents");
static_assert(offsetof(ParsedMidiEventData_GetAllMidiTextEvents, ReturnValue) == 0x000000, "Member 'ParsedMidiEventData_GetAllMidiTextEvents::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetMidiFile
// 0x0008 (0x0008 - 0x0000)
struct ParsedMidiEventData_GetMidiFile final
{
public:
	const class UMidiFile*                        ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetMidiFile) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetMidiFile");
static_assert(sizeof(ParsedMidiEventData_GetMidiFile) == 0x000008, "Wrong size on ParsedMidiEventData_GetMidiFile");
static_assert(offsetof(ParsedMidiEventData_GetMidiFile, ReturnValue) == 0x000000, "Member 'ParsedMidiEventData_GetMidiFile::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetMidiNoteEvents
// 0x0018 (0x0018 - 0x0000)
struct ParsedMidiEventData_GetMidiNoteEvents final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParsedMidiNoteEvent>           ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetMidiNoteEvents) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetMidiNoteEvents");
static_assert(sizeof(ParsedMidiEventData_GetMidiNoteEvents) == 0x000018, "Wrong size on ParsedMidiEventData_GetMidiNoteEvents");
static_assert(offsetof(ParsedMidiEventData_GetMidiNoteEvents, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetMidiNoteEvents::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetMidiNoteEvents, ReturnValue) == 0x000008, "Member 'ParsedMidiEventData_GetMidiNoteEvents::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetMidiNoteEventsWithInts
// 0x0028 (0x0028 - 0x0000)
struct ParsedMidiEventData_GetMidiNoteEventsWithInts final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 MidiEventInts;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FParsedMidiNoteEvent>           OutArray;                                          // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetMidiNoteEventsWithInts) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetMidiNoteEventsWithInts");
static_assert(sizeof(ParsedMidiEventData_GetMidiNoteEventsWithInts) == 0x000028, "Wrong size on ParsedMidiEventData_GetMidiNoteEventsWithInts");
static_assert(offsetof(ParsedMidiEventData_GetMidiNoteEventsWithInts, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetMidiNoteEventsWithInts::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetMidiNoteEventsWithInts, MidiEventInts) == 0x000008, "Member 'ParsedMidiEventData_GetMidiNoteEventsWithInts::MidiEventInts' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetMidiNoteEventsWithInts, OutArray) == 0x000018, "Member 'ParsedMidiEventData_GetMidiNoteEventsWithInts::OutArray' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetMidiTextEvents
// 0x0018 (0x0018 - 0x0000)
struct ParsedMidiEventData_GetMidiTextEvents final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParsedMidiTextEvent>           ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetMidiTextEvents) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetMidiTextEvents");
static_assert(sizeof(ParsedMidiEventData_GetMidiTextEvents) == 0x000018, "Wrong size on ParsedMidiEventData_GetMidiTextEvents");
static_assert(offsetof(ParsedMidiEventData_GetMidiTextEvents, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetMidiTextEvents::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetMidiTextEvents, ReturnValue) == 0x000008, "Member 'ParsedMidiEventData_GetMidiTextEvents::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetMidiTextEventsWithStrings
// 0x0028 (0x0028 - 0x0000)
struct ParsedMidiEventData_GetMidiTextEventsWithStrings final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         MidiEventStrings;                                  // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FParsedMidiTextEvent>           OutArray;                                          // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetMidiTextEventsWithStrings) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetMidiTextEventsWithStrings");
static_assert(sizeof(ParsedMidiEventData_GetMidiTextEventsWithStrings) == 0x000028, "Wrong size on ParsedMidiEventData_GetMidiTextEventsWithStrings");
static_assert(offsetof(ParsedMidiEventData_GetMidiTextEventsWithStrings, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetMidiTextEventsWithStrings::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetMidiTextEventsWithStrings, MidiEventStrings) == 0x000008, "Member 'ParsedMidiEventData_GetMidiTextEventsWithStrings::MidiEventStrings' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetMidiTextEventsWithStrings, OutArray) == 0x000018, "Member 'ParsedMidiEventData_GetMidiTextEventsWithStrings::OutArray' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetPreviousMidiNoteEventsWithInts
// 0x0030 (0x0030 - 0x0000)
struct ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 MidiEventInts;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         UpToMidiTick;                                      // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMidiNoteEventList>             OutResults;                                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts");
static_assert(sizeof(ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts) == 0x000030, "Wrong size on ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts, MidiEventInts) == 0x000008, "Member 'ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts::MidiEventInts' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts, UpToMidiTick) == 0x000018, "Member 'ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts::UpToMidiTick' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts, OutResults) == 0x000020, "Member 'ParsedMidiEventData_GetPreviousMidiNoteEventsWithInts::OutResults' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetPreviousMidiTextEventsWithStrings
// 0x0030 (0x0030 - 0x0000)
struct ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         MidiEventStrings;                                  // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         UpToMidiTick;                                      // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMidiTextEventList>             OutResults;                                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings");
static_assert(sizeof(ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings) == 0x000030, "Wrong size on ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings, MidiEventStrings) == 0x000008, "Member 'ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings::MidiEventStrings' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings, UpToMidiTick) == 0x000018, "Member 'ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings::UpToMidiTick' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings, OutResults) == 0x000020, "Member 'ParsedMidiEventData_GetPreviousMidiTextEventsWithStrings::OutResults' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetRecentOrFirstMidiNoteEvent
// 0x0030 (0x0030 - 0x0000)
struct ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 MidiEventInts;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         UpToMidiTick;                                      // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FParsedMidiNoteEvent                   OutResult;                                         // 0x001C(0x000C)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent");
static_assert(sizeof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent) == 0x000030, "Wrong size on ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent, MidiEventInts) == 0x000008, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent::MidiEventInts' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent, UpToMidiTick) == 0x000018, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent::UpToMidiTick' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent, OutResult) == 0x00001C, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent::OutResult' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent, ReturnValue) == 0x000028, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiNoteEvent::ReturnValue' has a wrong offset!");

// Function SparksMidiParser.ParsedMidiEventData.GetRecentOrFirstMidiTextEvent
// 0x0050 (0x0050 - 0x0000)
struct ParsedMidiEventData_GetRecentOrFirstMidiTextEvent final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         MidiEventStrings;                                  // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         UpToMidiTick;                                      // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParsedMidiTextEvent                   OutResult;                                         // 0x0020(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent) == 0x000008, "Wrong alignment on ParsedMidiEventData_GetRecentOrFirstMidiTextEvent");
static_assert(sizeof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent) == 0x000050, "Wrong size on ParsedMidiEventData_GetRecentOrFirstMidiTextEvent");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent, TrackName) == 0x000000, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiTextEvent::TrackName' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent, MidiEventStrings) == 0x000008, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiTextEvent::MidiEventStrings' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent, UpToMidiTick) == 0x000018, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiTextEvent::UpToMidiTick' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent, OutResult) == 0x000020, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiTextEvent::OutResult' has a wrong offset!");
static_assert(offsetof(ParsedMidiEventData_GetRecentOrFirstMidiTextEvent, ReturnValue) == 0x000048, "Member 'ParsedMidiEventData_GetRecentOrFirstMidiTextEvent::ReturnValue' has a wrong offset!");

}

