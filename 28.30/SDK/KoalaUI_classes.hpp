#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KoalaUI

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "KoalaUI_structs.hpp"


namespace SDK
{

// Class KoalaUI.FortGameSettingRegistryExtension_Koala
// 0x0040 (0x0068 - 0x0028)
class UFortGameSettingRegistryExtension_Koala final : public UFortGameSettingRegistryExtension
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortSettingNameExtensions             SettingExtensions;                                 // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x20];                                      // 0x0048(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameSettingRegistryExtension_Koala">();
	}
	static class UFortGameSettingRegistryExtension_Koala* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameSettingRegistryExtension_Koala>();
	}
};
static_assert(alignof(UFortGameSettingRegistryExtension_Koala) == 0x000008, "Wrong alignment on UFortGameSettingRegistryExtension_Koala");
static_assert(sizeof(UFortGameSettingRegistryExtension_Koala) == 0x000068, "Wrong size on UFortGameSettingRegistryExtension_Koala");
static_assert(offsetof(UFortGameSettingRegistryExtension_Koala, SettingExtensions) == 0x000030, "Member 'UFortGameSettingRegistryExtension_Koala::SettingExtensions' has a wrong offset!");

// Class KoalaUI.FortSidebarPanelKoala
// 0x0038 (0x0438 - 0x0400)
class UFortSidebarPanelKoala : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x18];                                     // 0x0400(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      Button_KoalaDummy;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortLazyImage*                         QrCodeImage;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 QRCodeURL;                                         // 0x0428(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnConnectionChanged(bool bConnected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSidebarPanelKoala">();
	}
	static class UFortSidebarPanelKoala* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSidebarPanelKoala>();
	}
};
static_assert(alignof(UFortSidebarPanelKoala) == 0x000008, "Wrong alignment on UFortSidebarPanelKoala");
static_assert(sizeof(UFortSidebarPanelKoala) == 0x000438, "Wrong size on UFortSidebarPanelKoala");
static_assert(offsetof(UFortSidebarPanelKoala, Button_KoalaDummy) == 0x000418, "Member 'UFortSidebarPanelKoala::Button_KoalaDummy' has a wrong offset!");
static_assert(offsetof(UFortSidebarPanelKoala, QrCodeImage) == 0x000420, "Member 'UFortSidebarPanelKoala::QrCodeImage' has a wrong offset!");
static_assert(offsetof(UFortSidebarPanelKoala, QRCodeURL) == 0x000428, "Member 'UFortSidebarPanelKoala::QRCodeURL' has a wrong offset!");

// Class KoalaUI.FortUIGameFeatureAction_AttemptKoalaModal
// 0x0038 (0x0068 - 0x0030)
class UFortUIGameFeatureAction_AttemptKoalaModal final : public UFortUIGameFeatureAction_PostFrontendFlowActions
{
public:
	TSoftClassPtr<class UClass>                   KoalaGraphicsModalClass;                           // 0x0030(0x0020)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortUIGameFeatureAction_AttemptKoalaModal">();
	}
	static class UFortUIGameFeatureAction_AttemptKoalaModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortUIGameFeatureAction_AttemptKoalaModal>();
	}
};
static_assert(alignof(UFortUIGameFeatureAction_AttemptKoalaModal) == 0x000008, "Wrong alignment on UFortUIGameFeatureAction_AttemptKoalaModal");
static_assert(sizeof(UFortUIGameFeatureAction_AttemptKoalaModal) == 0x000068, "Wrong size on UFortUIGameFeatureAction_AttemptKoalaModal");
static_assert(offsetof(UFortUIGameFeatureAction_AttemptKoalaModal, KoalaGraphicsModalClass) == 0x000030, "Member 'UFortUIGameFeatureAction_AttemptKoalaModal::KoalaGraphicsModalClass' has a wrong offset!");

// Class KoalaUI.KoalaGraphicsModal
// 0x0028 (0x0428 - 0x0400)
class UKoalaGraphicsModal final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x18];                                     // 0x0400(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      Button_KeepEnabled;                                // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Disable;                                    // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KoalaGraphicsModal">();
	}
	static class UKoalaGraphicsModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKoalaGraphicsModal>();
	}
};
static_assert(alignof(UKoalaGraphicsModal) == 0x000008, "Wrong alignment on UKoalaGraphicsModal");
static_assert(sizeof(UKoalaGraphicsModal) == 0x000428, "Wrong size on UKoalaGraphicsModal");
static_assert(offsetof(UKoalaGraphicsModal, Button_KeepEnabled) == 0x000418, "Member 'UKoalaGraphicsModal::Button_KeepEnabled' has a wrong offset!");
static_assert(offsetof(UKoalaGraphicsModal, Button_Disable) == 0x000420, "Member 'UKoalaGraphicsModal::Button_Disable' has a wrong offset!");

// Class KoalaUI.KoalaHUDWidget
// 0x0158 (0x0558 - 0x0400)
class UKoalaHUDWidget final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x8];                                      // 0x0400(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClipDebounceTime;                                  // 0x0408(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PlayerKilledPlayerReminderTime;                    // 0x040C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MatchEndedReminderTime;                            // 0x0410(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ClipReminderCooldownTime;                          // 0x0414(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EliminationClipReminderDelayTime;                  // 0x0418(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundSubmix*                           ClipAudioSubmix;                                   // 0x0420(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActionWidget*                    ClipActionWidget;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    ClipObjectInputAction;                             // 0x0430(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_440[0x8];                                      // 0x0440(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FKoalaClipInfo>            ClipTracker;                                       // 0x0448(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastClipID;                                        // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A4[0x16];                                     // 0x04A4(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	EKoalaMockClipMode                            MockClipMode;                                      // 0x04BA(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4BB[0x1];                                      // 0x04BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MockClipUploadShortTime;                           // 0x04BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MockClipUploadLongTime;                            // 0x04C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MockClipCreateShortTime;                           // 0x04C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MockClipCreateLongTime;                            // 0x04C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4CC[0x8C];                                     // 0x04CC(0x008C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetTrackedClipCount();
	void HandleLocalPlayerKilledPlayer(const class AFortPlayerStateAthena* Player);
	void HandlePlayerMatchWon();
	void HandlePlayerPawnEmoteStopped(const class UFortItemDefinition* MontageItemDef, class AFortPawn* PawnEmoting);
	void OnAvailabilityChanged(EKoalaAvailability Availability);
	void OnClipStatusChanged(int32 InClipID, EKoalaClipStatus InClipStatus, float InUploadProgress);
	void OnConnectionChanged(EKoalaConnectionStatus InStatus);
	void OnInputComplete();
	void OnInputProgress(float Progress);
	void OnRecordingStatusChanged(EKoalaRecording InRecordingStatus);
	void OnReminderEnded();
	void OnReminderTimerStarted(float Time);
	void OnTouchAreaMouseDown();
	void RegisterClipButtonInput();
	void UnregisterClipButtonInput();

	int32 GetUploadingClipCount() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KoalaHUDWidget">();
	}
	static class UKoalaHUDWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKoalaHUDWidget>();
	}
};
static_assert(alignof(UKoalaHUDWidget) == 0x000008, "Wrong alignment on UKoalaHUDWidget");
static_assert(sizeof(UKoalaHUDWidget) == 0x000558, "Wrong size on UKoalaHUDWidget");
static_assert(offsetof(UKoalaHUDWidget, ClipDebounceTime) == 0x000408, "Member 'UKoalaHUDWidget::ClipDebounceTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, PlayerKilledPlayerReminderTime) == 0x00040C, "Member 'UKoalaHUDWidget::PlayerKilledPlayerReminderTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, MatchEndedReminderTime) == 0x000410, "Member 'UKoalaHUDWidget::MatchEndedReminderTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, ClipReminderCooldownTime) == 0x000414, "Member 'UKoalaHUDWidget::ClipReminderCooldownTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, EliminationClipReminderDelayTime) == 0x000418, "Member 'UKoalaHUDWidget::EliminationClipReminderDelayTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, ClipAudioSubmix) == 0x000420, "Member 'UKoalaHUDWidget::ClipAudioSubmix' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, ClipActionWidget) == 0x000428, "Member 'UKoalaHUDWidget::ClipActionWidget' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, ClipObjectInputAction) == 0x000430, "Member 'UKoalaHUDWidget::ClipObjectInputAction' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, ClipTracker) == 0x000448, "Member 'UKoalaHUDWidget::ClipTracker' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, LastClipID) == 0x0004A0, "Member 'UKoalaHUDWidget::LastClipID' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, MockClipMode) == 0x0004BA, "Member 'UKoalaHUDWidget::MockClipMode' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, MockClipUploadShortTime) == 0x0004BC, "Member 'UKoalaHUDWidget::MockClipUploadShortTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, MockClipUploadLongTime) == 0x0004C0, "Member 'UKoalaHUDWidget::MockClipUploadLongTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, MockClipCreateShortTime) == 0x0004C4, "Member 'UKoalaHUDWidget::MockClipCreateShortTime' has a wrong offset!");
static_assert(offsetof(UKoalaHUDWidget, MockClipCreateLongTime) == 0x0004C8, "Member 'UKoalaHUDWidget::MockClipCreateLongTime' has a wrong offset!");

// Class KoalaUI.KoalaMainMenuButton
// 0x0010 (0x1620 - 0x1610)
class UKoalaMainMenuButton final : public UFortMainMenuButtonExtension
{
public:
	uint8                                         Pad_1610[0x10];                                    // 0x1610(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KoalaMainMenuButton">();
	}
	static class UKoalaMainMenuButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKoalaMainMenuButton>();
	}
};
static_assert(alignof(UKoalaMainMenuButton) == 0x000010, "Wrong alignment on UKoalaMainMenuButton");
static_assert(sizeof(UKoalaMainMenuButton) == 0x001620, "Wrong size on UKoalaMainMenuButton");

// Class KoalaUI.KoalaSettingDetailExtension
// 0x0008 (0x02D0 - 0x02C8)
class UKoalaSettingDetailExtension final : public UFortSettingDetailExtension
{
public:
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAvailabilityChanged(bool bAvailable);
	void OnConnectionChanged(bool bConnected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KoalaSettingDetailExtension">();
	}
	static class UKoalaSettingDetailExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKoalaSettingDetailExtension>();
	}
};
static_assert(alignof(UKoalaSettingDetailExtension) == 0x000008, "Wrong alignment on UKoalaSettingDetailExtension");
static_assert(sizeof(UKoalaSettingDetailExtension) == 0x0002D0, "Wrong size on UKoalaSettingDetailExtension");

}

