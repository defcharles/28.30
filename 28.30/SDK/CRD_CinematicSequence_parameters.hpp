#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_CinematicSequence

#include "Basic.hpp"


namespace SDK::Params
{

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.HandleSequencePlayerCreated
// 0x0008 (0x0008 - 0x0000)
struct CinematicSequenceDeviceBase_HandleSequencePlayerCreated final
{
public:
	class ULevelSequencePlayer*                   Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_HandleSequencePlayerCreated) == 0x000008, "Wrong alignment on CinematicSequenceDeviceBase_HandleSequencePlayerCreated");
static_assert(sizeof(CinematicSequenceDeviceBase_HandleSequencePlayerCreated) == 0x000008, "Wrong size on CinematicSequenceDeviceBase_HandleSequencePlayerCreated");
static_assert(offsetof(CinematicSequenceDeviceBase_HandleSequencePlayerCreated, Player) == 0x000000, "Member 'CinematicSequenceDeviceBase_HandleSequencePlayerCreated::Player' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.SetPlaybackFrame
// 0x0004 (0x0004 - 0x0000)
struct CinematicSequenceDeviceBase_SetPlaybackFrame final
{
public:
	int32                                         Frame;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_SetPlaybackFrame) == 0x000004, "Wrong alignment on CinematicSequenceDeviceBase_SetPlaybackFrame");
static_assert(sizeof(CinematicSequenceDeviceBase_SetPlaybackFrame) == 0x000004, "Wrong size on CinematicSequenceDeviceBase_SetPlaybackFrame");
static_assert(offsetof(CinematicSequenceDeviceBase_SetPlaybackFrame, Frame) == 0x000000, "Member 'CinematicSequenceDeviceBase_SetPlaybackFrame::Frame' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.SetPlaybackTime
// 0x0004 (0x0004 - 0x0000)
struct CinematicSequenceDeviceBase_SetPlaybackTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_SetPlaybackTime) == 0x000004, "Wrong alignment on CinematicSequenceDeviceBase_SetPlaybackTime");
static_assert(sizeof(CinematicSequenceDeviceBase_SetPlaybackTime) == 0x000004, "Wrong size on CinematicSequenceDeviceBase_SetPlaybackTime");
static_assert(offsetof(CinematicSequenceDeviceBase_SetPlaybackTime, Time) == 0x000000, "Member 'CinematicSequenceDeviceBase_SetPlaybackTime::Time' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.SetPlayRate
// 0x0004 (0x0004 - 0x0000)
struct CinematicSequenceDeviceBase_SetPlayRate final
{
public:
	float                                         PlayRate_0;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_SetPlayRate) == 0x000004, "Wrong alignment on CinematicSequenceDeviceBase_SetPlayRate");
static_assert(sizeof(CinematicSequenceDeviceBase_SetPlayRate) == 0x000004, "Wrong size on CinematicSequenceDeviceBase_SetPlayRate");
static_assert(offsetof(CinematicSequenceDeviceBase_SetPlayRate, PlayRate_0) == 0x000000, "Member 'CinematicSequenceDeviceBase_SetPlayRate::PlayRate_0' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.SetSequence
// 0x0008 (0x0008 - 0x0000)
struct CinematicSequenceDeviceBase_SetSequence final
{
public:
	class ULevelSequence*                         Sequence_0;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_SetSequence) == 0x000008, "Wrong alignment on CinematicSequenceDeviceBase_SetSequence");
static_assert(sizeof(CinematicSequenceDeviceBase_SetSequence) == 0x000008, "Wrong size on CinematicSequenceDeviceBase_SetSequence");
static_assert(offsetof(CinematicSequenceDeviceBase_SetSequence, Sequence_0) == 0x000000, "Member 'CinematicSequenceDeviceBase_SetSequence::Sequence_0' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.GetPlaybackFrame
// 0x0004 (0x0004 - 0x0000)
struct CinematicSequenceDeviceBase_GetPlaybackFrame final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_GetPlaybackFrame) == 0x000004, "Wrong alignment on CinematicSequenceDeviceBase_GetPlaybackFrame");
static_assert(sizeof(CinematicSequenceDeviceBase_GetPlaybackFrame) == 0x000004, "Wrong size on CinematicSequenceDeviceBase_GetPlaybackFrame");
static_assert(offsetof(CinematicSequenceDeviceBase_GetPlaybackFrame, ReturnValue) == 0x000000, "Member 'CinematicSequenceDeviceBase_GetPlaybackFrame::ReturnValue' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.GetPlaybackTime
// 0x0004 (0x0004 - 0x0000)
struct CinematicSequenceDeviceBase_GetPlaybackTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_GetPlaybackTime) == 0x000004, "Wrong alignment on CinematicSequenceDeviceBase_GetPlaybackTime");
static_assert(sizeof(CinematicSequenceDeviceBase_GetPlaybackTime) == 0x000004, "Wrong size on CinematicSequenceDeviceBase_GetPlaybackTime");
static_assert(offsetof(CinematicSequenceDeviceBase_GetPlaybackTime, ReturnValue) == 0x000000, "Member 'CinematicSequenceDeviceBase_GetPlaybackTime::ReturnValue' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.GetPlayRate
// 0x0004 (0x0004 - 0x0000)
struct CinematicSequenceDeviceBase_GetPlayRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_GetPlayRate) == 0x000004, "Wrong alignment on CinematicSequenceDeviceBase_GetPlayRate");
static_assert(sizeof(CinematicSequenceDeviceBase_GetPlayRate) == 0x000004, "Wrong size on CinematicSequenceDeviceBase_GetPlayRate");
static_assert(offsetof(CinematicSequenceDeviceBase_GetPlayRate, ReturnValue) == 0x000000, "Member 'CinematicSequenceDeviceBase_GetPlayRate::ReturnValue' has a wrong offset!");

// Function CRD_CinematicSequence.CinematicSequenceDeviceBase.GetSequencePlayer
// 0x0008 (0x0008 - 0x0000)
struct CinematicSequenceDeviceBase_GetSequencePlayer final
{
public:
	class UMovieSceneSequencePlayer*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CinematicSequenceDeviceBase_GetSequencePlayer) == 0x000008, "Wrong alignment on CinematicSequenceDeviceBase_GetSequencePlayer");
static_assert(sizeof(CinematicSequenceDeviceBase_GetSequencePlayer) == 0x000008, "Wrong size on CinematicSequenceDeviceBase_GetSequencePlayer");
static_assert(offsetof(CinematicSequenceDeviceBase_GetSequencePlayer, ReturnValue) == 0x000000, "Member 'CinematicSequenceDeviceBase_GetSequencePlayer::ReturnValue' has a wrong offset!");

}

