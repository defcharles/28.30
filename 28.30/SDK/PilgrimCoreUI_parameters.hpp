#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimCoreUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function PilgrimCoreUI.PilgrimPlayerInfoWidgetBase.HookUpVoiceIcon
// 0x0010 (0x0010 - 0x0000)
struct PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon final
{
public:
	class UFortVoiceChatStatusIcon*               Icon;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerStateAthena*                 Player;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon) == 0x000008, "Wrong alignment on PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon");
static_assert(sizeof(PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon) == 0x000010, "Wrong size on PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon");
static_assert(offsetof(PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon, Icon) == 0x000000, "Member 'PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon::Icon' has a wrong offset!");
static_assert(offsetof(PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon, Player) == 0x000008, "Member 'PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon::Player' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimPostGameProgressWidget.GetMatchXP
// 0x0004 (0x0004 - 0x0000)
struct PilgrimPostGameProgressWidget_GetMatchXP final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPostGameProgressWidget_GetMatchXP) == 0x000004, "Wrong alignment on PilgrimPostGameProgressWidget_GetMatchXP");
static_assert(sizeof(PilgrimPostGameProgressWidget_GetMatchXP) == 0x000004, "Wrong size on PilgrimPostGameProgressWidget_GetMatchXP");
static_assert(offsetof(PilgrimPostGameProgressWidget_GetMatchXP, ReturnValue) == 0x000000, "Member 'PilgrimPostGameProgressWidget_GetMatchXP::ReturnValue' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimPostGameProgressWidget.GetTotalXP
// 0x0004 (0x0004 - 0x0000)
struct PilgrimPostGameProgressWidget_GetTotalXP final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPostGameProgressWidget_GetTotalXP) == 0x000004, "Wrong alignment on PilgrimPostGameProgressWidget_GetTotalXP");
static_assert(sizeof(PilgrimPostGameProgressWidget_GetTotalXP) == 0x000004, "Wrong size on PilgrimPostGameProgressWidget_GetTotalXP");
static_assert(offsetof(PilgrimPostGameProgressWidget_GetTotalXP, ReturnValue) == 0x000000, "Member 'PilgrimPostGameProgressWidget_GetTotalXP::ReturnValue' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimPresetSelector.OnPresetSelected
// 0x0008 (0x0008 - 0x0000)
struct PilgrimPresetSelector_OnPresetSelected final
{
public:
	int32                                         SelectedNumLanes;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SelectedPresetIndex;                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPresetSelector_OnPresetSelected) == 0x000004, "Wrong alignment on PilgrimPresetSelector_OnPresetSelected");
static_assert(sizeof(PilgrimPresetSelector_OnPresetSelected) == 0x000008, "Wrong size on PilgrimPresetSelector_OnPresetSelected");
static_assert(offsetof(PilgrimPresetSelector_OnPresetSelected, SelectedNumLanes) == 0x000000, "Member 'PilgrimPresetSelector_OnPresetSelected::SelectedNumLanes' has a wrong offset!");
static_assert(offsetof(PilgrimPresetSelector_OnPresetSelected, SelectedPresetIndex) == 0x000004, "Member 'PilgrimPresetSelector_OnPresetSelected::SelectedPresetIndex' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimPresetSelector.OnPresetSelectionRequested
// 0x0008 (0x0008 - 0x0000)
struct PilgrimPresetSelector_OnPresetSelectionRequested final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPresetSelector_OnPresetSelectionRequested) == 0x000008, "Wrong alignment on PilgrimPresetSelector_OnPresetSelectionRequested");
static_assert(sizeof(PilgrimPresetSelector_OnPresetSelectionRequested) == 0x000008, "Wrong size on PilgrimPresetSelector_OnPresetSelectionRequested");
static_assert(offsetof(PilgrimPresetSelector_OnPresetSelectionRequested, Player) == 0x000000, "Member 'PilgrimPresetSelector_OnPresetSelectionRequested::Player' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimPresetSwitcher.GetSelectedItems
// 0x0008 (0x0008 - 0x0000)
struct PilgrimPresetSwitcher_GetSelectedItems final
{
public:
	int32                                         OutSelectedLaneNum;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSelectedIndex;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPresetSwitcher_GetSelectedItems) == 0x000004, "Wrong alignment on PilgrimPresetSwitcher_GetSelectedItems");
static_assert(sizeof(PilgrimPresetSwitcher_GetSelectedItems) == 0x000008, "Wrong size on PilgrimPresetSwitcher_GetSelectedItems");
static_assert(offsetof(PilgrimPresetSwitcher_GetSelectedItems, OutSelectedLaneNum) == 0x000000, "Member 'PilgrimPresetSwitcher_GetSelectedItems::OutSelectedLaneNum' has a wrong offset!");
static_assert(offsetof(PilgrimPresetSwitcher_GetSelectedItems, OutSelectedIndex) == 0x000004, "Member 'PilgrimPresetSwitcher_GetSelectedItems::OutSelectedIndex' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimPresetSwitcher.InitializeForLanes
// 0x0018 (0x0018 - 0x0000)
struct PilgrimPresetSwitcher_InitializeForLanes final
{
public:
	int32                                         NewNumLanes;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortInputMappingContext*>       InputMappingContexts;                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimPresetSwitcher_InitializeForLanes) == 0x000008, "Wrong alignment on PilgrimPresetSwitcher_InitializeForLanes");
static_assert(sizeof(PilgrimPresetSwitcher_InitializeForLanes) == 0x000018, "Wrong size on PilgrimPresetSwitcher_InitializeForLanes");
static_assert(offsetof(PilgrimPresetSwitcher_InitializeForLanes, NewNumLanes) == 0x000000, "Member 'PilgrimPresetSwitcher_InitializeForLanes::NewNumLanes' has a wrong offset!");
static_assert(offsetof(PilgrimPresetSwitcher_InitializeForLanes, InputMappingContexts) == 0x000008, "Member 'PilgrimPresetSwitcher_InitializeForLanes::InputMappingContexts' has a wrong offset!");

// Function PilgrimCoreUI.PilgrimSongFilterVM.Initialize
// 0x0008 (0x0008 - 0x0000)
struct PilgrimSongFilterVM_Initialize final
{
public:
	class APlayerController*                      InOwningController;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PilgrimSongFilterVM_Initialize) == 0x000008, "Wrong alignment on PilgrimSongFilterVM_Initialize");
static_assert(sizeof(PilgrimSongFilterVM_Initialize) == 0x000008, "Wrong size on PilgrimSongFilterVM_Initialize");
static_assert(offsetof(PilgrimSongFilterVM_Initialize, InOwningController) == 0x000000, "Member 'PilgrimSongFilterVM_Initialize::InOwningController' has a wrong offset!");

}

