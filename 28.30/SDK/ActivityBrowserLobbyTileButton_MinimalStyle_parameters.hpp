#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserLobbyTileButton_MinimalStyle

#include "Basic.hpp"


namespace SDK::Params
{

// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle
// 0x0028 (0x0028 - 0x0000)
struct ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_DisplayName;                          // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle) == 0x000008, "Wrong alignment on ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle");
static_assert(sizeof(ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle) == 0x000028, "Wrong size on ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle, EntryPoint) == 0x000000, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle::EntryPoint' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle, K2Node_Event_DisplayName) == 0x000008, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle::K2Node_Event_DisplayName' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle, K2Node_Event_IsDesignTime) == 0x000020, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_ExecuteUbergraph_ActivityBrowserLobbyTileButton_MinimalStyle::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.Limit Text Characters
// 0x00B0 (0x00B0 - 0x0000)
struct ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Max_Spaces;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Length;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Trimmed_Text;                                      // 0x0020(0x0018)(Parm, OutParm)
	int32                                         StartPosition;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters) == 0x000008, "Wrong alignment on ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters");
static_assert(sizeof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters) == 0x0000B0, "Wrong size on ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, Text) == 0x000000, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::Text' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, Max_Spaces) == 0x000018, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::Max_Spaces' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, Max_Length) == 0x00001C, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::Max_Length' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, Trimmed_Text) == 0x000020, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::Trimmed_Text' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, StartPosition) == 0x000038, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::StartPosition' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, Temp_int_Variable) == 0x000050, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_GetSubstring_ReturnValue) == 0x000058, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, Temp_bool_Variable) == 0x000070, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_GetSubstring_ReturnValue_1) == 0x000078, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_FindSubstring_ReturnValue) == 0x0000A0, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters, K2Node_Select_Default) == 0x0000AC, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_Limit_Text_Characters::K2Node_Select_Default' has a wrong offset!");

// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.OnShowChildActivityChangedNotification
// 0x0018 (0x0018 - 0x0000)
struct ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification) == 0x000008, "Wrong alignment on ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification");
static_assert(sizeof(ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification) == 0x000018, "Wrong size on ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification, DisplayName) == 0x000000, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_OnShowChildActivityChangedNotification::DisplayName' has a wrong offset!");

// Function ActivityBrowserLobbyTileButton_MinimalStyle.ActivityBrowserLobbyTileButton_MinimalStyle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct) == 0x000001, "Wrong alignment on ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct");
static_assert(sizeof(ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct) == 0x000001, "Wrong size on ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct");
static_assert(offsetof(ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ActivityBrowserLobbyTileButton_MinimalStyle_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

