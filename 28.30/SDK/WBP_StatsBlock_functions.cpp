#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatsBlock

#include "Basic.hpp"

#include "WBP_StatsBlock_classes.hpp"
#include "WBP_StatsBlock_parameters.hpp"


namespace SDK
{

// Function WBP_StatsBlock.WBP_StatsBlock_C.ExecuteUbergraph_WBP_StatsBlock
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_StatsBlock_C::ExecuteUbergraph_WBP_StatsBlock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_StatsBlock");

	Params::WBP_StatsBlock_C_ExecuteUbergraph_WBP_StatsBlock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_StatsBlock.WBP_StatsBlock_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_StatsBlock_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::WBP_StatsBlock_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_StatsBlock.WBP_StatsBlock_C.SetEmptyDataState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEmpty                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_StatsBlock_C::SetEmptyDataState(bool IsEmpty)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetEmptyDataState");

	Params::WBP_StatsBlock_C_SetEmptyDataState Parms{};

	Parms.IsEmpty = IsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_StatsBlock.WBP_StatsBlock_C.SetTemplate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Label_0                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RatioTextFormat_0                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       IconTexture_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_StatsBlock_C::SetTemplate(const class FText& Label_0, const class FText& RatioTextFormat_0, class UTexture2D* IconTexture_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTemplate");

	Params::WBP_StatsBlock_C_SetTemplate Parms{};

	Parms.Label_0 = std::move(Label_0);
	Parms.RatioTextFormat_0 = std::move(RatioTextFormat_0);
	Parms.IconTexture_0 = IconTexture_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_StatsBlock.WBP_StatsBlock_C.SetValuesText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ValueText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RatioText                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_StatsBlock_C::SetValuesText(const class FText& ValueText, const class FText& RatioText)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetValuesText");

	Params::WBP_StatsBlock_C_SetValuesText Parms{};

	Parms.ValueText = std::move(ValueText);
	Parms.RatioText = std::move(RatioText);

	UObject::ProcessEvent(Func, &Parms);
}

}

