#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_SparksSongPreviewer

#include "Basic.hpp"

#include "BPC_SparksSongPreviewer_classes.hpp"
#include "BPC_SparksSongPreviewer_parameters.hpp"


namespace SDK
{

// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.Clear Current Preview and Start Pending Preview
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::Clear_Current_Preview_and_Start_Pending_Preview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Clear Current Preview and Start Pending Preview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.DoneFadingOutForStop
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::DoneFadingOutForStop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoneFadingOutForStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.ExecuteUbergraph_BPC_SparksSongPreviewer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::ExecuteUbergraph_BPC_SparksSongPreviewer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_BPC_SparksSongPreviewer");

	Params::BPC_SparksSongPreviewer_C_ExecuteUbergraph_BPC_SparksSongPreviewer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.Fade Out And Stop
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::Fade_Out_And_Stop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Fade Out And Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.FadeInAfterLoop
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::FadeInAfterLoop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FadeInAfterLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.FadeOutAtLoop
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::FadeOutAtLoop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FadeOutAtLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.ForceStopPreviewImmediate
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::ForceStopPreviewImmediate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ForceStopPreviewImmediate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.InitPreview
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::InitPreview()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.OnPlaybackResumed_Event
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::OnPlaybackResumed_Event()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlaybackResumed_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.OnVideoResumed
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::OnVideoResumed()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnVideoResumed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReceiveEndPlay");

	Params::BPC_SparksSongPreviewer_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.StartPreview
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SongShortName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::StartPreview(class FName SongShortName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartPreview");

	Params::BPC_SparksSongPreviewer_C_StartPreview Parms{};

	Parms.SongShortName = SongShortName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.StopPreview
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithFadeout                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::StopPreview(bool WithFadeout)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopPreview");

	Params::BPC_SparksSongPreviewer_C_StopPreview Parms{};

	Parms.WithFadeout = WithFadeout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.StopPreviewingSong
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithFadeout                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SongShortName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::StopPreviewingSong(bool WithFadeout, class FName SongShortName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopPreviewingSong");

	Params::BPC_SparksSongPreviewer_C_StopPreviewingSong Parms{};

	Parms.WithFadeout = WithFadeout;
	Parms.SongShortName = SongShortName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.VideoOnClosed_Event
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::VideoOnClosed_Event()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("VideoOnClosed_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.VideoOnSuccess_Event
// (BlueprintCallable, BlueprintEvent)

void UBPC_SparksSongPreviewer_C::VideoOnSuccess_Event()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("VideoOnSuccess_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.VideoOnTerminalError_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBaseMediaTerminalErrorReason           Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::VideoOnTerminalError_Event(EBaseMediaTerminalErrorReason Reason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("VideoOnTerminalError_Event");

	Params::BPC_SparksSongPreviewer_C_VideoOnTerminalError_Event Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C.IsPlayingPreview
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             Song                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Playing_Or_Pending                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Playing                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Pending                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_SparksSongPreviewer_C::IsPlayingPreview(class FName Song, bool* Is_Playing_Or_Pending, bool* Is_Playing, bool* Is_Pending) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPlayingPreview");

	Params::BPC_SparksSongPreviewer_C_IsPlayingPreview Parms{};

	Parms.Song = Song;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Playing_Or_Pending != nullptr)
		*Is_Playing_Or_Pending = Parms.Is_Playing_Or_Pending;

	if (Is_Playing != nullptr)
		*Is_Playing = Parms.Is_Playing;

	if (Is_Pending != nullptr)
		*Is_Pending = Parms.Is_Pending;
}

}

