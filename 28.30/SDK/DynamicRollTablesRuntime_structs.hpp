#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicRollTablesRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum DynamicRollTablesRuntime.ERollModifierOperation
// NumValues: 0x0003
enum class ERollModifierOperation : uint8
{
	Add                                      = 0,
	Multiply                                 = 1,
	Zero                                     = 2,
};

// ScriptStruct DynamicRollTablesRuntime.FortDynamicRollResult
// 0x0008 (0x0008 - 0x0000)
struct FFortDynamicRollResult final
{
public:
	class UFortItemDefinition*                    Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortDynamicRollResult) == 0x000008, "Wrong alignment on FFortDynamicRollResult");
static_assert(sizeof(FFortDynamicRollResult) == 0x000008, "Wrong size on FFortDynamicRollResult");
static_assert(offsetof(FFortDynamicRollResult, Item) == 0x000000, "Member 'FFortDynamicRollResult::Item' has a wrong offset!");

// ScriptStruct DynamicRollTablesRuntime.FortDynamicRollBaseWeightTableRow
// 0x0030 (0x0038 - 0x0008)
struct FFortDynamicRollBaseWeightTableRow : public FTableRowBase
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseWeight;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   ModTags;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOwningItemZerosWeight;                            // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxModifiedWeight;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinModifiedWeight;                                 // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFortDynamicRollBaseWeightTableRow) == 0x000008, "Wrong alignment on FFortDynamicRollBaseWeightTableRow");
static_assert(sizeof(FFortDynamicRollBaseWeightTableRow) == 0x000038, "Wrong size on FFortDynamicRollBaseWeightTableRow");
static_assert(offsetof(FFortDynamicRollBaseWeightTableRow, ItemDefinition) == 0x000008, "Member 'FFortDynamicRollBaseWeightTableRow::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollBaseWeightTableRow, BaseWeight) == 0x000010, "Member 'FFortDynamicRollBaseWeightTableRow::BaseWeight' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollBaseWeightTableRow, ModTags) == 0x000018, "Member 'FFortDynamicRollBaseWeightTableRow::ModTags' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollBaseWeightTableRow, bOwningItemZerosWeight) == 0x000028, "Member 'FFortDynamicRollBaseWeightTableRow::bOwningItemZerosWeight' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollBaseWeightTableRow, MaxModifiedWeight) == 0x00002C, "Member 'FFortDynamicRollBaseWeightTableRow::MaxModifiedWeight' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollBaseWeightTableRow, MinModifiedWeight) == 0x000030, "Member 'FFortDynamicRollBaseWeightTableRow::MinModifiedWeight' has a wrong offset!");

// ScriptStruct DynamicRollTablesRuntime.FortDynamicRollWeightModifierTableRow
// 0x0010 (0x0018 - 0x0008)
struct FFortDynamicRollWeightModifierTableRow : public FTableRowBase
{
public:
	struct FGameplayTag                           ActivatingPlayerTag;                               // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TargetModTag;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERollModifierOperation                        WeightModifierOperation;                           // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeightModificationValue;                           // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortDynamicRollWeightModifierTableRow) == 0x000008, "Wrong alignment on FFortDynamicRollWeightModifierTableRow");
static_assert(sizeof(FFortDynamicRollWeightModifierTableRow) == 0x000018, "Wrong size on FFortDynamicRollWeightModifierTableRow");
static_assert(offsetof(FFortDynamicRollWeightModifierTableRow, ActivatingPlayerTag) == 0x000008, "Member 'FFortDynamicRollWeightModifierTableRow::ActivatingPlayerTag' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollWeightModifierTableRow, TargetModTag) == 0x00000C, "Member 'FFortDynamicRollWeightModifierTableRow::TargetModTag' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollWeightModifierTableRow, WeightModifierOperation) == 0x000010, "Member 'FFortDynamicRollWeightModifierTableRow::WeightModifierOperation' has a wrong offset!");
static_assert(offsetof(FFortDynamicRollWeightModifierTableRow, WeightModificationValue) == 0x000014, "Member 'FFortDynamicRollWeightModifierTableRow::WeightModificationValue' has a wrong offset!");

// ScriptStruct DynamicRollTablesRuntime.DynamicRollModifiersActivatedByPlayerTagContainer
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FDynamicRollModifiersActivatedByPlayerTagContainer final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDynamicRollModifiersActivatedByPlayerTagContainer) == 0x000008, "Wrong alignment on FDynamicRollModifiersActivatedByPlayerTagContainer");
static_assert(sizeof(FDynamicRollModifiersActivatedByPlayerTagContainer) == 0x000010, "Wrong size on FDynamicRollModifiersActivatedByPlayerTagContainer");

}

