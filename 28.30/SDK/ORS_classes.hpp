#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ORS

#include "Basic.hpp"

#include "ORS_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class ORS.ORSIsReplicated
// 0x0000 (0x0028 - 0x0028)
class IORSIsReplicated final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSIsReplicated">();
	}
	static class IORSIsReplicated* GetDefaultObj()
	{
		return GetDefaultObjImpl<IORSIsReplicated>();
	}
};
static_assert(alignof(IORSIsReplicated) == 0x000008, "Wrong alignment on IORSIsReplicated");
static_assert(sizeof(IORSIsReplicated) == 0x000028, "Wrong size on IORSIsReplicated");

// Class ORS.ORSNetSerializable
// 0x0000 (0x0028 - 0x0028)
class IORSNetSerializable final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSNetSerializable">();
	}
	static class IORSNetSerializable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IORSNetSerializable>();
	}
};
static_assert(alignof(IORSNetSerializable) == 0x000008, "Wrong alignment on IORSNetSerializable");
static_assert(sizeof(IORSNetSerializable) == 0x000028, "Wrong size on IORSNetSerializable");

// Class ORS.ORSNotify
// 0x0000 (0x0028 - 0x0028)
class IORSNotify : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSNotify">();
	}
	static class IORSNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<IORSNotify>();
	}
};
static_assert(alignof(IORSNotify) == 0x000008, "Wrong alignment on IORSNotify");
static_assert(sizeof(IORSNotify) == 0x000028, "Wrong size on IORSNotify");

// Class ORS.ORSSetNetAddressable
// 0x0000 (0x0028 - 0x0028)
class IORSSetNetAddressable final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSSetNetAddressable">();
	}
	static class IORSSetNetAddressable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IORSSetNetAddressable>();
	}
};
static_assert(alignof(IORSSetNetAddressable) == 0x000008, "Wrong alignment on IORSSetNetAddressable");
static_assert(sizeof(IORSSetNetAddressable) == 0x000028, "Wrong size on IORSSetNetAddressable");

// Class ORS.ORSSystemNotify
// 0x0000 (0x0028 - 0x0028)
class IORSSystemNotify final : public IORSNotify
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSSystemNotify">();
	}
	static class IORSSystemNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<IORSSystemNotify>();
	}
};
static_assert(alignof(IORSSystemNotify) == 0x000008, "Wrong alignment on IORSSystemNotify");
static_assert(sizeof(IORSSystemNotify) == 0x000028, "Wrong size on IORSSystemNotify");

// Class ORS.ORSActor
// 0x0028 (0x02B8 - 0x0290)
class AORSActor : public AActor
{
public:
	uint8                                         Pad_290[0x20];                                     // 0x0290(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UORSGroupComponent*                     GroupComponent;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSActor">();
	}
	static class AORSActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AORSActor>();
	}
};
static_assert(alignof(AORSActor) == 0x000008, "Wrong alignment on AORSActor");
static_assert(sizeof(AORSActor) == 0x0002B8, "Wrong size on AORSActor");
static_assert(offsetof(AORSActor, GroupComponent) == 0x0002B0, "Member 'AORSActor::GroupComponent' has a wrong offset!");

// Class ORS.ORSActorComponent
// 0x0028 (0x00C8 - 0x00A0)
class UORSActorComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x28];                                      // 0x00A0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOwnerAdded(const class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSActorComponent">();
	}
	static class UORSActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSActorComponent>();
	}
};
static_assert(alignof(UORSActorComponent) == 0x000008, "Wrong alignment on UORSActorComponent");
static_assert(sizeof(UORSActorComponent) == 0x0000C8, "Wrong size on UORSActorComponent");

// Class ORS.ORSCheatManager
// 0x0000 (0x0028 - 0x0028)
class UORSCheatManager final : public UChildCheatManager
{
public:
	void ORSDebug(const class FName& Path);
	void ORSListObjects();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSCheatManager">();
	}
	static class UORSCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSCheatManager>();
	}
};
static_assert(alignof(UORSCheatManager) == 0x000008, "Wrong alignment on UORSCheatManager");
static_assert(sizeof(UORSCheatManager) == 0x000028, "Wrong size on UORSCheatManager");

// Class ORS.ORSClassTuple
// 0x0060 (0x0088 - 0x0028)
class UORSClassTuple final : public UObject
{
public:
	struct FClassTuple                            Tuple;                                             // 0x0028(0x0040)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x20];                                      // 0x0068(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSClassTuple">();
	}
	static class UORSClassTuple* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSClassTuple>();
	}
};
static_assert(alignof(UORSClassTuple) == 0x000008, "Wrong alignment on UORSClassTuple");
static_assert(sizeof(UORSClassTuple) == 0x000088, "Wrong size on UORSClassTuple");
static_assert(offsetof(UORSClassTuple, Tuple) == 0x000028, "Member 'UORSClassTuple::Tuple' has a wrong offset!");

// Class ORS.ORSClassTupleCollection
// 0x0060 (0x0088 - 0x0028)
class UORSClassTupleCollection final : public UObject
{
public:
	TArray<class UORSClassTuple*>                 ClassTuples;                                       // 0x0028(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UObject>, struct FORSClassTupleList> ClassMap;                                          // 0x0038(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSClassTupleCollection">();
	}
	static class UORSClassTupleCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSClassTupleCollection>();
	}
};
static_assert(alignof(UORSClassTupleCollection) == 0x000008, "Wrong alignment on UORSClassTupleCollection");
static_assert(sizeof(UORSClassTupleCollection) == 0x000088, "Wrong size on UORSClassTupleCollection");
static_assert(offsetof(UORSClassTupleCollection, ClassTuples) == 0x000028, "Member 'UORSClassTupleCollection::ClassTuples' has a wrong offset!");
static_assert(offsetof(UORSClassTupleCollection, ClassMap) == 0x000038, "Member 'UORSClassTupleCollection::ClassMap' has a wrong offset!");

// Class ORS.ORSConfig
// 0x0080 (0x00A8 - 0x0028)
class UORSConfig final : public UObject
{
public:
	TArray<class FName>                           HighPriority;                                      // 0x0028(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FName>                           LowPriority;                                       // 0x0038(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FName>                           Optional;                                          // 0x0048(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x50];                                      // 0x0058(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSConfig">();
	}
	static class UORSConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSConfig>();
	}
};
static_assert(alignof(UORSConfig) == 0x000008, "Wrong alignment on UORSConfig");
static_assert(sizeof(UORSConfig) == 0x0000A8, "Wrong size on UORSConfig");
static_assert(offsetof(UORSConfig, HighPriority) == 0x000028, "Member 'UORSConfig::HighPriority' has a wrong offset!");
static_assert(offsetof(UORSConfig, LowPriority) == 0x000038, "Member 'UORSConfig::LowPriority' has a wrong offset!");
static_assert(offsetof(UORSConfig, Optional) == 0x000048, "Member 'UORSConfig::Optional' has a wrong offset!");

// Class ORS.ORSGlobal
// 0x0010 (0x0038 - 0x0028)
class UORSGlobal final : public UObject
{
public:
	TArray<class UORSInstance*>                   Instances;                                         // 0x0028(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSGlobal">();
	}
	static class UORSGlobal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSGlobal>();
	}
};
static_assert(alignof(UORSGlobal) == 0x000008, "Wrong alignment on UORSGlobal");
static_assert(sizeof(UORSGlobal) == 0x000038, "Wrong size on UORSGlobal");
static_assert(offsetof(UORSGlobal, Instances) == 0x000028, "Member 'UORSGlobal::Instances' has a wrong offset!");

// Class ORS.ORSGroup
// 0x0138 (0x0160 - 0x0028)
class UORSGroup final : public UObject
{
public:
	class UObject*                                Owner;                                             // 0x0028(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UORSGroupComponent*                     GroupComponent;                                    // 0x0030(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UORSGroup*                              Parent;                                            // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UORSGroup*>                      Children;                                          // 0x0060(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0xF0];                                      // 0x0070(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSGroup">();
	}
	static class UORSGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSGroup>();
	}
};
static_assert(alignof(UORSGroup) == 0x000008, "Wrong alignment on UORSGroup");
static_assert(sizeof(UORSGroup) == 0x000160, "Wrong size on UORSGroup");
static_assert(offsetof(UORSGroup, Owner) == 0x000028, "Member 'UORSGroup::Owner' has a wrong offset!");
static_assert(offsetof(UORSGroup, GroupComponent) == 0x000030, "Member 'UORSGroup::GroupComponent' has a wrong offset!");
static_assert(offsetof(UORSGroup, Parent) == 0x000058, "Member 'UORSGroup::Parent' has a wrong offset!");
static_assert(offsetof(UORSGroup, Children) == 0x000060, "Member 'UORSGroup::Children' has a wrong offset!");

// Class ORS.ORSGroupComponent
// 0x0080 (0x0120 - 0x00A0)
class UORSGroupComponent final : public UActorComponent
{
public:
	bool                                          bGlobal;                                           // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        RegisteredObjects;                                 // 0x00A8(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        ReplicatedObjectInstances;                         // 0x00B8(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        ReplicatedObjectReferences;                        // 0x00C8(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        OldReplicatedObjectReferences;                     // 0x00D8(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FORSNetSerializableReplicationProxy> ReplicatedNetSerializeObjects;                     // 0x00E8(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        ReplayNetSerializeObjects;                         // 0x00F8(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        OldReplicatedNetSerializeObjects;                  // 0x0108(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ReplayNetSerializeObjects();
	void OnRep_ReplicatedNetSerializeObjects();
	void OnRep_ReplicatedObjectReferences();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSGroupComponent">();
	}
	static class UORSGroupComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSGroupComponent>();
	}
};
static_assert(alignof(UORSGroupComponent) == 0x000008, "Wrong alignment on UORSGroupComponent");
static_assert(sizeof(UORSGroupComponent) == 0x000120, "Wrong size on UORSGroupComponent");
static_assert(offsetof(UORSGroupComponent, bGlobal) == 0x0000A0, "Member 'UORSGroupComponent::bGlobal' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, RegisteredObjects) == 0x0000A8, "Member 'UORSGroupComponent::RegisteredObjects' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, ReplicatedObjectInstances) == 0x0000B8, "Member 'UORSGroupComponent::ReplicatedObjectInstances' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, ReplicatedObjectReferences) == 0x0000C8, "Member 'UORSGroupComponent::ReplicatedObjectReferences' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, OldReplicatedObjectReferences) == 0x0000D8, "Member 'UORSGroupComponent::OldReplicatedObjectReferences' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, ReplicatedNetSerializeObjects) == 0x0000E8, "Member 'UORSGroupComponent::ReplicatedNetSerializeObjects' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, ReplayNetSerializeObjects) == 0x0000F8, "Member 'UORSGroupComponent::ReplayNetSerializeObjects' has a wrong offset!");
static_assert(offsetof(UORSGroupComponent, OldReplicatedNetSerializeObjects) == 0x000108, "Member 'UORSGroupComponent::OldReplicatedNetSerializeObjects' has a wrong offset!");

// Class ORS.ORSInstance
// 0x0158 (0x0180 - 0x0028)
class UORSInstance final : public UObject
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UORSGroup*                              GlobalGroup;                                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x50];                                      // 0x0038(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UORSClassTupleCollection*               ClassTuples;                                       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UORSSubscriptionCollection*             Subscriptions;                                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0xE8];                                      // 0x0098(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSInstance">();
	}
	static class UORSInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSInstance>();
	}
};
static_assert(alignof(UORSInstance) == 0x000008, "Wrong alignment on UORSInstance");
static_assert(sizeof(UORSInstance) == 0x000180, "Wrong size on UORSInstance");
static_assert(offsetof(UORSInstance, GameInstance) == 0x000028, "Member 'UORSInstance::GameInstance' has a wrong offset!");
static_assert(offsetof(UORSInstance, GlobalGroup) == 0x000030, "Member 'UORSInstance::GlobalGroup' has a wrong offset!");
static_assert(offsetof(UORSInstance, ClassTuples) == 0x000088, "Member 'UORSInstance::ClassTuples' has a wrong offset!");
static_assert(offsetof(UORSInstance, Subscriptions) == 0x000090, "Member 'UORSInstance::Subscriptions' has a wrong offset!");

// Class ORS.ORSReplicatedObject
// 0x0018 (0x0040 - 0x0028)
class UORSReplicatedObject : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bReplicated;                                       // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSReplicatedObject">();
	}
	static class UORSReplicatedObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSReplicatedObject>();
	}
};
static_assert(alignof(UORSReplicatedObject) == 0x000008, "Wrong alignment on UORSReplicatedObject");
static_assert(sizeof(UORSReplicatedObject) == 0x000040, "Wrong size on UORSReplicatedObject");
static_assert(offsetof(UORSReplicatedObject, bReplicated) == 0x000038, "Member 'UORSReplicatedObject::bReplicated' has a wrong offset!");

// Class ORS.ORSObject
// 0x0000 (0x0040 - 0x0040)
class UORSObject final : public UORSReplicatedObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSObject">();
	}
	static class UORSObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSObject>();
	}
};
static_assert(alignof(UORSObject) == 0x000008, "Wrong alignment on UORSObject");
static_assert(sizeof(UORSObject) == 0x000040, "Wrong size on UORSObject");

// Class ORS.ORSSubscriptionCollection
// 0x0038 (0x0060 - 0x0028)
class UORSSubscriptionCollection final : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSSubscriptionCollection">();
	}
	static class UORSSubscriptionCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSSubscriptionCollection>();
	}
};
static_assert(alignof(UORSSubscriptionCollection) == 0x000008, "Wrong alignment on UORSSubscriptionCollection");
static_assert(sizeof(UORSSubscriptionCollection) == 0x000060, "Wrong size on UORSSubscriptionCollection");

// Class ORS.ORSSubsystemShutdown
// 0x0000 (0x0028 - 0x0028)
class UORSSubsystemShutdown final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSSubsystemShutdown">();
	}
	static class UORSSubsystemShutdown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSSubsystemShutdown>();
	}
};
static_assert(alignof(UORSSubsystemShutdown) == 0x000008, "Wrong alignment on UORSSubsystemShutdown");
static_assert(sizeof(UORSSubsystemShutdown) == 0x000028, "Wrong size on UORSSubsystemShutdown");

// Class ORS.ORSSubsystem
// 0x0058 (0x0088 - 0x0030)
class UORSSubsystem final : public UGameInstanceSubsystem
{
public:
	struct FORSInstanceRef                        ORSInstance;                                       // 0x0030(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x20];                                      // 0x0040(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 GameWorld;                                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AORSWorldActor*                         WorldActor;                                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameFrameworkComponentManager*         ComponentManager;                                  // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_78[0x10];                                      // 0x0078(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActorDestroyed(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSSubsystem">();
	}
	static class UORSSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSSubsystem>();
	}
};
static_assert(alignof(UORSSubsystem) == 0x000008, "Wrong alignment on UORSSubsystem");
static_assert(sizeof(UORSSubsystem) == 0x000088, "Wrong size on UORSSubsystem");
static_assert(offsetof(UORSSubsystem, ORSInstance) == 0x000030, "Member 'UORSSubsystem::ORSInstance' has a wrong offset!");
static_assert(offsetof(UORSSubsystem, GameWorld) == 0x000060, "Member 'UORSSubsystem::GameWorld' has a wrong offset!");
static_assert(offsetof(UORSSubsystem, WorldActor) == 0x000068, "Member 'UORSSubsystem::WorldActor' has a wrong offset!");
static_assert(offsetof(UORSSubsystem, ComponentManager) == 0x000070, "Member 'UORSSubsystem::ComponentManager' has a wrong offset!");

// Class ORS.ORSSystemActor
// 0x0030 (0x02C0 - 0x0290)
class AORSSystemActor : public AActor
{
public:
	uint8                                         Pad_290[0x20];                                     // 0x0290(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FORSGroupObjectList                    SystemObjects;                                     // 0x02B0(0x0010)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSSystemActor">();
	}
	static class AORSSystemActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AORSSystemActor>();
	}
};
static_assert(alignof(AORSSystemActor) == 0x000008, "Wrong alignment on AORSSystemActor");
static_assert(sizeof(AORSSystemActor) == 0x0002C0, "Wrong size on AORSSystemActor");
static_assert(offsetof(AORSSystemActor, SystemObjects) == 0x0002B0, "Member 'AORSSystemActor::SystemObjects' has a wrong offset!");

// Class ORS.ORSPlaceableSystemActor
// 0x0000 (0x02C0 - 0x02C0)
class AORSPlaceableSystemActor final : public AORSSystemActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSPlaceableSystemActor">();
	}
	static class AORSPlaceableSystemActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AORSPlaceableSystemActor>();
	}
};
static_assert(alignof(AORSPlaceableSystemActor) == 0x000008, "Wrong alignment on AORSPlaceableSystemActor");
static_assert(sizeof(AORSPlaceableSystemActor) == 0x0002C0, "Wrong size on AORSPlaceableSystemActor");

// Class ORS.ORSActorsInitialized
// 0x0000 (0x0028 - 0x0028)
class UORSActorsInitialized final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSActorsInitialized">();
	}
	static class UORSActorsInitialized* GetDefaultObj()
	{
		return GetDefaultObjImpl<UORSActorsInitialized>();
	}
};
static_assert(alignof(UORSActorsInitialized) == 0x000008, "Wrong alignment on UORSActorsInitialized");
static_assert(sizeof(UORSActorsInitialized) == 0x000028, "Wrong size on UORSActorsInitialized");

// Class ORS.ORSWorldActor
// 0x0000 (0x02B8 - 0x02B8)
class AORSWorldActor final : public AORSActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ORSWorldActor">();
	}
	static class AORSWorldActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AORSWorldActor>();
	}
};
static_assert(alignof(AORSWorldActor) == 0x000008, "Wrong alignment on AORSWorldActor");
static_assert(sizeof(AORSWorldActor) == 0x0002B8, "Wrong size on AORSWorldActor");

}

