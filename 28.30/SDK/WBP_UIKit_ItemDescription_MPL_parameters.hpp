#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemDescription_MPL

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.Access Restrictions Changed
// 0x000F (0x000F - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed final
{
public:
	EItemAccessRestriction                        Restriction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemAccessRestriction                        CachedRestriction;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Conv_BoolToSlateVisibility_ReturnValue;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemAccessRestriction                        Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed) == 0x00000F, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Restriction) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Restriction' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, CachedRestriction) == 0x000001, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::CachedRestriction' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable) == 0x000002, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, CallFunc_Conv_BoolToSlateVisibility_ReturnValue) == 0x000004, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::CallFunc_Conv_BoolToSlateVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_2) == 0x000006, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_3) == 0x000007, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_4) == 0x000008, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_5) == 0x000009, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_6) == 0x00000A, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_7) == 0x00000B, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_bool_Variable_8) == 0x00000C, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, Temp_byte_Variable) == 0x00000D, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed, K2Node_Select_Default) == 0x00000E, "Member 'WBP_UIKit_ItemDescription_MPL_C_Access_Restrictions_Changed::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL) == 0x000004, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL) == 0x000008, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL, EntryPoint) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_ItemDescription_MPL_C_ExecuteUbergraph_WBP_UIKit_ItemDescription_MPL::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.isDetailedFigureIncoming
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming final
{
public:
	bool                                          isDetailedFigureIncoming_0;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming) == 0x000001, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming, isDetailedFigureIncoming_0) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_isDetailedFigureIncoming::isDetailedFigureIncoming_0' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.SetFortItemDetailsVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM final
{
public:
	class UFortItemDetailsVM*                     ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM) == 0x000028, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortItemDetailsVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.SetFortLockerCategoryItemVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM final
{
public:
	class UFortLockerCategoryItemVM*              ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM) == 0x000028, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemDescription_MPL_C_SetFortLockerCategoryItemVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.TrySetCategoryText
// 0x0038 (0x0038 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText final
{
public:
	class FText                                   NewParam;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_GetCategoryDisplayName_ReturnValue;       // 0x0018(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText) == 0x000008, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText) == 0x000038, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText, NewParam) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText, CallFunc_GetCategoryDisplayName_ReturnValue) == 0x000018, "Member 'WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText::CallFunc_GetCategoryDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'WBP_UIKit_ItemDescription_MPL_C_TrySetCategoryText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.__569107d4-4513-b561-d0f9-999fd629fbc7_SourceToDest
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest final
{
public:
	struct FFortColorPalette                      RarityColors;                                      // 0x0000(0x0050)(Parm, OutParm, NoDestructor)
	struct FFortColorPalette                      CallFunc_GetRarityColors_RarityColors;             // 0x0050(0x0050)(NoDestructor)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest) == 0x000004, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest) == 0x0000A0, "Wrong size on WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest, RarityColors) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest::RarityColors' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest, CallFunc_GetRarityColors_RarityColors) == 0x000050, "Member 'WBP_UIKit_ItemDescription_MPL_C___569107d4_4513_b561_d0f9_999fd629fbc7_SourceToDest::CallFunc_GetRarityColors_RarityColors' has a wrong offset!");

// Function WBP_UIKit_ItemDescription_MPL.WBP_UIKit_ItemDescription_MPL_C.GetRarityColors
// 0x0104 (0x0104 - 0x0000)
struct WBP_UIKit_ItemDescription_MPL_C_GetRarityColors final
{
public:
	bool                                          IsSeries;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      FortColorPalette;                                  // 0x0004(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FFortColorPalette                      RarityColors;                                      // 0x0054(0x0050)(Parm, OutParm, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortColorPalette                      K2Node_MakeStruct_FortColorPalette;                // 0x00B4(0x0050)(NoDestructor)
};
static_assert(alignof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors) == 0x000004, "Wrong alignment on WBP_UIKit_ItemDescription_MPL_C_GetRarityColors");
static_assert(sizeof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors) == 0x000104, "Wrong size on WBP_UIKit_ItemDescription_MPL_C_GetRarityColors");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors, IsSeries) == 0x000000, "Member 'WBP_UIKit_ItemDescription_MPL_C_GetRarityColors::IsSeries' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors, FortColorPalette) == 0x000004, "Member 'WBP_UIKit_ItemDescription_MPL_C_GetRarityColors::FortColorPalette' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors, RarityColors) == 0x000054, "Member 'WBP_UIKit_ItemDescription_MPL_C_GetRarityColors::RarityColors' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors, CallFunc_SelectColor_ReturnValue) == 0x0000A4, "Member 'WBP_UIKit_ItemDescription_MPL_C_GetRarityColors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemDescription_MPL_C_GetRarityColors, K2Node_MakeStruct_FortColorPalette) == 0x0000B4, "Member 'WBP_UIKit_ItemDescription_MPL_C_GetRarityColors::K2Node_MakeStruct_FortColorPalette' has a wrong offset!");

}

