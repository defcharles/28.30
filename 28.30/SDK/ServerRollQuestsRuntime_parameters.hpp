#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ServerRollQuestsRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function ServerRollQuestsRuntime.FortGameStateComponent_ServerRollQuests.HandlePlaylistDataReady
// 0x0030 (0x0030 - 0x0000)
struct FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady) == 0x000008, "Wrong alignment on FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady");
static_assert(sizeof(FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady) == 0x000030, "Wrong size on FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady");
static_assert(offsetof(FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady, GameState) == 0x000000, "Member 'FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady::GameState' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady, Playlist) == 0x000008, "Member 'FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady::Playlist' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady, GameplayTags) == 0x000010, "Member 'FortGameStateComponent_ServerRollQuests_HandlePlaylistDataReady::GameplayTags' has a wrong offset!");

// Function ServerRollQuestsRuntime.FortGameStateComponent_ServerRollQuests.PopulateMap
// 0x0028 (0x0028 - 0x0000)
struct FortGameStateComponent_ServerRollQuests_PopulateMap final
{
public:
	const class UDataRegistry*                    ServerRollQuestsRegistry;                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameStateComponent_ServerRollQuests_PopulateMap) == 0x000008, "Wrong alignment on FortGameStateComponent_ServerRollQuests_PopulateMap");
static_assert(sizeof(FortGameStateComponent_ServerRollQuests_PopulateMap) == 0x000028, "Wrong size on FortGameStateComponent_ServerRollQuests_PopulateMap");
static_assert(offsetof(FortGameStateComponent_ServerRollQuests_PopulateMap, ServerRollQuestsRegistry) == 0x000000, "Member 'FortGameStateComponent_ServerRollQuests_PopulateMap::ServerRollQuestsRegistry' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_ServerRollQuests_PopulateMap, PlaylistContextTags) == 0x000008, "Member 'FortGameStateComponent_ServerRollQuests_PopulateMap::PlaylistContextTags' has a wrong offset!");

}

