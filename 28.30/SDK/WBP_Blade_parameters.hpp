#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Blade

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Blade.WBP_Blade_C.CalculateNudgeValue
// 0x0050 (0x0050 - 0x0000)
struct WBP_Blade_C_CalculateNudgeValue final
{
public:
	double                                        PeekValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_CalculateNudgeValue) == 0x000008, "Wrong alignment on WBP_Blade_C_CalculateNudgeValue");
static_assert(sizeof(WBP_Blade_C_CalculateNudgeValue) == 0x000050, "Wrong size on WBP_Blade_C_CalculateNudgeValue");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, PeekValue) == 0x000000, "Member 'WBP_Blade_C_CalculateNudgeValue::PeekValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, Temp_real_Variable) == 0x000008, "Member 'WBP_Blade_C_CalculateNudgeValue::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Blade_C_CalculateNudgeValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'WBP_Blade_C_CalculateNudgeValue::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, Temp_real_Variable_1) == 0x000020, "Member 'WBP_Blade_C_CalculateNudgeValue::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'WBP_Blade_C_CalculateNudgeValue::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000030, "Member 'WBP_Blade_C_CalculateNudgeValue::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000038, "Member 'WBP_Blade_C_CalculateNudgeValue::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000040, "Member 'WBP_Blade_C_CalculateNudgeValue::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_CalculateNudgeValue, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'WBP_Blade_C_CalculateNudgeValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.ExecuteUbergraph_WBP_Blade
// 0x04B0 (0x04B0 - 0x0000)
struct WBP_Blade_C_ExecuteUbergraph_WBP_Blade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           K2Node_Select_Default;                             // 0x0070(0x03B0)(ConstParm)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_2;             // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContentOrViewport_SizeAndSetNudgeValue_IsSizeZero; // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x5];                                      // 0x0443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45A[0x6];                                      // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_3;             // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0478(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x04A0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade) == 0x000010, "Wrong alignment on WBP_Blade_C_ExecuteUbergraph_WBP_Blade");
static_assert(sizeof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade) == 0x0004B0, "Wrong size on WBP_Blade_C_ExecuteUbergraph_WBP_Blade");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, EntryPoint) == 0x000000, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000018, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_SwitchEnum_CmpSuccess_1) == 0x000020, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000028, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_MakeVector2D_ReturnValue_1) == 0x000040, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, Temp_bool_Variable) == 0x000050, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_MakeVector2D_ReturnValue_2) == 0x000058, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_Select_Default) == 0x000070, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_SlotAsGridSlot_ReturnValue_2) == 0x000420, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_SlotAsGridSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_SwitchEnum_CmpSuccess_2) == 0x000428, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_SwitchEnum_CmpSuccess_3) == 0x000429, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000430, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000438, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_BooleanAND_ReturnValue) == 0x000440, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, Temp_byte_Variable) == 0x000441, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_GetContentOrViewport_SizeAndSetNudgeValue_IsSizeZero) == 0x000442, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_GetContentOrViewport_SizeAndSetNudgeValue_IsSizeZero' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000448, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000450, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000458, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_BooleanAND_ReturnValue_1) == 0x000459, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000460, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_SlotAsGridSlot_ReturnValue_3) == 0x000468, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_SlotAsGridSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000470, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_CreateDelegate_OutputDelegate) == 0x000478, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_Not_PreBool_ReturnValue) == 0x000484, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_GetEndTime_ReturnValue) == 0x000488, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_PlayAnimation_ReturnValue) == 0x000490, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, Temp_byte_Variable_1) == 0x000498, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000499, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, Temp_bool_Variable_1) == 0x00049A, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_Select_Default_1) == 0x00049B, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_Event_IsDesignTime) == 0x00049C, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_ExecuteUbergraph_WBP_Blade, K2Node_CreateDelegate_OutputDelegate_1) == 0x0004A0, "Member 'WBP_Blade_C_ExecuteUbergraph_WBP_Blade::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.GetContentOrViewport SizeAndSetNudgeValue
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue final
{
public:
	bool                                          IsSizeZero;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x0020(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZero2D_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue_1;      // 0x006C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZero2D_ReturnValue_1;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue) == 0x000008, "Wrong alignment on WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue");
static_assert(sizeof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue) == 0x0000E8, "Wrong size on WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, IsSizeZero) == 0x000000, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::IsSizeZero' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, Temp_bool_Variable) == 0x000001, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_IsMobileGame_ReturnValue) == 0x000003, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_SelectFloat_ReturnValue_2) == 0x000018, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x000020, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_GetLocalSize_ReturnValue) == 0x000058, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_IsZero2D_ReturnValue) == 0x000068, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_IsZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_GetPaintSpaceGeometry_ReturnValue_1) == 0x00006C, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_GetPaintSpaceGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000A8, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_IsZero2D_ReturnValue_1) == 0x0000B8, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_IsZero2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, K2Node_Select_Default) == 0x0000C0, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, K2Node_Select_Default_1) == 0x0000D0, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_BreakVector2D_X) == 0x0000D8, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue, CallFunc_BreakVector2D_Y) == 0x0000E0, "Member 'WBP_Blade_C_GetContentOrViewport_SizeAndSetNudgeValue::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Blade_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Blade_C_PreConstruct");
static_assert(sizeof(WBP_Blade_C_PreConstruct) == 0x000001, "Wrong size on WBP_Blade_C_PreConstruct");
static_assert(offsetof(WBP_Blade_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Blade_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.SetLerpAnimatorBetweenPeekStates
// 0x0068 (0x0068 - 0x0000)
struct WBP_Blade_C_SetLerpAnimatorBetweenPeekStates final
{
public:
	double                                        CurrentAnimatorValue;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates) == 0x000008, "Wrong alignment on WBP_Blade_C_SetLerpAnimatorBetweenPeekStates");
static_assert(sizeof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates) == 0x000068, "Wrong size on WBP_Blade_C_SetLerpAnimatorBetweenPeekStates");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CurrentAnimatorValue) == 0x000000, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CurrentAnimatorValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_IsMobileGame_ReturnValue) == 0x000009, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, Temp_bool_Variable) == 0x00000A, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, Temp_bool_Variable_1) == 0x00000B, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, Temp_bool_Variable_2) == 0x000038, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000039, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, K2Node_Select_Default) == 0x00003A, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000050, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorBetweenPeekStates, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000060, "Member 'WBP_Blade_C_SetLerpAnimatorBetweenPeekStates::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.SetLerpAnimatorExpandContractBlade
// 0x0058 (0x0058 - 0x0000)
struct WBP_Blade_C_SetLerpAnimatorExpandContractBlade final
{
public:
	double                                        CurrentAnimatorValue;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade) == 0x000008, "Wrong alignment on WBP_Blade_C_SetLerpAnimatorExpandContractBlade");
static_assert(sizeof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade) == 0x000058, "Wrong size on WBP_Blade_C_SetLerpAnimatorExpandContractBlade");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CurrentAnimatorValue) == 0x000000, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CurrentAnimatorValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, Temp_bool_Variable) == 0x000008, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00000A, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, Temp_byte_Variable) == 0x00000B, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, Temp_byte_Variable_1) == 0x00000C, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, Temp_byte_Variable_2) == 0x00000F, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, Temp_byte_Variable_3) == 0x000011, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, Temp_bool_Variable_1) == 0x000013, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, K2Node_Select_Default) == 0x000014, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_BooleanAND_ReturnValue_1) == 0x000015, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000018, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000028, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetLerpAnimatorExpandContractBlade, CallFunc_MakeVector2D_ReturnValue_1) == 0x000048, "Member 'WBP_Blade_C_SetLerpAnimatorExpandContractBlade::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.SetPeekButtonVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_Blade_C_SetPeekButtonVisibility final
{
public:
	bool                                          HidePeekButton_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_SetPeekButtonVisibility) == 0x000001, "Wrong alignment on WBP_Blade_C_SetPeekButtonVisibility");
static_assert(sizeof(WBP_Blade_C_SetPeekButtonVisibility) == 0x000005, "Wrong size on WBP_Blade_C_SetPeekButtonVisibility");
static_assert(offsetof(WBP_Blade_C_SetPeekButtonVisibility, HidePeekButton_0) == 0x000000, "Member 'WBP_Blade_C_SetPeekButtonVisibility::HidePeekButton_0' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetPeekButtonVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_Blade_C_SetPeekButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetPeekButtonVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_Blade_C_SetPeekButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetPeekButtonVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Blade_C_SetPeekButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Blade_C_SetPeekButtonVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_Blade_C_SetPeekButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Blade.WBP_Blade_C.SetShouldStartInSecondPeekState
// 0x0001 (0x0001 - 0x0000)
struct WBP_Blade_C_SetShouldStartInSecondPeekState final
{
public:
	bool                                          ShouldStartInSecondPeekState;                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Blade_C_SetShouldStartInSecondPeekState) == 0x000001, "Wrong alignment on WBP_Blade_C_SetShouldStartInSecondPeekState");
static_assert(sizeof(WBP_Blade_C_SetShouldStartInSecondPeekState) == 0x000001, "Wrong size on WBP_Blade_C_SetShouldStartInSecondPeekState");
static_assert(offsetof(WBP_Blade_C_SetShouldStartInSecondPeekState, ShouldStartInSecondPeekState) == 0x000000, "Member 'WBP_Blade_C_SetShouldStartInSecondPeekState::ShouldStartInSecondPeekState' has a wrong offset!");

}

