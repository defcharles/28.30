#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AugmentSelector_HUD

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.ActivateSelectedAugment
// 0x0040 (0x0040 - 0x0000)
struct WBP_AugmentSelector_HUD_C_ActivateSelectedAugment final
{
public:
	int32                                         AugmentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ActivateAugment_AnimationEndTime;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_ActivateSelectedAugment");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment) == 0x000040, "Wrong size on WBP_AugmentSelector_HUD_C_ActivateSelectedAugment");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, AugmentIndex) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::AugmentIndex' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, CallFunc_ActivateAugment_AnimationEndTime) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::CallFunc_ActivateAugment_AnimationEndTime' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ActivateSelectedAugment, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000038, "Member 'WBP_AugmentSelector_HUD_C_ActivateSelectedAugment::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.CloseHUD
// 0x0010 (0x0010 - 0x0000)
struct WBP_AugmentSelector_HUD_C_CloseHUD final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_CloseHUD) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_CloseHUD");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_CloseHUD) == 0x000010, "Wrong size on WBP_AugmentSelector_HUD_C_CloseHUD");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CloseHUD, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_CloseHUD::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CloseHUD, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_CloseHUD::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.CreateAugmentInfos
// 0x0058 (0x0058 - 0x0000)
struct WBP_AugmentSelector_HUD_C_CreateAugmentInfos final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPlayerAugmentItemDefinition*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_AugmentSelector_AugmentDivider_C*  CallFunc_Create_ReturnValue_1;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_CreateAugmentInfos");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos) == 0x000058, "Wrong size on WBP_AugmentSelector_HUD_C_CreateAugmentInfos");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, Count) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::Count' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CurrentIndex) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, Temp_int_Variable) == 0x000034, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_Create_ReturnValue_1) == 0x000040, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000048, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_CreateAugmentInfos, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x000050, "Member 'WBP_AugmentSelector_HUD_C_CreateAugmentInfos::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.ExecuteUbergraph_WBP_AugmentSelector_HUD
// 0x0130 (0x0130 - 0x0000)
struct WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortPlayerAugmentItemDefinition*> K2Node_Event_AugmentItemDefinition;                // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_HighlightedAugmentIndex;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsOpened;                            // 0x001C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViewingAugmentInventory_1;           // 0x001D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SelectedAugmentIndex;                 // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRefreshAugmentInfo_ShouldRefresh;   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Event_NewInputType;                         // 0x0026(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bViewingAugmentInventory;             // 0x003C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanSelectAugment;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NumPendingToGrant)>      K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_AugmentDivider_C*  CallFunc_Create_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Create_ReturnValue_1;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0120(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_2; // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD) == 0x000130, "Wrong size on WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, EntryPoint) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_AugmentItemDefinition) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_AugmentItemDefinition' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_HighlightedAugmentIndex) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_HighlightedAugmentIndex' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_bIsOpened) == 0x00001C, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_bIsOpened' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_bViewingAugmentInventory_1) == 0x00001D, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_bViewingAugmentInventory_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_SelectedAugmentIndex) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_SelectedAugmentIndex' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_ShouldRefreshAugmentInfo_ShouldRefresh) == 0x000025, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_ShouldRefreshAugmentInfo_ShouldRefresh' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_NewInputType) == 0x000026, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_NewInputType' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_SpawnSound2D_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_bViewingAugmentInventory) == 0x00003C, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_bViewingAugmentInventory' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_int_Variable) == 0x000040, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000058, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000060, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000068, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000070, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_bCanSelectAugment) == 0x00007A, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_bCanSelectAugment' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000098, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Event_IsDesignTime) == 0x0000AC, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Create_ReturnValue) == 0x0000B0, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000C0, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C9, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000CA, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Create_ReturnValue_1) == 0x0000D0, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x0000D8, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000E0, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_byte_Variable) == 0x0000E8, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x0000F0, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x0000F9, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_byte_Variable_1) == 0x0000FA, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Greater_IntInt_ReturnValue) == 0x0000FB, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Less_IntInt_ReturnValue_1) == 0x00010C, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_bool_Variable) == 0x00010D, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_Select_Default) == 0x00010E, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_IsUsingTouch_ReturnValue) == 0x00010F, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000110, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, Temp_int_Loop_Counter_Variable_1) == 0x000114, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000118, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Less_IntInt_ReturnValue_2) == 0x000119, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_Add_IntInt_ReturnValue_2) == 0x00011C, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x000120, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD, CallFunc_GetConsoleVariableBoolValue_ReturnValue_2) == 0x00012C, "Member 'WBP_AugmentSelector_HUD_C_ExecuteUbergraph_WBP_AugmentSelector_HUD::CallFunc_GetConsoleVariableBoolValue_ReturnValue_2' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnAugmentHighlighted
// 0x0004 (0x0004 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnAugmentHighlighted final
{
public:
	int32                                         HighlightedAugmentIndex;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnAugmentHighlighted) == 0x000004, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnAugmentHighlighted");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnAugmentHighlighted) == 0x000004, "Wrong size on WBP_AugmentSelector_HUD_C_OnAugmentHighlighted");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnAugmentHighlighted, HighlightedAugmentIndex) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnAugmentHighlighted::HighlightedAugmentIndex' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnAugmentSelectionStarted
// 0x0004 (0x0004 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted final
{
public:
	int32                                         SelectedAugmentIndex;                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted) == 0x000004, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted) == 0x000004, "Wrong size on WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted, SelectedAugmentIndex) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnAugmentSelectionStarted::SelectedAugmentIndex' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnAugmentSelectorOpenedStatusChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged final
{
public:
	bool                                          bIsOpened;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bViewingAugmentInventory;                          // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged) == 0x000001, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged) == 0x000002, "Wrong size on WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged, bIsOpened) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged::bIsOpened' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged, bViewingAugmentInventory) == 0x000001, "Member 'WBP_AugmentSelector_HUD_C_OnAugmentSelectorOpenedStatusChanged::bViewingAugmentInventory' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnAugmentSelectorToolViewSwapped
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped final
{
public:
	bool                                          bViewingAugmentInventory;                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped) == 0x000001, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped) == 0x000001, "Wrong size on WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped, bViewingAugmentInventory) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnAugmentSelectorToolViewSwapped::bViewingAugmentInventory' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnCanSelectAugmentChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged final
{
public:
	bool                                          bCanSelectAugment;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged) == 0x000001, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged) == 0x000001, "Wrong size on WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged, bCanSelectAugment) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnCanSelectAugmentChanged::bCanSelectAugment' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnInputTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnInputTypeChanged final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnInputTypeChanged) == 0x000001, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnInputTypeChanged");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnInputTypeChanged) == 0x000001, "Wrong size on WBP_AugmentSelector_HUD_C_OnInputTypeChanged");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnInputTypeChanged, NewInputType) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnInputTypeChanged::NewInputType' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnPopulateAvailableAugmentsHUD
// 0x0010 (0x0010 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD final
{
public:
	TArray<class UFortPlayerAugmentItemDefinition*> AugmentItemDefinition;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD) == 0x000010, "Wrong size on WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD, AugmentItemDefinition) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnPopulateAvailableAugmentsHUD::AugmentItemDefinition' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnSwapToActiveList
// 0x0008 (0x0008 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnSwapToActiveList final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnSwapToActiveList) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnSwapToActiveList");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnSwapToActiveList) == 0x000008, "Wrong size on WBP_AugmentSelector_HUD_C_OnSwapToActiveList");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToActiveList, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToActiveList::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.OnSwapToSelector
// 0x0028 (0x0028 - 0x0000)
struct WBP_AugmentSelector_HUD_C_OnSwapToSelector final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_OnSwapToSelector) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_OnSwapToSelector");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_OnSwapToSelector) == 0x000028, "Wrong size on WBP_AugmentSelector_HUD_C_OnSwapToSelector");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_OnSwapToSelector, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_OnSwapToSelector::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.PlayCloseAnimation
// 0x0038 (0x0038 - 0x0000)
struct WBP_AugmentSelector_HUD_C_PlayCloseAnimation final
{
public:
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_PlayCloseAnimation");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation) == 0x000038, "Wrong size on WBP_AugmentSelector_HUD_C_PlayCloseAnimation");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_PlayCloseAnimation::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_PlayCloseAnimation::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_PlayCloseAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_PlayCloseAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation, CallFunc_GetEndTime_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_PlayCloseAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PlayCloseAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_PlayCloseAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_HUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AugmentSelector_HUD_C_PreConstruct");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_PreConstruct) == 0x000001, "Wrong size on WBP_AugmentSelector_HUD_C_PreConstruct");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.RefreshArrows
// 0x0020 (0x0020 - 0x0000)
struct WBP_AugmentSelector_HUD_C_RefreshArrows final
{
public:
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_RefreshArrows) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_RefreshArrows");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_RefreshArrows) == 0x000020, "Wrong size on WBP_AugmentSelector_HUD_C_RefreshArrows");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_Array_LastIndex_ReturnValue) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000005, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshArrows, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x00001C, "Member 'WBP_AugmentSelector_HUD_C_RefreshArrows::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.RefreshAugmentInfo
// 0x0040 (0x0040 - 0x0000)
struct WBP_AugmentSelector_HUD_C_RefreshAugmentInfo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAugmentItemDefinition*       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_RefreshAugmentInfo");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo) == 0x000040, "Wrong size on WBP_AugmentSelector_HUD_C_RefreshAugmentInfo");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Length_ReturnValue_2) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Length_ReturnValue_3) == 0x000024, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_Array_Length_ReturnValue_4) == 0x000038, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_RefreshAugmentInfo, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_AugmentSelector_HUD_C_RefreshAugmentInfo::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.ResetState
// 0x0020 (0x0020 - 0x0000)
struct WBP_AugmentSelector_HUD_C_ResetState final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_ResetState) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_ResetState");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_ResetState) == 0x000020, "Wrong size on WBP_AugmentSelector_HUD_C_ResetState");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ResetState, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_ResetState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ResetState, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_ResetState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ResetState, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_ResetState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ResetState, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_AugmentSelector_HUD_C_ResetState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ResetState, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_ResetState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ResetState, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_AugmentSelector_HUD_C_ResetState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.SetHideTags
// 0x0040 (0x0040 - 0x0000)
struct WBP_AugmentSelector_HUD_C_SetHideTags final
{
public:
	bool                                          bHideElements;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HideSecondaryReasonName;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  HideSecondaryForAbilityTags;                       // 0x0008(0x0020)(Edit, BlueprintVisible)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_SetHideTags) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_SetHideTags");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_SetHideTags) == 0x000040, "Wrong size on WBP_AugmentSelector_HUD_C_SetHideTags");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetHideTags, bHideElements) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_SetHideTags::bHideElements' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetHideTags, HideSecondaryReasonName) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_SetHideTags::HideSecondaryReasonName' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetHideTags, HideSecondaryForAbilityTags) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_SetHideTags::HideSecondaryForAbilityTags' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetHideTags, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_SetHideTags::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetHideTags, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_SetHideTags::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetHideTags, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_AugmentSelector_HUD_C_SetHideTags::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.SetMobileVisuals
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_AugmentSelector_HUD_C_SetMobileVisuals final
{
public:
	bool                                          IsMobileLayout;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_2;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_3;                           // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_SetMobileVisuals) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_SetMobileVisuals");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_SetMobileVisuals) == 0x0000C0, "Wrong size on WBP_AugmentSelector_HUD_C_SetMobileVisuals");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, IsMobileLayout) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::IsMobileLayout' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_bool_Variable) == 0x000001, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_bool_Variable_2) == 0x000003, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_byte_Variable) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_bool_Variable_3) == 0x000006, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_struct_Variable) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_IsMobileGame_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_Select_Default) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000041, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_IsMobileGame_ReturnValue_1) == 0x000042, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_BooleanOR_ReturnValue) == 0x000043, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_MakeStruct_Margin) == 0x000044, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_MakeStruct_Margin_1) == 0x000054, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_Select_Default_1) == 0x000064, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_Select_Default_2) == 0x000068, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_MakeStruct_Margin_2) == 0x000078, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_MakeStruct_Margin_3) == 0x000088, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, K2Node_Select_Default_3) == 0x000098, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x0000A8, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_IsUsingTouch_ReturnValue) == 0x0000B0, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_SetMobileVisuals, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000B8, "Member 'WBP_AugmentSelector_HUD_C_SetMobileVisuals::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.ShouldRefreshAugmentInfo
// 0x0005 (0x0005 - 0x0000)
struct WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo final
{
public:
	bool                                          ShouldRefresh;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo) == 0x000001, "Wrong alignment on WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo) == 0x000005, "Wrong size on WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo, ShouldRefresh) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo::ShouldRefresh' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x000002, "Member 'WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_ShouldRefreshAugmentInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.Swap Augment Focus
// 0x0070 (0x0070 - 0x0000)
struct WBP_AugmentSelector_HUD_C_Swap_Augment_Focus final
{
public:
	int32                                         UpdatedAugmentIndex;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnimation_0;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AugmentSelector_Augment_C*         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_Swap_Augment_Focus");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus) == 0x000070, "Wrong size on WBP_AugmentSelector_HUD_C_Swap_Augment_Focus");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, UpdatedAugmentIndex) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::UpdatedAugmentIndex' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, PlayAnimation_0) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::PlayAnimation_0' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, Temp_byte_Variable) == 0x00000C, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, Temp_byte_Variable_1) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, Temp_int_Variable) == 0x000030, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, K2Node_Select_Default) == 0x000038, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_SelectFloat_B_ImplicitCast) == 0x000060, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_Swap_Augment_Focus, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000068, "Member 'WBP_AugmentSelector_HUD_C_Swap_Augment_Focus::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.UpdateSelectionReadyCount
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount final
{
public:
	int32                                         NumPendingToGrant;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount) == 0x000008, "Wrong alignment on WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount) == 0x0000A0, "Wrong size on WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, NumPendingToGrant) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::NumPendingToGrant' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, Temp_byte_Variable) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, Temp_bool_Variable) == 0x000006, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000007, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, K2Node_Select_Default) == 0x000070, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount, CallFunc_Format_ReturnValue) == 0x000088, "Member 'WBP_AugmentSelector_HUD_C_UpdateSelectionReadyCount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C.UpdateSwapBoundAction
// 0x0028 (0x0028 - 0x0000)
struct WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction) == 0x000004, "Wrong alignment on WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction");
static_assert(sizeof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction) == 0x000028, "Wrong size on WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_int_Variable) == 0x000000, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_name_Variable) == 0x000004, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_name_Variable_1) == 0x000008, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_byte_Variable) == 0x00000C, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_name_Variable_2) == 0x000010, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_name_Variable_3) == 0x000014, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, Temp_name_Variable_4) == 0x000018, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, K2Node_Select_Default) == 0x000020, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction, K2Node_Select_Default_1) == 0x000024, "Member 'WBP_AugmentSelector_HUD_C_UpdateSwapBoundAction::K2Node_Select_Default_1' has a wrong offset!");

}

