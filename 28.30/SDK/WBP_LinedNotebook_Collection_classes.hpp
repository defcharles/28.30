#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_Collection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EventScreenBase_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LinedNotebook_Collection.WBP_LinedNotebook_Collection_C
// 0x0070 (0x0338 - 0x02C8)
class UWBP_LinedNotebook_Collection_C final : public UFortEventTrackerModule_Collection
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Glider_Intro;                                      // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Collectible_C*       Collection1;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Collectible_C*       Collection2;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Collectible_C*       Collection3;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Collectible_C*       Collection4;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Collectible_C*       Collection5;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Collectible_C*       Collection6;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Glider;                                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GliderSmoke;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RadialGradient;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_BackblingClaimedText_C* WBP_LinedNotebook_BackblingClaimedText;            // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USoundBase*                             GliderRevealWhooshSound;                           // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPurpleBG;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimInCollectables();
	void ExecuteUbergraph_WBP_LinedNotebook_Collection(int32 EntryPoint);
	void IntroAnimCollectibles();
	void OnInitialized();
	void OwnsChaseReward(bool* Return);
	void PreConstruct(bool IsDesignTime);
	void ResetVisibility();
	void SequenceEvent__ENTRYPOINTWBP_LinedNotebook_Collection();
	void UpdateConnectionProgress();

	void OnGatherTokenCollectionWidgets(TArray<class UFortEventTokenCollectionWidget*>* OutCollectionWidgets) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LinedNotebook_Collection_C">();
	}
	static class UWBP_LinedNotebook_Collection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LinedNotebook_Collection_C>();
	}
};
static_assert(alignof(UWBP_LinedNotebook_Collection_C) == 0x000008, "Wrong alignment on UWBP_LinedNotebook_Collection_C");
static_assert(sizeof(UWBP_LinedNotebook_Collection_C) == 0x000338, "Wrong size on UWBP_LinedNotebook_Collection_C");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, UberGraphFrame) == 0x0002C8, "Member 'UWBP_LinedNotebook_Collection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Glider_Intro) == 0x0002D0, "Member 'UWBP_LinedNotebook_Collection_C::Glider_Intro' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Collection1) == 0x0002D8, "Member 'UWBP_LinedNotebook_Collection_C::Collection1' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Collection2) == 0x0002E0, "Member 'UWBP_LinedNotebook_Collection_C::Collection2' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Collection3) == 0x0002E8, "Member 'UWBP_LinedNotebook_Collection_C::Collection3' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Collection4) == 0x0002F0, "Member 'UWBP_LinedNotebook_Collection_C::Collection4' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Collection5) == 0x0002F8, "Member 'UWBP_LinedNotebook_Collection_C::Collection5' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Collection6) == 0x000300, "Member 'UWBP_LinedNotebook_Collection_C::Collection6' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, Glider) == 0x000308, "Member 'UWBP_LinedNotebook_Collection_C::Glider' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, GliderSmoke) == 0x000310, "Member 'UWBP_LinedNotebook_Collection_C::GliderSmoke' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, RadialGradient) == 0x000318, "Member 'UWBP_LinedNotebook_Collection_C::RadialGradient' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, WBP_LinedNotebook_BackblingClaimedText) == 0x000320, "Member 'UWBP_LinedNotebook_Collection_C::WBP_LinedNotebook_BackblingClaimedText' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, GliderRevealWhooshSound) == 0x000328, "Member 'UWBP_LinedNotebook_Collection_C::GliderRevealWhooshSound' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Collection_C, IsPurpleBG) == 0x000330, "Member 'UWBP_LinedNotebook_Collection_C::IsPurpleBG' has a wrong offset!");

}

