#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoiceChannelHeaderOptions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OnlineSubsystemMcp_structs.hpp"


namespace SDK::Params
{

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged");
static_assert(sizeof(VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged");
static_assert(offsetof(VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.DoCustomNavigation
// 0x0010 (0x0010 - 0x0000)
struct VoiceChannelHeaderOptions_C_DoCustomNavigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_DoCustomNavigation) == 0x000008, "Wrong alignment on VoiceChannelHeaderOptions_C_DoCustomNavigation");
static_assert(sizeof(VoiceChannelHeaderOptions_C_DoCustomNavigation) == 0x000010, "Wrong size on VoiceChannelHeaderOptions_C_DoCustomNavigation");
static_assert(offsetof(VoiceChannelHeaderOptions_C_DoCustomNavigation, Navigation_0) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_DoCustomNavigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_DoCustomNavigation, ReturnValue) == 0x000008, "Member 'VoiceChannelHeaderOptions_C_DoCustomNavigation::ReturnValue' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.ExecuteUbergraph_VoiceChannelHeaderOptions
// 0x0150 (0x0150 - 0x0000)
struct VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsActiveAndListening;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsActiveOrAvailable;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAvailableAndNotActive;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsListening;                         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowingRestriction;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveChannel_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveChannel_ReturnValue_1;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJoinChannel_ReturnValue;               // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJoinChannel_ReturnValue_1;             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsListItemExpanded_ReturnValue;           // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded_1;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_6;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00AC(0x0014)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isExpanded;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveChannel_ReturnValue_2;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJoinChannel_ReturnValue_2;             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x00EA(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_7;                              // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Old;                            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESocialCommsPermission                        K2Node_Event_VoicePermission;                      // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVoiceReportingIsAvailable;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsRecording;                         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanJoinOrLeave;                      // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMightBeAbleToReport;                 // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_4;                           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue_1;       // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue_2;       // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue_3;       // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions) == 0x000008, "Wrong alignment on VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions");
static_assert(sizeof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions) == 0x000150, "Wrong size on VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, EntryPoint) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::EntryPoint' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable) == 0x000004, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_1) == 0x000005, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_bool_Variable) == 0x000006, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_struct_Variable) == 0x000008, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_struct_Variable_1) == 0x000018, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_bool_Variable_1) == 0x000028, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_2) == 0x000029, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_3) == 0x00002A, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_bool_Variable_2) == 0x00002B, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_4) == 0x00002C, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Select_Default) == 0x00002D, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_5) == 0x00002E, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsActiveAndListening) == 0x00002F, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsActiveAndListening' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsActiveOrAvailable) == 0x000030, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsActiveOrAvailable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsAvailableAndNotActive) == 0x000031, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsAvailableAndNotActive' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsListening) == 0x000032, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsListening' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bShowingRestriction) == 0x000033, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bShowingRestriction' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Select_Default_1) == 0x000040, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_SelectFloat_ReturnValue_1) == 0x000050, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimationForward_ReturnValue) == 0x000058, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000060, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000068, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000070, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsActiveChannel_ReturnValue) == 0x000078, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsActiveChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsActiveChannel_ReturnValue_1) == 0x000079, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsActiveChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_bool_Variable_3) == 0x00007A, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_CanJoinChannel_ReturnValue) == 0x00007B, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_CanJoinChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Select_Default_2) == 0x00007C, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_CanJoinChannel_ReturnValue_1) == 0x00007D, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_CanJoinChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsListItemExpanded_ReturnValue) == 0x00007E, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsListItemExpanded_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_GetEndTime_ReturnValue) == 0x000080, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_ListItemObject) == 0x000090, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsExpanded_1) == 0x000098, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsExpanded_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_6) == 0x000099, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_SelectColor_ReturnValue) == 0x00009C, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_MakeStruct_SlateColor) == 0x0000AC, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C0, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_CustomEvent_isExpanded) == 0x0000C8, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_CustomEvent_isExpanded' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000D0, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000D8, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000E0, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsActiveChannel_ReturnValue_2) == 0x0000E8, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsActiveChannel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_CanJoinChannel_ReturnValue_2) == 0x0000E9, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_CanJoinChannel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsExpanded) == 0x0000EA, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_7) == 0x0000EB, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_CustomEvent_Old) == 0x0000EC, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_CustomEvent_Old' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_Not_PreBool_ReturnValue) == 0x0000ED, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_BooleanAND_ReturnValue) == 0x0000EE, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_VoicePermission) == 0x0000EF, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_VoicePermission' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bVoiceReportingIsAvailable) == 0x0000F0, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bVoiceReportingIsAvailable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bIsRecording) == 0x0000F1, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bIsRecording' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bCanJoinOrLeave) == 0x0000F2, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bCanJoinOrLeave' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Event_bMightBeAbleToReport) == 0x0000F3, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Event_bMightBeAbleToReport' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Select_Default_3) == 0x0000F4, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_SwitchEnum_CmpSuccess) == 0x0000F5, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_8) == 0x0000F6, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_bool_Variable_4) == 0x0000F7, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_bool_Variable_5) == 0x0000F8, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Select_Default_4) == 0x0000F9, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, Temp_byte_Variable_9) == 0x0000FA, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_5) == 0x000100, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_Select_Default_5) == 0x000108, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_GetDesiredSize_ReturnValue) == 0x000110, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_BreakVector2D_X) == 0x000120, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_BreakVector2D_Y) == 0x000128, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000130, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue) == 0x000131, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue_1) == 0x000132, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue_2) == 0x000133, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue_3) == 0x000134, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_ComponentBoundEvent_Button_1) == 0x000138, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, K2Node_ComponentBoundEvent_Button) == 0x000140, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000148, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x00014C, "Member 'VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.On Options Expansion Changed
// 0x0001 (0x0001 - 0x0000)
struct VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed final
{
public:
	bool                                          IsExpanded;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed) == 0x000001, "Wrong alignment on VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed");
static_assert(sizeof(VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed) == 0x000001, "Wrong size on VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed");
static_assert(offsetof(VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed, IsExpanded) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed::IsExpanded' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.OnListItemObjectSet_1
// 0x0008 (0x0008 - 0x0000)
struct VoiceChannelHeaderOptions_C_OnListItemObjectSet_1 final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_OnListItemObjectSet_1) == 0x000008, "Wrong alignment on VoiceChannelHeaderOptions_C_OnListItemObjectSet_1");
static_assert(sizeof(VoiceChannelHeaderOptions_C_OnListItemObjectSet_1) == 0x000008, "Wrong size on VoiceChannelHeaderOptions_C_OnListItemObjectSet_1");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnListItemObjectSet_1, ListItemObject) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_OnListItemObjectSet_1::ListItemObject' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.OnUpdateOptionsVisuals
// 0x0005 (0x0005 - 0x0000)
struct VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals final
{
public:
	ESocialCommsPermission                        VoicePermission;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVoiceReportingIsAvailable;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRecording;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanJoinOrLeave;                                   // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMightBeAbleToReport;                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals) == 0x000001, "Wrong alignment on VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals");
static_assert(sizeof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals) == 0x000005, "Wrong size on VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, VoicePermission) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::VoicePermission' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bVoiceReportingIsAvailable) == 0x000001, "Member 'VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bVoiceReportingIsAvailable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bIsRecording) == 0x000002, "Member 'VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bIsRecording' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bCanJoinOrLeave) == 0x000003, "Member 'VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bCanJoinOrLeave' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bMightBeAbleToReport) == 0x000004, "Member 'VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bMightBeAbleToReport' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.OnUpdateVisuals
// 0x0005 (0x0005 - 0x0000)
struct VoiceChannelHeaderOptions_C_OnUpdateVisuals final
{
public:
	bool                                          bIsActiveAndListening;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsActiveOrAvailable;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAvailableAndNotActive;                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsListening;                                      // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowingRestriction;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_OnUpdateVisuals) == 0x000001, "Wrong alignment on VoiceChannelHeaderOptions_C_OnUpdateVisuals");
static_assert(sizeof(VoiceChannelHeaderOptions_C_OnUpdateVisuals) == 0x000005, "Wrong size on VoiceChannelHeaderOptions_C_OnUpdateVisuals");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsActiveAndListening) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsActiveAndListening' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsActiveOrAvailable) == 0x000001, "Member 'VoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsActiveOrAvailable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsAvailableAndNotActive) == 0x000002, "Member 'VoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsAvailableAndNotActive' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsListening) == 0x000003, "Member 'VoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsListening' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_OnUpdateVisuals, bShowingRestriction) == 0x000004, "Member 'VoiceChannelHeaderOptions_C_OnUpdateVisuals::bShowingRestriction' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.Set Header Status Visuals
// 0x0001 (0x0001 - 0x0000)
struct VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals final
{
public:
	bool                                          Old_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals) == 0x000001, "Wrong alignment on VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals");
static_assert(sizeof(VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals) == 0x000001, "Wrong size on VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals");
static_assert(offsetof(VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals, Old_0) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals::Old_0' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.SetExpansionState
// 0x0001 (0x0001 - 0x0000)
struct VoiceChannelHeaderOptions_C_SetExpansionState final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoiceChannelHeaderOptions_C_SetExpansionState) == 0x000001, "Wrong alignment on VoiceChannelHeaderOptions_C_SetExpansionState");
static_assert(sizeof(VoiceChannelHeaderOptions_C_SetExpansionState) == 0x000001, "Wrong size on VoiceChannelHeaderOptions_C_SetExpansionState");
static_assert(offsetof(VoiceChannelHeaderOptions_C_SetExpansionState, bIsExpanded) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_SetExpansionState::bIsExpanded' has a wrong offset!");

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.SetJoinOrLeaveButton
// 0x0050 (0x0050 - 0x0000)
struct VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton final
{
public:
	bool                                          Join;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0020(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0018)()
};
static_assert(alignof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton) == 0x000008, "Wrong alignment on VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton");
static_assert(sizeof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton) == 0x000050, "Wrong size on VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton");
static_assert(offsetof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, Join) == 0x000000, "Member 'VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::Join' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, Temp_bool_Variable) == 0x000001, "Member 'VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000020, "Member 'VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, K2Node_Select_Default) == 0x000038, "Member 'VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::K2Node_Select_Default' has a wrong offset!");

}

