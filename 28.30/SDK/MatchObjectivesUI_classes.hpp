#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchObjectivesUI

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "MatchObjectivesUI_structs.hpp"
#include "DynamicUI_classes.hpp"


namespace SDK
{

// Class MatchObjectivesUI.FortMobileButtonBehaviorComponent_MatchObjectivePicker
// 0x0010 (0x0148 - 0x0138)
class UFortMobileButtonBehaviorComponent_MatchObjectivePicker final : public UFortMobileActionButtonBehavior
{
public:
	class UFortControllerComponent_SkydiveFeedback* SkydiveFeedbackComp;                               // 0x0138(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0x8];                                      // 0x0140(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleSkydiveModeChanged(ESkydiveFeedbackPhase Phase);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMobileButtonBehaviorComponent_MatchObjectivePicker">();
	}
	static class UFortMobileButtonBehaviorComponent_MatchObjectivePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMobileButtonBehaviorComponent_MatchObjectivePicker>();
	}
};
static_assert(alignof(UFortMobileButtonBehaviorComponent_MatchObjectivePicker) == 0x000008, "Wrong alignment on UFortMobileButtonBehaviorComponent_MatchObjectivePicker");
static_assert(sizeof(UFortMobileButtonBehaviorComponent_MatchObjectivePicker) == 0x000148, "Wrong size on UFortMobileButtonBehaviorComponent_MatchObjectivePicker");
static_assert(offsetof(UFortMobileButtonBehaviorComponent_MatchObjectivePicker, SkydiveFeedbackComp) == 0x000138, "Member 'UFortMobileButtonBehaviorComponent_MatchObjectivePicker::SkydiveFeedbackComp' has a wrong offset!");

// Class MatchObjectivesUI.FortMobileHUDElement_ObjectiveSelectorWrapper
// 0x0020 (0x0370 - 0x0350)
class UFortMobileHUDElement_ObjectiveSelectorWrapper final : public UFortMobileHUDElement
{
public:
	class UMatchObjectivesSelectorWidget*         WBP_MatchQuests_Selector;                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                Spacer_ReservedSpace;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_WrapperContents;                           // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleSkydiveModeChanged(ESkydiveFeedbackPhase Phase);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMobileHUDElement_ObjectiveSelectorWrapper">();
	}
	static class UFortMobileHUDElement_ObjectiveSelectorWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMobileHUDElement_ObjectiveSelectorWrapper>();
	}
};
static_assert(alignof(UFortMobileHUDElement_ObjectiveSelectorWrapper) == 0x000008, "Wrong alignment on UFortMobileHUDElement_ObjectiveSelectorWrapper");
static_assert(sizeof(UFortMobileHUDElement_ObjectiveSelectorWrapper) == 0x000370, "Wrong size on UFortMobileHUDElement_ObjectiveSelectorWrapper");
static_assert(offsetof(UFortMobileHUDElement_ObjectiveSelectorWrapper, WBP_MatchQuests_Selector) == 0x000350, "Member 'UFortMobileHUDElement_ObjectiveSelectorWrapper::WBP_MatchQuests_Selector' has a wrong offset!");
static_assert(offsetof(UFortMobileHUDElement_ObjectiveSelectorWrapper, Spacer_ReservedSpace) == 0x000358, "Member 'UFortMobileHUDElement_ObjectiveSelectorWrapper::Spacer_ReservedSpace' has a wrong offset!");
static_assert(offsetof(UFortMobileHUDElement_ObjectiveSelectorWrapper, Overlay_WrapperContents) == 0x000360, "Member 'UFortMobileHUDElement_ObjectiveSelectorWrapper::Overlay_WrapperContents' has a wrong offset!");

// Class MatchObjectivesUI.MatchObjectivesOptionEntryWidget
// 0x0038 (0x02F8 - 0x02C0)
class UMatchObjectivesOptionEntryWidget final : public UUserWidget
{
public:
	bool                                          bIsOptionSelected;                                 // 0x02C0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsOptionFocused;                                  // 0x02C1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C2[0x16];                                     // 0x02C2(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      Button_TapSelect;                                  // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x18];                                     // 0x02E0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMatchObjectiveEntrySetup(const struct FUrgentQuestData& UrgentQuestData, const struct FFortItemQuantityPair& VisibleReward, const int32 ObjectiveCount);
	void OnOptionFocusedStateChanged(bool bIsFocused);
	void OnOptionSelectedStateChanged(bool bIsSelected);
	void OnTeammateSelectionUpdated(const TArray<class AFortPlayerState*>& PlayersThatHaveSelectedThis);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchObjectivesOptionEntryWidget">();
	}
	static class UMatchObjectivesOptionEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchObjectivesOptionEntryWidget>();
	}
};
static_assert(alignof(UMatchObjectivesOptionEntryWidget) == 0x000008, "Wrong alignment on UMatchObjectivesOptionEntryWidget");
static_assert(sizeof(UMatchObjectivesOptionEntryWidget) == 0x0002F8, "Wrong size on UMatchObjectivesOptionEntryWidget");
static_assert(offsetof(UMatchObjectivesOptionEntryWidget, bIsOptionSelected) == 0x0002C0, "Member 'UMatchObjectivesOptionEntryWidget::bIsOptionSelected' has a wrong offset!");
static_assert(offsetof(UMatchObjectivesOptionEntryWidget, bIsOptionFocused) == 0x0002C1, "Member 'UMatchObjectivesOptionEntryWidget::bIsOptionFocused' has a wrong offset!");
static_assert(offsetof(UMatchObjectivesOptionEntryWidget, Button_TapSelect) == 0x0002D8, "Member 'UMatchObjectivesOptionEntryWidget::Button_TapSelect' has a wrong offset!");

// Class MatchObjectivesUI.MatchObjectivesSocialAvatar
// 0x0008 (0x02C8 - 0x02C0)
class UMatchObjectivesSocialAvatar final : public UUserWidget
{
public:
	class UFortSocialAvatarIcon*                  Icon_SocialAvatar;                                 // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetSocialAvatar(const class AFortPlayerState* PlayerState);
	void SetSocialAvatarTexture(const TSoftObjectPtr<class UTexture2D>& AvatarTexture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchObjectivesSocialAvatar">();
	}
	static class UMatchObjectivesSocialAvatar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchObjectivesSocialAvatar>();
	}
};
static_assert(alignof(UMatchObjectivesSocialAvatar) == 0x000008, "Wrong alignment on UMatchObjectivesSocialAvatar");
static_assert(sizeof(UMatchObjectivesSocialAvatar) == 0x0002C8, "Wrong size on UMatchObjectivesSocialAvatar");
static_assert(offsetof(UMatchObjectivesSocialAvatar, Icon_SocialAvatar) == 0x0002C0, "Member 'UMatchObjectivesSocialAvatar::Icon_SocialAvatar' has a wrong offset!");

// Class MatchObjectivesUI.MatchObjectivesUIDirectorBase
// 0x0010 (0x02C0 - 0x02B0)
class AMatchObjectivesUIDirectorBase final : public ADynamicUIDirectorBase
{
public:
	uint8                                         Pad_2B0[0x10];                                     // 0x02B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleSkydiveModeChanged(ESkydiveFeedbackPhase Phase);
	void OnFinishSkydiving();

	bool IsAnyChallengeAvailable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchObjectivesUIDirectorBase">();
	}
	static class AMatchObjectivesUIDirectorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMatchObjectivesUIDirectorBase>();
	}
};
static_assert(alignof(AMatchObjectivesUIDirectorBase) == 0x000008, "Wrong alignment on AMatchObjectivesUIDirectorBase");
static_assert(sizeof(AMatchObjectivesUIDirectorBase) == 0x0002C0, "Wrong size on AMatchObjectivesUIDirectorBase");

// Class MatchObjectivesUI.MatchObjectivesSelectorWidget
// 0x0048 (0x0370 - 0x0328)
class UMatchObjectivesSelectorWidget final : public UFortHUDElementWidget
{
public:
	class UDynamicEntryBox*                       DynamicEntryBox_OptionEntries;                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Image_MenuBG;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMatchQuestsSelectorState                     WidgetSelectorState;                               // 0x0338(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputComponent*                        MatchObjectivesInputComponent;                     // 0x0340(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_HeaderToggle;                               // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetDailyChallengesFromMCP();
	void OnQuestEntrySelected(class UUserWidget* SelectedEntry);
	void OnSelectorOpenStateChanged();
	void SetSelectorState(const EMatchQuestsSelectorState State);
	void UpdateKeybindings();

	bool IsOpenByDefault() const;
	void PopulateChallengeEntries(const TArray<TScriptInterface<class IQuestDefinitionInterface>>& QuestOffering) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchObjectivesSelectorWidget">();
	}
	static class UMatchObjectivesSelectorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchObjectivesSelectorWidget>();
	}
};
static_assert(alignof(UMatchObjectivesSelectorWidget) == 0x000008, "Wrong alignment on UMatchObjectivesSelectorWidget");
static_assert(sizeof(UMatchObjectivesSelectorWidget) == 0x000370, "Wrong size on UMatchObjectivesSelectorWidget");
static_assert(offsetof(UMatchObjectivesSelectorWidget, DynamicEntryBox_OptionEntries) == 0x000328, "Member 'UMatchObjectivesSelectorWidget::DynamicEntryBox_OptionEntries' has a wrong offset!");
static_assert(offsetof(UMatchObjectivesSelectorWidget, Image_MenuBG) == 0x000330, "Member 'UMatchObjectivesSelectorWidget::Image_MenuBG' has a wrong offset!");
static_assert(offsetof(UMatchObjectivesSelectorWidget, WidgetSelectorState) == 0x000338, "Member 'UMatchObjectivesSelectorWidget::WidgetSelectorState' has a wrong offset!");
static_assert(offsetof(UMatchObjectivesSelectorWidget, MatchObjectivesInputComponent) == 0x000340, "Member 'UMatchObjectivesSelectorWidget::MatchObjectivesInputComponent' has a wrong offset!");
static_assert(offsetof(UMatchObjectivesSelectorWidget, Button_HeaderToggle) == 0x000348, "Member 'UMatchObjectivesSelectorWidget::Button_HeaderToggle' has a wrong offset!");

}

