#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TechArt_GlobalLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UB_TechArt_GlobalLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void AddActorTag(class AActor* Actor, const class FName& tag, class UObject* __WorldContext);
	static void AreBoundsOverlapping_(const struct FBox& BoundsA, const struct FBox& BoundsB, class UObject* __WorldContext, bool* BoundsOverlap_);
	static void GetDynamicMaterialInstance(class UMeshComponent* MeshComponent, int32 MaterialIndex, class UObject* __WorldContext, class UMaterialInstanceDynamic** Material_Instance_Dynamic);
	static void HoudiniInstanceHISMBuilder(class UInstancedStaticMeshComponent* InstancedStaticMeshComponent, class UDataTable* InstanceDataTable, double InstancesCountToImport, bool RandomScale, double RandomScaleMin, double RandomScaleMax, bool RandomRotationZ, double RandomRotationZMin, double RandomRotationZMax, bool UseWorldSpacePositions, class UObject* __WorldContext);
	static void IsLumenEnabled(class UObject* __WorldContext, bool* IsEnabled);

	void BindScalabilitySettings(const TDelegate<void()>& Delegate, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_TechArt_GlobalLibrary_C">();
	}
	static class UB_TechArt_GlobalLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_TechArt_GlobalLibrary_C>();
	}
};
static_assert(alignof(UB_TechArt_GlobalLibrary_C) == 0x000008, "Wrong alignment on UB_TechArt_GlobalLibrary_C");
static_assert(sizeof(UB_TechArt_GlobalLibrary_C) == 0x000028, "Wrong size on UB_TechArt_GlobalLibrary_C");

}

