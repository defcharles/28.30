#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_FreeFlying_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Player_FreeFlying_AnimBP_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Player_FreeFlying_AnimBP.Player_FreeFlying_AnimBP_C
// 0x0810 (0x1E30 - 0x1620)
class UPlayer_FreeFlying_AnimBP_C final : public UFortPlayerAnimInstanceProxy
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Player_FreeFlying_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x1628(0x0048)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x1670(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x1678(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1680(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x16A0(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x16C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1710(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1758(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x17A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x17E8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1830(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1878(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x18C0(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1930(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x19F8(0x0020)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1A18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1A60(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1AA8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1AF0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1B38(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1B80(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1BC8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1C10(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1C80(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1D48(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1D68(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_Player_FreeFlying_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Player_FreeFlying_AnimBP_C">();
	}
	static class UPlayer_FreeFlying_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayer_FreeFlying_AnimBP_C>();
	}
};
static_assert(alignof(UPlayer_FreeFlying_AnimBP_C) == 0x000010, "Wrong alignment on UPlayer_FreeFlying_AnimBP_C");
static_assert(sizeof(UPlayer_FreeFlying_AnimBP_C) == 0x001E30, "Wrong size on UPlayer_FreeFlying_AnimBP_C");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, UberGraphFrame) == 0x001620, "Member 'UPlayer_FreeFlying_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, __AnimBlueprintMutables) == 0x001628, "Member 'UPlayer_FreeFlying_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x001670, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimBlueprintExtension_Base) == 0x001678, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_Root) == 0x001680, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0016A0, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendListByEnum_1) == 0x0016C8, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x001710, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x001758, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x0017A0, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0017E8, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x001830, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x001878, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0018C0, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x001930, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0019F8, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x001A18, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x001A60, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001AA8, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001AF0, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001B38, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x001B80, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001BC8, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x001C10, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x001C80, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_StateResult) == 0x001D48, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPlayer_FreeFlying_AnimBP_C, AnimGraphNode_StateMachine) == 0x001D68, "Member 'UPlayer_FreeFlying_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

