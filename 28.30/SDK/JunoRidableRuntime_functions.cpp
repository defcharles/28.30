#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoRidableRuntime

#include "Basic.hpp"

#include "JunoRidableRuntime_classes.hpp"


namespace SDK
{

// Function JunoRidableRuntime.JunoRidableCheatManager.JunoStartRiding
// (BlueprintAuthorityOnly, Exec, Native, Public)

void UJunoRidableCheatManager::JunoStartRiding()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("JunoStartRiding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoRidableRuntime.JunoRidableCheatManager.JunoStopRiding
// (BlueprintAuthorityOnly, Exec, Native, Public)

void UJunoRidableCheatManager::JunoStopRiding()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("JunoStopRiding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoRidableRuntime.JunoRidableCheatManager.NativeAddToCheatManager
// (Final, Native, Protected, BlueprintCallable)

void UJunoRidableCheatManager::NativeAddToCheatManager()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NativeAddToCheatManager");

	UObject::ProcessEvent(Func, nullptr);
}

}

