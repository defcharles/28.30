#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_MED_Patches_Axe_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GravityOverrideParamsStruct_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass M_MED_Patches_Axe_AnimBP.M_MED_Patches_Axe_AnimBP_C
// 0x08C0 (0x0FE0 - 0x0720)
class UM_MED_Patches_Axe_AnimBP_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0728(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0730(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x0738(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x07E8(0x0020)()
	struct FGravityOverrideParamsStruct           Gravity_Override_Params;                           // 0x0808(0x07B8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravityOverride;                                   // 0x0FC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_M_MED_Patches_Axe_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_MED_Patches_Axe_AnimBP_C">();
	}
	static class UM_MED_Patches_Axe_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_MED_Patches_Axe_AnimBP_C>();
	}
};
static_assert(alignof(UM_MED_Patches_Axe_AnimBP_C) == 0x000010, "Wrong alignment on UM_MED_Patches_Axe_AnimBP_C");
static_assert(sizeof(UM_MED_Patches_Axe_AnimBP_C) == 0x000FE0, "Wrong size on UM_MED_Patches_Axe_AnimBP_C");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, UberGraphFrame) == 0x000720, "Member 'UM_MED_Patches_Axe_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000728, "Member 'UM_MED_Patches_Axe_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, AnimBlueprintExtension_Base) == 0x000730, "Member 'UM_MED_Patches_Axe_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, AnimGraphNode_SubInput) == 0x000738, "Member 'UM_MED_Patches_Axe_AnimBP_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, AnimGraphNode_Root) == 0x0007E8, "Member 'UM_MED_Patches_Axe_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, Gravity_Override_Params) == 0x000808, "Member 'UM_MED_Patches_Axe_AnimBP_C::Gravity_Override_Params' has a wrong offset!");
static_assert(offsetof(UM_MED_Patches_Axe_AnimBP_C, GravityOverride) == 0x000FC0, "Member 'UM_MED_Patches_Axe_AnimBP_C::GravityOverride' has a wrong offset!");

}

