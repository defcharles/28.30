#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Execution

#include "Basic.hpp"


namespace SDK
{

// VerseStruct Execution.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct Execution::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Execution::Ftuple_L_R) == 0x000001, "Wrong alignment on Execution::Ftuple_L_R");
static_assert(sizeof(Execution::Ftuple_L_R) == 0x000001, "Wrong size on Execution::Ftuple_L_R");
static_assert(offsetof(Execution::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'Execution::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// VerseStruct Execution.tuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R
// 0x0020 (0x0020 - 0x0000)
struct Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R final
{
public:
	FVerseFunctionProperty_                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	TOptional<double>                             __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R) == 0x000008, "Wrong alignment on Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R");
static_assert(sizeof(Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R) == 0x000020, "Wrong size on Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R");
static_assert(offsetof(Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Execution::Ftuple_Lfloat_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct Execution.tuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R
// 0x0020 (0x0020 - 0x0000)
struct Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R final
{
public:
	FVerseFunctionProperty_                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	TOptional<double>                             __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R) == 0x000008, "Wrong alignment on Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R");
static_assert(sizeof(Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R) == 0x000020, "Wrong size on Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R");
static_assert(offsetof(Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Execution::Ftuple_Ltuple_L_R_Tvoid_M_QInterval_Nfloat_20_3d_20_2e_2e_2e_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

