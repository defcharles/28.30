#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshCosmeticsUI

#include "Basic.hpp"

#include "MeshCosmeticsUI_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class MeshCosmeticsUI.FortVariantRedirectorTile
// 0x00E8 (0x04A8 - 0x03C0)
class UFortVariantRedirectorTile final : public UFortVariantEditorWidgetBase
{
public:
	class UDynamicEntryBox*                       EntryBox_VariantOptions;                           // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_VariantName;                                  // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   SprayCustomizerClass;                              // 0x03D0(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVariantSprayCustomizerConfig*      SprayCustomizerConfig;                             // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    ClearAllSlotsInputAction;                          // 0x03F8(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    RandomizeSpraysInputAction;                        // 0x0408(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAthenaCosmeticItemDefinition> ItemDefinition;                                    // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortVariantRedirectorTileLoadedEmoteToRandomize> LoadedEmotesToRandomize;                           // 0x0420(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(struct FMcpVariantChannelInfo& InChannelInfo)> OnVariantEngagedEvent;                             // 0x0430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_440[0x68];                                     // 0x0440(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* HandleBoundaryNavigation(EUINavigation InNavigation);

	class UWidget* GetButtonToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortVariantRedirectorTile">();
	}
	static class UFortVariantRedirectorTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortVariantRedirectorTile>();
	}
};
static_assert(alignof(UFortVariantRedirectorTile) == 0x000008, "Wrong alignment on UFortVariantRedirectorTile");
static_assert(sizeof(UFortVariantRedirectorTile) == 0x0004A8, "Wrong size on UFortVariantRedirectorTile");
static_assert(offsetof(UFortVariantRedirectorTile, EntryBox_VariantOptions) == 0x0003C0, "Member 'UFortVariantRedirectorTile::EntryBox_VariantOptions' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, Text_VariantName) == 0x0003C8, "Member 'UFortVariantRedirectorTile::Text_VariantName' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, SprayCustomizerClass) == 0x0003D0, "Member 'UFortVariantRedirectorTile::SprayCustomizerClass' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, SprayCustomizerConfig) == 0x0003F0, "Member 'UFortVariantRedirectorTile::SprayCustomizerConfig' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, ClearAllSlotsInputAction) == 0x0003F8, "Member 'UFortVariantRedirectorTile::ClearAllSlotsInputAction' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, RandomizeSpraysInputAction) == 0x000408, "Member 'UFortVariantRedirectorTile::RandomizeSpraysInputAction' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, ItemDefinition) == 0x000418, "Member 'UFortVariantRedirectorTile::ItemDefinition' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, LoadedEmotesToRandomize) == 0x000420, "Member 'UFortVariantRedirectorTile::LoadedEmotesToRandomize' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTile, OnVariantEngagedEvent) == 0x000430, "Member 'UFortVariantRedirectorTile::OnVariantEngagedEvent' has a wrong offset!");

// Class MeshCosmeticsUI.FortVariantSprayCustomizerConfig
// 0x0050 (0x0080 - 0x0030)
class UFortVariantSprayCustomizerConfig final : public UDataAsset
{
public:
	TMap<struct FGameplayTag, struct FFortVariantSprayCustomizerCosmeticOptions> SprayCustomizerOptions;                            // 0x0030(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortVariantSprayCustomizerConfig">();
	}
	static class UFortVariantSprayCustomizerConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortVariantSprayCustomizerConfig>();
	}
};
static_assert(alignof(UFortVariantSprayCustomizerConfig) == 0x000008, "Wrong alignment on UFortVariantSprayCustomizerConfig");
static_assert(sizeof(UFortVariantSprayCustomizerConfig) == 0x000080, "Wrong size on UFortVariantSprayCustomizerConfig");
static_assert(offsetof(UFortVariantSprayCustomizerConfig, SprayCustomizerOptions) == 0x000030, "Member 'UFortVariantSprayCustomizerConfig::SprayCustomizerOptions' has a wrong offset!");

// Class MeshCosmeticsUI.FortVariantRedirectorTileButton
// 0x0060 (0x14F0 - 0x1490)
class UFortVariantRedirectorTileButton final : public UCommonButtonBase
{
public:
	class UOverlay*                               ImageOverlay;                                      // 0x1490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLazyImage*                         LazyImage_TileIcon;                                // 0x1498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ERedirectorTileDisplayMode                    DisplayMode;                                       // 0x14A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SlotOpacitySprayAssigned;                          // 0x14A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SlotOpacitySprayNotAssigned;                       // 0x14A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14AC[0x44];                                    // 0x14AC(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortVariantRedirectorTileButton">();
	}
	static class UFortVariantRedirectorTileButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortVariantRedirectorTileButton>();
	}
};
static_assert(alignof(UFortVariantRedirectorTileButton) == 0x000010, "Wrong alignment on UFortVariantRedirectorTileButton");
static_assert(sizeof(UFortVariantRedirectorTileButton) == 0x0014F0, "Wrong size on UFortVariantRedirectorTileButton");
static_assert(offsetof(UFortVariantRedirectorTileButton, ImageOverlay) == 0x001490, "Member 'UFortVariantRedirectorTileButton::ImageOverlay' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTileButton, LazyImage_TileIcon) == 0x001498, "Member 'UFortVariantRedirectorTileButton::LazyImage_TileIcon' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTileButton, DisplayMode) == 0x0014A0, "Member 'UFortVariantRedirectorTileButton::DisplayMode' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTileButton, SlotOpacitySprayAssigned) == 0x0014A4, "Member 'UFortVariantRedirectorTileButton::SlotOpacitySprayAssigned' has a wrong offset!");
static_assert(offsetof(UFortVariantRedirectorTileButton, SlotOpacitySprayNotAssigned) == 0x0014A8, "Member 'UFortVariantRedirectorTileButton::SlotOpacitySprayNotAssigned' has a wrong offset!");

// Class MeshCosmeticsUI.FortVariantSprayCustomizer
// 0x0158 (0x0888 - 0x0730)
class UFortVariantSprayCustomizer final : public UFortItemPreviewScreen
{
public:
	class UCommonButtonBase*                      Button_Back;                                       // 0x0730(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Confirm;                                    // 0x0738(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_HideArchivedItems;                          // 0x0740(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ShowArchivedItems;                          // 0x0748(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Widget_ArchivedItemsButtons;                       // 0x0750(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_SpraysTab;                                  // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_SettingsTab;                                // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_TouchClose;                                 // 0x0768(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonActionWidget*                    ActionWidget_TabLeft;                              // 0x0770(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonActionWidget*                    ActionWidget_TabRight;                             // 0x0778(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonActivatableWidgetSwitcher*       Switcher_Tabs;                                     // 0x0780(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Widget_Sprays;                                     // 0x0788(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Widget_Settings;                                   // 0x0790(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVariantItemTexturePicker*          TexturePicker_Sprays;                              // 0x0798(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVariantSprayCustomizerSetting*     Setting_Saturation;                                // 0x07A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVariantSprayCustomizerSetting*     Setting_Wear;                                      // 0x07A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVariantSprayCustomizerSetting*     Setting_Scale;                                     // 0x07B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    TabLeftAction;                                     // 0x07B8(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    TabRightAction;                                    // 0x07C8(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           ItemShopPreviewSceneChangerTag;                    // 0x07D8(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7DC[0x4];                                      // 0x07DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonGroupLegacy*               TabButtonGroup;                                    // 0x07E0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortCustomizableObjectSprayVariant*    SprayVariant;                                      // 0x07E8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7F0[0x98];                                     // 0x07F0(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetChannelSlotIcon(const TSoftObjectPtr<class UObject>& ChannelSlotIcon);
	void BP_SetVariantEditorMode(const bool bIsLockerMode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortVariantSprayCustomizer">();
	}
	static class UFortVariantSprayCustomizer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortVariantSprayCustomizer>();
	}
};
static_assert(alignof(UFortVariantSprayCustomizer) == 0x000008, "Wrong alignment on UFortVariantSprayCustomizer");
static_assert(sizeof(UFortVariantSprayCustomizer) == 0x000888, "Wrong size on UFortVariantSprayCustomizer");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_Back) == 0x000730, "Member 'UFortVariantSprayCustomizer::Button_Back' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_Confirm) == 0x000738, "Member 'UFortVariantSprayCustomizer::Button_Confirm' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_HideArchivedItems) == 0x000740, "Member 'UFortVariantSprayCustomizer::Button_HideArchivedItems' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_ShowArchivedItems) == 0x000748, "Member 'UFortVariantSprayCustomizer::Button_ShowArchivedItems' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Widget_ArchivedItemsButtons) == 0x000750, "Member 'UFortVariantSprayCustomizer::Widget_ArchivedItemsButtons' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_SpraysTab) == 0x000758, "Member 'UFortVariantSprayCustomizer::Button_SpraysTab' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_SettingsTab) == 0x000760, "Member 'UFortVariantSprayCustomizer::Button_SettingsTab' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Button_TouchClose) == 0x000768, "Member 'UFortVariantSprayCustomizer::Button_TouchClose' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, ActionWidget_TabLeft) == 0x000770, "Member 'UFortVariantSprayCustomizer::ActionWidget_TabLeft' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, ActionWidget_TabRight) == 0x000778, "Member 'UFortVariantSprayCustomizer::ActionWidget_TabRight' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Switcher_Tabs) == 0x000780, "Member 'UFortVariantSprayCustomizer::Switcher_Tabs' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Widget_Sprays) == 0x000788, "Member 'UFortVariantSprayCustomizer::Widget_Sprays' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Widget_Settings) == 0x000790, "Member 'UFortVariantSprayCustomizer::Widget_Settings' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, TexturePicker_Sprays) == 0x000798, "Member 'UFortVariantSprayCustomizer::TexturePicker_Sprays' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Setting_Saturation) == 0x0007A0, "Member 'UFortVariantSprayCustomizer::Setting_Saturation' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Setting_Wear) == 0x0007A8, "Member 'UFortVariantSprayCustomizer::Setting_Wear' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, Setting_Scale) == 0x0007B0, "Member 'UFortVariantSprayCustomizer::Setting_Scale' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, TabLeftAction) == 0x0007B8, "Member 'UFortVariantSprayCustomizer::TabLeftAction' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, TabRightAction) == 0x0007C8, "Member 'UFortVariantSprayCustomizer::TabRightAction' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, ItemShopPreviewSceneChangerTag) == 0x0007D8, "Member 'UFortVariantSprayCustomizer::ItemShopPreviewSceneChangerTag' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, TabButtonGroup) == 0x0007E0, "Member 'UFortVariantSprayCustomizer::TabButtonGroup' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizer, SprayVariant) == 0x0007E8, "Member 'UFortVariantSprayCustomizer::SprayVariant' has a wrong offset!");

// Class MeshCosmeticsUI.FortVariantSprayCustomizerSetting
// 0x0040 (0x0300 - 0x02C0)
class UFortVariantSprayCustomizerSetting final : public UUserWidget
{
public:
	class UAnalogSlider*                          Slider_Value;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CommitDelay;                                       // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2CC[0x34];                                     // 0x02CC(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnChangeValue(const float Value, const float NormalizedValue);
	void BP_OnSetConstraints(const struct FFloatRange& Constraints);
	void HandleSliderValueChanged(float NormalizedValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortVariantSprayCustomizerSetting">();
	}
	static class UFortVariantSprayCustomizerSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortVariantSprayCustomizerSetting>();
	}
};
static_assert(alignof(UFortVariantSprayCustomizerSetting) == 0x000008, "Wrong alignment on UFortVariantSprayCustomizerSetting");
static_assert(sizeof(UFortVariantSprayCustomizerSetting) == 0x000300, "Wrong size on UFortVariantSprayCustomizerSetting");
static_assert(offsetof(UFortVariantSprayCustomizerSetting, Slider_Value) == 0x0002C0, "Member 'UFortVariantSprayCustomizerSetting::Slider_Value' has a wrong offset!");
static_assert(offsetof(UFortVariantSprayCustomizerSetting, CommitDelay) == 0x0002C8, "Member 'UFortVariantSprayCustomizerSetting::CommitDelay' has a wrong offset!");

}

