#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortMPLocker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function FortMPLocker.FortMPLocker_C.AdjustPresetsCamera
// 0x0058 (0x0058 - 0x0000)
struct FortMPLocker_C_AdjustPresetsCamera final
{
public:
	double                                        FloatProgress;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0038(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_AdjustPresetsCamera) == 0x000008, "Wrong alignment on FortMPLocker_C_AdjustPresetsCamera");
static_assert(sizeof(FortMPLocker_C_AdjustPresetsCamera) == 0x000058, "Wrong size on FortMPLocker_C_AdjustPresetsCamera");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, FloatProgress) == 0x000000, "Member 'FortMPLocker_C_AdjustPresetsCamera::FloatProgress' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_AdjustPresetsCamera::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_AdjustPresetsCamera::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, K2Node_MakeStruct_Margin) == 0x000018, "Member 'FortMPLocker_C_AdjustPresetsCamera::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'FortMPLocker_C_AdjustPresetsCamera::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, CallFunc_Lerp_ReturnValue_2) == 0x000030, "Member 'FortMPLocker_C_AdjustPresetsCamera::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, K2Node_MakeStruct_SlateChildSize) == 0x000038, "Member 'FortMPLocker_C_AdjustPresetsCamera::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000040, "Member 'FortMPLocker_C_AdjustPresetsCamera::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, K2Node_MakeStruct_Top_ImplicitCast) == 0x000048, "Member 'FortMPLocker_C_AdjustPresetsCamera::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x00004C, "Member 'FortMPLocker_C_AdjustPresetsCamera::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_AdjustPresetsCamera, K2Node_MakeStruct_Value_ImplicitCast) == 0x000050, "Member 'FortMPLocker_C_AdjustPresetsCamera::K2Node_MakeStruct_Value_ImplicitCast' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.AnimStartedInputRestorer
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_AnimStartedInputRestorer final
{
public:
	double                                        AnimLength;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_AnimStartedInputRestorer) == 0x000008, "Wrong alignment on FortMPLocker_C_AnimStartedInputRestorer");
static_assert(sizeof(FortMPLocker_C_AnimStartedInputRestorer) == 0x000008, "Wrong size on FortMPLocker_C_AnimStartedInputRestorer");
static_assert(offsetof(FortMPLocker_C_AnimStartedInputRestorer, AnimLength) == 0x000000, "Member 'FortMPLocker_C_AnimStartedInputRestorer::AnimLength' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Bind Preview Actions
// 0x0001 (0x0001 - 0x0000)
struct FortMPLocker_C_Bind_Preview_Actions final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Bind_Preview_Actions) == 0x000001, "Wrong alignment on FortMPLocker_C_Bind_Preview_Actions");
static_assert(sizeof(FortMPLocker_C_Bind_Preview_Actions) == 0x000001, "Wrong size on FortMPLocker_C_Bind_Preview_Actions");
static_assert(offsetof(FortMPLocker_C_Bind_Preview_Actions, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FortMPLocker_C_Bind_Preview_Actions::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_Button_Back_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_Button_Equip_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_Button_EquipRelatedPresets_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_Button_Options_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_Button_SeeCollectables_K2Node_ComponentBoundEvent_20_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature final
{
public:
	class UUserWidget*                            CategoryItemEntryObject;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature, CategoryItemEntryObject) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_Categories_K2Node_ComponentBoundEvent_14_OnCategoryItemSetup__DelegateSignature::CategoryItemEntryObject' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature final
{
public:
	const class UFortAccountItemDefinition*       ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature, ItemDefinition) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_FortItemPreviewWidget_K2Node_ComponentBoundEvent_15_OnPreviewItemShown__DelegateSignature::ItemDefinition' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_PresetsHitbox_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'FortMPLocker_C_BndEvt__FortMPLocker_WBP_UIKit_Button_Regular_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.ExecuteUbergraph_FortMPLocker
// 0x0398 (0x0398 - 0x0000)
struct FortMPLocker_C_ExecuteUbergraph_FortMPLocker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidget*               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_CustomEvent_ActivatableWidget;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonActivatableWidget* ActivatableWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidget*               Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0050(0x0018)(HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_7;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_TabId_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_CustomEvent_ActivatableWidget_1;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSelectedTabId_ReturnValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonActivatableWidget* ActivatableWidget)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_TabId;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_2;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName TabID)>            K2Node_CreateDelegate_OutputDelegate_3;            // 0x0104(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_6;               // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double AnimLength)>            K2Node_CreateDelegate_OutputDelegate_4;            // 0x0118(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_AnimLength;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortTypedModularLoadoutVM* PresetLoadout)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0130(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTypedModularLoadoutVM*             K2Node_CustomEvent_PresetLoadout;                  // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_5;               // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_4;               // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x017C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortLockerCategoryConfig*        CallFunc_GetConfig_ReturnValue;                    // 0x01A0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFortLockerCategoryConfig*        CallFunc_GetConfig_ReturnValue_1;                  // 0x01A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_PushPrimaryContent*    CallFunc_PushPrimaryContentClassAsync_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_QueueModalWidget*      CallFunc_QueueModalWidgetClassAsync_ReturnValue;   // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x01CC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x01DC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_3;               // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0200(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue;     // 0x0210(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0220(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_PresetCard_C*                K2Node_DynamicCast_AsWBP_UIKit_Preset_Card;        // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTypedModularLoadoutVM*             K2Node_DynamicCast_AsFort_Typed_Modular_Loadout_VM; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_PushPrimaryContent*    CallFunc_PushPrimaryContentClassAsync_ReturnValue_1; // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidget*               Temp_object_Variable_2;                            // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName TabID)>            K2Node_CreateDelegate_OutputDelegate_11;           // 0x0284(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_CustomEvent_ActivatableWidget_2;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortLockerCategoryConfig*        CallFunc_GetConfig_ReturnValue_2;                  // 0x02C0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x2];                                      // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_ComponentBoundEvent_CategoryItemEntryObject; // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UIKit_ItemCard_Category_C*         K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Category; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_ItemCard_Category_C*         K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Category_1; // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonActivatableWidget* ActivatableWidget)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0324(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFortAccountItemDefinition*       K2Node_ComponentBoundEvent_ItemDefinition;         // 0x0330(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue_1;      // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSubGame_ReturnValue;                  // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Item, bool bIsSelected)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0354(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Item;                           // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsSelected;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTypedModularLoadoutVM*             K2Node_DynamicCast_AsFort_Typed_Modular_Loadout_VM_1; // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue_2;    // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker) == 0x000008, "Wrong alignment on FortMPLocker_C_ExecuteUbergraph_FortMPLocker");
static_assert(sizeof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker) == 0x000398, "Wrong size on FortMPLocker_C_ExecuteUbergraph_FortMPLocker");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, EntryPoint) == 0x000000, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, Temp_object_Variable) == 0x000008, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_ActivatableWidget) == 0x000010, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_ActivatableWidget' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, Temp_object_Variable_1) == 0x000028, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000030, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_InputKeyEvent_Key_1) == 0x000038, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_InputKeyEvent_Key) == 0x000050, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000068, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetCurrentInputType_ReturnValue) == 0x00007C, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_7) == 0x000080, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_7' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_TabId_1) == 0x000088, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_TabId_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_Event_IsDesignTime) == 0x00008C, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetEndTime_ReturnValue) == 0x000090, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000A8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x0000B0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_ActivatableWidget_1) == 0x0000B8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_ActivatableWidget_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000C0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x0000C8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetSelectedTabId_ReturnValue) == 0x0000D0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetSelectedTabId_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x0000D4, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D5, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0000E8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_TabId) == 0x0000F0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_TabId' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1) == 0x0000F8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetCurrentInputType_ReturnValue_2) == 0x000100, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetCurrentInputType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000101, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_3) == 0x000104, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_6) == 0x000110, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_6' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_4) == 0x000118, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_AnimLength) == 0x000128, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_AnimLength' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_5) == 0x000130, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_PresetLoadout) == 0x000140, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_PresetLoadout' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_5) == 0x000150, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_4) == 0x000158, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, Temp_bool_True_if_break_was_hit_Variable) == 0x000160, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000168, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000170, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Not_PreBool_ReturnValue) == 0x000178, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_6) == 0x00017C, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000188, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000190, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValid_ReturnValue_1) == 0x000198, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetConfig_ReturnValue) == 0x0001A0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetConfig_ReturnValue_1) == 0x0001A8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetConfig_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PushPrimaryContentClassAsync_ReturnValue) == 0x0001B0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PushPrimaryContentClassAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValidClass_ReturnValue) == 0x0001B8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValid_ReturnValue_2) == 0x0001B9, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_QueueModalWidgetClassAsync_ReturnValue) == 0x0001C0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_QueueModalWidgetClassAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValidClass_ReturnValue_1) == 0x0001C8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanAND_ReturnValue) == 0x0001C9, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValid_ReturnValue_3) == 0x0001CA, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001CC, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0001D8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001DC, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_3) == 0x0001F0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_2) == 0x0001F8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_9) == 0x000200, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_bNewInputType) == 0x00020C, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetDisplayedEntryWidgets_ReturnValue) == 0x000210, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetDisplayedEntryWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_10) == 0x000220, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Array_Get_Item) == 0x000230, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_AsWBP_UIKit_Preset_Card) == 0x000238, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_AsWBP_UIKit_Preset_Card' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000248, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000250, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_AsFort_Typed_Modular_Loadout_VM) == 0x000258, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_AsFort_Typed_Modular_Loadout_VM' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_bSuccess_1) == 0x000260, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000261, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PushPrimaryContentClassAsync_ReturnValue_1) == 0x000268, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PushPrimaryContentClassAsync_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValid_ReturnValue_4) == 0x000270, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, Temp_object_Variable_2) == 0x000278, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Not_PreBool_ReturnValue_2) == 0x000280, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_11) == 0x000284, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsHovered_ReturnValue) == 0x000290, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Not_PreBool_ReturnValue_3) == 0x000291, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetScrollOffset_ReturnValue) == 0x000294, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_ActivatableWidget_2) == 0x000298, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_ActivatableWidget_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanAND_ReturnValue_1) == 0x0002A1, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_SpawnSound2D_ReturnValue) == 0x0002A8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanAND_ReturnValue_2) == 0x0002B0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanAND_ReturnValue_3) == 0x0002B1, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, Temp_int_Loop_Counter_Variable) == 0x0002B4, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Less_IntInt_ReturnValue) == 0x0002B8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetConfig_ReturnValue_2) == 0x0002C0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetConfig_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanAND_ReturnValue_4) == 0x0002C8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsValidClass_ReturnValue_2) == 0x0002C9, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Add_IntInt_ReturnValue) == 0x0002CC, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanOR_ReturnValue) == 0x0002D0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_BooleanAND_ReturnValue_5) == 0x0002D1, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button_1) == 0x0002D8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsMobileGame_ReturnValue) == 0x0002E0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_CategoryItemEntryObject) == 0x0002E8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_CategoryItemEntryObject' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetEndTime_ReturnValue_1) == 0x0002F0, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Category) == 0x0002F8, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Category' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_bSuccess_2) == 0x000300, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_PlayAnimation_ReturnValue_1) == 0x000308, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_Button) == 0x000310, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Category_1) == 0x000318, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Category_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_bSuccess_3) == 0x000320, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_12) == 0x000324, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_ItemDefinition) == 0x000330, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_ComponentBoundEvent_Button) == 0x000338, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetUINavigationManager_ReturnValue) == 0x000340, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetDesiredFocusTarget_ReturnValue_1) == 0x000348, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetDesiredFocusTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_IsInSubGame_ReturnValue) == 0x000350, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_IsInSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CreateDelegate_OutputDelegate_13) == 0x000354, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_Item) == 0x000360, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_CustomEvent_bIsSelected) == 0x000368, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_CustomEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_AsFort_Typed_Modular_Loadout_VM_1) == 0x000370, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_AsFort_Typed_Modular_Loadout_VM_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, K2Node_DynamicCast_bSuccess_4) == 0x000378, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_GetLocalPlayerSubsystem_ReturnValue_2) == 0x000380, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_GetLocalPlayerSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_Delay_Duration_ImplicitCast) == 0x000388, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_ExecuteUbergraph_FortMPLocker, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000390, "Member 'FortMPLocker_C_ExecuteUbergraph_FortMPLocker::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.GetCollectablePreviewItem
// 0x0028 (0x0028 - 0x0000)
struct FortMPLocker_C_GetCollectablePreviewItem final
{
public:
	class UFortItemVM*                            OutItem;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortLockerCategoryVM*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortItemVM*                            CallFunc_Array_Random_OutItem;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_GetCollectablePreviewItem) == 0x000008, "Wrong alignment on FortMPLocker_C_GetCollectablePreviewItem");
static_assert(sizeof(FortMPLocker_C_GetCollectablePreviewItem) == 0x000028, "Wrong size on FortMPLocker_C_GetCollectablePreviewItem");
static_assert(offsetof(FortMPLocker_C_GetCollectablePreviewItem, OutItem) == 0x000000, "Member 'FortMPLocker_C_GetCollectablePreviewItem::OutItem' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_GetCollectablePreviewItem, CallFunc_Array_IsEmpty_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_GetCollectablePreviewItem::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_GetCollectablePreviewItem, CallFunc_Array_Get_Item) == 0x000010, "Member 'FortMPLocker_C_GetCollectablePreviewItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_GetCollectablePreviewItem, CallFunc_Array_Random_OutItem) == 0x000018, "Member 'FortMPLocker_C_GetCollectablePreviewItem::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_GetCollectablePreviewItem, CallFunc_Array_Random_OutIndex) == 0x000020, "Member 'FortMPLocker_C_GetCollectablePreviewItem::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Handle Category Selected
// 0x000C (0x000C - 0x0000)
struct FortMPLocker_C_Handle_Category_Selected final
{
public:
	class FName                                   InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTabIndexByID_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Handle_Category_Selected) == 0x000004, "Wrong alignment on FortMPLocker_C_Handle_Category_Selected");
static_assert(sizeof(FortMPLocker_C_Handle_Category_Selected) == 0x00000C, "Wrong size on FortMPLocker_C_Handle_Category_Selected");
static_assert(offsetof(FortMPLocker_C_Handle_Category_Selected, InputPin) == 0x000000, "Member 'FortMPLocker_C_Handle_Category_Selected::InputPin' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Handle_Category_Selected, CallFunc_GetTabIndexByID_ReturnValue) == 0x000004, "Member 'FortMPLocker_C_Handle_Category_Selected::CallFunc_GetTabIndexByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Handle_Category_Selected, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_Handle_Category_Selected::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Handle Collectable Tabs Clicked
// 0x0001 (0x0001 - 0x0000)
struct FortMPLocker_C_Handle_Collectable_Tabs_Clicked final
{
public:
	bool                                          CallFunc_GetItemsAreEquippable_bItemsAreEquippable; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Handle_Collectable_Tabs_Clicked) == 0x000001, "Wrong alignment on FortMPLocker_C_Handle_Collectable_Tabs_Clicked");
static_assert(sizeof(FortMPLocker_C_Handle_Collectable_Tabs_Clicked) == 0x000001, "Wrong size on FortMPLocker_C_Handle_Collectable_Tabs_Clicked");
static_assert(offsetof(FortMPLocker_C_Handle_Collectable_Tabs_Clicked, CallFunc_GetItemsAreEquippable_bItemsAreEquippable) == 0x000000, "Member 'FortMPLocker_C_Handle_Collectable_Tabs_Clicked::CallFunc_GetItemsAreEquippable_bItemsAreEquippable' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Handle3DCameraTransition
// 0x0018 (0x0018 - 0x0000)
struct FortMPLocker_C_Handle3DCameraTransition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Handle3DCameraTransition) == 0x000008, "Wrong alignment on FortMPLocker_C_Handle3DCameraTransition");
static_assert(sizeof(FortMPLocker_C_Handle3DCameraTransition) == 0x000018, "Wrong size on FortMPLocker_C_Handle3DCameraTransition");
static_assert(offsetof(FortMPLocker_C_Handle3DCameraTransition, Temp_bool_Variable) == 0x000000, "Member 'FortMPLocker_C_Handle3DCameraTransition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Handle3DCameraTransition, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'FortMPLocker_C_Handle3DCameraTransition::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Handle3DCameraTransition, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000002, "Member 'FortMPLocker_C_Handle3DCameraTransition::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Handle3DCameraTransition, K2Node_Select_Default) == 0x000008, "Member 'FortMPLocker_C_Handle3DCameraTransition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Handle3DCameraTransition, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_Handle3DCameraTransition::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(sizeof(FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(offsetof(FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'FortMPLocker_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0");
static_assert(sizeof(FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0");
static_assert(offsetof(FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'FortMPLocker_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Loadout Loaded
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_Loadout_Loaded final
{
public:
	class UWidget*                                CallFunc_Navigation_UpFromPresets_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Loadout_Loaded) == 0x000008, "Wrong alignment on FortMPLocker_C_Loadout_Loaded");
static_assert(sizeof(FortMPLocker_C_Loadout_Loaded) == 0x000008, "Wrong size on FortMPLocker_C_Loadout_Loaded");
static_assert(offsetof(FortMPLocker_C_Loadout_Loaded, CallFunc_Navigation_UpFromPresets_ReturnValue) == 0x000000, "Member 'FortMPLocker_C_Loadout_Loaded::CallFunc_Navigation_UpFromPresets_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Navigation_DownToPresets
// 0x0010 (0x0010 - 0x0000)
struct FortMPLocker_C_Navigation_DownToPresets final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Navigation_DownToPresets) == 0x000008, "Wrong alignment on FortMPLocker_C_Navigation_DownToPresets");
static_assert(sizeof(FortMPLocker_C_Navigation_DownToPresets) == 0x000010, "Wrong size on FortMPLocker_C_Navigation_DownToPresets");
static_assert(offsetof(FortMPLocker_C_Navigation_DownToPresets, Navigation_0) == 0x000000, "Member 'FortMPLocker_C_Navigation_DownToPresets::Navigation_0' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_DownToPresets, ReturnValue) == 0x000008, "Member 'FortMPLocker_C_Navigation_DownToPresets::ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Navigation_GoToTabs
// 0x0030 (0x0030 - 0x0000)
struct FortMPLocker_C_Navigation_GoToTabs final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSelectedTabId_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      CallFunc_GetTabButtonBaseByID_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_ButtonGeneric_Base_C*        K2Node_DynamicCast_AsWBP_UIKit_Button_Generic_Base; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Navigation_GoToTabs) == 0x000008, "Wrong alignment on FortMPLocker_C_Navigation_GoToTabs");
static_assert(sizeof(FortMPLocker_C_Navigation_GoToTabs) == 0x000030, "Wrong size on FortMPLocker_C_Navigation_GoToTabs");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTabs, Navigation_0) == 0x000000, "Member 'FortMPLocker_C_Navigation_GoToTabs::Navigation_0' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTabs, ReturnValue) == 0x000008, "Member 'FortMPLocker_C_Navigation_GoToTabs::ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTabs, CallFunc_GetSelectedTabId_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_Navigation_GoToTabs::CallFunc_GetSelectedTabId_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTabs, CallFunc_GetTabButtonBaseByID_ReturnValue) == 0x000018, "Member 'FortMPLocker_C_Navigation_GoToTabs::CallFunc_GetTabButtonBaseByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTabs, K2Node_DynamicCast_AsWBP_UIKit_Button_Generic_Base) == 0x000020, "Member 'FortMPLocker_C_Navigation_GoToTabs::K2Node_DynamicCast_AsWBP_UIKit_Button_Generic_Base' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTabs, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'FortMPLocker_C_Navigation_GoToTabs::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Navigation_GoToTiles
// 0x0028 (0x0028 - 0x0000)
struct FortMPLocker_C_Navigation_GoToTiles final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Navigation_GoToTiles) == 0x000008, "Wrong alignment on FortMPLocker_C_Navigation_GoToTiles");
static_assert(sizeof(FortMPLocker_C_Navigation_GoToTiles) == 0x000028, "Wrong size on FortMPLocker_C_Navigation_GoToTiles");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTiles, Navigation_0) == 0x000000, "Member 'FortMPLocker_C_Navigation_GoToTiles::Navigation_0' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTiles, ReturnValue) == 0x000008, "Member 'FortMPLocker_C_Navigation_GoToTiles::ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTiles, Temp_bool_Variable) == 0x000010, "Member 'FortMPLocker_C_Navigation_GoToTiles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTiles, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000018, "Member 'FortMPLocker_C_Navigation_GoToTiles::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_GoToTiles, K2Node_Select_Default) == 0x000020, "Member 'FortMPLocker_C_Navigation_GoToTiles::K2Node_Select_Default' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Navigation_UpFromPresets
// 0x0010 (0x0010 - 0x0000)
struct FortMPLocker_C_Navigation_UpFromPresets final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Navigation_UpFromPresets) == 0x000008, "Wrong alignment on FortMPLocker_C_Navigation_UpFromPresets");
static_assert(sizeof(FortMPLocker_C_Navigation_UpFromPresets) == 0x000010, "Wrong size on FortMPLocker_C_Navigation_UpFromPresets");
static_assert(offsetof(FortMPLocker_C_Navigation_UpFromPresets, Navigation_0) == 0x000000, "Member 'FortMPLocker_C_Navigation_UpFromPresets::Navigation_0' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Navigation_UpFromPresets, ReturnValue) == 0x000008, "Member 'FortMPLocker_C_Navigation_UpFromPresets::ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnCategoryCardHovered
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_OnCategoryCardHovered final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnCategoryCardHovered) == 0x000008, "Wrong alignment on FortMPLocker_C_OnCategoryCardHovered");
static_assert(sizeof(FortMPLocker_C_OnCategoryCardHovered) == 0x000008, "Wrong size on FortMPLocker_C_OnCategoryCardHovered");
static_assert(offsetof(FortMPLocker_C_OnCategoryCardHovered, Button) == 0x000000, "Member 'FortMPLocker_C_OnCategoryCardHovered::Button' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnCategorySelected
// 0x0004 (0x0004 - 0x0000)
struct FortMPLocker_C_OnCategorySelected final
{
public:
	class FName                                   TabID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnCategorySelected) == 0x000004, "Wrong alignment on FortMPLocker_C_OnCategorySelected");
static_assert(sizeof(FortMPLocker_C_OnCategorySelected) == 0x000004, "Wrong size on FortMPLocker_C_OnCategorySelected");
static_assert(offsetof(FortMPLocker_C_OnCategorySelected, TabID) == 0x000000, "Member 'FortMPLocker_C_OnCategorySelected::TabID' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct FortMPLocker_C_OnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnInputMethodChanged) == 0x000001, "Wrong alignment on FortMPLocker_C_OnInputMethodChanged");
static_assert(sizeof(FortMPLocker_C_OnInputMethodChanged) == 0x000001, "Wrong size on FortMPLocker_C_OnInputMethodChanged");
static_assert(offsetof(FortMPLocker_C_OnInputMethodChanged, bNewInputType) == 0x000000, "Member 'FortMPLocker_C_OnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnItemSelectionChanged
// 0x0010 (0x0010 - 0x0000)
struct FortMPLocker_C_OnItemSelectionChanged final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnItemSelectionChanged) == 0x000008, "Wrong alignment on FortMPLocker_C_OnItemSelectionChanged");
static_assert(sizeof(FortMPLocker_C_OnItemSelectionChanged) == 0x000010, "Wrong size on FortMPLocker_C_OnItemSelectionChanged");
static_assert(offsetof(FortMPLocker_C_OnItemSelectionChanged, Item) == 0x000000, "Member 'FortMPLocker_C_OnItemSelectionChanged::Item' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_OnItemSelectionChanged, bIsSelected) == 0x000008, "Member 'FortMPLocker_C_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6 final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6) == 0x000008, "Wrong alignment on FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6");
static_assert(sizeof(FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6) == 0x000008, "Wrong size on FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6");
static_assert(offsetof(FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6, ActivatableWidget) == 0x000000, "Member 'FortMPLocker_C_OnModalWidgetQueued_9C3A2D6B4457DEA020C0F3B42E765BE6::ActivatableWidget' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941 final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941) == 0x000008, "Wrong alignment on FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941");
static_assert(sizeof(FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941) == 0x000008, "Wrong size on FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941");
static_assert(offsetof(FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941, ActivatableWidget) == 0x000000, "Member 'FortMPLocker_C_OnPrimaryContentPushed_5FF7A2CC46C4E723685454983BA8C941::ActivatableWidget' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF) == 0x000008, "Wrong alignment on FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF");
static_assert(sizeof(FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF) == 0x000008, "Wrong size on FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF");
static_assert(offsetof(FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF, ActivatableWidget) == 0x000000, "Member 'FortMPLocker_C_OnPrimaryContentPushed_696C3210484E5C6C5D48B89D57245BDF::ActivatableWidget' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FortMPLocker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_PreConstruct) == 0x000001, "Wrong alignment on FortMPLocker_C_PreConstruct");
static_assert(sizeof(FortMPLocker_C_PreConstruct) == 0x000001, "Wrong size on FortMPLocker_C_PreConstruct");
static_assert(offsetof(FortMPLocker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FortMPLocker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.PresetHovered
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_PresetHovered final
{
public:
	class UFortTypedModularLoadoutVM*             PresetLoadout;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_PresetHovered) == 0x000008, "Wrong alignment on FortMPLocker_C_PresetHovered");
static_assert(sizeof(FortMPLocker_C_PresetHovered) == 0x000008, "Wrong size on FortMPLocker_C_PresetHovered");
static_assert(offsetof(FortMPLocker_C_PresetHovered, PresetLoadout) == 0x000000, "Member 'FortMPLocker_C_PresetHovered::PresetLoadout' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.PressedTab
// 0x0004 (0x0004 - 0x0000)
struct FortMPLocker_C_PressedTab final
{
public:
	class FName                                   TabID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_PressedTab) == 0x000004, "Wrong alignment on FortMPLocker_C_PressedTab");
static_assert(sizeof(FortMPLocker_C_PressedTab) == 0x000004, "Wrong size on FortMPLocker_C_PressedTab");
static_assert(offsetof(FortMPLocker_C_PressedTab, TabID) == 0x000000, "Member 'FortMPLocker_C_PressedTab::TabID' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.PushModal
// 0x0008 (0x0008 - 0x0000)
struct FortMPLocker_C_PushModal final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_PushModal) == 0x000008, "Wrong alignment on FortMPLocker_C_PushModal");
static_assert(sizeof(FortMPLocker_C_PushModal) == 0x000008, "Wrong size on FortMPLocker_C_PushModal");
static_assert(offsetof(FortMPLocker_C_PushModal, ActivatableWidget) == 0x000000, "Member 'FortMPLocker_C_PushModal::ActivatableWidget' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.SelectFirstSlot
// 0x0028 (0x0028 - 0x0000)
struct FortMPLocker_C_SelectFirstSlot final
{
public:
	class UFortLockerCategoryItemVM*              CallFunc_GetPreviewCategory_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortLockerCategoryItemVM*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortLockerCategoryItemVM*              CallFunc_GetPreviewCategory_ReturnValue_1;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_SelectFirstSlot) == 0x000008, "Wrong alignment on FortMPLocker_C_SelectFirstSlot");
static_assert(sizeof(FortMPLocker_C_SelectFirstSlot) == 0x000028, "Wrong size on FortMPLocker_C_SelectFirstSlot");
static_assert(offsetof(FortMPLocker_C_SelectFirstSlot, CallFunc_GetPreviewCategory_ReturnValue) == 0x000000, "Member 'FortMPLocker_C_SelectFirstSlot::CallFunc_GetPreviewCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SelectFirstSlot, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_SelectFirstSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SelectFirstSlot, CallFunc_Array_Get_Item) == 0x000010, "Member 'FortMPLocker_C_SelectFirstSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SelectFirstSlot, CallFunc_GetPreviewCategory_ReturnValue_1) == 0x000018, "Member 'FortMPLocker_C_SelectFirstSlot::CallFunc_GetPreviewCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SelectFirstSlot, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'FortMPLocker_C_SelectFirstSlot::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Set Category Item Widgets Visibility
// 0x0005 (0x0005 - 0x0000)
struct FortMPLocker_C_Set_Category_Item_Widgets_Visibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_2;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_3;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility) == 0x000001, "Wrong alignment on FortMPLocker_C_Set_Category_Item_Widgets_Visibility");
static_assert(sizeof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility) == 0x000005, "Wrong size on FortMPLocker_C_Set_Category_Item_Widgets_Visibility");
static_assert(offsetof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility, Visibility_0) == 0x000000, "Member 'FortMPLocker_C_Set_Category_Item_Widgets_Visibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'FortMPLocker_C_Set_Category_Item_Widgets_Visibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility, CallFunc_GetVisibility_ReturnValue_1) == 0x000002, "Member 'FortMPLocker_C_Set_Category_Item_Widgets_Visibility::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility, CallFunc_GetVisibility_ReturnValue_2) == 0x000003, "Member 'FortMPLocker_C_Set_Category_Item_Widgets_Visibility::CallFunc_GetVisibility_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Category_Item_Widgets_Visibility, CallFunc_GetVisibility_ReturnValue_3) == 0x000004, "Member 'FortMPLocker_C_Set_Category_Item_Widgets_Visibility::CallFunc_GetVisibility_ReturnValue_3' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Set Collectable Preview Widget Position
// 0x0058 (0x0058 - 0x0000)
struct FortMPLocker_C_Set_Collectable_Preview_Widget_Position final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemsAreEquippable_bItemsAreEquippable; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position) == 0x000008, "Wrong alignment on FortMPLocker_C_Set_Collectable_Preview_Widget_Position");
static_assert(sizeof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position) == 0x000058, "Wrong size on FortMPLocker_C_Set_Collectable_Preview_Widget_Position");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, Temp_bool_Variable) == 0x000000, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, Temp_bool_Variable_1) == 0x000001, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, CallFunc_GetItemsAreEquippable_bItemsAreEquippable) == 0x000002, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::CallFunc_GetItemsAreEquippable_bItemsAreEquippable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, K2Node_MakeStruct_Margin) == 0x000004, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, K2Node_MakeStruct_Margin_1) == 0x000014, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000028, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, K2Node_Select_Default) == 0x000030, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000040, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, K2Node_Select_Default_1) == 0x000048, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectable_Preview_Widget_Position, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000050, "Member 'FortMPLocker_C_Set_Collectable_Preview_Widget_Position::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Set Collectables Item Preview
// 0x0010 (0x0010 - 0x0000)
struct FortMPLocker_C_Set_Collectables_Item_Preview final
{
public:
	bool                                          CallFunc_GetItemsAreEquippable_bItemsAreEquippable; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemVM*                            CallFunc_GetCollectablePreviewItem_OutItem;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Set_Collectables_Item_Preview) == 0x000008, "Wrong alignment on FortMPLocker_C_Set_Collectables_Item_Preview");
static_assert(sizeof(FortMPLocker_C_Set_Collectables_Item_Preview) == 0x000010, "Wrong size on FortMPLocker_C_Set_Collectables_Item_Preview");
static_assert(offsetof(FortMPLocker_C_Set_Collectables_Item_Preview, CallFunc_GetItemsAreEquippable_bItemsAreEquippable) == 0x000000, "Member 'FortMPLocker_C_Set_Collectables_Item_Preview::CallFunc_GetItemsAreEquippable_bItemsAreEquippable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Collectables_Item_Preview, CallFunc_GetCollectablePreviewItem_OutItem) == 0x000008, "Member 'FortMPLocker_C_Set_Collectables_Item_Preview::CallFunc_GetCollectablePreviewItem_OutItem' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Set Locker Item Widgets Visibility
// 0x000F (0x000F - 0x0000)
struct FortMPLocker_C_Set_Locker_Item_Widgets_Visibility final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemsAreEquippable_bItemsAreEquippable; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility) == 0x000001, "Wrong alignment on FortMPLocker_C_Set_Locker_Item_Widgets_Visibility");
static_assert(sizeof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility) == 0x00000F, "Wrong size on FortMPLocker_C_Set_Locker_Item_Widgets_Visibility");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_byte_Variable) == 0x000000, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_byte_Variable_1) == 0x000001, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_bool_Variable) == 0x000002, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_bool_Variable_1) == 0x000003, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_byte_Variable_2) == 0x000004, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_byte_Variable_3) == 0x000005, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_byte_Variable_4) == 0x000006, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, CallFunc_GetItemsAreEquippable_bItemsAreEquippable) == 0x000007, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::CallFunc_GetItemsAreEquippable_bItemsAreEquippable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, K2Node_Select_Default) == 0x000008, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, K2Node_Select_Default_1) == 0x000009, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_byte_Variable_5) == 0x00000B, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, Temp_bool_Variable_2) == 0x00000C, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, CallFunc_GetVisibility_ReturnValue) == 0x00000D, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Set_Locker_Item_Widgets_Visibility, K2Node_Select_Default_2) == 0x00000E, "Member 'FortMPLocker_C_Set_Locker_Item_Widgets_Visibility::K2Node_Select_Default_2' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.SetCameraPosition
// 0x0040 (0x0040 - 0x0000)
struct FortMPLocker_C_SetCameraPosition final
{
public:
	double                                        CameraPosition_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0018(0x0008)(NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_1;                // 0x0028(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_SetCameraPosition) == 0x000008, "Wrong alignment on FortMPLocker_C_SetCameraPosition");
static_assert(sizeof(FortMPLocker_C_SetCameraPosition) == 0x000040, "Wrong size on FortMPLocker_C_SetCameraPosition");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, CameraPosition_0) == 0x000000, "Member 'FortMPLocker_C_SetCameraPosition::CameraPosition_0' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_SetCameraPosition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_SetCameraPosition::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, K2Node_MakeStruct_SlateChildSize) == 0x000018, "Member 'FortMPLocker_C_SetCameraPosition::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'FortMPLocker_C_SetCameraPosition::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, K2Node_MakeStruct_SlateChildSize_1) == 0x000028, "Member 'FortMPLocker_C_SetCameraPosition::K2Node_MakeStruct_SlateChildSize_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000030, "Member 'FortMPLocker_C_SetCameraPosition::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, K2Node_MakeStruct_Value_ImplicitCast) == 0x000038, "Member 'FortMPLocker_C_SetCameraPosition::K2Node_MakeStruct_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetCameraPosition, K2Node_MakeStruct_Value_ImplicitCast_1) == 0x00003C, "Member 'FortMPLocker_C_SetCameraPosition::K2Node_MakeStruct_Value_ImplicitCast_1' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.SetMobileLayout
// 0x0040 (0x0040 - 0x0000)
struct FortMPLocker_C_SetMobileLayout final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USafeZoneSlot*                          CallFunc_SlotAsSafeBoxSlot_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_SetMobileLayout) == 0x000008, "Wrong alignment on FortMPLocker_C_SetMobileLayout");
static_assert(sizeof(FortMPLocker_C_SetMobileLayout) == 0x000040, "Wrong size on FortMPLocker_C_SetMobileLayout");
static_assert(offsetof(FortMPLocker_C_SetMobileLayout, K2Node_MakeStruct_Margin) == 0x000000, "Member 'FortMPLocker_C_SetMobileLayout::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetMobileLayout, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_SetMobileLayout::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetMobileLayout, K2Node_MakeStruct_Margin_1) == 0x000018, "Member 'FortMPLocker_C_SetMobileLayout::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetMobileLayout, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000028, "Member 'FortMPLocker_C_SetMobileLayout::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetMobileLayout, CallFunc_SlotAsSafeBoxSlot_ReturnValue) == 0x000030, "Member 'FortMPLocker_C_SetMobileLayout::CallFunc_SlotAsSafeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetMobileLayout, CallFunc_IsMobileGame_ReturnValue) == 0x000038, "Member 'FortMPLocker_C_SetMobileLayout::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.SetPresetsMenuSize
// 0x0028 (0x0028 - 0x0000)
struct FortMPLocker_C_SetPresetsMenuSize final
{
public:
	double                                        IsFullscreen;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRowFill_Coefficient_ImplicitCast;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_SetPresetsMenuSize) == 0x000008, "Wrong alignment on FortMPLocker_C_SetPresetsMenuSize");
static_assert(sizeof(FortMPLocker_C_SetPresetsMenuSize) == 0x000028, "Wrong size on FortMPLocker_C_SetPresetsMenuSize");
static_assert(offsetof(FortMPLocker_C_SetPresetsMenuSize, IsFullscreen) == 0x000000, "Member 'FortMPLocker_C_SetPresetsMenuSize::IsFullscreen' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetPresetsMenuSize, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_SetPresetsMenuSize::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetPresetsMenuSize, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_SetPresetsMenuSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetPresetsMenuSize, CallFunc_SetRowFill_Coefficient_ImplicitCast) == 0x000020, "Member 'FortMPLocker_C_SetPresetsMenuSize::CallFunc_SetRowFill_Coefficient_ImplicitCast' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.SetPrimaryCategoryItemVM
// 0x0028 (0x0028 - 0x0000)
struct FortMPLocker_C_SetPrimaryCategoryItemVM final
{
public:
	class UFortLockerCategoryItemVM*              ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_SetPrimaryCategoryItemVM) == 0x000008, "Wrong alignment on FortMPLocker_C_SetPrimaryCategoryItemVM");
static_assert(sizeof(FortMPLocker_C_SetPrimaryCategoryItemVM) == 0x000028, "Wrong size on FortMPLocker_C_SetPrimaryCategoryItemVM");
static_assert(offsetof(FortMPLocker_C_SetPrimaryCategoryItemVM, ViewModel) == 0x000000, "Member 'FortMPLocker_C_SetPrimaryCategoryItemVM::ViewModel' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetPrimaryCategoryItemVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_SetPrimaryCategoryItemVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetPrimaryCategoryItemVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'FortMPLocker_C_SetPrimaryCategoryItemVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SetPrimaryCategoryItemVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'FortMPLocker_C_SetPrimaryCategoryItemVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.SwitchScreen_Presets
// 0x0110 (0x0110 - 0x0000)
struct FortMPLocker_C_SwitchScreen_Presets final
{
public:
	bool                                          IsPresetsActive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoAnimations;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSaveMode;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRelatedLoadoutsEnabled_ReturnValue;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMcpVariantChannelInfo>         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class UFortLockerCategoryItemVM*              CallFunc_GetPreviewCategory_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_3;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_AnimLength_ImplicitCast;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_AnimLength_ImplicitCast_1;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast_2;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_AnimLength_ImplicitCast_2;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast_2; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast_3;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_AnimLength_ImplicitCast_3;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast_3; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_SwitchScreen_Presets) == 0x000008, "Wrong alignment on FortMPLocker_C_SwitchScreen_Presets");
static_assert(sizeof(FortMPLocker_C_SwitchScreen_Presets) == 0x000110, "Wrong size on FortMPLocker_C_SwitchScreen_Presets");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, IsPresetsActive) == 0x000000, "Member 'FortMPLocker_C_SwitchScreen_Presets::IsPresetsActive' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, NoAnimations) == 0x000001, "Member 'FortMPLocker_C_SwitchScreen_Presets::NoAnimations' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, IsSaveMode) == 0x000002, "Member 'FortMPLocker_C_SwitchScreen_Presets::IsSaveMode' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_IsMobileGame_ReturnValue) == 0x000014, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetEndTime_ReturnValue_1) == 0x000028, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000030, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_IsMobileGame_ReturnValue_1) == 0x000038, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetRelatedLoadoutsEnabled_ReturnValue) == 0x000039, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetRelatedLoadoutsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, K2Node_MakeArray_Array) == 0x000040, "Member 'FortMPLocker_C_SwitchScreen_Presets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetPreviewCategory_ReturnValue) == 0x000050, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetPreviewCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000058, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000060, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetIsEnabled_ReturnValue) == 0x000068, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetEndTime_ReturnValue_2) == 0x000080, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetEndTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_ReturnValue_2) == 0x000088, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_ReturnValue_2) == 0x000090, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_GetEndTime_ReturnValue_3) == 0x000098, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_GetEndTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_ReturnValue_3) == 0x0000A0, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000A8, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000B0, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, K2Node_CallDelegate_AnimLength_ImplicitCast) == 0x0000B8, "Member 'FortMPLocker_C_SwitchScreen_Presets::K2Node_CallDelegate_AnimLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x0000C0, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x0000C8, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, K2Node_CallDelegate_AnimLength_ImplicitCast_1) == 0x0000D0, "Member 'FortMPLocker_C_SwitchScreen_Presets::K2Node_CallDelegate_AnimLength_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1) == 0x0000D8, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_A_ImplicitCast_2) == 0x0000E0, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, K2Node_CallDelegate_AnimLength_ImplicitCast_2) == 0x0000E8, "Member 'FortMPLocker_C_SwitchScreen_Presets::K2Node_CallDelegate_AnimLength_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_StartAtTime_ImplicitCast_2) == 0x0000F0, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_StartAtTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_SelectFloat_A_ImplicitCast_3) == 0x0000F8, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_SelectFloat_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, K2Node_CallDelegate_AnimLength_ImplicitCast_3) == 0x000100, "Member 'FortMPLocker_C_SwitchScreen_Presets::K2Node_CallDelegate_AnimLength_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_SwitchScreen_Presets, CallFunc_PlayAnimation_StartAtTime_ImplicitCast_3) == 0x000108, "Member 'FortMPLocker_C_SwitchScreen_Presets::CallFunc_PlayAnimation_StartAtTime_ImplicitCast_3' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.Try Show Juno Outfits FTUE Modal
// 0x0030 (0x0030 - 0x0000)
struct FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal final
{
public:
	class UWBP_MinifigsInfo_Dialog_C*             CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MinifigsInfo_Dialog_C*             K2Node_DynamicCast_AsWBP_Minifigs_Info_Dialog;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDialogVM_MinifigsInfo_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowJunoOutfitsFTUE_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal) == 0x000008, "Wrong alignment on FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal");
static_assert(sizeof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal) == 0x000030, "Wrong size on FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal");
static_assert(offsetof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal, CallFunc_Create_ReturnValue) == 0x000000, "Member 'FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal, K2Node_DynamicCast_AsWBP_Minifigs_Info_Dialog) == 0x000008, "Member 'FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal::K2Node_DynamicCast_AsWBP_Minifigs_Info_Dialog' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal, CallFunc_ShouldShowJunoOutfitsFTUE_ReturnValue) == 0x000028, "Member 'FortMPLocker_C_Try_Show_Juno_Outfits_FTUE_Modal::CallFunc_ShouldShowJunoOutfitsFTUE_ReturnValue' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.UpdateButtonsVisibility
// 0x0018 (0x0018 - 0x0000)
struct FortMPLocker_C_UpdateButtonsVisibility final
{
public:
	ECommonInputType                              Current_Input_Type;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTypedModularLoadoutVM*             Typed_Modular_Loadout;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_UpdateButtonsVisibility) == 0x000008, "Wrong alignment on FortMPLocker_C_UpdateButtonsVisibility");
static_assert(sizeof(FortMPLocker_C_UpdateButtonsVisibility) == 0x000018, "Wrong size on FortMPLocker_C_UpdateButtonsVisibility");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, Current_Input_Type) == 0x000000, "Member 'FortMPLocker_C_UpdateButtonsVisibility::Current_Input_Type' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, Typed_Modular_Loadout) == 0x000008, "Member 'FortMPLocker_C_UpdateButtonsVisibility::Typed_Modular_Loadout' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, Temp_byte_Variable) == 0x000010, "Member 'FortMPLocker_C_UpdateButtonsVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'FortMPLocker_C_UpdateButtonsVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'FortMPLocker_C_UpdateButtonsVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, Temp_byte_Variable_1) == 0x000013, "Member 'FortMPLocker_C_UpdateButtonsVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'FortMPLocker_C_UpdateButtonsVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000015, "Member 'FortMPLocker_C_UpdateButtonsVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, Temp_bool_Variable) == 0x000016, "Member 'FortMPLocker_C_UpdateButtonsVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateButtonsVisibility, K2Node_Select_Default) == 0x000017, "Member 'FortMPLocker_C_UpdateButtonsVisibility::K2Node_Select_Default' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.UpdateCategoryPreviewScale
// 0x0078 (0x0078 - 0x0000)
struct FortMPLocker_C_UpdateCategoryPreviewScale final
{
public:
	class UFortLockerCategoryItemVM*              CategoryToPreview;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortLockerCategorySlotInfo            CallFunc_GetSlotInfo_ReturnValue;                  // 0x0010(0x0050)(ConstParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_UpdateCategoryPreviewScale) == 0x000008, "Wrong alignment on FortMPLocker_C_UpdateCategoryPreviewScale");
static_assert(sizeof(FortMPLocker_C_UpdateCategoryPreviewScale) == 0x000078, "Wrong size on FortMPLocker_C_UpdateCategoryPreviewScale");
static_assert(offsetof(FortMPLocker_C_UpdateCategoryPreviewScale, CategoryToPreview) == 0x000000, "Member 'FortMPLocker_C_UpdateCategoryPreviewScale::CategoryToPreview' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateCategoryPreviewScale, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_UpdateCategoryPreviewScale::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateCategoryPreviewScale, CallFunc_GetSlotInfo_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_UpdateCategoryPreviewScale::CallFunc_GetSlotInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateCategoryPreviewScale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'FortMPLocker_C_UpdateCategoryPreviewScale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateCategoryPreviewScale, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'FortMPLocker_C_UpdateCategoryPreviewScale::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_UpdateCategoryPreviewScale, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000070, "Member 'FortMPLocker_C_UpdateCategoryPreviewScale::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BP_GetDesiredFocusTarget
// 0x0028 (0x0028 - 0x0000)
struct FortMPLocker_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemsAreEquippable_bItemsAreEquippable; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetActiveTab_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      CallFunc_GetTabButtonBaseByID_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on FortMPLocker_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(FortMPLocker_C_BP_GetDesiredFocusTarget) == 0x000028, "Wrong size on FortMPLocker_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, Temp_bool_Variable) == 0x000008, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, CallFunc_GetItemsAreEquippable_bItemsAreEquippable) == 0x000009, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::CallFunc_GetItemsAreEquippable_bItemsAreEquippable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, CallFunc_GetActiveTab_ReturnValue) == 0x00000C, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::CallFunc_GetActiveTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, CallFunc_GetTabButtonBaseByID_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::CallFunc_GetTabButtonBaseByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, CallFunc_GetFocusTarget_ReturnValue) == 0x000018, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::CallFunc_GetFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredFocusTarget, K2Node_Select_Default) == 0x000020, "Member 'FortMPLocker_C_BP_GetDesiredFocusTarget::K2Node_Select_Default' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.BP_GetDesiredInputConfig
// 0x000C (0x000C - 0x0000)
struct FortMPLocker_C_BP_GetDesiredInputConfig final
{
public:
	struct FUIInputConfig                         ReturnValue;                                       // 0x0000(0x0006)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FUIInputConfig                         K2Node_MakeStruct_UIInputConfig;                   // 0x0006(0x0006)(NoDestructor)
};
static_assert(alignof(FortMPLocker_C_BP_GetDesiredInputConfig) == 0x000001, "Wrong alignment on FortMPLocker_C_BP_GetDesiredInputConfig");
static_assert(sizeof(FortMPLocker_C_BP_GetDesiredInputConfig) == 0x00000C, "Wrong size on FortMPLocker_C_BP_GetDesiredInputConfig");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredInputConfig, ReturnValue) == 0x000000, "Member 'FortMPLocker_C_BP_GetDesiredInputConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_BP_GetDesiredInputConfig, K2Node_MakeStruct_UIInputConfig) == 0x000006, "Member 'FortMPLocker_C_BP_GetDesiredInputConfig::K2Node_MakeStruct_UIInputConfig' has a wrong offset!");

// Function FortMPLocker.FortMPLocker_C.GetItemsAreEquippable
// 0x0018 (0x0018 - 0x0000)
struct FortMPLocker_C_GetItemsAreEquippable final
{
public:
	bool                                          bItemsAreEquippable;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortLockerCategoryItemVM*              CallFunc_GetFirstCategoryItem_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFortLockerCategoryConfig*        CallFunc_GetConfig_ReturnValue;                    // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortMPLocker_C_GetItemsAreEquippable) == 0x000008, "Wrong alignment on FortMPLocker_C_GetItemsAreEquippable");
static_assert(sizeof(FortMPLocker_C_GetItemsAreEquippable) == 0x000018, "Wrong size on FortMPLocker_C_GetItemsAreEquippable");
static_assert(offsetof(FortMPLocker_C_GetItemsAreEquippable, bItemsAreEquippable) == 0x000000, "Member 'FortMPLocker_C_GetItemsAreEquippable::bItemsAreEquippable' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_GetItemsAreEquippable, CallFunc_GetFirstCategoryItem_ReturnValue) == 0x000008, "Member 'FortMPLocker_C_GetItemsAreEquippable::CallFunc_GetFirstCategoryItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortMPLocker_C_GetItemsAreEquippable, CallFunc_GetConfig_ReturnValue) == 0x000010, "Member 'FortMPLocker_C_GetItemsAreEquippable::CallFunc_GetConfig_ReturnValue' has a wrong offset!");

}

