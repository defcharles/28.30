#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Expandable_Rank

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.ExecuteUbergraph_WBP_Expandable_Rank
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonActivatableWidget* ActivatableWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_CustomEvent_ActivatableWidget;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetRankedWidgetInfoModalOverride_ReturnValue; // 0x0028(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	class UFortHabaneroInfoModal*                 K2Node_DynamicCast_AsFort_Habanero_Info_Modal;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0058(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x0078(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	class UFortAsyncAction_PushPrimaryContent*    CallFunc_PushPrimaryContentSoftClassAsync_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank");
static_assert(sizeof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank) == 0x0000A8, "Wrong size on WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, EntryPoint) == 0x000000, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, K2Node_CustomEvent_ActivatableWidget) == 0x000010, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::K2Node_CustomEvent_ActivatableWidget' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, Temp_object_Variable) == 0x000018, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, CallFunc_GetRankedWidgetInfoModalOverride_ReturnValue) == 0x000028, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::CallFunc_GetRankedWidgetInfoModalOverride_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, K2Node_DynamicCast_AsFort_Habanero_Info_Modal) == 0x000048, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::K2Node_DynamicCast_AsFort_Habanero_Info_Modal' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000051, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, Temp_bool_Variable) == 0x000052, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, Temp_softclass_Variable) == 0x000058, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, K2Node_Select_Default) == 0x000078, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, CallFunc_PushPrimaryContentSoftClassAsync_ReturnValue) == 0x000098, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::CallFunc_PushPrimaryContentSoftClassAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WBP_Expandable_Rank_C_ExecuteUbergraph_WBP_Expandable_Rank::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9
// 0x0008 (0x0008 - 0x0000)
struct WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9 final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9");
static_assert(sizeof(WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9) == 0x000008, "Wrong size on WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9");
static_assert(offsetof(WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9, ActivatableWidget) == 0x000000, "Member 'WBP_Expandable_Rank_C_OnPrimaryContentPushed_3F807EA84C251E9044A17FA1CCB7CFE9::ActivatableWidget' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Current Player Rank
// 0x0110 (0x0110 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Current_Player_Rank final
{
public:
	int32                                         CurrentRankIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default;                             // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFortHabaneroModeList                  CallFunc_Map_Find_Value;                           // 0x0010(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortHabaneroTier                      CallFunc_Array_Get_Item;                           // 0x0028(0x00E0)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Current_Player_Rank) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_Set_Current_Player_Rank");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Current_Player_Rank) == 0x000110, "Wrong size on WBP_Expandable_Rank_C_Set_Current_Player_Rank");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CurrentRankIndex) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CurrentRankIndex' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, Temp_bool_Variable) == 0x000006, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, K2Node_Select_Default) == 0x000008, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000021, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Current Player Rank Position
// 0x0004 (0x0004 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position final
{
public:
	int32                                         CurrentPlayerRankPosition;                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position) == 0x000004, "Wrong alignment on WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position) == 0x000004, "Wrong size on WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position, CurrentPlayerRankPosition) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Current_Player_Rank_Position::CurrentPlayerRankPosition' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Has Rank Protection
// 0x0001 (0x0001 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Has_Rank_Protection final
{
public:
	bool                                          Has_Protection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Has_Rank_Protection) == 0x000001, "Wrong alignment on WBP_Expandable_Rank_C_Set_Has_Rank_Protection");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Has_Rank_Protection) == 0x000001, "Wrong size on WBP_Expandable_Rank_C_Set_Has_Rank_Protection");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Has_Rank_Protection, Has_Protection) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Has_Rank_Protection::Has_Protection' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Is Island Ranked
// 0x0018 (0x0018 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Is_Island_Ranked final
{
public:
	bool                                          IsIslandRanked;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_Set_Is_Island_Ranked");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked) == 0x000018, "Wrong size on WBP_Expandable_Rank_C_Set_Is_Island_Ranked");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, IsIslandRanked) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::IsIslandRanked' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, Temp_bool_Variable) == 0x000001, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, Temp_byte_Variable) == 0x000002, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Island_Ranked, K2Node_Select_Default) == 0x000011, "Member 'WBP_Expandable_Rank_C_Set_Is_Island_Ranked::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Is Player Ranked
// 0x0001 (0x0001 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Is_Player_Ranked final
{
public:
	bool                                          IsPlayerRanked;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Is_Player_Ranked) == 0x000001, "Wrong alignment on WBP_Expandable_Rank_C_Set_Is_Player_Ranked");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Is_Player_Ranked) == 0x000001, "Wrong size on WBP_Expandable_Rank_C_Set_Is_Player_Ranked");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Is_Player_Ranked, IsPlayerRanked) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Is_Player_Ranked::IsPlayerRanked' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Rank Circle Progress
// 0x0018 (0x0018 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Rank_Circle_Progress final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Rank_Circle_Progress) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_Set_Rank_Circle_Progress");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Rank_Circle_Progress) == 0x000018, "Wrong size on WBP_Expandable_Rank_C_Set_Rank_Circle_Progress");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Circle_Progress, Progress) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Rank_Circle_Progress::Progress' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Circle_Progress, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Rank_C_Set_Rank_Circle_Progress::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Circle_Progress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_Expandable_Rank_C_Set_Rank_Circle_Progress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Set Rank Rectangle
// 0x0050 (0x0050 - 0x0000)
struct WBP_Expandable_Rank_C_Set_Rank_Rectangle final
{
public:
	class FText                                   RankName;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Set_Rank_Rectangle) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_Set_Rank_Rectangle");
static_assert(sizeof(WBP_Expandable_Rank_C_Set_Rank_Rectangle) == 0x000050, "Wrong size on WBP_Expandable_Rank_C_Set_Rank_Rectangle");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Rectangle, RankName) == 0x000000, "Member 'WBP_Expandable_Rank_C_Set_Rank_Rectangle::RankName' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Rectangle, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WBP_Expandable_Rank_C_Set_Rank_Rectangle::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Rectangle, CallFunc_Split_LeftS) == 0x000028, "Member 'WBP_Expandable_Rank_C_Set_Rank_Rectangle::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Rectangle, CallFunc_Split_RightS) == 0x000038, "Member 'WBP_Expandable_Rank_C_Set_Rank_Rectangle::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Set_Rank_Rectangle, CallFunc_Split_ReturnValue) == 0x000048, "Member 'WBP_Expandable_Rank_C_Set_Rank_Rectangle::CallFunc_Split_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.SetFortRankedViewModel
// 0x0028 (0x0028 - 0x0000)
struct WBP_Expandable_Rank_C_SetFortRankedViewModel final
{
public:
	class UFortRankedViewModel*                   ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_SetFortRankedViewModel) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_SetFortRankedViewModel");
static_assert(sizeof(WBP_Expandable_Rank_C_SetFortRankedViewModel) == 0x000028, "Wrong size on WBP_Expandable_Rank_C_SetFortRankedViewModel");
static_assert(offsetof(WBP_Expandable_Rank_C_SetFortRankedViewModel, ViewModel) == 0x000000, "Member 'WBP_Expandable_Rank_C_SetFortRankedViewModel::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetFortRankedViewModel, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Rank_C_SetFortRankedViewModel::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetFortRankedViewModel, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_Expandable_Rank_C_SetFortRankedViewModel::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetFortRankedViewModel, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_Expandable_Rank_C_SetFortRankedViewModel::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.SetRankText
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_Expandable_Rank_C_SetRankText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0140(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0160(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0178(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0190(0x0018)()
};
static_assert(alignof(WBP_Expandable_Rank_C_SetRankText) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_SetRankText");
static_assert(sizeof(WBP_Expandable_Rank_C_SetRankText) == 0x0001A8, "Wrong size on WBP_Expandable_Rank_C_SetRankText");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, Temp_bool_Variable) == 0x000000, "Member 'WBP_Expandable_Rank_C_SetRankText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, Temp_text_Variable) == 0x000008, "Member 'WBP_Expandable_Rank_C_SetRankText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, Temp_bool_Variable_1) == 0x000020, "Member 'WBP_Expandable_Rank_C_SetRankText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Round_ReturnValue) == 0x000048, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Clamp_ReturnValue) == 0x0000A0, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000B8, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_MakeArray_Array_1) == 0x000128, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_Format_ReturnValue_1) == 0x000140, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000158, "Member 'WBP_Expandable_Rank_C_SetRankText::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, Temp_bool_Variable_2) == 0x000159, "Member 'WBP_Expandable_Rank_C_SetRankText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_Select_Default) == 0x000160, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_Select_Default_1) == 0x000178, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankText, K2Node_Select_Default_2) == 0x000190, "Member 'WBP_Expandable_Rank_C_SetRankText::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.SetRankType
// 0x0018 (0x0018 - 0x0000)
struct WBP_Expandable_Rank_C_SetRankType final
{
public:
	class FString                                 RankType;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_SetRankType) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_SetRankType");
static_assert(sizeof(WBP_Expandable_Rank_C_SetRankType) == 0x000018, "Wrong size on WBP_Expandable_Rank_C_SetRankType");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankType, RankType) == 0x000000, "Member 'WBP_Expandable_Rank_C_SetRankType::RankType' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_SetRankType, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Expandable_Rank_C_SetRankType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Setup Rank Rectangle
// 0x0058 (0x0058 - 0x0000)
struct WBP_Expandable_Rank_C_Setup_Rank_Rectangle final
{
public:
	class FString                                 ArabicNum;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Tier_Foreground_Color_Color;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_BP_CreateEntry_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_HeroRank_Rectangle_C*              K2Node_DynamicCast_AsWBP_Hero_Rank_Rectangle;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_Setup_Rank_Rectangle");
static_assert(sizeof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle) == 0x000058, "Wrong size on WBP_Expandable_Rank_C_Setup_Rank_Rectangle");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, ArabicNum) == 0x000000, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::ArabicNum' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_Get_Tier_Foreground_Color_Color) == 0x000010, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_Get_Tier_Foreground_Color_Color' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_Map_Find_Value) == 0x000020, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, Temp_int_Variable) == 0x00002C, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_BP_CreateEntry_ReturnValue) == 0x000030, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_BP_CreateEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, K2Node_DynamicCast_AsWBP_Hero_Rank_Rectangle) == 0x000040, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::K2Node_DynamicCast_AsWBP_Hero_Rank_Rectangle' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Rectangle, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Rectangle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Rank.WBP_Expandable_Rank_C.Setup Rank Visual
// 0x0060 (0x0060 - 0x0000)
struct WBP_Expandable_Rank_C_Setup_Rank_Visual final
{
public:
	struct FVector2D                              LargeSize;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MediumSize;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHabaneroTierType                             Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHabaneroTierType                             Temp_byte_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHabaneroTierType                             Temp_byte_Variable_4;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Rank_C_Setup_Rank_Visual) == 0x000008, "Wrong alignment on WBP_Expandable_Rank_C_Setup_Rank_Visual");
static_assert(sizeof(WBP_Expandable_Rank_C_Setup_Rank_Visual) == 0x000060, "Wrong size on WBP_Expandable_Rank_C_Setup_Rank_Visual");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, LargeSize) == 0x000000, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::LargeSize' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, SmallSize) == 0x000010, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::SmallSize' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, MediumSize) == 0x000020, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::MediumSize' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable) == 0x000030, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable_1) == 0x000031, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable) == 0x000032, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_1) == 0x000033, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_2) == 0x000034, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_3) == 0x000035, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_4) == 0x000036, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_5) == 0x000037, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_6) == 0x000038, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_7) == 0x000039, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_8) == 0x00003A, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_9) == 0x00003B, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable_2) == 0x00003C, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable_3) == 0x00003D, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable_4) == 0x00003E, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_10) == 0x00003F, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_11) == 0x000040, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_12) == 0x000041, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_13) == 0x000042, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_14) == 0x000043, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_15) == 0x000044, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_16) == 0x000045, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_17) == 0x000046, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_18) == 0x000047, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_bool_Variable_19) == 0x000048, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable_5) == 0x000049, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, Temp_byte_Variable_6) == 0x00004A, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, K2Node_Select_Default) == 0x00004B, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, K2Node_Select_Default_1) == 0x00004C, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, K2Node_Select_Default_2) == 0x00004D, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, K2Node_Select_Default_3) == 0x00004E, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Rank_C_Setup_Rank_Visual, K2Node_Select_Default_4) == 0x000050, "Member 'WBP_Expandable_Rank_C_Setup_Rank_Visual::K2Node_Select_Default_4' has a wrong offset!");

}

