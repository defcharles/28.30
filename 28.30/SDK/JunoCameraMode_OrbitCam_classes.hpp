#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoCameraMode_OrbitCam

#include "Basic.hpp"

#include "LimeNative_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass JunoCameraMode_OrbitCam.JunoCameraMode_OrbitCam_C
// 0x0260 (0x1E00 - 0x1BA0)
class UJunoCameraMode_OrbitCam_C : public ULimeCameraMode_OrbitCam
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1BA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        InteriorFOV;                                       // 0x1BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFOV;                                        // 0x1BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExteriorFOV;                                       // 0x1BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InteriorCameraSpaceForwardDistance;                // 0x1BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExteriorCameraSpaceForwardDistance;                // 0x1BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExteriorCamZOffset;                                // 0x1BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InteriorCamZOffset;                                // 0x1BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDebugWidget;                                    // 0x1BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDraw;                                         // 0x1BE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VerticalProbeBlocked;                              // 0x1BE2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpawnedDebugUI;                                   // 0x1BE3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE4[0x4];                                     // 0x1BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FastVelocityThreshold;                             // 0x1BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxFOVAndDistanceInterpSpeed;                      // 0x1BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FrontaAngledlProbeBlocked;                         // 0x1BF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF9[0x7];                                     // 0x1BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinFOVAndDistanceInterpSpeed;                      // 0x1C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VerticalHitDistance;                               // 0x1C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardAngledHitDistance;                          // 0x1C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VTVelocity;                                        // 0x1C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 View_Target;                                       // 0x1C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityAddDistanceThreshold;                      // 0x1C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityAddMaxDistance;                            // 0x1C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityAddMaxFOV;                                 // 0x1C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityAddOffsetZ;                                // 0x1C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FrontalProbeCurTickNum;                            // 0x1C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VerticalProbeTickSkip;                             // 0x1C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VerticalProbeCurTickNum;                           // 0x1C48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4C[0x4];                                     // 0x1C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VerticalProbeLength;                               // 0x1C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrontalAngledProbeAngle;                           // 0x1C58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrontalAngledProbeLength;                          // 0x1C5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PerformDropoffDetection;                           // 0x1C60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C61[0x3];                                     // 0x1C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FrontalProbeTickSkip;                              // 0x1C64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardDepthProbeZOffset;                          // 0x1C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardDepthProbeXOffset;                          // 0x1C70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C74[0x4];                                     // 0x1C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ForwardDepthProbeLength;                           // 0x1C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExteriorForwardErrorConstraint;                    // 0x1C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InteriorForwardErrorConstraint;                    // 0x1C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraDebugDisplay_C*                  DebugWidget;                                       // 0x1C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         DropoffDepthDistance;                              // 0x1C98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9C[0x4];                                     // 0x1C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FAProbeHitActor;                                   // 0x1CA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 VertProbeHitActor;                                 // 0x1CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        VTVelocityDotWithCam;                              // 0x1CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VelocityDirection;                                 // 0x1CC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag_IgnoredActors;                                 // 0x1CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraPitch;                                       // 0x1CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            PitchCameraForwardDistanceMultiplier;              // 0x1CE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_PitchDistanceMult;                           // 0x1CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        GroundedZInterp;                                   // 0x1D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NonGroundedZInterp;                                // 0x1D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurGroundedBlendInterp;                            // 0x1D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VTVelDir;                                          // 0x1D18(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurVelOffset;                                      // 0x1D30(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelOffsetSpeed;                                    // 0x1D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxVelocityCamOffset;                              // 0x1D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_VelocityInterpSpeed;                         // 0x1D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DotParallelThreshold;                              // 0x1D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetInConversation;                            // 0x1D68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D69[0x7];                                     // 0x1D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurCamSpaceViewOffset;                             // 0x1D70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetBuilding;                                  // 0x1D88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D89[0x7];                                     // 0x1D89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Building_Size_Max;                                 // 0x1D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BuildingPreviewSizeScalar;                         // 0x1D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseVelocityViewTargetLeading;                      // 0x1DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetFalling;                                   // 0x1DA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetAttackingMelee;                            // 0x1DA2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA3[0x5];                                     // 0x1DA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurFollowBlendInterp;                              // 0x1DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NonAttackingFollowInterp;                          // 0x1DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AttackingFollowInterp;                             // 0x1DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewTargetBoxExtent;                               // 0x1DC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProbeCastOrigin;                                   // 0x1DD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NormalizedCameraPitch;                             // 0x1DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BuildingPreviewHeightAdditionalZoom;               // 0x1DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckViewTargetTags();
	void ExecuteUbergraph_JunoCameraMode_OrbitCam(int32 EntryPoint);
	void GetConfinedSpaceWeight(double* Weight);
	void GetDesiredForwardDistance(double* DesiredDistance);
	void GetDesiredFOV(double* DesiredFOV);
	void GetForwardAngledProbeWeight(double* Weight);
	void GetFOVAndDistanceInterpSpeed(double* InterpSpeed);
	void GetVelocityDistanceAdd(double* AdditionalDistanceToAdd);
	double GetVelocityWeight();
	void GetVerticalProbeWeight(double* Weight);
	void InitFromObject(class UObject* InitObject);
	bool IsVTVelocityDotParallel();
	void JunoCamDebug();
	void OnBecomeActiveBP(class AActor* ViewTarget);
	void PerformLineTrace(const struct FVector& Start, const struct FVector& End, const TArray<class AActor*>& ActorsToIgnore, bool* SuccesfulHit, struct FHitResult* Result);
	void SpawnDebugWidget();
	void TryForwardAngleTrace(const struct FVector& Start, const struct FVector& End);
	void TryVerticalTrace(const struct FVector& Start, const struct FVector& End);
	void UpdateCameraBP(class AActor* ViewTarget, float DeltaTime, struct FTViewTarget& OutVT);
	void UpdateProbeChecks();
	void UpdateViewTargetValues(const struct FTViewTarget& InViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"JunoCameraMode_OrbitCam_C">();
	}
	static class UJunoCameraMode_OrbitCam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJunoCameraMode_OrbitCam_C>();
	}
};
static_assert(alignof(UJunoCameraMode_OrbitCam_C) == 0x000010, "Wrong alignment on UJunoCameraMode_OrbitCam_C");
static_assert(sizeof(UJunoCameraMode_OrbitCam_C) == 0x001E00, "Wrong size on UJunoCameraMode_OrbitCam_C");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, UberGraphFrame) == 0x001BA0, "Member 'UJunoCameraMode_OrbitCam_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, InteriorFOV) == 0x001BA8, "Member 'UJunoCameraMode_OrbitCam_C::InteriorFOV' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, CurrentFOV) == 0x001BB0, "Member 'UJunoCameraMode_OrbitCam_C::CurrentFOV' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ExteriorFOV) == 0x001BB8, "Member 'UJunoCameraMode_OrbitCam_C::ExteriorFOV' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, InteriorCameraSpaceForwardDistance) == 0x001BC0, "Member 'UJunoCameraMode_OrbitCam_C::InteriorCameraSpaceForwardDistance' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ExteriorCameraSpaceForwardDistance) == 0x001BC8, "Member 'UJunoCameraMode_OrbitCam_C::ExteriorCameraSpaceForwardDistance' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ExteriorCamZOffset) == 0x001BD0, "Member 'UJunoCameraMode_OrbitCam_C::ExteriorCamZOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, InteriorCamZOffset) == 0x001BD8, "Member 'UJunoCameraMode_OrbitCam_C::InteriorCamZOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, UseDebugWidget) == 0x001BE0, "Member 'UJunoCameraMode_OrbitCam_C::UseDebugWidget' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, DebugDraw) == 0x001BE1, "Member 'UJunoCameraMode_OrbitCam_C::DebugDraw' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VerticalProbeBlocked) == 0x001BE2, "Member 'UJunoCameraMode_OrbitCam_C::VerticalProbeBlocked' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, bSpawnedDebugUI) == 0x001BE3, "Member 'UJunoCameraMode_OrbitCam_C::bSpawnedDebugUI' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FastVelocityThreshold) == 0x001BE8, "Member 'UJunoCameraMode_OrbitCam_C::FastVelocityThreshold' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, MaxFOVAndDistanceInterpSpeed) == 0x001BF0, "Member 'UJunoCameraMode_OrbitCam_C::MaxFOVAndDistanceInterpSpeed' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FrontaAngledlProbeBlocked) == 0x001BF8, "Member 'UJunoCameraMode_OrbitCam_C::FrontaAngledlProbeBlocked' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, MinFOVAndDistanceInterpSpeed) == 0x001C00, "Member 'UJunoCameraMode_OrbitCam_C::MinFOVAndDistanceInterpSpeed' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VerticalHitDistance) == 0x001C08, "Member 'UJunoCameraMode_OrbitCam_C::VerticalHitDistance' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ForwardAngledHitDistance) == 0x001C0C, "Member 'UJunoCameraMode_OrbitCam_C::ForwardAngledHitDistance' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VTVelocity) == 0x001C10, "Member 'UJunoCameraMode_OrbitCam_C::VTVelocity' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, View_Target) == 0x001C18, "Member 'UJunoCameraMode_OrbitCam_C::View_Target' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VelocityAddDistanceThreshold) == 0x001C20, "Member 'UJunoCameraMode_OrbitCam_C::VelocityAddDistanceThreshold' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VelocityAddMaxDistance) == 0x001C28, "Member 'UJunoCameraMode_OrbitCam_C::VelocityAddMaxDistance' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VelocityAddMaxFOV) == 0x001C30, "Member 'UJunoCameraMode_OrbitCam_C::VelocityAddMaxFOV' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VelocityAddOffsetZ) == 0x001C38, "Member 'UJunoCameraMode_OrbitCam_C::VelocityAddOffsetZ' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FrontalProbeCurTickNum) == 0x001C40, "Member 'UJunoCameraMode_OrbitCam_C::FrontalProbeCurTickNum' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VerticalProbeTickSkip) == 0x001C44, "Member 'UJunoCameraMode_OrbitCam_C::VerticalProbeTickSkip' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VerticalProbeCurTickNum) == 0x001C48, "Member 'UJunoCameraMode_OrbitCam_C::VerticalProbeCurTickNum' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VerticalProbeLength) == 0x001C50, "Member 'UJunoCameraMode_OrbitCam_C::VerticalProbeLength' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FrontalAngledProbeAngle) == 0x001C58, "Member 'UJunoCameraMode_OrbitCam_C::FrontalAngledProbeAngle' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FrontalAngledProbeLength) == 0x001C5C, "Member 'UJunoCameraMode_OrbitCam_C::FrontalAngledProbeLength' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, PerformDropoffDetection) == 0x001C60, "Member 'UJunoCameraMode_OrbitCam_C::PerformDropoffDetection' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FrontalProbeTickSkip) == 0x001C64, "Member 'UJunoCameraMode_OrbitCam_C::FrontalProbeTickSkip' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ForwardDepthProbeZOffset) == 0x001C68, "Member 'UJunoCameraMode_OrbitCam_C::ForwardDepthProbeZOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ForwardDepthProbeXOffset) == 0x001C70, "Member 'UJunoCameraMode_OrbitCam_C::ForwardDepthProbeXOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ForwardDepthProbeLength) == 0x001C78, "Member 'UJunoCameraMode_OrbitCam_C::ForwardDepthProbeLength' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ExteriorForwardErrorConstraint) == 0x001C80, "Member 'UJunoCameraMode_OrbitCam_C::ExteriorForwardErrorConstraint' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, InteriorForwardErrorConstraint) == 0x001C88, "Member 'UJunoCameraMode_OrbitCam_C::InteriorForwardErrorConstraint' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, DebugWidget) == 0x001C90, "Member 'UJunoCameraMode_OrbitCam_C::DebugWidget' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, DropoffDepthDistance) == 0x001C98, "Member 'UJunoCameraMode_OrbitCam_C::DropoffDepthDistance' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, FAProbeHitActor) == 0x001CA0, "Member 'UJunoCameraMode_OrbitCam_C::FAProbeHitActor' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VertProbeHitActor) == 0x001CB0, "Member 'UJunoCameraMode_OrbitCam_C::VertProbeHitActor' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VTVelocityDotWithCam) == 0x001CC0, "Member 'UJunoCameraMode_OrbitCam_C::VTVelocityDotWithCam' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VelocityDirection) == 0x001CC8, "Member 'UJunoCameraMode_OrbitCam_C::VelocityDirection' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, Tag_IgnoredActors) == 0x001CE0, "Member 'UJunoCameraMode_OrbitCam_C::Tag_IgnoredActors' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, CameraPitch) == 0x001CE4, "Member 'UJunoCameraMode_OrbitCam_C::CameraPitch' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, PitchCameraForwardDistanceMultiplier) == 0x001CE8, "Member 'UJunoCameraMode_OrbitCam_C::PitchCameraForwardDistanceMultiplier' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, Curve_PitchDistanceMult) == 0x001CF8, "Member 'UJunoCameraMode_OrbitCam_C::Curve_PitchDistanceMult' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, GroundedZInterp) == 0x001D00, "Member 'UJunoCameraMode_OrbitCam_C::GroundedZInterp' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, NonGroundedZInterp) == 0x001D08, "Member 'UJunoCameraMode_OrbitCam_C::NonGroundedZInterp' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, CurGroundedBlendInterp) == 0x001D10, "Member 'UJunoCameraMode_OrbitCam_C::CurGroundedBlendInterp' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VTVelDir) == 0x001D18, "Member 'UJunoCameraMode_OrbitCam_C::VTVelDir' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, CurVelOffset) == 0x001D30, "Member 'UJunoCameraMode_OrbitCam_C::CurVelOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, VelOffsetSpeed) == 0x001D48, "Member 'UJunoCameraMode_OrbitCam_C::VelOffsetSpeed' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, MaxVelocityCamOffset) == 0x001D50, "Member 'UJunoCameraMode_OrbitCam_C::MaxVelocityCamOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, Curve_VelocityInterpSpeed) == 0x001D58, "Member 'UJunoCameraMode_OrbitCam_C::Curve_VelocityInterpSpeed' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, DotParallelThreshold) == 0x001D60, "Member 'UJunoCameraMode_OrbitCam_C::DotParallelThreshold' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, IsTargetInConversation) == 0x001D68, "Member 'UJunoCameraMode_OrbitCam_C::IsTargetInConversation' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, CurCamSpaceViewOffset) == 0x001D70, "Member 'UJunoCameraMode_OrbitCam_C::CurCamSpaceViewOffset' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, IsTargetBuilding) == 0x001D88, "Member 'UJunoCameraMode_OrbitCam_C::IsTargetBuilding' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, Building_Size_Max) == 0x001D90, "Member 'UJunoCameraMode_OrbitCam_C::Building_Size_Max' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, BuildingPreviewSizeScalar) == 0x001D98, "Member 'UJunoCameraMode_OrbitCam_C::BuildingPreviewSizeScalar' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, UseVelocityViewTargetLeading) == 0x001DA0, "Member 'UJunoCameraMode_OrbitCam_C::UseVelocityViewTargetLeading' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, IsTargetFalling) == 0x001DA1, "Member 'UJunoCameraMode_OrbitCam_C::IsTargetFalling' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, IsTargetAttackingMelee) == 0x001DA2, "Member 'UJunoCameraMode_OrbitCam_C::IsTargetAttackingMelee' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, CurFollowBlendInterp) == 0x001DA8, "Member 'UJunoCameraMode_OrbitCam_C::CurFollowBlendInterp' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, NonAttackingFollowInterp) == 0x001DB0, "Member 'UJunoCameraMode_OrbitCam_C::NonAttackingFollowInterp' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, AttackingFollowInterp) == 0x001DB8, "Member 'UJunoCameraMode_OrbitCam_C::AttackingFollowInterp' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ViewTargetBoxExtent) == 0x001DC0, "Member 'UJunoCameraMode_OrbitCam_C::ViewTargetBoxExtent' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, ProbeCastOrigin) == 0x001DD8, "Member 'UJunoCameraMode_OrbitCam_C::ProbeCastOrigin' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, NormalizedCameraPitch) == 0x001DF0, "Member 'UJunoCameraMode_OrbitCam_C::NormalizedCameraPitch' has a wrong offset!");
static_assert(offsetof(UJunoCameraMode_OrbitCam_C, BuildingPreviewHeightAdditionalZoom) == 0x001DF8, "Member 'UJunoCameraMode_OrbitCam_C::BuildingPreviewHeightAdditionalZoom' has a wrong offset!");

}

