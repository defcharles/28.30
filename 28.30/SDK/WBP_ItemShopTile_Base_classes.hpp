#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemShopTile_Base

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CommonInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "E_PriceSwitcherState_structs.hpp"
#include "E_UIKit_ItemDescription_TextWrapType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C
// 0x03D0 (0x1870 - 0x14A0)
class UWBP_ItemShopTile_Base_C : public UUIKitModularButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x14A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoveredUnfocused;                                  // 0x14A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowOffscreenOverlay;                              // 0x14B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ControllerPrompt_Hover;                            // 0x14B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OfferDetails_Hover;                                // 0x14C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresentationSwap;                                  // 0x14C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Portrait_HoverBurst;                               // 0x14D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Portrait_Hover;                                    // 0x14D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UFortLazyImage*                         Image_AnimatedWrap;                                // 0x14E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Backing;                                     // 0x14E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_NextOffer;                                   // 0x14F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Offer;                                       // 0x14F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_OffscreenOverlay;                            // 0x1500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_UnfocusedHovered;                            // 0x1508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLoadGuard*                       LoadGuard_Image;                                   // 0x1510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Button_Outline_C*            ModularBlock_Outline;                              // 0x1518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_AnimatedWrap;                              // 0x1520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Image;                                     // 0x1528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InputAction;                               // 0x1530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_OfferInfo;                                 // 0x1538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_PriceStateSwitcher;                        // 0x1540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Rarity;                                    // 0x1548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_TagRotator;                                // 0x1550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Violator;                                  // 0x1558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_AnimatedWrap;                              // 0x1560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Image;                                     // 0x1568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_NameText;                                  // 0x1570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_OfferInfo;                                 // 0x1578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Description;                                  // 0x1580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Name;                                         // 0x1588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_OfferInfo;                             // 0x1590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           VbuckRimBrushColor;                                // 0x1598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RMTRimBrushColor;                                  // 0x15A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DefaultPresentationMaterial;                       // 0x15B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentDAIndex;                                    // 0x15C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumDAs;                                            // 0x15C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PresentationSwapTimerHandle;                       // 0x15C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBetweenPresentations;                          // 0x15D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D4[0x4];                                     // 0x15D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SmallTileSizeRatio;                                // 0x15D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopTileSize                             TileSize;                                          // 0x15E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E9[0x3];                                     // 0x15E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      RarityColor;                                       // 0x15EC(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_163C[0x4];                                     // 0x163C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OfferName;                                         // 0x1640(0x0018)(Edit, BlueprintVisible)
	class FText                                   OfferDescription;                                  // 0x1658(0x0018)(Edit, BlueprintVisible)
	class UClass*                                 PriceSwitcherClass;                                // 0x1670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x1678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RegularPrice;                                      // 0x167C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopCurrency                             Currency;                                          // 0x1680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1681[0x7];                                     // 0x1681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ViolatorText;                                      // 0x1688(0x0018)(Edit, BlueprintVisible)
	EViolatorIntensity                            ViolatorIntensity;                                 // 0x16A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A1[0x7];                                     // 0x16A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Presentations;                                     // 0x16A8(0x0010)(Edit, BlueprintVisible)
	class FText                                   OwnedText;                                         // 0x16B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 ViolatorClass;                                     // 0x16D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_TagRotator_Base_C*      TagRotatorWidget;                                  // 0x16D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Violator_Base_C*                   ViolatorWidget;                                    // 0x16E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TagRotatorClass;                                   // 0x16E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBetweenTitleChanges;                           // 0x16F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PriceSwitcherState                          PriceInfoSwitcherState;                            // 0x16F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            ViolatorVerticalAlignment;                         // 0x16F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          ViolatorHorizontalAlignment;                       // 0x16F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16F7[0x1];                                     // 0x16F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ViolatorPadding;                                   // 0x16F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UWBP_PriceSwitcher_Base_C*              PriceWidget;                                       // 0x1708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x1710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPeekState;                                     // 0x1711(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TagFullPreviewEnabled;                             // 0x1712(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuppressStrikethroughPrice;                        // 0x1713(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRoundedCorners;                                 // 0x1714(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1715[0x3];                                     // 0x1715(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         NameFont;                                          // 0x1718(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         NameLineHeight;                                    // 0x1770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1774[0x4];                                     // 0x1774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         DescriptionFont;                                   // 0x1778(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         CornerRadius;                                      // 0x17D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRadiusInPixels;                                  // 0x17D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D5[0x3];                                     // 0x17D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DescriptionLineHeight;                             // 0x17D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextTransformPolicy                          NameTransformPolicy;                               // 0x17DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextTransformPolicy                          DescriptionTransformPolicy;                        // 0x17DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17DE[0x2];                                     // 0x17DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TagOffsetAnimValue;                                // 0x17E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        DescriptionOffsetAnimValue;                        // 0x17E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        TagHeight;                                         // 0x17F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TagHeight_Mobile;                                  // 0x17F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TagTopPaddingCompensation;                         // 0x1800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceToShowDetails;                                // 0x1808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1809[0x7];                                     // 0x1809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               OfferInfoBackplateMID;                             // 0x1810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDynamicBackingColor;                            // 0x1818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1819[0x3];                                     // 0x1819(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CornerRadiusOutline;                               // 0x181C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Preview_Hovered;                                   // 0x1820(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDetailsOfferShown_;                              // 0x1821(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UIKit_ItemDescription_TextWrapType          NameTextWrapType;                                  // 0x1822(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1823[0x1];                                     // 0x1823(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OfferNameTextMaxHeight;                            // 0x1824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           TagTexts;                                          // 0x1828(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        OfferDetailsBottomPadding;                         // 0x1838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewActiveState;                                // 0x1840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1841[0x7];                                     // 0x1841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OfferNameTextMaxHeightMobile;                      // 0x1848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UUserWidget* FocusedTile)> OnTileFocused;                                     // 0x1850(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              PreviewTileSize;                                   // 0x1860(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnHovered();
	void BP_OnUnhovered();
	void ClearTimers();
	void Construct();
	void CreatePriceSwitcher();
	void CreateTagRotator();
	void CreateViolator();
	void Destruct();
	void ExecuteUbergraph_WBP_ItemShopTile_Base(int32 EntryPoint);
	void Finished_F67CBD49492AADE02541788EA696B3BA();
	int32 GetNextPresentationIndex();
	void GetTileAnchor(struct FVector2D* PixelPosition);
	void HandleInputMethodChanged(ECommonInputType bNewInputType);
	void HandleNoLoadedPresentations();
	void HideOfferDetails(bool IsImmediate);
	void InitializeMaterials();
	void InitializeTile();
	void InitializeVisualState(ECommonInputType CurrentInputType);
	void IsMobileFrontend(bool* bIsMobileFrontend);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnHandlePresentations();
	void OnPresentationSwap();
	void PreConstruct(bool IsDesignTime);
	void Set_Unfocused_Hover(bool IsHovered_0, bool OnlyResetAnimation);
	void SetActiveState(bool IsActiveState);
	void SetBottomInfoActiveWidget(E_PriceSwitcherState PriceSwitcherState);
	void SetCurrency(EItemShopCurrency CurrencyType);
	void SetDescriptionOffsetAnimValue(double Value);
	void SetDescriptionVisibility(ESlateVisibility Visibility_0);
	void SetHoveredState();
	void SetHoveredStateVisual(bool IsHovered_0);
	void SetOfferDescription(const class FText& Text);
	void SetOfferMaterial(TDelegate<void()> PresentationSwapDelegate);
	void SetOfferName(const class FText& Text);
	void SetOfferNameTextLayout();
	void SetPeekState(bool IsInPeekState_0);
	void SetPresentations(TArray<class UMaterialInterface*>& Presentations_0);
	void SetPresentationsLoadingState(bool IsLoading, bool ShouldClearPresentationsArray);
	void SetPreviewData(const class FText& Name_0, const class FText& Description, ESlateVisibility DescriptionVisibility, EItemShopTileSize TileSize_0, const struct FFortColorPalette& RarityColor_0, TArray<class UMaterialInterface*>& Presentations_0, int32 Price_0, int32 RegularPrice_0, EItemShopCurrency Currency_0, E_PriceSwitcherState PriceState, const class FText& ViolatorText_0, EViolatorIntensity ViolatorIntensity_0, TArray<class FText>& TagTexts_0);
	void SetPrice(const class FText& Value);
	void SetRarityStripColor(const struct FFortColorPalette& Color);
	void SetRegularPrice(const class FText& Value);
	void SetRegularPriceVisibility(ESlateVisibility InVisibility);
	void SetRimBrushColor(class UCommonActionWidget* IconRim, const struct FLinearColor& Color);
	void SetSubInfoText(const class FText& SubInfoText);
	void SetTagOffsetAnimValue(double Value);
	void SetTagTexts(TArray<class FText>& TagTexts_0);
	void SetTileSize(const struct FVector2D& TileSize_0);
	void SetUnhoveredState();
	void SetupModularBlocks();
	void SetViolatorIntensity(EViolatorIntensity ViolatorIntensity_0);
	void SetViolatorText(const class FText& Text);
	void ShowOfferDetails(bool IsImmediate);
	void UpdateGradientHeight(class UMaterialInstanceDynamic* Mid);
	void UpdateImagesPresentations();
	void UpdateItemLivePreview(class UFortThumbnailRenderer* ThumbnailRendererPtr, class AFortItemCaptureActor* CaptureActor);

	void GetPriceFormattedText(int32 Price_0, EItemShopCurrency Currency_0, const class FString& CurrencySubType, class FText* PriceText) const;
	void GetStrikethroughPriceVisibility(int32 Price_0, int32 RegularPrice_0, bool SuppressStrikethrough, ESlateVisibility* StrikethroughPriceVisibility) const;
	void HasTransference(const TSet<ECosmeticCompatibleMode>& CompatibleModes, bool* HasTransference_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemShopTile_Base_C">();
	}
	static class UWBP_ItemShopTile_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemShopTile_Base_C>();
	}
};
static_assert(alignof(UWBP_ItemShopTile_Base_C) == 0x000010, "Wrong alignment on UWBP_ItemShopTile_Base_C");
static_assert(sizeof(UWBP_ItemShopTile_Base_C) == 0x001870, "Wrong size on UWBP_ItemShopTile_Base_C");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, UberGraphFrame) == 0x0014A0, "Member 'UWBP_ItemShopTile_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, HoveredUnfocused) == 0x0014A8, "Member 'UWBP_ItemShopTile_Base_C::HoveredUnfocused' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ShowOffscreenOverlay) == 0x0014B0, "Member 'UWBP_ItemShopTile_Base_C::ShowOffscreenOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ControllerPrompt_Hover) == 0x0014B8, "Member 'UWBP_ItemShopTile_Base_C::ControllerPrompt_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferDetails_Hover) == 0x0014C0, "Member 'UWBP_ItemShopTile_Base_C::OfferDetails_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PresentationSwap) == 0x0014C8, "Member 'UWBP_ItemShopTile_Base_C::PresentationSwap' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Portrait_HoverBurst) == 0x0014D0, "Member 'UWBP_ItemShopTile_Base_C::Portrait_HoverBurst' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Portrait_Hover) == 0x0014D8, "Member 'UWBP_ItemShopTile_Base_C::Portrait_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Image_AnimatedWrap) == 0x0014E0, "Member 'UWBP_ItemShopTile_Base_C::Image_AnimatedWrap' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Image_Backing) == 0x0014E8, "Member 'UWBP_ItemShopTile_Base_C::Image_Backing' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Image_NextOffer) == 0x0014F0, "Member 'UWBP_ItemShopTile_Base_C::Image_NextOffer' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Image_Offer) == 0x0014F8, "Member 'UWBP_ItemShopTile_Base_C::Image_Offer' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Image_OffscreenOverlay) == 0x001500, "Member 'UWBP_ItemShopTile_Base_C::Image_OffscreenOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Image_UnfocusedHovered) == 0x001508, "Member 'UWBP_ItemShopTile_Base_C::Image_UnfocusedHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, LoadGuard_Image) == 0x001510, "Member 'UWBP_ItemShopTile_Base_C::LoadGuard_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ModularBlock_Outline) == 0x001518, "Member 'UWBP_ItemShopTile_Base_C::ModularBlock_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_AnimatedWrap) == 0x001520, "Member 'UWBP_ItemShopTile_Base_C::Overlay_AnimatedWrap' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_Image) == 0x001528, "Member 'UWBP_ItemShopTile_Base_C::Overlay_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_InputAction) == 0x001530, "Member 'UWBP_ItemShopTile_Base_C::Overlay_InputAction' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_OfferInfo) == 0x001538, "Member 'UWBP_ItemShopTile_Base_C::Overlay_OfferInfo' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_PriceStateSwitcher) == 0x001540, "Member 'UWBP_ItemShopTile_Base_C::Overlay_PriceStateSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_Rarity) == 0x001548, "Member 'UWBP_ItemShopTile_Base_C::Overlay_Rarity' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_TagRotator) == 0x001550, "Member 'UWBP_ItemShopTile_Base_C::Overlay_TagRotator' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Overlay_Violator) == 0x001558, "Member 'UWBP_ItemShopTile_Base_C::Overlay_Violator' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, SizeBox_AnimatedWrap) == 0x001560, "Member 'UWBP_ItemShopTile_Base_C::SizeBox_AnimatedWrap' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, SizeBox_Image) == 0x001568, "Member 'UWBP_ItemShopTile_Base_C::SizeBox_Image' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, SizeBox_NameText) == 0x001570, "Member 'UWBP_ItemShopTile_Base_C::SizeBox_NameText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, SizeBox_OfferInfo) == 0x001578, "Member 'UWBP_ItemShopTile_Base_C::SizeBox_OfferInfo' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Text_Description) == 0x001580, "Member 'UWBP_ItemShopTile_Base_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Text_Name) == 0x001588, "Member 'UWBP_ItemShopTile_Base_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, VerticalBox_OfferInfo) == 0x001590, "Member 'UWBP_ItemShopTile_Base_C::VerticalBox_OfferInfo' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, VbuckRimBrushColor) == 0x001598, "Member 'UWBP_ItemShopTile_Base_C::VbuckRimBrushColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, RMTRimBrushColor) == 0x0015A8, "Member 'UWBP_ItemShopTile_Base_C::RMTRimBrushColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, DefaultPresentationMaterial) == 0x0015B8, "Member 'UWBP_ItemShopTile_Base_C::DefaultPresentationMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, CurrentDAIndex) == 0x0015C0, "Member 'UWBP_ItemShopTile_Base_C::CurrentDAIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, NumDAs) == 0x0015C4, "Member 'UWBP_ItemShopTile_Base_C::NumDAs' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PresentationSwapTimerHandle) == 0x0015C8, "Member 'UWBP_ItemShopTile_Base_C::PresentationSwapTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TimeBetweenPresentations) == 0x0015D0, "Member 'UWBP_ItemShopTile_Base_C::TimeBetweenPresentations' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, SmallTileSizeRatio) == 0x0015D8, "Member 'UWBP_ItemShopTile_Base_C::SmallTileSizeRatio' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TileSize) == 0x0015E8, "Member 'UWBP_ItemShopTile_Base_C::TileSize' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, RarityColor) == 0x0015EC, "Member 'UWBP_ItemShopTile_Base_C::RarityColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferName) == 0x001640, "Member 'UWBP_ItemShopTile_Base_C::OfferName' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferDescription) == 0x001658, "Member 'UWBP_ItemShopTile_Base_C::OfferDescription' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PriceSwitcherClass) == 0x001670, "Member 'UWBP_ItemShopTile_Base_C::PriceSwitcherClass' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Price) == 0x001678, "Member 'UWBP_ItemShopTile_Base_C::Price' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, RegularPrice) == 0x00167C, "Member 'UWBP_ItemShopTile_Base_C::RegularPrice' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Currency) == 0x001680, "Member 'UWBP_ItemShopTile_Base_C::Currency' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorText) == 0x001688, "Member 'UWBP_ItemShopTile_Base_C::ViolatorText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorIntensity) == 0x0016A0, "Member 'UWBP_ItemShopTile_Base_C::ViolatorIntensity' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Presentations) == 0x0016A8, "Member 'UWBP_ItemShopTile_Base_C::Presentations' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OwnedText) == 0x0016B8, "Member 'UWBP_ItemShopTile_Base_C::OwnedText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorClass) == 0x0016D0, "Member 'UWBP_ItemShopTile_Base_C::ViolatorClass' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagRotatorWidget) == 0x0016D8, "Member 'UWBP_ItemShopTile_Base_C::TagRotatorWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorWidget) == 0x0016E0, "Member 'UWBP_ItemShopTile_Base_C::ViolatorWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagRotatorClass) == 0x0016E8, "Member 'UWBP_ItemShopTile_Base_C::TagRotatorClass' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TimeBetweenTitleChanges) == 0x0016F0, "Member 'UWBP_ItemShopTile_Base_C::TimeBetweenTitleChanges' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PriceInfoSwitcherState) == 0x0016F4, "Member 'UWBP_ItemShopTile_Base_C::PriceInfoSwitcherState' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorVerticalAlignment) == 0x0016F5, "Member 'UWBP_ItemShopTile_Base_C::ViolatorVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorHorizontalAlignment) == 0x0016F6, "Member 'UWBP_ItemShopTile_Base_C::ViolatorHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ViolatorPadding) == 0x0016F8, "Member 'UWBP_ItemShopTile_Base_C::ViolatorPadding' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PriceWidget) == 0x001708, "Member 'UWBP_ItemShopTile_Base_C::PriceWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, IsActive) == 0x001710, "Member 'UWBP_ItemShopTile_Base_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, IsInPeekState) == 0x001711, "Member 'UWBP_ItemShopTile_Base_C::IsInPeekState' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagFullPreviewEnabled) == 0x001712, "Member 'UWBP_ItemShopTile_Base_C::TagFullPreviewEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, SuppressStrikethroughPrice) == 0x001713, "Member 'UWBP_ItemShopTile_Base_C::SuppressStrikethroughPrice' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, HasRoundedCorners) == 0x001714, "Member 'UWBP_ItemShopTile_Base_C::HasRoundedCorners' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, NameFont) == 0x001718, "Member 'UWBP_ItemShopTile_Base_C::NameFont' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, NameLineHeight) == 0x001770, "Member 'UWBP_ItemShopTile_Base_C::NameLineHeight' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, DescriptionFont) == 0x001778, "Member 'UWBP_ItemShopTile_Base_C::DescriptionFont' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, CornerRadius) == 0x0017D0, "Member 'UWBP_ItemShopTile_Base_C::CornerRadius' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, IsRadiusInPixels) == 0x0017D4, "Member 'UWBP_ItemShopTile_Base_C::IsRadiusInPixels' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, DescriptionLineHeight) == 0x0017D8, "Member 'UWBP_ItemShopTile_Base_C::DescriptionLineHeight' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, NameTransformPolicy) == 0x0017DC, "Member 'UWBP_ItemShopTile_Base_C::NameTransformPolicy' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, DescriptionTransformPolicy) == 0x0017DD, "Member 'UWBP_ItemShopTile_Base_C::DescriptionTransformPolicy' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagOffsetAnimValue) == 0x0017E0, "Member 'UWBP_ItemShopTile_Base_C::TagOffsetAnimValue' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, DescriptionOffsetAnimValue) == 0x0017E8, "Member 'UWBP_ItemShopTile_Base_C::DescriptionOffsetAnimValue' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagHeight) == 0x0017F0, "Member 'UWBP_ItemShopTile_Base_C::TagHeight' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagHeight_Mobile) == 0x0017F8, "Member 'UWBP_ItemShopTile_Base_C::TagHeight_Mobile' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagTopPaddingCompensation) == 0x001800, "Member 'UWBP_ItemShopTile_Base_C::TagTopPaddingCompensation' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, ForceToShowDetails) == 0x001808, "Member 'UWBP_ItemShopTile_Base_C::ForceToShowDetails' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferInfoBackplateMID) == 0x001810, "Member 'UWBP_ItemShopTile_Base_C::OfferInfoBackplateMID' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, UseDynamicBackingColor) == 0x001818, "Member 'UWBP_ItemShopTile_Base_C::UseDynamicBackingColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, CornerRadiusOutline) == 0x00181C, "Member 'UWBP_ItemShopTile_Base_C::CornerRadiusOutline' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, Preview_Hovered) == 0x001820, "Member 'UWBP_ItemShopTile_Base_C::Preview_Hovered' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, IsDetailsOfferShown_) == 0x001821, "Member 'UWBP_ItemShopTile_Base_C::IsDetailsOfferShown_' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, NameTextWrapType) == 0x001822, "Member 'UWBP_ItemShopTile_Base_C::NameTextWrapType' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferNameTextMaxHeight) == 0x001824, "Member 'UWBP_ItemShopTile_Base_C::OfferNameTextMaxHeight' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, TagTexts) == 0x001828, "Member 'UWBP_ItemShopTile_Base_C::TagTexts' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferDetailsBottomPadding) == 0x001838, "Member 'UWBP_ItemShopTile_Base_C::OfferDetailsBottomPadding' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PreviewActiveState) == 0x001840, "Member 'UWBP_ItemShopTile_Base_C::PreviewActiveState' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OfferNameTextMaxHeightMobile) == 0x001848, "Member 'UWBP_ItemShopTile_Base_C::OfferNameTextMaxHeightMobile' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, OnTileFocused) == 0x001850, "Member 'UWBP_ItemShopTile_Base_C::OnTileFocused' has a wrong offset!");
static_assert(offsetof(UWBP_ItemShopTile_Base_C, PreviewTileSize) == 0x001860, "Member 'UWBP_ItemShopTile_Base_C::PreviewTileSize' has a wrong offset!");

}

