#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PopupTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PopupTooltip.WBP_PopupTooltip_C
// 0x00C8 (0x0388 - 0x02C0)
class UWBP_PopupTooltip_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideAnimation;                                     // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAnimation;                                     // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Shadow;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Arrow;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_SecondaryLine;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_MainText;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   FirstLineText;                                     // 0x0300(0x0018)(Edit, BlueprintVisible)
	class FText                                   SecondLineRichText;                                // 0x0318(0x0018)(Edit, BlueprintVisible)
	struct FMargin                                ArrowPadding;                                      // 0x0330(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          ArrowHorizontalAlignment;                          // 0x0340(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            ArrowVerticalAlignment;                            // 0x0341(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetTransform                       ArrowTransform;                                    // 0x0348(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	bool                                          IsShowing;                                         // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_PopupTooltip(int32 EntryPoint);
	void HideNotification();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void SetFirstLineText(const class FText& FirstLineText_0);
	void SetSecondLineRichText(const class FText& SecondLineRichText_0);
	void ShowNotification();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PopupTooltip_C">();
	}
	static class UWBP_PopupTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PopupTooltip_C>();
	}
};
static_assert(alignof(UWBP_PopupTooltip_C) == 0x000008, "Wrong alignment on UWBP_PopupTooltip_C");
static_assert(sizeof(UWBP_PopupTooltip_C) == 0x000388, "Wrong size on UWBP_PopupTooltip_C");
static_assert(offsetof(UWBP_PopupTooltip_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_PopupTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, HideAnimation) == 0x0002C8, "Member 'UWBP_PopupTooltip_C::HideAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, ShowAnimation) == 0x0002D0, "Member 'UWBP_PopupTooltip_C::ShowAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, Border) == 0x0002D8, "Member 'UWBP_PopupTooltip_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, Border_Shadow) == 0x0002E0, "Member 'UWBP_PopupTooltip_C::Border_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, Image_Arrow) == 0x0002E8, "Member 'UWBP_PopupTooltip_C::Image_Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, RichText_SecondaryLine) == 0x0002F0, "Member 'UWBP_PopupTooltip_C::RichText_SecondaryLine' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, Text_MainText) == 0x0002F8, "Member 'UWBP_PopupTooltip_C::Text_MainText' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, FirstLineText) == 0x000300, "Member 'UWBP_PopupTooltip_C::FirstLineText' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, SecondLineRichText) == 0x000318, "Member 'UWBP_PopupTooltip_C::SecondLineRichText' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, ArrowPadding) == 0x000330, "Member 'UWBP_PopupTooltip_C::ArrowPadding' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, ArrowHorizontalAlignment) == 0x000340, "Member 'UWBP_PopupTooltip_C::ArrowHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, ArrowVerticalAlignment) == 0x000341, "Member 'UWBP_PopupTooltip_C::ArrowVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, ArrowTransform) == 0x000348, "Member 'UWBP_PopupTooltip_C::ArrowTransform' has a wrong offset!");
static_assert(offsetof(UWBP_PopupTooltip_C, IsShowing) == 0x000380, "Member 'UWBP_PopupTooltip_C::IsShowing' has a wrong offset!");

}

