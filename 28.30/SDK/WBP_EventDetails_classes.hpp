#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EventScreenBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EventDetails.WBP_EventDetails_C
// 0x0088 (0x0350 - 0x02C8)
class UWBP_EventDetails_C final : public UFortEventTrackerModule_EventDetails
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNamedSlot*                             ContentNamedSlot;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_Description;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_EventName;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_TimeRemaining;                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Description;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           TimeRemainingTextColor;                            // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EventNameTextColor;                                // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EventDescriptionTextColor;                         // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                DescriptionSlotPadding;                            // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   DescriptionPreviewText;                            // 0x0338(0x0018)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_WBP_EventDetails(int32 EntryPoint);
	void OnModuleInitialized(const class UFortEventScreenData* InEventScreenData);
	void OnPopulateEventDetailsText(const class FText& OutEventName, const class FText& OutEventDescription);
	void PreConstruct(bool IsDesignTime);
	void UpdateColors(const struct FLinearColor& Specified_Color);
	void UpdateEventTimeRemaining(const class FText& EventTimeRemainingText, const struct FTimespan& TimeRemaining);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EventDetails_C">();
	}
	static class UWBP_EventDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EventDetails_C>();
	}
};
static_assert(alignof(UWBP_EventDetails_C) == 0x000008, "Wrong alignment on UWBP_EventDetails_C");
static_assert(sizeof(UWBP_EventDetails_C) == 0x000350, "Wrong size on UWBP_EventDetails_C");
static_assert(offsetof(UWBP_EventDetails_C, UberGraphFrame) == 0x0002C8, "Member 'UWBP_EventDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, ContentNamedSlot) == 0x0002D0, "Member 'UWBP_EventDetails_C::ContentNamedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, RichText_Description) == 0x0002D8, "Member 'UWBP_EventDetails_C::RichText_Description' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, RichText_EventName) == 0x0002E0, "Member 'UWBP_EventDetails_C::RichText_EventName' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, RichText_TimeRemaining) == 0x0002E8, "Member 'UWBP_EventDetails_C::RichText_TimeRemaining' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, ScrollBox_Description) == 0x0002F0, "Member 'UWBP_EventDetails_C::ScrollBox_Description' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, TimeRemainingTextColor) == 0x0002F8, "Member 'UWBP_EventDetails_C::TimeRemainingTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, EventNameTextColor) == 0x000308, "Member 'UWBP_EventDetails_C::EventNameTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, EventDescriptionTextColor) == 0x000318, "Member 'UWBP_EventDetails_C::EventDescriptionTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, DescriptionSlotPadding) == 0x000328, "Member 'UWBP_EventDetails_C::DescriptionSlotPadding' has a wrong offset!");
static_assert(offsetof(UWBP_EventDetails_C, DescriptionPreviewText) == 0x000338, "Member 'UWBP_EventDetails_C::DescriptionPreviewText' has a wrong offset!");

}

