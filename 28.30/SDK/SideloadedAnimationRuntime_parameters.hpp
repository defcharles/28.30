#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SideloadedAnimationRuntime

#include "Basic.hpp"


namespace SDK::Params
{

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.AddMetaData
// 0x0008 (0x0008 - 0x0000)
struct AnimSequenceSideloaded_AddMetaData final
{
public:
	class UAnimMetaData*                          MetaDataInstance;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimSequenceSideloaded_AddMetaData) == 0x000008, "Wrong alignment on AnimSequenceSideloaded_AddMetaData");
static_assert(sizeof(AnimSequenceSideloaded_AddMetaData) == 0x000008, "Wrong size on AnimSequenceSideloaded_AddMetaData");
static_assert(offsetof(AnimSequenceSideloaded_AddMetaData, MetaDataInstance) == 0x000000, "Member 'AnimSequenceSideloaded_AddMetaData::MetaDataInstance' has a wrong offset!");

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.SetSkeleton
// 0x0008 (0x0008 - 0x0000)
struct AnimSequenceSideloaded_SetSkeleton final
{
public:
	class USkeleton*                              InSkeleton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimSequenceSideloaded_SetSkeleton) == 0x000008, "Wrong alignment on AnimSequenceSideloaded_SetSkeleton");
static_assert(sizeof(AnimSequenceSideloaded_SetSkeleton) == 0x000008, "Wrong size on AnimSequenceSideloaded_SetSkeleton");
static_assert(offsetof(AnimSequenceSideloaded_SetSkeleton, InSkeleton) == 0x000000, "Member 'AnimSequenceSideloaded_SetSkeleton::InSkeleton' has a wrong offset!");

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.SideloadData
// 0x0018 (0x0018 - 0x0000)
struct AnimSequenceSideloaded_SideloadData final
{
public:
	TArray<uint8>                                 Memory;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimSequenceSideloaded_SideloadData) == 0x000008, "Wrong alignment on AnimSequenceSideloaded_SideloadData");
static_assert(sizeof(AnimSequenceSideloaded_SideloadData) == 0x000018, "Wrong size on AnimSequenceSideloaded_SideloadData");
static_assert(offsetof(AnimSequenceSideloaded_SideloadData, Memory) == 0x000000, "Member 'AnimSequenceSideloaded_SideloadData::Memory' has a wrong offset!");
static_assert(offsetof(AnimSequenceSideloaded_SideloadData, ReturnValue) == 0x000010, "Member 'AnimSequenceSideloaded_SideloadData::ReturnValue' has a wrong offset!");

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.GetSideloadUserDataFloat
// 0x0018 (0x0018 - 0x0000)
struct AnimSequenceSideloaded_GetSideloadUserDataFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimSequenceSideloaded_GetSideloadUserDataFloat) == 0x000008, "Wrong alignment on AnimSequenceSideloaded_GetSideloadUserDataFloat");
static_assert(sizeof(AnimSequenceSideloaded_GetSideloadUserDataFloat) == 0x000018, "Wrong size on AnimSequenceSideloaded_GetSideloadUserDataFloat");
static_assert(offsetof(AnimSequenceSideloaded_GetSideloadUserDataFloat, Key) == 0x000000, "Member 'AnimSequenceSideloaded_GetSideloadUserDataFloat::Key' has a wrong offset!");
static_assert(offsetof(AnimSequenceSideloaded_GetSideloadUserDataFloat, ReturnValue) == 0x000010, "Member 'AnimSequenceSideloaded_GetSideloadUserDataFloat::ReturnValue' has a wrong offset!");

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.GetSideloadUserDataString
// 0x0020 (0x0020 - 0x0000)
struct AnimSequenceSideloaded_GetSideloadUserDataString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimSequenceSideloaded_GetSideloadUserDataString) == 0x000008, "Wrong alignment on AnimSequenceSideloaded_GetSideloadUserDataString");
static_assert(sizeof(AnimSequenceSideloaded_GetSideloadUserDataString) == 0x000020, "Wrong size on AnimSequenceSideloaded_GetSideloadUserDataString");
static_assert(offsetof(AnimSequenceSideloaded_GetSideloadUserDataString, Key) == 0x000000, "Member 'AnimSequenceSideloaded_GetSideloadUserDataString::Key' has a wrong offset!");
static_assert(offsetof(AnimSequenceSideloaded_GetSideloadUserDataString, ReturnValue) == 0x000010, "Member 'AnimSequenceSideloaded_GetSideloadUserDataString::ReturnValue' has a wrong offset!");

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.LoadDataFromFile
// 0x0028 (0x0028 - 0x0000)
struct AnimSequenceSideloaded_LoadDataFromFile final
{
public:
	class FString                                 Location;                                          // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Memory;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimSequenceSideloaded_LoadDataFromFile) == 0x000008, "Wrong alignment on AnimSequenceSideloaded_LoadDataFromFile");
static_assert(sizeof(AnimSequenceSideloaded_LoadDataFromFile) == 0x000028, "Wrong size on AnimSequenceSideloaded_LoadDataFromFile");
static_assert(offsetof(AnimSequenceSideloaded_LoadDataFromFile, Location) == 0x000000, "Member 'AnimSequenceSideloaded_LoadDataFromFile::Location' has a wrong offset!");
static_assert(offsetof(AnimSequenceSideloaded_LoadDataFromFile, Memory) == 0x000010, "Member 'AnimSequenceSideloaded_LoadDataFromFile::Memory' has a wrong offset!");
static_assert(offsetof(AnimSequenceSideloaded_LoadDataFromFile, ReturnValue) == 0x000020, "Member 'AnimSequenceSideloaded_LoadDataFromFile::ReturnValue' has a wrong offset!");

}

