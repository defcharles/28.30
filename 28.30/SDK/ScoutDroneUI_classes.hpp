#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoutDroneUI

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "ModularGameplay_classes.hpp"
#include "ScoutDroneUI_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "DynamicUI_classes.hpp"


namespace SDK
{

// Class ScoutDroneUI.FortMobileActionButtonBehaviorExtension_ScoutDroneUse
// 0x0020 (0x00A0 - 0x0080)
class UFortMobileActionButtonBehaviorExtension_ScoutDroneUse final : public UFortMobileActionButtonBehaviorExtension
{
public:
	struct FGameplayTagContainer                  ContextTagToCheck;                                 // 0x0080(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMobileActionButtonBehaviorExtension_ScoutDroneUse">();
	}
	static class UFortMobileActionButtonBehaviorExtension_ScoutDroneUse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMobileActionButtonBehaviorExtension_ScoutDroneUse>();
	}
};
static_assert(alignof(UFortMobileActionButtonBehaviorExtension_ScoutDroneUse) == 0x000008, "Wrong alignment on UFortMobileActionButtonBehaviorExtension_ScoutDroneUse");
static_assert(sizeof(UFortMobileActionButtonBehaviorExtension_ScoutDroneUse) == 0x0000A0, "Wrong size on UFortMobileActionButtonBehaviorExtension_ScoutDroneUse");
static_assert(offsetof(UFortMobileActionButtonBehaviorExtension_ScoutDroneUse, ContextTagToCheck) == 0x000080, "Member 'UFortMobileActionButtonBehaviorExtension_ScoutDroneUse::ContextTagToCheck' has a wrong offset!");

// Class ScoutDroneUI.FortMobileButtonBehaviorComponent_ScoutDronePickupItems
// 0x0030 (0x0078 - 0x0048)
class UFortMobileButtonBehaviorComponent_ScoutDronePickupItems final : public UFortMobileButtonBehaviorComponent_Visibility
{
public:
	struct FGameplayTagContainer                  HoldingItemsTags;                                  // 0x0048(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortControllerComponent_Interaction> InteractionComponent;                              // 0x0068(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMobileButtonBehaviorComponent_ScoutDronePickupItems">();
	}
	static class UFortMobileButtonBehaviorComponent_ScoutDronePickupItems* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMobileButtonBehaviorComponent_ScoutDronePickupItems>();
	}
};
static_assert(alignof(UFortMobileButtonBehaviorComponent_ScoutDronePickupItems) == 0x000008, "Wrong alignment on UFortMobileButtonBehaviorComponent_ScoutDronePickupItems");
static_assert(sizeof(UFortMobileButtonBehaviorComponent_ScoutDronePickupItems) == 0x000078, "Wrong size on UFortMobileButtonBehaviorComponent_ScoutDronePickupItems");
static_assert(offsetof(UFortMobileButtonBehaviorComponent_ScoutDronePickupItems, HoldingItemsTags) == 0x000048, "Member 'UFortMobileButtonBehaviorComponent_ScoutDronePickupItems::HoldingItemsTags' has a wrong offset!");
static_assert(offsetof(UFortMobileButtonBehaviorComponent_ScoutDronePickupItems, InteractionComponent) == 0x000068, "Member 'UFortMobileButtonBehaviorComponent_ScoutDronePickupItems::InteractionComponent' has a wrong offset!");

// Class ScoutDroneUI.DronePickUpIndicatorComponent
// 0x00B8 (0x0158 - 0x00A0)
class UDronePickUpIndicatorComponent final : public UGameFrameworkComponent
{
public:
	TSubclassOf<class UFortActorIndicatorWidget>  ItemIndicatorType;                                 // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortActorIndicatorWidget>  DbnoIndicatorType;                                 // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUserWidgetPool                        IndicatorPool;                                     // 0x00B0(0x0088)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_138[0x20];                                     // 0x0138(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Init(class AFortScoutDrone* Drone);
	void OnDroneDestroyed(class AActor* DestroyedActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DronePickUpIndicatorComponent">();
	}
	static class UDronePickUpIndicatorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDronePickUpIndicatorComponent>();
	}
};
static_assert(alignof(UDronePickUpIndicatorComponent) == 0x000008, "Wrong alignment on UDronePickUpIndicatorComponent");
static_assert(sizeof(UDronePickUpIndicatorComponent) == 0x000158, "Wrong size on UDronePickUpIndicatorComponent");
static_assert(offsetof(UDronePickUpIndicatorComponent, ItemIndicatorType) == 0x0000A0, "Member 'UDronePickUpIndicatorComponent::ItemIndicatorType' has a wrong offset!");
static_assert(offsetof(UDronePickUpIndicatorComponent, DbnoIndicatorType) == 0x0000A8, "Member 'UDronePickUpIndicatorComponent::DbnoIndicatorType' has a wrong offset!");
static_assert(offsetof(UDronePickUpIndicatorComponent, IndicatorPool) == 0x0000B0, "Member 'UDronePickUpIndicatorComponent::IndicatorPool' has a wrong offset!");

// Class ScoutDroneUI.ScoutDroneHUD
// 0x0120 (0x03E0 - 0x02C0)
class UScoutDroneHUD final : public UUserWidget
{
public:
	float                                         TimeToConfirmTargetCache;                          // 0x02C0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitialHealth;                                     // 0x02C4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         WarningRange;                                      // 0x02C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SignalLossRange;                                   // 0x02F0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         UpdateSignalInterval;                              // 0x0318(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           MarkAbilityTag;                                    // 0x0340(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           DismissAbilityTag;                                 // 0x0344(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           InteractAbilityTag;                                // 0x0348(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           PickUpAbilityTag;                                  // 0x034C(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           PickUpTargetsChangedTag;                           // 0x0350(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           SpeedBoostAbilityTag;                              // 0x0354(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_Health;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_EnergyLevel;                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_Reticle;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_TetheringIndicator;                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxHealthCache;                                    // 0x0378(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxEnergyCache;                                    // 0x037C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x48];                                     // 0x0380(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SignalDataTimerHandle;                             // 0x03C8(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FScoutDroneWidgetIdentifier>    HUDIdentifiers;                                    // 0x03D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	float GetTargetConfirmationTime();
	void OnDroneDismissAbilityUsed();
	void OnDroneEnergyChanged(float EnergyPercentage);
	void OnDroneHealthUpdated(float HealthPercentage, float CurrentHealth);
	void OnDroneInteractAbilityEnd();
	void OnDroneInteractAbilityUsed();
	void OnDroneMarkAbilityEnd();
	void OnDroneMarkAbilityUsed();
	void OnDronePickUpAbilityEnd();
	void OnDronePickUpAbilityUsed();
	void OnDronePickUpTargetsAvailable();
	void OnDronePickUpTargetsEmpty();
	void OnDroneSignalDataUpdated(float DistanceFromPlayer, float SignalPercentage);
	void OnDroneSpeedBoostAbilityEnd();
	void OnDroneSpeedBoostAbilityUsed();
	void OnOwningPlayerDamaged();
	void OnReticleChangeAbilityActivated(const struct FGameplayTag& UpdatedTag);
	void OnTargetingStatusChanged(const struct FScoutDroneStatusData& StatusData);

	class AFortScoutDrone* GetControlledDrone() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoutDroneHUD">();
	}
	static class UScoutDroneHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoutDroneHUD>();
	}
};
static_assert(alignof(UScoutDroneHUD) == 0x000008, "Wrong alignment on UScoutDroneHUD");
static_assert(sizeof(UScoutDroneHUD) == 0x0003E0, "Wrong size on UScoutDroneHUD");
static_assert(offsetof(UScoutDroneHUD, TimeToConfirmTargetCache) == 0x0002C0, "Member 'UScoutDroneHUD::TimeToConfirmTargetCache' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, InitialHealth) == 0x0002C4, "Member 'UScoutDroneHUD::InitialHealth' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, WarningRange) == 0x0002C8, "Member 'UScoutDroneHUD::WarningRange' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, SignalLossRange) == 0x0002F0, "Member 'UScoutDroneHUD::SignalLossRange' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, UpdateSignalInterval) == 0x000318, "Member 'UScoutDroneHUD::UpdateSignalInterval' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, MarkAbilityTag) == 0x000340, "Member 'UScoutDroneHUD::MarkAbilityTag' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, DismissAbilityTag) == 0x000344, "Member 'UScoutDroneHUD::DismissAbilityTag' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, InteractAbilityTag) == 0x000348, "Member 'UScoutDroneHUD::InteractAbilityTag' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, PickUpAbilityTag) == 0x00034C, "Member 'UScoutDroneHUD::PickUpAbilityTag' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, PickUpTargetsChangedTag) == 0x000350, "Member 'UScoutDroneHUD::PickUpTargetsChangedTag' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, SpeedBoostAbilityTag) == 0x000354, "Member 'UScoutDroneHUD::SpeedBoostAbilityTag' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, Overlay_Health) == 0x000358, "Member 'UScoutDroneHUD::Overlay_Health' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, Overlay_EnergyLevel) == 0x000360, "Member 'UScoutDroneHUD::Overlay_EnergyLevel' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, Overlay_Reticle) == 0x000368, "Member 'UScoutDroneHUD::Overlay_Reticle' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, Overlay_TetheringIndicator) == 0x000370, "Member 'UScoutDroneHUD::Overlay_TetheringIndicator' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, MaxHealthCache) == 0x000378, "Member 'UScoutDroneHUD::MaxHealthCache' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, MaxEnergyCache) == 0x00037C, "Member 'UScoutDroneHUD::MaxEnergyCache' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, SignalDataTimerHandle) == 0x0003C8, "Member 'UScoutDroneHUD::SignalDataTimerHandle' has a wrong offset!");
static_assert(offsetof(UScoutDroneHUD, HUDIdentifiers) == 0x0003D0, "Member 'UScoutDroneHUD::HUDIdentifiers' has a wrong offset!");

// Class ScoutDroneUI.ScoutDroneTetherIndicator
// 0x0020 (0x02E0 - 0x02C0)
class UScoutDroneTetherIndicator final : public UUserWidget
{
public:
	uint8                                         Pad_2C0[0x20];                                     // 0x02C0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnEnterSignalLossRange();
	void BP_OnEnterWarningRange();
	void BP_OnExitWarningRange();
	void BP_WhileInWarningRange(float SignalIntensityPercentage);

	class AFortScoutDrone* GetControlledDrone() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoutDroneTetherIndicator">();
	}
	static class UScoutDroneTetherIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoutDroneTetherIndicator>();
	}
};
static_assert(alignof(UScoutDroneTetherIndicator) == 0x000008, "Wrong alignment on UScoutDroneTetherIndicator");
static_assert(sizeof(UScoutDroneTetherIndicator) == 0x0002E0, "Wrong size on UScoutDroneTetherIndicator");

// Class ScoutDroneUI.ScoutDroneUIDirector
// 0x0020 (0x02D0 - 0x02B0)
class AScoutDroneUIDirector final : public ADynamicUIDirectorBase
{
public:
	struct FGameplayTagContainer                  HUDTagsToHide;                                     // 0x02B0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void BP_OnScoutDroneDeployed();
	void BP_OnScoutDroneDismissed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoutDroneUIDirector">();
	}
	static class AScoutDroneUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScoutDroneUIDirector>();
	}
};
static_assert(alignof(AScoutDroneUIDirector) == 0x000008, "Wrong alignment on AScoutDroneUIDirector");
static_assert(sizeof(AScoutDroneUIDirector) == 0x0002D0, "Wrong size on AScoutDroneUIDirector");
static_assert(offsetof(AScoutDroneUIDirector, HUDTagsToHide) == 0x0002B0, "Member 'AScoutDroneUIDirector::HUDTagsToHide' has a wrong offset!");

}

