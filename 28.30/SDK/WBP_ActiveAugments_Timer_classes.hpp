#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActiveAugments_Timer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PlayerAugmentsUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ActiveAugments_Timer.WBP_ActiveAugments_Timer_C
// 0x0058 (0x0380 - 0x0328)
class UWBP_ActiveAugments_Timer_C final : public UFortPlayerAugmentHUDTimerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Overlay_Active;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Offline;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_TimeRemaining;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              VisSwitcher_TimerState;                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Num_Pending_Augments_to_Grant;                     // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TimersFinishedForMatch;                            // 0x0354(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnNoAugLeftForSelection;                           // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Can_Select_Augment;                                // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 NumPendingToGrant)> OnNumAugPendingUpdated;                            // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_ActiveAugments_Timer(int32 EntryPoint);
	void OnAugmentGrantingTimersFinishedForMatch();
	void OnAugmentGrantingTimersResetForMatch();
	void OnNumPendingAugmentsToGrantUpdated(int32 NumPendingAugmentsToGrant);
	void OnTimerUpdated(float TimeRemaining, float TimePercentage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ActiveAugments_Timer_C">();
	}
	static class UWBP_ActiveAugments_Timer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ActiveAugments_Timer_C>();
	}
};
static_assert(alignof(UWBP_ActiveAugments_Timer_C) == 0x000008, "Wrong alignment on UWBP_ActiveAugments_Timer_C");
static_assert(sizeof(UWBP_ActiveAugments_Timer_C) == 0x000380, "Wrong size on UWBP_ActiveAugments_Timer_C");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, UberGraphFrame) == 0x000328, "Member 'UWBP_ActiveAugments_Timer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, Overlay_Active) == 0x000330, "Member 'UWBP_ActiveAugments_Timer_C::Overlay_Active' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, Overlay_Offline) == 0x000338, "Member 'UWBP_ActiveAugments_Timer_C::Overlay_Offline' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, Text_TimeRemaining) == 0x000340, "Member 'UWBP_ActiveAugments_Timer_C::Text_TimeRemaining' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, VisSwitcher_TimerState) == 0x000348, "Member 'UWBP_ActiveAugments_Timer_C::VisSwitcher_TimerState' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, Num_Pending_Augments_to_Grant) == 0x000350, "Member 'UWBP_ActiveAugments_Timer_C::Num_Pending_Augments_to_Grant' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, TimersFinishedForMatch) == 0x000354, "Member 'UWBP_ActiveAugments_Timer_C::TimersFinishedForMatch' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, OnNoAugLeftForSelection) == 0x000358, "Member 'UWBP_ActiveAugments_Timer_C::OnNoAugLeftForSelection' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, Can_Select_Augment) == 0x000368, "Member 'UWBP_ActiveAugments_Timer_C::Can_Select_Augment' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveAugments_Timer_C, OnNumAugPendingUpdated) == 0x000370, "Member 'UWBP_ActiveAugments_Timer_C::OnNumAugPendingUpdated' has a wrong offset!");

}

