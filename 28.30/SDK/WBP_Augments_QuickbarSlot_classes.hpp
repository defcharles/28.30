#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Augments_QuickbarSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C
// 0x00A8 (0x0368 - 0x02C0)
class UWBP_Augments_QuickbarSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_NextAugmentPulse_Scale;                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_NextAugmentPulse;                             // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_NextAugment;                                  // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Activate;                                     // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Arrow;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_AugmentIcon;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BorderGlow;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotBacking;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotBacking_1;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotBacking_Reflection;                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotIcon;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotIcon_1;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotPulse;                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmptySlotPulse_Scale;                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Glow;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_AugmentSlot;                               // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_EmptySlot;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NewVisuals;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_Slot;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortPlayerAugmentItemDefinition*       Augment_Data;                                      // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Augments_QuickbarSlot(int32 EntryPoint);
	void LoadAndSetIcon(TSoftObjectPtr<class UTexture2D> IconSoftReference);
	void OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D(class UObject* Loaded);
	void SetAsEmptySlot(bool IsNextAugment);
	void SetAsNewAugment(bool IsNewAugment);
	void SetAugmentInfo(class UFortPlayerAugmentItemDefinition* InAugmentData);
	void UpdateAugmentIcon(class UTexture* AugmentIcon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Augments_QuickbarSlot_C">();
	}
	static class UWBP_Augments_QuickbarSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Augments_QuickbarSlot_C>();
	}
};
static_assert(alignof(UWBP_Augments_QuickbarSlot_C) == 0x000008, "Wrong alignment on UWBP_Augments_QuickbarSlot_C");
static_assert(sizeof(UWBP_Augments_QuickbarSlot_C) == 0x000368, "Wrong size on UWBP_Augments_QuickbarSlot_C");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_Augments_QuickbarSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Anim_NextAugmentPulse_Scale) == 0x0002C8, "Member 'UWBP_Augments_QuickbarSlot_C::Anim_NextAugmentPulse_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Anim_NextAugmentPulse) == 0x0002D0, "Member 'UWBP_Augments_QuickbarSlot_C::Anim_NextAugmentPulse' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Anim_NextAugment) == 0x0002D8, "Member 'UWBP_Augments_QuickbarSlot_C::Anim_NextAugment' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Anim_Activate) == 0x0002E0, "Member 'UWBP_Augments_QuickbarSlot_C::Anim_Activate' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_Arrow) == 0x0002E8, "Member 'UWBP_Augments_QuickbarSlot_C::Image_Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_AugmentIcon) == 0x0002F0, "Member 'UWBP_Augments_QuickbarSlot_C::Image_AugmentIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_BorderGlow) == 0x0002F8, "Member 'UWBP_Augments_QuickbarSlot_C::Image_BorderGlow' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotBacking) == 0x000300, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotBacking' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotBacking_1) == 0x000308, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotBacking_1' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotBacking_Reflection) == 0x000310, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotBacking_Reflection' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotIcon) == 0x000318, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotIcon_1) == 0x000320, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotIcon_1' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotPulse) == 0x000328, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotPulse' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_EmptySlotPulse_Scale) == 0x000330, "Member 'UWBP_Augments_QuickbarSlot_C::Image_EmptySlotPulse_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Image_Glow) == 0x000338, "Member 'UWBP_Augments_QuickbarSlot_C::Image_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Overlay_AugmentSlot) == 0x000340, "Member 'UWBP_Augments_QuickbarSlot_C::Overlay_AugmentSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Overlay_EmptySlot) == 0x000348, "Member 'UWBP_Augments_QuickbarSlot_C::Overlay_EmptySlot' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Overlay_NewVisuals) == 0x000350, "Member 'UWBP_Augments_QuickbarSlot_C::Overlay_NewVisuals' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Switcher_Slot) == 0x000358, "Member 'UWBP_Augments_QuickbarSlot_C::Switcher_Slot' has a wrong offset!");
static_assert(offsetof(UWBP_Augments_QuickbarSlot_C, Augment_Data) == 0x000360, "Member 'UWBP_Augments_QuickbarSlot_C::Augment_Data' has a wrong offset!");

}

