#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SparksSong_PreviewDisplay

#include "Basic.hpp"

#include "SparksCosmeticsRuntime_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SparksSong_PreviewDisplay.B_SparksSong_PreviewDisplay_C
// 0x0068 (0x0310 - 0x02A8)
class AB_SparksSong_PreviewDisplay_C final : public ASparksSongPreviewActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_SparksSongPreviewer_C*             SongPreviewer;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperSpriteComponent*                  PaperSprite;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_AlbumCover;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AlbumCoverMID;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAthenaMusicPackItemDefinition*         MyMusicPack;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AFort_Entry_Music_Controller_BP_C*      MusicManagerPtr;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRetriggerNextMusicPack;                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    InputAbandon;                                      // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UAudioComponent*                        CurrentPreviewAudio;                               // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DebounceTimerHandle;                               // 0x0308(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DebounceEvent();
	void ExecuteUbergraph_B_SparksSong_PreviewDisplay(int32 EntryPoint);
	void OnSongTextureLoaded(class UTexture2D* CoverArt);
	void PerformSpecialAction(class FName ActionName);
	void StartSongPreview();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SparksSong_PreviewDisplay_C">();
	}
	static class AB_SparksSong_PreviewDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SparksSong_PreviewDisplay_C>();
	}
};
static_assert(alignof(AB_SparksSong_PreviewDisplay_C) == 0x000008, "Wrong alignment on AB_SparksSong_PreviewDisplay_C");
static_assert(sizeof(AB_SparksSong_PreviewDisplay_C) == 0x000310, "Wrong size on AB_SparksSong_PreviewDisplay_C");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, UberGraphFrame) == 0x0002A8, "Member 'AB_SparksSong_PreviewDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, SongPreviewer) == 0x0002B0, "Member 'AB_SparksSong_PreviewDisplay_C::SongPreviewer' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, PaperSprite) == 0x0002B8, "Member 'AB_SparksSong_PreviewDisplay_C::PaperSprite' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, SM_AlbumCover) == 0x0002C0, "Member 'AB_SparksSong_PreviewDisplay_C::SM_AlbumCover' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, Scene) == 0x0002C8, "Member 'AB_SparksSong_PreviewDisplay_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, AlbumCoverMID) == 0x0002D0, "Member 'AB_SparksSong_PreviewDisplay_C::AlbumCoverMID' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, MyMusicPack) == 0x0002D8, "Member 'AB_SparksSong_PreviewDisplay_C::MyMusicPack' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, MusicManagerPtr) == 0x0002E0, "Member 'AB_SparksSong_PreviewDisplay_C::MusicManagerPtr' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, CanRetriggerNextMusicPack) == 0x0002E8, "Member 'AB_SparksSong_PreviewDisplay_C::CanRetriggerNextMusicPack' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, InputAbandon) == 0x0002F0, "Member 'AB_SparksSong_PreviewDisplay_C::InputAbandon' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, CurrentPreviewAudio) == 0x000300, "Member 'AB_SparksSong_PreviewDisplay_C::CurrentPreviewAudio' has a wrong offset!");
static_assert(offsetof(AB_SparksSong_PreviewDisplay_C, DebounceTimerHandle) == 0x000308, "Member 'AB_SparksSong_PreviewDisplay_C::DebounceTimerHandle' has a wrong offset!");

}

