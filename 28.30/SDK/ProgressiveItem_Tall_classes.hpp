#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItem_Tall

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CrewUI_classes.hpp"
#include "Engine_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ProgressiveItem_Tall.ProgressiveItem_Tall_C
// 0x0140 (0x1670 - 0x1530)
class UProgressiveItem_Tall_C final : public UFortProgressiveSetTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverBurst;                                        // 0x1538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Deselected;                                        // 0x1540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x1548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x1550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_32;                                          // 0x1558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_86;                                          // 0x1560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CompletedCheck;                              // 0x1568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Dimmer;                                      // 0x1570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Frame;                                       // 0x1578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Gradient;                                    // 0x1580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         Image_Item;                                        // 0x1588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PriceBg;                                     // 0x1590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InspectionText;                            // 0x1598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_CheckDelay;                               // 0x15A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaItemShopReactiveTileText*        Text_Stages;                                       // 0x15A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_Subtitle;                                     // 0x15B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaItemShopReactiveTileText*        TileText_ItemName;                                 // 0x15B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETextJustify                                  TileTextJustification;                             // 0x15C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_15C1[0x7];                                     // 0x15C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Material;                                          // 0x15C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              In_Size;                                           // 0x15D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Extra_Space;                                       // 0x15E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Empty_text;                                        // 0x15E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsDisabled;                                        // 0x1600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasExtraLock;                                      // 0x1601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1602[0x6];                                     // 0x1602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressiveSetInfo                    SetInfo;                                           // 0x1608(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Subscribed;                                        // 0x1668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCompleted;                                       // 0x1669(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered_DesignTime;                                // 0x166A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Subbed_DesignTime;                                 // 0x166B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Completed_DesignTime;                              // 0x166C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x166D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnDeselected();
	void BP_OnHovered();
	void BP_OnInitializeSetInfo(const struct FProgressiveSetInfo& InSetInfo, const class FText& BottomText, const class FText& BottomSubtext, const bool bSubscribed);
	void BP_OnSelected();
	void BP_OnTileMaterialLoaded(const bool bSubscribed);
	void BP_OnUnhovered();
	void ExecuteUbergraph_ProgressiveItem_Tall(int32 EntryPoint);
	void Play_intro();
	void PreConstruct(bool IsDesignTime);
	void UpdateCompletedState();
	void UpdateSubscribedState(bool bInSubscribed);
	void UpdateVisualState(bool Selected_0, bool Subbed, bool Completed, bool Hovered_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProgressiveItem_Tall_C">();
	}
	static class UProgressiveItem_Tall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressiveItem_Tall_C>();
	}
};
static_assert(alignof(UProgressiveItem_Tall_C) == 0x000010, "Wrong alignment on UProgressiveItem_Tall_C");
static_assert(sizeof(UProgressiveItem_Tall_C) == 0x001670, "Wrong size on UProgressiveItem_Tall_C");
static_assert(offsetof(UProgressiveItem_Tall_C, UberGraphFrame) == 0x001530, "Member 'UProgressiveItem_Tall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, HoverBurst) == 0x001538, "Member 'UProgressiveItem_Tall_C::HoverBurst' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Deselected) == 0x001540, "Member 'UProgressiveItem_Tall_C::Deselected' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Selected) == 0x001548, "Member 'UProgressiveItem_Tall_C::Selected' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image) == 0x001550, "Member 'UProgressiveItem_Tall_C::Image' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_32) == 0x001558, "Member 'UProgressiveItem_Tall_C::Image_32' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_86) == 0x001560, "Member 'UProgressiveItem_Tall_C::Image_86' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_CompletedCheck) == 0x001568, "Member 'UProgressiveItem_Tall_C::Image_CompletedCheck' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Dimmer) == 0x001570, "Member 'UProgressiveItem_Tall_C::Image_Dimmer' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Frame) == 0x001578, "Member 'UProgressiveItem_Tall_C::Image_Frame' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Gradient) == 0x001580, "Member 'UProgressiveItem_Tall_C::Image_Gradient' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Item) == 0x001588, "Member 'UProgressiveItem_Tall_C::Image_Item' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_PriceBg) == 0x001590, "Member 'UProgressiveItem_Tall_C::Image_PriceBg' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Overlay_InspectionText) == 0x001598, "Member 'UProgressiveItem_Tall_C::Overlay_InspectionText' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Switcher_CheckDelay) == 0x0015A0, "Member 'UProgressiveItem_Tall_C::Switcher_CheckDelay' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Text_Stages) == 0x0015A8, "Member 'UProgressiveItem_Tall_C::Text_Stages' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Text_Subtitle) == 0x0015B0, "Member 'UProgressiveItem_Tall_C::Text_Subtitle' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, TileText_ItemName) == 0x0015B8, "Member 'UProgressiveItem_Tall_C::TileText_ItemName' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, TileTextJustification) == 0x0015C0, "Member 'UProgressiveItem_Tall_C::TileTextJustification' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Material) == 0x0015C8, "Member 'UProgressiveItem_Tall_C::Material' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, In_Size) == 0x0015D0, "Member 'UProgressiveItem_Tall_C::In_Size' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Extra_Space) == 0x0015E0, "Member 'UProgressiveItem_Tall_C::Extra_Space' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Empty_text) == 0x0015E8, "Member 'UProgressiveItem_Tall_C::Empty_text' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, IsDisabled) == 0x001600, "Member 'UProgressiveItem_Tall_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, HasExtraLock) == 0x001601, "Member 'UProgressiveItem_Tall_C::HasExtraLock' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, SetInfo) == 0x001608, "Member 'UProgressiveItem_Tall_C::SetInfo' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Subscribed) == 0x001668, "Member 'UProgressiveItem_Tall_C::Subscribed' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, IsCompleted) == 0x001669, "Member 'UProgressiveItem_Tall_C::IsCompleted' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Hovered_DesignTime) == 0x00166A, "Member 'UProgressiveItem_Tall_C::Hovered_DesignTime' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Subbed_DesignTime) == 0x00166B, "Member 'UProgressiveItem_Tall_C::Subbed_DesignTime' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Completed_DesignTime) == 0x00166C, "Member 'UProgressiveItem_Tall_C::Completed_DesignTime' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Hovered) == 0x00166D, "Member 'UProgressiveItem_Tall_C::Hovered' has a wrong offset!");

}

