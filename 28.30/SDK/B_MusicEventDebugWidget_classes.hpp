#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MusicEventDebugWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass B_MusicEventDebugWidget.B_MusicEventDebugWidget_C
// 0x0040 (0x0300 - 0x02C0)
class UB_MusicEventDebugWidget_C final : public UMusicEventSubsystemDebugWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        Background;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonListView*                        EventInstances;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 AssetFilter;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UMusicEventInstance*>            Instances;                                         // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         FontSize;                                          // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_MusicEventDebugWidget(int32 EntryPoint);
	void FilterInstances();
	void SetEventInstances(const TArray<class UMusicEventInstance*>& Instances_0);
	void SetMusicEventAssetFilter(const class FString& Filter);
	void SetMusicEventFontSize(int32 Size);
	void SetMusicEventPos(double X, double Y);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MusicEventDebugWidget_C">();
	}
	static class UB_MusicEventDebugWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MusicEventDebugWidget_C>();
	}
};
static_assert(alignof(UB_MusicEventDebugWidget_C) == 0x000008, "Wrong alignment on UB_MusicEventDebugWidget_C");
static_assert(sizeof(UB_MusicEventDebugWidget_C) == 0x000300, "Wrong size on UB_MusicEventDebugWidget_C");
static_assert(offsetof(UB_MusicEventDebugWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UB_MusicEventDebugWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_MusicEventDebugWidget_C, Background) == 0x0002C8, "Member 'UB_MusicEventDebugWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UB_MusicEventDebugWidget_C, EventInstances) == 0x0002D0, "Member 'UB_MusicEventDebugWidget_C::EventInstances' has a wrong offset!");
static_assert(offsetof(UB_MusicEventDebugWidget_C, AssetFilter) == 0x0002D8, "Member 'UB_MusicEventDebugWidget_C::AssetFilter' has a wrong offset!");
static_assert(offsetof(UB_MusicEventDebugWidget_C, Instances) == 0x0002E8, "Member 'UB_MusicEventDebugWidget_C::Instances' has a wrong offset!");
static_assert(offsetof(UB_MusicEventDebugWidget_C, FontSize) == 0x0002F8, "Member 'UB_MusicEventDebugWidget_C::FontSize' has a wrong offset!");

}

