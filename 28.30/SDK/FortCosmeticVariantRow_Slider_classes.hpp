#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortCosmeticVariantRow_Slider

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FortCosmeticVariantRow_Slider.FortCosmeticVariantRow_Slider_C
// 0x0048 (0x0330 - 0x02E8)
class UFortCosmeticVariantRow_Slider_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       Text_VariantName;                                  // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UFortVariantSliderChannelVM*            FortVariantSliderChannelVM;                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UOverlay*                               Panel_Value;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           Progress;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          Slider_Value;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Value;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        PendingCommitValue;                                // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CommitHoldTime;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__FortCosmeticVariantRow_Slider_Slider_Value_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void CommitSliderValue();
	void ExecuteUbergraph_FortCosmeticVariantRow_Slider(int32 EntryPoint);
	void SetFortVariantSliderChannelVM(class UFortVariantSliderChannelVM* ViewModel);
	void UpdateSliderValue(double InFloatValue);

	void GetDesiredFocusTarget(class UWidget** FocusTarget) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FortCosmeticVariantRow_Slider_C">();
	}
	static class UFortCosmeticVariantRow_Slider_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCosmeticVariantRow_Slider_C>();
	}
};
static_assert(alignof(UFortCosmeticVariantRow_Slider_C) == 0x000008, "Wrong alignment on UFortCosmeticVariantRow_Slider_C");
static_assert(sizeof(UFortCosmeticVariantRow_Slider_C) == 0x000330, "Wrong size on UFortCosmeticVariantRow_Slider_C");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, UberGraphFrame) == 0x0002E8, "Member 'UFortCosmeticVariantRow_Slider_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, Text_VariantName) == 0x0002F0, "Member 'UFortCosmeticVariantRow_Slider_C::Text_VariantName' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, FortVariantSliderChannelVM) == 0x0002F8, "Member 'UFortCosmeticVariantRow_Slider_C::FortVariantSliderChannelVM' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, Panel_Value) == 0x000300, "Member 'UFortCosmeticVariantRow_Slider_C::Panel_Value' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, Progress) == 0x000308, "Member 'UFortCosmeticVariantRow_Slider_C::Progress' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, Slider_Value) == 0x000310, "Member 'UFortCosmeticVariantRow_Slider_C::Slider_Value' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, Text_Value) == 0x000318, "Member 'UFortCosmeticVariantRow_Slider_C::Text_Value' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, PendingCommitValue) == 0x000320, "Member 'UFortCosmeticVariantRow_Slider_C::PendingCommitValue' has a wrong offset!");
static_assert(offsetof(UFortCosmeticVariantRow_Slider_C, CommitHoldTime) == 0x000328, "Member 'UFortCosmeticVariantRow_Slider_C::CommitHoldTime' has a wrong offset!");

}

