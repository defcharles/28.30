#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayAbilities_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "EntityCore_classes.hpp"
#include "AnimPresetsRuntime_structs.hpp"
#include "FortniteAI_structs.hpp"
#include "FortniteAI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "VerseFortnite_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "VerseGameplayTags_classes.hpp"


namespace SDK
{

// Class VerseFortnite.VerseActorPayloadWrapper
// 0x0008 (0x0298 - 0x0290)
class AVerseActorPayloadWrapper final : public AActor
{
public:
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseActorPayloadWrapper">();
	}
	static class AVerseActorPayloadWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVerseActorPayloadWrapper>();
	}
};
static_assert(alignof(AVerseActorPayloadWrapper) == 0x000008, "Wrong alignment on AVerseActorPayloadWrapper");
static_assert(sizeof(AVerseActorPayloadWrapper) == 0x000298, "Wrong size on AVerseActorPayloadWrapper");

// Class VerseFortnite.GameplayAbility_PlayAnim
// 0x0008 (0x03C0 - 0x03B8)
class UGameplayAbility_PlayAnim final : public UGameplayAbility
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBlendIn();
	void OnBlendOut();
	void OnCancelled();
	void OnCompleted();
	void OnInterrupted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayAbility_PlayAnim">();
	}
	static class UGameplayAbility_PlayAnim* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayAbility_PlayAnim>();
	}
};
static_assert(alignof(UGameplayAbility_PlayAnim) == 0x000008, "Wrong alignment on UGameplayAbility_PlayAnim");
static_assert(sizeof(UGameplayAbility_PlayAnim) == 0x0003C0, "Wrong size on UGameplayAbility_PlayAnim");

// Class VerseFortnite.NPCCharacterModifier
// 0x0000 (0x0028 - 0x0028)
class UNPCCharacterModifier : public UObject
{
public:
	void BP_ModifySpawnComponentList(class UFortAthenaAISpawnerDataComponentList* OutList, class UObject* ComponentOuter);
	void BP_OnPreSpawned(class AFortPawn* Pawn);
	void BP_OnSpawned(class AFortPawn* Pawn);

	EDataValidationResult BP_IsDataValid(TArray<class FText>* OutErrorMessages) const;
	bool BP_IsNeededForPreview() const;
	class UNPCCharacterDefinition* GetCharacterDefinition() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier">();
	}
	static class UNPCCharacterModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier>();
	}
};
static_assert(alignof(UNPCCharacterModifier) == 0x000008, "Wrong alignment on UNPCCharacterModifier");
static_assert(sizeof(UNPCCharacterModifier) == 0x000028, "Wrong size on UNPCCharacterModifier");

// Class VerseFortnite.NPCCharacterModifier_Verse
// 0x0000 (0x0028 - 0x0028)
class UNPCCharacterModifier_Verse : public UNPCCharacterModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Verse">();
	}
	static class UNPCCharacterModifier_Verse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Verse>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Verse) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Verse");
static_assert(sizeof(UNPCCharacterModifier_Verse) == 0x000028, "Wrong size on UNPCCharacterModifier_Verse");

// Class VerseFortnite.AIComponent
// 0x0018 (0x0070 - 0x0058)
class UAIComponent : public UEntityComponent
{
public:
	class AFortPawn*                              CachedPawn;                                        // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AAIController*                          CachedAIController;                                // 0x0060(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AIComponent">();
	}
	static class UAIComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIComponent>();
	}
};
static_assert(alignof(UAIComponent) == 0x000008, "Wrong alignment on UAIComponent");
static_assert(sizeof(UAIComponent) == 0x000070, "Wrong size on UAIComponent");
static_assert(offsetof(UAIComponent, CachedPawn) == 0x000058, "Member 'UAIComponent::CachedPawn' has a wrong offset!");
static_assert(offsetof(UAIComponent, CachedAIController) == 0x000060, "Member 'UAIComponent::CachedAIController' has a wrong offset!");

// Class VerseFortnite.AIActionsComponent
// 0x0020 (0x0090 - 0x0070)
class UAIActionsComponent : public UAIComponent
{
public:
	uint8                                         Pad_70[0x20];                                      // 0x0070(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AIActionsComponent">();
	}
	static class UAIActionsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIActionsComponent>();
	}
};
static_assert(alignof(UAIActionsComponent) == 0x000008, "Wrong alignment on UAIActionsComponent");
static_assert(sizeof(UAIActionsComponent) == 0x000090, "Wrong size on UAIActionsComponent");

// Class VerseFortnite.AIAnimationComponent
// 0x0018 (0x00A8 - 0x0090)
class UAIAnimationComponent : public UAIActionsComponent
{
public:
	uint8                                         Pad_90[0x8];                                       // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayAbility_PlayAnim>  PlayAnimGameplayAbility;                           // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   DefaultSlot;                                       // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AIAnimationComponent">();
	}
	static class UAIAnimationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIAnimationComponent>();
	}
};
static_assert(alignof(UAIAnimationComponent) == 0x000008, "Wrong alignment on UAIAnimationComponent");
static_assert(sizeof(UAIAnimationComponent) == 0x0000A8, "Wrong size on UAIAnimationComponent");
static_assert(offsetof(UAIAnimationComponent, PlayAnimGameplayAbility) == 0x000098, "Member 'UAIAnimationComponent::PlayAnimGameplayAbility' has a wrong offset!");
static_assert(offsetof(UAIAnimationComponent, DefaultSlot) == 0x0000A0, "Member 'UAIAnimationComponent::DefaultSlot' has a wrong offset!");

// Class VerseFortnite.PlayAnimationGlobals
// 0x0000 (0x0028 - 0x0028)
class UPlayAnimationGlobals final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayAnimationGlobals">();
	}
	static class UPlayAnimationGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayAnimationGlobals>();
	}
};
static_assert(alignof(UPlayAnimationGlobals) == 0x000008, "Wrong alignment on UPlayAnimationGlobals");
static_assert(sizeof(UPlayAnimationGlobals) == 0x000028, "Wrong size on UPlayAnimationGlobals");

// Class VerseFortnite.PlayAnimationPlayPayload
// 0x0028 (0x0050 - 0x0028)
class UPlayAnimationPlayPayload final : public UObject
{
public:
	class UAnimSequence*                          Animation;                                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartPosition;                                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInTime;                                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Slot;                                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayAnimationPlayPayload">();
	}
	static class UPlayAnimationPlayPayload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayAnimationPlayPayload>();
	}
};
static_assert(alignof(UPlayAnimationPlayPayload) == 0x000008, "Wrong alignment on UPlayAnimationPlayPayload");
static_assert(sizeof(UPlayAnimationPlayPayload) == 0x000050, "Wrong size on UPlayAnimationPlayPayload");
static_assert(offsetof(UPlayAnimationPlayPayload, Animation) == 0x000028, "Member 'UPlayAnimationPlayPayload::Animation' has a wrong offset!");
static_assert(offsetof(UPlayAnimationPlayPayload, PlayRate) == 0x000030, "Member 'UPlayAnimationPlayPayload::PlayRate' has a wrong offset!");
static_assert(offsetof(UPlayAnimationPlayPayload, StartPosition) == 0x000034, "Member 'UPlayAnimationPlayPayload::StartPosition' has a wrong offset!");
static_assert(offsetof(UPlayAnimationPlayPayload, BlendInTime) == 0x000038, "Member 'UPlayAnimationPlayPayload::BlendInTime' has a wrong offset!");
static_assert(offsetof(UPlayAnimationPlayPayload, BlendOutTime) == 0x00003C, "Member 'UPlayAnimationPlayPayload::BlendOutTime' has a wrong offset!");
static_assert(offsetof(UPlayAnimationPlayPayload, Slot) == 0x000040, "Member 'UPlayAnimationPlayPayload::Slot' has a wrong offset!");

// Class VerseFortnite.VerseFortniteBRTeamCollection
// 0x0068 (0x0090 - 0x0028)
class UVerseFortniteBRTeamCollection : public UObject
{
public:
	uint8                                         Pad_28[0x68];                                      // 0x0028(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActiveTeamArrayBuilt();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteBRTeamCollection">();
	}
	static class UVerseFortniteBRTeamCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteBRTeamCollection>();
	}
};
static_assert(alignof(UVerseFortniteBRTeamCollection) == 0x000008, "Wrong alignment on UVerseFortniteBRTeamCollection");
static_assert(sizeof(UVerseFortniteBRTeamCollection) == 0x000090, "Wrong size on UVerseFortniteBRTeamCollection");

// Class VerseFortnite.VerseFortniteMinigameTeamCollection
// 0x0020 (0x0048 - 0x0028)
class UVerseFortniteMinigameTeamCollection : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMinigameDestroyed(class AActor* DestroyedMinigame);
	void OnMinigameSetup(class AFortMinigame* InMinigame);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteMinigameTeamCollection">();
	}
	static class UVerseFortniteMinigameTeamCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteMinigameTeamCollection>();
	}
};
static_assert(alignof(UVerseFortniteMinigameTeamCollection) == 0x000008, "Wrong alignment on UVerseFortniteMinigameTeamCollection");
static_assert(sizeof(UVerseFortniteMinigameTeamCollection) == 0x000048, "Wrong size on UVerseFortniteMinigameTeamCollection");

// Class VerseFortnite.AIActionsHandlerComponent
// 0x0040 (0x00E0 - 0x00A0)
class UAIActionsHandlerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x40];                                      // 0x00A0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AIActionsHandlerComponent">();
	}
	static class UAIActionsHandlerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIActionsHandlerComponent>();
	}
};
static_assert(alignof(UAIActionsHandlerComponent) == 0x000008, "Wrong alignment on UAIActionsHandlerComponent");
static_assert(sizeof(UAIActionsHandlerComponent) == 0x0000E0, "Wrong size on UAIActionsHandlerComponent");

// Class VerseFortnite.FortAthenaAISpawnerDataComponent_Verse
// 0x0030 (0x0060 - 0x0030)
class UFortAthenaAISpawnerDataComponent_Verse final : public UFortAthenaAISpawnerDataComponent_ScriptBase
{
public:
	TArray<TSubclassOf<class UEntityComponent>>   EntityComponents;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UAIComponent*>                   AIComponents;                                      // 0x0040(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UNPCBehaviorScript*                     NPCBehaviorScriptInstance;                         // 0x0050(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UNPCBehaviorScript>      NPCBehaviorScript;                                 // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void AddUniqueEntityComponent(TSubclassOf<class UEntityComponent> EntityComponent);
	void SetNPCBehaviorScript(class UNPCBehaviorScript* InAIBehaviorScript);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaAISpawnerDataComponent_Verse">();
	}
	static class UFortAthenaAISpawnerDataComponent_Verse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAthenaAISpawnerDataComponent_Verse>();
	}
};
static_assert(alignof(UFortAthenaAISpawnerDataComponent_Verse) == 0x000008, "Wrong alignment on UFortAthenaAISpawnerDataComponent_Verse");
static_assert(sizeof(UFortAthenaAISpawnerDataComponent_Verse) == 0x000060, "Wrong size on UFortAthenaAISpawnerDataComponent_Verse");
static_assert(offsetof(UFortAthenaAISpawnerDataComponent_Verse, EntityComponents) == 0x000030, "Member 'UFortAthenaAISpawnerDataComponent_Verse::EntityComponents' has a wrong offset!");
static_assert(offsetof(UFortAthenaAISpawnerDataComponent_Verse, AIComponents) == 0x000040, "Member 'UFortAthenaAISpawnerDataComponent_Verse::AIComponents' has a wrong offset!");
static_assert(offsetof(UFortAthenaAISpawnerDataComponent_Verse, NPCBehaviorScriptInstance) == 0x000050, "Member 'UFortAthenaAISpawnerDataComponent_Verse::NPCBehaviorScriptInstance' has a wrong offset!");
static_assert(offsetof(UFortAthenaAISpawnerDataComponent_Verse, NPCBehaviorScript) == 0x000058, "Member 'UFortAthenaAISpawnerDataComponent_Verse::NPCBehaviorScript' has a wrong offset!");

// Class VerseFortnite.NPCBehaviorScript
// 0x0000 (0x0070 - 0x0070)
class UNPCBehaviorScript : public UAIComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCBehaviorScript">();
	}
	static class UNPCBehaviorScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCBehaviorScript>();
	}
};
static_assert(alignof(UNPCBehaviorScript) == 0x000008, "Wrong alignment on UNPCBehaviorScript");
static_assert(sizeof(UNPCBehaviorScript) == 0x000070, "Wrong size on UNPCBehaviorScript");

// Class VerseFortnite.LoadNPCCharacterDefinitionAsyncBase
// 0x0040 (0x0070 - 0x0030)
class ULoadNPCCharacterDefinitionAsyncBase : public UBlueprintAsyncActionBase
{
public:
	TWeakObjectPtr<class UNPCCharacterDefinition> LoadedCharacterDefinition;                         // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObject>                 ContextObject;                                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNPCCharacterModifier*>          StoredAdditionalModifiers;                         // 0x0040(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UNPCCharacterDefinition> StoredCharacterDefinition;                         // 0x0050(0x0020)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadNPCCharacterDefinitionAsyncBase">();
	}
	static class ULoadNPCCharacterDefinitionAsyncBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadNPCCharacterDefinitionAsyncBase>();
	}
};
static_assert(alignof(ULoadNPCCharacterDefinitionAsyncBase) == 0x000008, "Wrong alignment on ULoadNPCCharacterDefinitionAsyncBase");
static_assert(sizeof(ULoadNPCCharacterDefinitionAsyncBase) == 0x000070, "Wrong size on ULoadNPCCharacterDefinitionAsyncBase");
static_assert(offsetof(ULoadNPCCharacterDefinitionAsyncBase, LoadedCharacterDefinition) == 0x000030, "Member 'ULoadNPCCharacterDefinitionAsyncBase::LoadedCharacterDefinition' has a wrong offset!");
static_assert(offsetof(ULoadNPCCharacterDefinitionAsyncBase, ContextObject) == 0x000038, "Member 'ULoadNPCCharacterDefinitionAsyncBase::ContextObject' has a wrong offset!");
static_assert(offsetof(ULoadNPCCharacterDefinitionAsyncBase, StoredAdditionalModifiers) == 0x000040, "Member 'ULoadNPCCharacterDefinitionAsyncBase::StoredAdditionalModifiers' has a wrong offset!");
static_assert(offsetof(ULoadNPCCharacterDefinitionAsyncBase, StoredCharacterDefinition) == 0x000050, "Member 'ULoadNPCCharacterDefinitionAsyncBase::StoredCharacterDefinition' has a wrong offset!");

// Class VerseFortnite.LoadNPCCharacterDefinitionAsync
// 0x0010 (0x0080 - 0x0070)
class ULoadNPCCharacterDefinitionAsync final : public ULoadNPCCharacterDefinitionAsyncBase
{
public:
	TMulticastInlineDelegate<void(class UNPCCharacterDefinition* CharacterDefinition)> OnLoaded;                                          // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class ULoadNPCCharacterDefinitionAsync* LoadCharacterDefinitionAsync(class UObject* ContextObj, TSoftObjectPtr<class UNPCCharacterDefinition> CharacterDefinition, const TArray<class UNPCCharacterModifier*>& AdditionalModifiers);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadNPCCharacterDefinitionAsync">();
	}
	static class ULoadNPCCharacterDefinitionAsync* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadNPCCharacterDefinitionAsync>();
	}
};
static_assert(alignof(ULoadNPCCharacterDefinitionAsync) == 0x000008, "Wrong alignment on ULoadNPCCharacterDefinitionAsync");
static_assert(sizeof(ULoadNPCCharacterDefinitionAsync) == 0x000080, "Wrong size on ULoadNPCCharacterDefinitionAsync");
static_assert(offsetof(ULoadNPCCharacterDefinitionAsync, OnLoaded) == 0x000070, "Member 'ULoadNPCCharacterDefinitionAsync::OnLoaded' has a wrong offset!");

// Class VerseFortnite.LoadAndCreateComponentListAsync
// 0x0020 (0x0090 - 0x0070)
class ULoadAndCreateComponentListAsync final : public ULoadNPCCharacterDefinitionAsyncBase
{
public:
	TMulticastInlineDelegate<void(class UNPCCharacterDefinition* CharacterDefinition, class UFortAthenaAISpawnerDataComponentList* ComponentsList)> OnFinished;                                        // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortAthenaAISpawnerDataComponentList> ComponentsList;                                    // 0x0080(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStoredForPreview;                                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoadAndCreateComponentListAsync* LoadAndCreateComponentListAsync(class UObject* ContextObj, TSoftObjectPtr<class UNPCCharacterDefinition> CharacterDefinition, const TArray<class UNPCCharacterModifier*>& AdditionalModifiers, const bool bForPreview);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadAndCreateComponentListAsync">();
	}
	static class ULoadAndCreateComponentListAsync* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadAndCreateComponentListAsync>();
	}
};
static_assert(alignof(ULoadAndCreateComponentListAsync) == 0x000008, "Wrong alignment on ULoadAndCreateComponentListAsync");
static_assert(sizeof(ULoadAndCreateComponentListAsync) == 0x000090, "Wrong size on ULoadAndCreateComponentListAsync");
static_assert(offsetof(ULoadAndCreateComponentListAsync, OnFinished) == 0x000070, "Member 'ULoadAndCreateComponentListAsync::OnFinished' has a wrong offset!");
static_assert(offsetof(ULoadAndCreateComponentListAsync, ComponentsList) == 0x000080, "Member 'ULoadAndCreateComponentListAsync::ComponentsList' has a wrong offset!");
static_assert(offsetof(ULoadAndCreateComponentListAsync, bStoredForPreview) == 0x000088, "Member 'ULoadAndCreateComponentListAsync::bStoredForPreview' has a wrong offset!");

// Class VerseFortnite.NPCCharacterDefinition
// 0x0040 (0x0178 - 0x0138)
class UNPCCharacterDefinition final : public UFortAIPawnCustomizationDefinition
{
public:
	TMulticastInlineDelegate<void(class UNPCCharacterModifier* Modifier)> OnCharacterModifierModified;                       // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class UNPCCharacterType* Type)> OnCharacterTypeModified;                           // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UNPCCharacterType*                      Type;                                              // 0x0158(0x0008)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNPCCharacterModifier_Behavior*         Behavior;                                          // 0x0160(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UNPCCharacterModifier*>          Modifiers;                                         // 0x0168(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, NoClear, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	class UFortAthenaAISpawnerDataComponentList* CreateComponentList(class UObject* Outer_0, const TArray<class UNPCCharacterModifier*>& AdditionalModifiers, const bool bForPreview) const;
	TSubclassOf<class AActor> GetCharacterBlueprint(const TArray<class UNPCCharacterModifier*>& AdditionalModifiers) const;
	const class UAthenaCharacterItemDefinition* GetCharacterCID(class UObject* Outer_0, const TArray<class UNPCCharacterModifier*>& AdditionalModifiers) const;
	void GetPreviewMesh(class UObject* Outer_0, const TArray<class UNPCCharacterModifier*>& AdditionalModifiers, TArray<struct FCharacterPreviewMesh>* OutCharacterPreviewMeshes, class APawn** OutDefaultPawn) const;
	void GetRequiredAssets(TArray<struct FSoftObjectPath>* OutAssets) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterDefinition">();
	}
	static class UNPCCharacterDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterDefinition>();
	}
};
static_assert(alignof(UNPCCharacterDefinition) == 0x000008, "Wrong alignment on UNPCCharacterDefinition");
static_assert(sizeof(UNPCCharacterDefinition) == 0x000178, "Wrong size on UNPCCharacterDefinition");
static_assert(offsetof(UNPCCharacterDefinition, OnCharacterModifierModified) == 0x000138, "Member 'UNPCCharacterDefinition::OnCharacterModifierModified' has a wrong offset!");
static_assert(offsetof(UNPCCharacterDefinition, OnCharacterTypeModified) == 0x000148, "Member 'UNPCCharacterDefinition::OnCharacterTypeModified' has a wrong offset!");
static_assert(offsetof(UNPCCharacterDefinition, Type) == 0x000158, "Member 'UNPCCharacterDefinition::Type' has a wrong offset!");
static_assert(offsetof(UNPCCharacterDefinition, Behavior) == 0x000160, "Member 'UNPCCharacterDefinition::Behavior' has a wrong offset!");
static_assert(offsetof(UNPCCharacterDefinition, Modifiers) == 0x000168, "Member 'UNPCCharacterDefinition::Modifiers' has a wrong offset!");

// Class VerseFortnite.NPCCharacterDefinitionComponent
// 0x0030 (0x0150 - 0x0120)
class UNPCCharacterDefinitionComponent final : public UFortUserOptionContainerComponent
{
public:
	TSoftObjectPtr<class UNPCCharacterDefinition> NPCCharacterDefinition;                            // 0x0120(0x0020)(Edit, Net, SaveGame, NoClear, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNPCCharacterModifier*>          NPCCharacterModifiers;                             // 0x0140(0x0010)(Edit, ExportObject, Net, ZeroConstructor, SaveGame, NoClear, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void OnNPCCharacterTypeChanged();
	void SetNPCCharacterDefinition(TSoftObjectPtr<class UNPCCharacterDefinition> Definition);

	TSoftObjectPtr<class UNPCCharacterDefinition> GetNPCCharacterDefinition() const;
	const TArray<class UNPCCharacterModifier*> GetNPCCharacterModifiers() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterDefinitionComponent">();
	}
	static class UNPCCharacterDefinitionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterDefinitionComponent>();
	}
};
static_assert(alignof(UNPCCharacterDefinitionComponent) == 0x000008, "Wrong alignment on UNPCCharacterDefinitionComponent");
static_assert(sizeof(UNPCCharacterDefinitionComponent) == 0x000150, "Wrong size on UNPCCharacterDefinitionComponent");
static_assert(offsetof(UNPCCharacterDefinitionComponent, NPCCharacterDefinition) == 0x000120, "Member 'UNPCCharacterDefinitionComponent::NPCCharacterDefinition' has a wrong offset!");
static_assert(offsetof(UNPCCharacterDefinitionComponent, NPCCharacterModifiers) == 0x000140, "Member 'UNPCCharacterDefinitionComponent::NPCCharacterModifiers' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_Behavior
// 0x0000 (0x0028 - 0x0028)
class UNPCCharacterModifier_Behavior : public UNPCCharacterModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Behavior">();
	}
	static class UNPCCharacterModifier_Behavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Behavior>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Behavior) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Behavior");
static_assert(sizeof(UNPCCharacterModifier_Behavior) == 0x000028, "Wrong size on UNPCCharacterModifier_Behavior");

// Class VerseFortnite.NPCCharacterModifier_CosmeticSpawn
// 0x00E8 (0x0110 - 0x0028)
class UNPCCharacterModifier_CosmeticSpawn final : public UNPCCharacterModifier
{
public:
	ECharacterLook                                CharacterLook;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAthenaCharacterItemDefinition> CharacterCosmetic;                                 // 0x0030(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CharacterCosmeticAssetId;                          // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   CharacterBlueprint;                                // 0x0060(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ENPCCharacterMovement                         CharacterMovement;                                 // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   AnimPreset;                                        // 0x0088(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnimPresetRetargetData                Retargeter;                                        // 0x00A8(0x0040)(Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UIKRetargeter>           IKRetargeter;                                      // 0x00E8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bSupportAnimPreset : 1;                            // 0x0108(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSupportCharacterMovement : 1;                     // 0x0108(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TSoftObjectPtr<class UAthenaCharacterItemDefinition> GetCharacterCosmetic() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_CosmeticSpawn">();
	}
	static class UNPCCharacterModifier_CosmeticSpawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_CosmeticSpawn>();
	}
};
static_assert(alignof(UNPCCharacterModifier_CosmeticSpawn) == 0x000008, "Wrong alignment on UNPCCharacterModifier_CosmeticSpawn");
static_assert(sizeof(UNPCCharacterModifier_CosmeticSpawn) == 0x000110, "Wrong size on UNPCCharacterModifier_CosmeticSpawn");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, CharacterLook) == 0x000028, "Member 'UNPCCharacterModifier_CosmeticSpawn::CharacterLook' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, CharacterCosmetic) == 0x000030, "Member 'UNPCCharacterModifier_CosmeticSpawn::CharacterCosmetic' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, CharacterCosmeticAssetId) == 0x000050, "Member 'UNPCCharacterModifier_CosmeticSpawn::CharacterCosmeticAssetId' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, CharacterBlueprint) == 0x000060, "Member 'UNPCCharacterModifier_CosmeticSpawn::CharacterBlueprint' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, CharacterMovement) == 0x000080, "Member 'UNPCCharacterModifier_CosmeticSpawn::CharacterMovement' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, AnimPreset) == 0x000088, "Member 'UNPCCharacterModifier_CosmeticSpawn::AnimPreset' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, Retargeter) == 0x0000A8, "Member 'UNPCCharacterModifier_CosmeticSpawn::Retargeter' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_CosmeticSpawn, IKRetargeter) == 0x0000E8, "Member 'UNPCCharacterModifier_CosmeticSpawn::IKRetargeter' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_Effects
// 0x0000 (0x0028 - 0x0028)
class UNPCCharacterModifier_Effects final : public UNPCCharacterModifier
{
public:
	TArray<struct FNPCCustomEffect> GetCustomEffects() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Effects">();
	}
	static class UNPCCharacterModifier_Effects* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Effects>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Effects) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Effects");
static_assert(sizeof(UNPCCharacterModifier_Effects) == 0x000028, "Wrong size on UNPCCharacterModifier_Effects");

// Class VerseFortnite.NPCCharacterModifier_Emotes
// 0x0010 (0x0038 - 0x0028)
class UNPCCharacterModifier_Emotes final : public UNPCCharacterModifier
{
public:
	TArray<struct FCharacterModifierEmote>        Emotes;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Emotes">();
	}
	static class UNPCCharacterModifier_Emotes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Emotes>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Emotes) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Emotes");
static_assert(sizeof(UNPCCharacterModifier_Emotes) == 0x000038, "Wrong size on UNPCCharacterModifier_Emotes");
static_assert(offsetof(UNPCCharacterModifier_Emotes, Emotes) == 0x000028, "Member 'UNPCCharacterModifier_Emotes::Emotes' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_Inventory
// 0x0030 (0x0058 - 0x0028)
class UNPCCharacterModifier_Inventory final : public UNPCCharacterModifier
{
public:
	TArray<struct FCharacterModifierInventoryItem> Items;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  SupportedItemTags;                                 // 0x0038(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Inventory">();
	}
	static class UNPCCharacterModifier_Inventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Inventory>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Inventory) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Inventory");
static_assert(sizeof(UNPCCharacterModifier_Inventory) == 0x000058, "Wrong size on UNPCCharacterModifier_Inventory");
static_assert(offsetof(UNPCCharacterModifier_Inventory, Items) == 0x000028, "Member 'UNPCCharacterModifier_Inventory::Items' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_Inventory, SupportedItemTags) == 0x000038, "Member 'UNPCCharacterModifier_Inventory::SupportedItemTags' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_Movement
// 0x0010 (0x0038 - 0x0028)
class UNPCCharacterModifier_Movement final : public UNPCCharacterModifier
{
public:
	float                                         WalkSpeed;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RunSpeed;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Acceleration;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Deceleration;                                      // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Movement">();
	}
	static class UNPCCharacterModifier_Movement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Movement>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Movement) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Movement");
static_assert(sizeof(UNPCCharacterModifier_Movement) == 0x000038, "Wrong size on UNPCCharacterModifier_Movement");
static_assert(offsetof(UNPCCharacterModifier_Movement, WalkSpeed) == 0x000028, "Member 'UNPCCharacterModifier_Movement::WalkSpeed' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_Movement, RunSpeed) == 0x00002C, "Member 'UNPCCharacterModifier_Movement::RunSpeed' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_Movement, Acceleration) == 0x000030, "Member 'UNPCCharacterModifier_Movement::Acceleration' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_Movement, Deceleration) == 0x000034, "Member 'UNPCCharacterModifier_Movement::Deceleration' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_PatrolPath
// 0x0008 (0x0030 - 0x0028)
class UNPCCharacterModifier_PatrolPath final : public UNPCCharacterModifier
{
public:
	EFortCreativePatrolPathGroup                  PatrolPathGroup;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AFortAthenaPatrolPath* GetPatrolPathToAssign(class AActor* ModifierOwner);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_PatrolPath">();
	}
	static class UNPCCharacterModifier_PatrolPath* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_PatrolPath>();
	}
};
static_assert(alignof(UNPCCharacterModifier_PatrolPath) == 0x000008, "Wrong alignment on UNPCCharacterModifier_PatrolPath");
static_assert(sizeof(UNPCCharacterModifier_PatrolPath) == 0x000030, "Wrong size on UNPCCharacterModifier_PatrolPath");
static_assert(offsetof(UNPCCharacterModifier_PatrolPath, PatrolPathGroup) == 0x000028, "Member 'UNPCCharacterModifier_PatrolPath::PatrolPathGroup' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_Team
// 0x0008 (0x0030 - 0x0028)
class UNPCCharacterModifier_Team final : public UNPCCharacterModifier
{
public:
	ETeamOption                                   TeamOption;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        TeamIndex;                                         // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_Team">();
	}
	static class UNPCCharacterModifier_Team* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_Team>();
	}
};
static_assert(alignof(UNPCCharacterModifier_Team) == 0x000008, "Wrong alignment on UNPCCharacterModifier_Team");
static_assert(sizeof(UNPCCharacterModifier_Team) == 0x000030, "Wrong size on UNPCCharacterModifier_Team");
static_assert(offsetof(UNPCCharacterModifier_Team, TeamOption) == 0x000028, "Member 'UNPCCharacterModifier_Team::TeamOption' has a wrong offset!");
static_assert(offsetof(UNPCCharacterModifier_Team, TeamIndex) == 0x00002C, "Member 'UNPCCharacterModifier_Team::TeamIndex' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_UI
// 0x0018 (0x0040 - 0x0028)
class UNPCCharacterModifier_UI final : public UNPCCharacterModifier
{
public:
	class FText                                   DisplayName;                                       // 0x0028(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_UI">();
	}
	static class UNPCCharacterModifier_UI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_UI>();
	}
};
static_assert(alignof(UNPCCharacterModifier_UI) == 0x000008, "Wrong alignment on UNPCCharacterModifier_UI");
static_assert(sizeof(UNPCCharacterModifier_UI) == 0x000040, "Wrong size on UNPCCharacterModifier_UI");
static_assert(offsetof(UNPCCharacterModifier_UI, DisplayName) == 0x000028, "Member 'UNPCCharacterModifier_UI::DisplayName' has a wrong offset!");

// Class VerseFortnite.NPCCharacterModifier_VerseBehavior
// 0x0008 (0x0030 - 0x0028)
class UNPCCharacterModifier_VerseBehavior final : public UNPCCharacterModifier_Behavior
{
public:
	class UNPCBehaviorScript*                     NPCBehaviorScript;                                 // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterModifier_VerseBehavior">();
	}
	static class UNPCCharacterModifier_VerseBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterModifier_VerseBehavior>();
	}
};
static_assert(alignof(UNPCCharacterModifier_VerseBehavior) == 0x000008, "Wrong alignment on UNPCCharacterModifier_VerseBehavior");
static_assert(sizeof(UNPCCharacterModifier_VerseBehavior) == 0x000030, "Wrong size on UNPCCharacterModifier_VerseBehavior");
static_assert(offsetof(UNPCCharacterModifier_VerseBehavior, NPCBehaviorScript) == 0x000028, "Member 'UNPCCharacterModifier_VerseBehavior::NPCBehaviorScript' has a wrong offset!");

// Class VerseFortnite.NPCCharacterType
// 0x0038 (0x0060 - 0x0028)
class UNPCCharacterType : public UObject
{
public:
	struct FGameplayTag                           CharacterDefinitionTag;                            // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           SupportedModifiers;                                // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           UnsupportedAdditionalModifiers;                    // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           DefaultModifiers;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	bool IsPlayerCharacterRequired(const ECharacterLook CharacterLook) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterType">();
	}
	static class UNPCCharacterType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterType>();
	}
};
static_assert(alignof(UNPCCharacterType) == 0x000008, "Wrong alignment on UNPCCharacterType");
static_assert(sizeof(UNPCCharacterType) == 0x000060, "Wrong size on UNPCCharacterType");
static_assert(offsetof(UNPCCharacterType, CharacterDefinitionTag) == 0x000028, "Member 'UNPCCharacterType::CharacterDefinitionTag' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType, SupportedModifiers) == 0x000030, "Member 'UNPCCharacterType::SupportedModifiers' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType, UnsupportedAdditionalModifiers) == 0x000040, "Member 'UNPCCharacterType::UnsupportedAdditionalModifiers' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType, DefaultModifiers) == 0x000050, "Member 'UNPCCharacterType::DefaultModifiers' has a wrong offset!");

// Class VerseFortnite.NPCCharacterType_Custom
// 0x0060 (0x00C0 - 0x0060)
class UNPCCharacterType_Custom final : public UNPCCharacterType
{
public:
	TSoftObjectPtr<class UFortAIPawnCustomizationDefinition> DefaultCosmetics;                                  // 0x0060(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   AISpawnerData;                                     // 0x0080(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   PlayerSpawnerData;                                 // 0x00A0(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterType_Custom">();
	}
	static class UNPCCharacterType_Custom* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterType_Custom>();
	}
};
static_assert(alignof(UNPCCharacterType_Custom) == 0x000008, "Wrong alignment on UNPCCharacterType_Custom");
static_assert(sizeof(UNPCCharacterType_Custom) == 0x0000C0, "Wrong size on UNPCCharacterType_Custom");
static_assert(offsetof(UNPCCharacterType_Custom, DefaultCosmetics) == 0x000060, "Member 'UNPCCharacterType_Custom::DefaultCosmetics' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType_Custom, AISpawnerData) == 0x000080, "Member 'UNPCCharacterType_Custom::AISpawnerData' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType_Custom, PlayerSpawnerData) == 0x0000A0, "Member 'UNPCCharacterType_Custom::PlayerSpawnerData' has a wrong offset!");

// Class VerseFortnite.NPCCharacterType_FromPreset
// 0x0060 (0x00C0 - 0x0060)
class UNPCCharacterType_FromPreset final : public UNPCCharacterType
{
public:
	class FString                                 SelectedAI;                                        // 0x0060(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCharacterTypePreset                   SelectedPreset;                                    // 0x0070(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCharacterTypePreset>           Presets;                                           // 0x00B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	TSoftClassPtr<class UClass> GetAIToSpawn() const;
	TArray<class FString> GetAvailableAIs() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NPCCharacterType_FromPreset">();
	}
	static class UNPCCharacterType_FromPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCCharacterType_FromPreset>();
	}
};
static_assert(alignof(UNPCCharacterType_FromPreset) == 0x000008, "Wrong alignment on UNPCCharacterType_FromPreset");
static_assert(sizeof(UNPCCharacterType_FromPreset) == 0x0000C0, "Wrong size on UNPCCharacterType_FromPreset");
static_assert(offsetof(UNPCCharacterType_FromPreset, SelectedAI) == 0x000060, "Member 'UNPCCharacterType_FromPreset::SelectedAI' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType_FromPreset, SelectedPreset) == 0x000070, "Member 'UNPCCharacterType_FromPreset::SelectedPreset' has a wrong offset!");
static_assert(offsetof(UNPCCharacterType_FromPreset, Presets) == 0x0000B0, "Member 'UNPCCharacterType_FromPreset::Presets' has a wrong offset!");

// Class VerseFortnite.VerseFortniteActorWrapper
// 0x0020 (0x0048 - 0x0028)
class UVerseFortniteActorWrapper : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActorDestroyed(class AActor* DestroyedActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteActorWrapper">();
	}
	static class UVerseFortniteActorWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteActorWrapper>();
	}
};
static_assert(alignof(UVerseFortniteActorWrapper) == 0x000008, "Wrong alignment on UVerseFortniteActorWrapper");
static_assert(sizeof(UVerseFortniteActorWrapper) == 0x000048, "Wrong size on UVerseFortniteActorWrapper");

// Class VerseFortnite.VerseFortniteCharacter
// 0x0008 (0x0050 - 0x0048)
class UVerseFortniteCharacter : public UVerseFortniteActorWrapper
{
public:
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandlePawnEliminated(class AFortPlayerPawnAthena* EliminatedPawn);
	void HandlePossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteCharacter">();
	}
	static class UVerseFortniteCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteCharacter>();
	}
};
static_assert(alignof(UVerseFortniteCharacter) == 0x000008, "Wrong alignment on UVerseFortniteCharacter");
static_assert(sizeof(UVerseFortniteCharacter) == 0x000050, "Wrong size on UVerseFortniteCharacter");

// Class VerseFortnite.TaggedObjectQueryWorldSubsystem
// 0x0050 (0x0080 - 0x0030)
class UTaggedObjectQueryWorldSubsystem final : public UTaggedObjectQueryWorldSubsystemBase
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TaggedObjectQueryWorldSubsystem">();
	}
	static class UTaggedObjectQueryWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTaggedObjectQueryWorldSubsystem>();
	}
};
static_assert(alignof(UTaggedObjectQueryWorldSubsystem) == 0x000008, "Wrong alignment on UTaggedObjectQueryWorldSubsystem");
static_assert(sizeof(UTaggedObjectQueryWorldSubsystem) == 0x000080, "Wrong size on UTaggedObjectQueryWorldSubsystem");

// Class VerseFortnite.VerseFortnitePlayspace
// 0x0070 (0x00B8 - 0x0048)
class UVerseFortnitePlayspace : public UVerseFortniteActorWrapper
{
public:
	uint8                                         Pad_48[0x60];                                      // 0x0048(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVerseFortnitePlayspaceExtensionBase*> Extensions;                                        // 0x00A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	void OnMinigamePlayerAdded(const struct FUniqueNetIdRepl& UniqueNetId, bool bIsLocalPlayer);
	void OnMinigameSetup(class AFortMinigame* Minigame);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortnitePlayspace">();
	}
	static class UVerseFortnitePlayspace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortnitePlayspace>();
	}
};
static_assert(alignof(UVerseFortnitePlayspace) == 0x000008, "Wrong alignment on UVerseFortnitePlayspace");
static_assert(sizeof(UVerseFortnitePlayspace) == 0x0000B8, "Wrong size on UVerseFortnitePlayspace");
static_assert(offsetof(UVerseFortnitePlayspace, Extensions) == 0x0000A8, "Member 'UVerseFortnitePlayspace::Extensions' has a wrong offset!");

// Class VerseFortnite.VerseFortnitePlayspaceExtensionBase
// 0x0000 (0x0028 - 0x0028)
class UVerseFortnitePlayspaceExtensionBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortnitePlayspaceExtensionBase">();
	}
	static class UVerseFortnitePlayspaceExtensionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortnitePlayspaceExtensionBase>();
	}
};
static_assert(alignof(UVerseFortnitePlayspaceExtensionBase) == 0x000008, "Wrong alignment on UVerseFortnitePlayspaceExtensionBase");
static_assert(sizeof(UVerseFortnitePlayspaceExtensionBase) == 0x000028, "Wrong size on UVerseFortnitePlayspaceExtensionBase");

// Class VerseFortnite.VerseFortniteSubsystem
// 0x00A0 (0x00D0 - 0x0030)
class UVerseFortniteSubsystem final : public UWorldSubsystem
{
public:
	TMap<TWeakObjectPtr<class AActor>, class UVerseFortniteActorWrapper*> ActorToWrapperMap;                                 // 0x0030(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x50];                                      // 0x0080(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleMinigameStateChanged(class AFortMinigame* Minigame, EFortMinigameState NewMinigameState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteSubsystem">();
	}
	static class UVerseFortniteSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteSubsystem>();
	}
};
static_assert(alignof(UVerseFortniteSubsystem) == 0x000008, "Wrong alignment on UVerseFortniteSubsystem");
static_assert(sizeof(UVerseFortniteSubsystem) == 0x0000D0, "Wrong size on UVerseFortniteSubsystem");
static_assert(offsetof(UVerseFortniteSubsystem, ActorToWrapperMap) == 0x000030, "Member 'UVerseFortniteSubsystem::ActorToWrapperMap' has a wrong offset!");

}

