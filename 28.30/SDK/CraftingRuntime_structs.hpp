#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CraftingRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum CraftingRuntime.ECraftingObjectState
// NumValues: 0x0009
enum class ECraftingObjectState : uint8
{
	Invalid                                  = 0,
	Idle                                     = 1,
	Crafting                                 = 2,
	CraftingPaused                           = 3,
	CraftingPausedDecaying                   = 4,
	Ready                                    = 5,
	OverCrafting                             = 6,
	Resetting                                = 7,
	TotalStates                              = 8,
};

// Enum CraftingRuntime.ECraftingIngredientReqError
// NumValues: 0x0003
enum class ECraftingIngredientReqError : uint8
{
	None                                     = 0,
	NoItem                                   = 1,
	NotEnough                                = 2,
};

// ScriptStruct CraftingRuntime.CraftingUpgradeRule
// 0x0118 (0x0118 - 0x0000)
struct FCraftingUpgradeRule final
{
public:
	struct FGameplayTagRequirements               SourceItemTags;                                    // 0x0000(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               TargetItemTags;                                    // 0x0088(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         UpgradeFlags;                                      // 0x0110(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCraftingUpgradeRule) == 0x000008, "Wrong alignment on FCraftingUpgradeRule");
static_assert(sizeof(FCraftingUpgradeRule) == 0x000118, "Wrong size on FCraftingUpgradeRule");
static_assert(offsetof(FCraftingUpgradeRule, SourceItemTags) == 0x000000, "Member 'FCraftingUpgradeRule::SourceItemTags' has a wrong offset!");
static_assert(offsetof(FCraftingUpgradeRule, TargetItemTags) == 0x000088, "Member 'FCraftingUpgradeRule::TargetItemTags' has a wrong offset!");
static_assert(offsetof(FCraftingUpgradeRule, UpgradeFlags) == 0x000110, "Member 'FCraftingUpgradeRule::UpgradeFlags' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingMultiKey
// 0x0008 (0x0008 - 0x0000)
struct FCraftingMultiKey final
{
public:
	int64                                         Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingMultiKey) == 0x000008, "Wrong alignment on FCraftingMultiKey");
static_assert(sizeof(FCraftingMultiKey) == 0x000008, "Wrong size on FCraftingMultiKey");
static_assert(offsetof(FCraftingMultiKey, Key) == 0x000000, "Member 'FCraftingMultiKey::Key' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingObjectRepStateData
// 0x0028 (0x0028 - 0x0000)
struct FCraftingObjectRepStateData final
{
public:
	struct FCraftingMultiKey                      Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECraftingObjectState                          CraftingObjectState;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateChangeServerTime;                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PausedCraftingTime;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaRow;                                // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumToCraft;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPlayerController>   CraftingInstigator;                                // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCraftingObjectRepStateData) == 0x000008, "Wrong alignment on FCraftingObjectRepStateData");
static_assert(sizeof(FCraftingObjectRepStateData) == 0x000028, "Wrong size on FCraftingObjectRepStateData");
static_assert(offsetof(FCraftingObjectRepStateData, Key) == 0x000000, "Member 'FCraftingObjectRepStateData::Key' has a wrong offset!");
static_assert(offsetof(FCraftingObjectRepStateData, CraftingObjectState) == 0x000008, "Member 'FCraftingObjectRepStateData::CraftingObjectState' has a wrong offset!");
static_assert(offsetof(FCraftingObjectRepStateData, StateChangeServerTime) == 0x00000C, "Member 'FCraftingObjectRepStateData::StateChangeServerTime' has a wrong offset!");
static_assert(offsetof(FCraftingObjectRepStateData, PausedCraftingTime) == 0x000010, "Member 'FCraftingObjectRepStateData::PausedCraftingTime' has a wrong offset!");
static_assert(offsetof(FCraftingObjectRepStateData, CraftingFormulaRow) == 0x000014, "Member 'FCraftingObjectRepStateData::CraftingFormulaRow' has a wrong offset!");
static_assert(offsetof(FCraftingObjectRepStateData, NumToCraft) == 0x000018, "Member 'FCraftingObjectRepStateData::NumToCraft' has a wrong offset!");
static_assert(offsetof(FCraftingObjectRepStateData, CraftingInstigator) == 0x00001C, "Member 'FCraftingObjectRepStateData::CraftingInstigator' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingObjectSuccessEvent
// 0x0030 (0x0030 - 0x0000)
struct FCraftingObjectSuccessEvent final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCraftingMultiKey                      Key;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                  Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FormulaRowName;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemEntry>                 ConsumedIngredients;                               // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingObjectSuccessEvent) == 0x000008, "Wrong alignment on FCraftingObjectSuccessEvent");
static_assert(sizeof(FCraftingObjectSuccessEvent) == 0x000030, "Wrong size on FCraftingObjectSuccessEvent");
static_assert(offsetof(FCraftingObjectSuccessEvent, CraftingObject) == 0x000000, "Member 'FCraftingObjectSuccessEvent::CraftingObject' has a wrong offset!");
static_assert(offsetof(FCraftingObjectSuccessEvent, Key) == 0x000008, "Member 'FCraftingObjectSuccessEvent::Key' has a wrong offset!");
static_assert(offsetof(FCraftingObjectSuccessEvent, Instigator) == 0x000010, "Member 'FCraftingObjectSuccessEvent::Instigator' has a wrong offset!");
static_assert(offsetof(FCraftingObjectSuccessEvent, FormulaRowName) == 0x000018, "Member 'FCraftingObjectSuccessEvent::FormulaRowName' has a wrong offset!");
static_assert(offsetof(FCraftingObjectSuccessEvent, ConsumedIngredients) == 0x000020, "Member 'FCraftingObjectSuccessEvent::ConsumedIngredients' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingIngredientRequirement
// 0x0028 (0x0028 - 0x0000)
struct FCraftingIngredientRequirement final
{
public:
	struct FGameplayTagContainer                  IngredientTags;                                    // 0x0000(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCraftingIngredientRequirement) == 0x000008, "Wrong alignment on FCraftingIngredientRequirement");
static_assert(sizeof(FCraftingIngredientRequirement) == 0x000028, "Wrong size on FCraftingIngredientRequirement");
static_assert(offsetof(FCraftingIngredientRequirement, IngredientTags) == 0x000000, "Member 'FCraftingIngredientRequirement::IngredientTags' has a wrong offset!");
static_assert(offsetof(FCraftingIngredientRequirement, Count) == 0x000020, "Member 'FCraftingIngredientRequirement::Count' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingObjectServerStateData
// 0x01F8 (0x01F8 - 0x0000)
struct FCraftingObjectServerStateData final
{
public:
	uint8                                         bNextResultsHandledExternally : 1;                 // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPickup*                            PendingPickupCraftingItem;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PendingPickupCraftingFormula;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemEntry                         PendingPickupCraftingItemEntry;                    // 0x0018(0x01A0)(NativeAccessSpecifierPublic)
	int32                                         PendingPickupHeldCount;                            // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemEntry>                 AllOfTheIngredientItems;                           // 0x01C0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 NonConsumedIngredientItemIndices;                  // 0x01D0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemAndCount>                  CraftingResults;                                   // 0x01E0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayAbilitySpecHandle             InstigatorWhileCraftingAbilitySpecHandle;          // 0x01F0(0x0004)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCraftingObjectServerStateData) == 0x000008, "Wrong alignment on FCraftingObjectServerStateData");
static_assert(sizeof(FCraftingObjectServerStateData) == 0x0001F8, "Wrong size on FCraftingObjectServerStateData");
static_assert(offsetof(FCraftingObjectServerStateData, PendingPickupCraftingItem) == 0x000008, "Member 'FCraftingObjectServerStateData::PendingPickupCraftingItem' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, PendingPickupCraftingFormula) == 0x000010, "Member 'FCraftingObjectServerStateData::PendingPickupCraftingFormula' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, PendingPickupCraftingItemEntry) == 0x000018, "Member 'FCraftingObjectServerStateData::PendingPickupCraftingItemEntry' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, PendingPickupHeldCount) == 0x0001B8, "Member 'FCraftingObjectServerStateData::PendingPickupHeldCount' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, AllOfTheIngredientItems) == 0x0001C0, "Member 'FCraftingObjectServerStateData::AllOfTheIngredientItems' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, NonConsumedIngredientItemIndices) == 0x0001D0, "Member 'FCraftingObjectServerStateData::NonConsumedIngredientItemIndices' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, CraftingResults) == 0x0001E0, "Member 'FCraftingObjectServerStateData::CraftingResults' has a wrong offset!");
static_assert(offsetof(FCraftingObjectServerStateData, InstigatorWhileCraftingAbilitySpecHandle) == 0x0001F0, "Member 'FCraftingObjectServerStateData::InstigatorWhileCraftingAbilitySpecHandle' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingObjectStateChangedEvent
// 0x0028 (0x0028 - 0x0000)
struct FCraftingObjectStateChangedEvent final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCraftingMultiKey                      Key;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                  Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECraftingObjectState                          CraftingState;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CraftingStateStartTime;                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CraftingStateDuration;                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCraftingObjectStateChangedEvent) == 0x000008, "Wrong alignment on FCraftingObjectStateChangedEvent");
static_assert(sizeof(FCraftingObjectStateChangedEvent) == 0x000028, "Wrong size on FCraftingObjectStateChangedEvent");
static_assert(offsetof(FCraftingObjectStateChangedEvent, CraftingObject) == 0x000000, "Member 'FCraftingObjectStateChangedEvent::CraftingObject' has a wrong offset!");
static_assert(offsetof(FCraftingObjectStateChangedEvent, Key) == 0x000008, "Member 'FCraftingObjectStateChangedEvent::Key' has a wrong offset!");
static_assert(offsetof(FCraftingObjectStateChangedEvent, Instigator) == 0x000010, "Member 'FCraftingObjectStateChangedEvent::Instigator' has a wrong offset!");
static_assert(offsetof(FCraftingObjectStateChangedEvent, CraftingState) == 0x000018, "Member 'FCraftingObjectStateChangedEvent::CraftingState' has a wrong offset!");
static_assert(offsetof(FCraftingObjectStateChangedEvent, CraftingStateStartTime) == 0x00001C, "Member 'FCraftingObjectStateChangedEvent::CraftingStateStartTime' has a wrong offset!");
static_assert(offsetof(FCraftingObjectStateChangedEvent, CraftingStateDuration) == 0x000020, "Member 'FCraftingObjectStateChangedEvent::CraftingStateDuration' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingFormula
// 0x00B8 (0x00C0 - 0x0008)
struct FCraftingFormula final : public FTableRowBase
{
public:
	class FText                                   DisplayName;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         bEnabled : 1;                                      // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAlwaysKnownFormula : 1;                           // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInstantlyConsumeIngredients : 1;                  // 0x0020(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SortingPriority;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           SourceObjectTag;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AttributeTags;                                     // 0x0030(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FCraftingIngredientRequirement> RequiredIngredients;                               // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   ResultLootTierKey;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   WhileCraftingAbility;                              // 0x0068(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCraftingUpgradeRule>           UpgradeRules;                                      // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         OverrideCraftingTime;                              // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   InstigatorWhileCraftingAbility;                    // 0x00A0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingFormula) == 0x000008, "Wrong alignment on FCraftingFormula");
static_assert(sizeof(FCraftingFormula) == 0x0000C0, "Wrong size on FCraftingFormula");
static_assert(offsetof(FCraftingFormula, DisplayName) == 0x000008, "Member 'FCraftingFormula::DisplayName' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, SortingPriority) == 0x000024, "Member 'FCraftingFormula::SortingPriority' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, SourceObjectTag) == 0x000028, "Member 'FCraftingFormula::SourceObjectTag' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, AttributeTags) == 0x000030, "Member 'FCraftingFormula::AttributeTags' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, RequiredIngredients) == 0x000050, "Member 'FCraftingFormula::RequiredIngredients' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, ResultLootTierKey) == 0x000060, "Member 'FCraftingFormula::ResultLootTierKey' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, WhileCraftingAbility) == 0x000068, "Member 'FCraftingFormula::WhileCraftingAbility' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, UpgradeRules) == 0x000088, "Member 'FCraftingFormula::UpgradeRules' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, OverrideCraftingTime) == 0x000098, "Member 'FCraftingFormula::OverrideCraftingTime' has a wrong offset!");
static_assert(offsetof(FCraftingFormula, InstigatorWhileCraftingAbility) == 0x0000A0, "Member 'FCraftingFormula::InstigatorWhileCraftingAbility' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingResult
// 0x0018 (0x0018 - 0x0000)
struct FCraftingResult final
{
public:
	class FName                                   ResultLootTierKey;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemAndCount>                  Results;                                           // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingResult) == 0x000008, "Wrong alignment on FCraftingResult");
static_assert(sizeof(FCraftingResult) == 0x000018, "Wrong size on FCraftingResult");
static_assert(offsetof(FCraftingResult, ResultLootTierKey) == 0x000000, "Member 'FCraftingResult::ResultLootTierKey' has a wrong offset!");
static_assert(offsetof(FCraftingResult, Results) == 0x000008, "Member 'FCraftingResult::Results' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingIngredientUIData
// 0x0040 (0x0048 - 0x0008)
struct FCraftingIngredientUIData : public FTableRowBase
{
public:
	struct FGameplayTagContainer                  IngredientTags;                                    // 0x0008(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> ItemDefs;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UObject>>         Icons;                                             // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingIngredientUIData) == 0x000008, "Wrong alignment on FCraftingIngredientUIData");
static_assert(sizeof(FCraftingIngredientUIData) == 0x000048, "Wrong size on FCraftingIngredientUIData");
static_assert(offsetof(FCraftingIngredientUIData, IngredientTags) == 0x000008, "Member 'FCraftingIngredientUIData::IngredientTags' has a wrong offset!");
static_assert(offsetof(FCraftingIngredientUIData, ItemDefs) == 0x000028, "Member 'FCraftingIngredientUIData::ItemDefs' has a wrong offset!");
static_assert(offsetof(FCraftingIngredientUIData, Icons) == 0x000038, "Member 'FCraftingIngredientUIData::Icons' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingIngredientQueryState
// 0x0030 (0x0030 - 0x0000)
struct FCraftingIngredientQueryState final
{
public:
	struct FCraftingIngredientRequirement         Requirement;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         Owned;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Missing;                                           // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingIngredientQueryState) == 0x000008, "Wrong alignment on FCraftingIngredientQueryState");
static_assert(sizeof(FCraftingIngredientQueryState) == 0x000030, "Wrong size on FCraftingIngredientQueryState");
static_assert(offsetof(FCraftingIngredientQueryState, Requirement) == 0x000000, "Member 'FCraftingIngredientQueryState::Requirement' has a wrong offset!");
static_assert(offsetof(FCraftingIngredientQueryState, Owned) == 0x000028, "Member 'FCraftingIngredientQueryState::Owned' has a wrong offset!");
static_assert(offsetof(FCraftingIngredientQueryState, Missing) == 0x00002C, "Member 'FCraftingIngredientQueryState::Missing' has a wrong offset!");

// ScriptStruct CraftingRuntime.CraftingMessage
// 0x0008 (0x0008 - 0x0000)
struct FCraftingMessage final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCraftingMessage) == 0x000008, "Wrong alignment on FCraftingMessage");
static_assert(sizeof(FCraftingMessage) == 0x000008, "Wrong size on FCraftingMessage");
static_assert(offsetof(FCraftingMessage, CraftingObject) == 0x000000, "Member 'FCraftingMessage::CraftingObject' has a wrong offset!");

}

