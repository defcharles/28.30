#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NightNightModeRuntime

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class NightNightModeRuntime.FortCameraMode_NightNight
// 0x0000 (0x0070 - 0x0070)
class UFortCameraMode_NightNight final : public UFortCinematicCamera
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCameraMode_NightNight">();
	}
	static class UFortCameraMode_NightNight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCameraMode_NightNight>();
	}
};
static_assert(alignof(UFortCameraMode_NightNight) == 0x000008, "Wrong alignment on UFortCameraMode_NightNight");
static_assert(sizeof(UFortCameraMode_NightNight) == 0x000070, "Wrong size on UFortCameraMode_NightNight");

// Class NightNightModeRuntime.FortPawnComponent_NightNight
// 0x0020 (0x00C8 - 0x00A8)
class UFortPawnComponent_NightNight final : public UFortPawnOverrideComponent
{
public:
	bool                                          bAutoPossess;                                      // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowUIViewTarget;                                // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UFortCameraMode>            CameraModeOverrideClass;                           // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnUIViewTargetChanged(class UFortUICameraManagerComponent* InUICameraManagerComponent, class AActor* OldUIViewTarget, class AActor* NewUIViewTarget);
	void SetAllowUIViewTarget(const bool bAllow);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPawnComponent_NightNight">();
	}
	static class UFortPawnComponent_NightNight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPawnComponent_NightNight>();
	}
};
static_assert(alignof(UFortPawnComponent_NightNight) == 0x000008, "Wrong alignment on UFortPawnComponent_NightNight");
static_assert(sizeof(UFortPawnComponent_NightNight) == 0x0000C8, "Wrong size on UFortPawnComponent_NightNight");
static_assert(offsetof(UFortPawnComponent_NightNight, bAutoPossess) == 0x0000A8, "Member 'UFortPawnComponent_NightNight::bAutoPossess' has a wrong offset!");
static_assert(offsetof(UFortPawnComponent_NightNight, bAllowUIViewTarget) == 0x0000A9, "Member 'UFortPawnComponent_NightNight::bAllowUIViewTarget' has a wrong offset!");
static_assert(offsetof(UFortPawnComponent_NightNight, CameraModeOverrideClass) == 0x0000B0, "Member 'UFortPawnComponent_NightNight::CameraModeOverrideClass' has a wrong offset!");

}

