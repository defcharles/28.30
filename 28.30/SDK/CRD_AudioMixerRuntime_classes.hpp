#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_AudioMixerRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Class CRD_AudioMixerRuntime.CreativeAudioMixerDevice
// 0x0090 (0x0C68 - 0x0BD8)
class ACreativeAudioMixerDevice final : public AFortCreativeDeviceProp
{
public:
	uint8                                         Pad_BD8[0x8];                                      // 0x0BD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundControlBusMix*                    Mix;                                               // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundControlBus*                       Bus;                                               // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FaderValue;                                        // 0x0BF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECreativeRegisteredPlayerGroups               CanBeHeardBy;                                      // 0x0BF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivateInEditMode;                               // 0x0BF5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivateOnGameStart;                              // 0x0BF6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF7[0x1];                                      // 0x0BF7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreativeProxyManagerComponent*         CreativeProxyManagerComponent;                     // 0x0BF8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMinigameProgressComponent*         FortMinigameProgressComponent;                     // 0x0C00(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCreativeRegisteredPlayersManagerComponent* CreativeRegisteredPlayersManagerComponent;         // 0x0C08(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortActorOptionsComponent*             FortActorOptionsComponent;                         // 0x0C10(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCachedIsActive;                                   // 0x0C18(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C19[0x7];                                      // 0x0C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CachedInstigator;                                  // 0x0C20(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACreativeAudioMixerReplicationProxy*    ClientCachedProxy;                                 // 0x0C28(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundControlBusMix*                    CachedBusMix;                                      // 0x0C30(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   CachedBusMixName;                                  // 0x0C38(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C3C[0x4];                                      // 0x0C3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               RegisteredPlayerIds;                               // 0x0C40(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FUniqueNetIdRepl>               NonRegisteredPlayerIds;                            // 0x0C50(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                          bHasUpdatedStateInEditMode;                        // 0x0C60(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasUpdatedStateInGameplay;                        // 0x0C61(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C62[0x6];                                      // 0x0C62(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateMix();
	void DeactivateMix();
	void OnAllPlayersUnregistered();
	void OnMinigameEnded();
	void OnMinigameStarted();
	void OnPlayerAdded(const struct FUniqueNetIdRepl& NetId, bool bIsLocalPlayer);
	void OnPlayerRegistered(const class AFortPlayerState* PlayerState);
	void OnPlayerUnregistered(const class AFortPlayerState* PlayerState);
	void OnPreAnyPropertyChanged();
	void OnProxyDataChanged(class ACreativePlayerReplicationProxy* ProxyData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeAudioMixerDevice">();
	}
	static class ACreativeAudioMixerDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACreativeAudioMixerDevice>();
	}
};
static_assert(alignof(ACreativeAudioMixerDevice) == 0x000008, "Wrong alignment on ACreativeAudioMixerDevice");
static_assert(sizeof(ACreativeAudioMixerDevice) == 0x000C68, "Wrong size on ACreativeAudioMixerDevice");
static_assert(offsetof(ACreativeAudioMixerDevice, Mix) == 0x000BE0, "Member 'ACreativeAudioMixerDevice::Mix' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, Bus) == 0x000BE8, "Member 'ACreativeAudioMixerDevice::Bus' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, FaderValue) == 0x000BF0, "Member 'ACreativeAudioMixerDevice::FaderValue' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, CanBeHeardBy) == 0x000BF4, "Member 'ACreativeAudioMixerDevice::CanBeHeardBy' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, bActivateInEditMode) == 0x000BF5, "Member 'ACreativeAudioMixerDevice::bActivateInEditMode' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, bActivateOnGameStart) == 0x000BF6, "Member 'ACreativeAudioMixerDevice::bActivateOnGameStart' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, CreativeProxyManagerComponent) == 0x000BF8, "Member 'ACreativeAudioMixerDevice::CreativeProxyManagerComponent' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, FortMinigameProgressComponent) == 0x000C00, "Member 'ACreativeAudioMixerDevice::FortMinigameProgressComponent' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, CreativeRegisteredPlayersManagerComponent) == 0x000C08, "Member 'ACreativeAudioMixerDevice::CreativeRegisteredPlayersManagerComponent' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, FortActorOptionsComponent) == 0x000C10, "Member 'ACreativeAudioMixerDevice::FortActorOptionsComponent' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, bCachedIsActive) == 0x000C18, "Member 'ACreativeAudioMixerDevice::bCachedIsActive' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, CachedInstigator) == 0x000C20, "Member 'ACreativeAudioMixerDevice::CachedInstigator' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, ClientCachedProxy) == 0x000C28, "Member 'ACreativeAudioMixerDevice::ClientCachedProxy' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, CachedBusMix) == 0x000C30, "Member 'ACreativeAudioMixerDevice::CachedBusMix' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, CachedBusMixName) == 0x000C38, "Member 'ACreativeAudioMixerDevice::CachedBusMixName' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, RegisteredPlayerIds) == 0x000C40, "Member 'ACreativeAudioMixerDevice::RegisteredPlayerIds' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, NonRegisteredPlayerIds) == 0x000C50, "Member 'ACreativeAudioMixerDevice::NonRegisteredPlayerIds' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, bHasUpdatedStateInEditMode) == 0x000C60, "Member 'ACreativeAudioMixerDevice::bHasUpdatedStateInEditMode' has a wrong offset!");
static_assert(offsetof(ACreativeAudioMixerDevice, bHasUpdatedStateInGameplay) == 0x000C61, "Member 'ACreativeAudioMixerDevice::bHasUpdatedStateInGameplay' has a wrong offset!");

// Class CRD_AudioMixerRuntime.CreativeAudioMixerReplicationProxy
// 0x0008 (0x02A0 - 0x0298)
class ACreativeAudioMixerReplicationProxy final : public ACreativePlayerReplicationProxy
{
public:
	bool                                          bIsActive;                                         // 0x0298(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeAudioMixerReplicationProxy">();
	}
	static class ACreativeAudioMixerReplicationProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACreativeAudioMixerReplicationProxy>();
	}
};
static_assert(alignof(ACreativeAudioMixerReplicationProxy) == 0x000008, "Wrong alignment on ACreativeAudioMixerReplicationProxy");
static_assert(sizeof(ACreativeAudioMixerReplicationProxy) == 0x0002A0, "Wrong size on ACreativeAudioMixerReplicationProxy");
static_assert(offsetof(ACreativeAudioMixerReplicationProxy, bIsActive) == 0x000298, "Member 'ACreativeAudioMixerReplicationProxy::bIsActive' has a wrong offset!");

}

