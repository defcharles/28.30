#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemCard_Category

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "ELockerTileSize_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.ExecuteUbergraph_WBP_UIKit_ItemCard_Category
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_2;            // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0060(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue_1;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemVM*                            CallFunc_SetFIVMItemAndSlot_Selected_Item;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_SetFIVMItemAndSlot_Slot_Index;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMcpVariantChannelInfo>         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class UFortAsyncAction_LockerOperation*       CallFunc_EquipItem_ReturnValue;                    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIKitContextMenuActionContext*         CallFunc_SpawnObject_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category) == 0x0000B8, "Wrong size on WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, EntryPoint) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_CreateDelegate_OutputDelegate_2) == 0x00001C, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_CustomEvent_Success) == 0x000028, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, Temp_bool_Variable) == 0x000029, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000038, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_Event_IsDesignTime) == 0x000040, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_Event_ListItemObject) == 0x000048, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_Event_bIsSelected) == 0x000050, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_CreateDelegate_OutputDelegate_4) == 0x000060, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_IsOpen_ReturnValue) == 0x00006D, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000070, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_GetCurrentInputType_ReturnValue) == 0x000078, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_IsOpen_ReturnValue_1) == 0x00007A, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_IsOpen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_Event_bIsExpanded) == 0x00007B, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_SetFIVMItemAndSlot_Selected_Item) == 0x000080, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_SetFIVMItemAndSlot_Selected_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_SetFIVMItemAndSlot_Slot_Index) == 0x000088, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_SetFIVMItemAndSlot_Slot_Index' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_EquipItem_ReturnValue) == 0x0000A0, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_EquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category, CallFunc_SpawnObject_ReturnValue) == 0x0000B0, "Member 'WBP_UIKit_ItemCard_Category_C_ExecuteUbergraph_WBP_UIKit_ItemCard_Category::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.GetCurrentCategory
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_GetCurrentCategory final
{
public:
	bool                                          CanApplyToAll;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanFavorite;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortLockerCategoryConfig*        CallFunc_GetItemCategory_ReturnValue;              // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_GetCurrentCategory) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_GetCurrentCategory");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_GetCurrentCategory) == 0x000010, "Wrong size on WBP_UIKit_ItemCard_Category_C_GetCurrentCategory");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetCurrentCategory, CanApplyToAll) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_GetCurrentCategory::CanApplyToAll' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetCurrentCategory, CanFavorite) == 0x000001, "Member 'WBP_UIKit_ItemCard_Category_C_GetCurrentCategory::CanFavorite' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetCurrentCategory, CallFunc_GetItemCategory_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_GetCurrentCategory::CallFunc_GetItemCategory_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.GetFavoriteState
// 0x0068 (0x0068 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_GetFavoriteState final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0038(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0050(0x0018)()
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_GetFavoriteState");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState) == 0x000068, "Wrong size on WBP_UIKit_ItemCard_Category_C_GetFavoriteState");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState, Result) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_GetFavoriteState::Result' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_UIKit_ItemCard_Category_C_GetFavoriteState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState, K2Node_MakeArray_Array_1) == 0x000028, "Member 'WBP_UIKit_ItemCard_Category_C_GetFavoriteState::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState, CallFunc_Format_ReturnValue) == 0x000038, "Member 'WBP_UIKit_ItemCard_Category_C_GetFavoriteState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_GetFavoriteState, CallFunc_Format_ReturnValue_1) == 0x000050, "Member 'WBP_UIKit_ItemCard_Category_C_GetFavoriteState::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.HandleSimultanoeusStateVisibility
// 0x0002 (0x0002 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility) == 0x000002, "Wrong size on WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'WBP_UIKit_ItemCard_Category_C_HandleSimultanoeusStateVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.Initialize
// 0x0078 (0x0078 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_Initialize final
{
public:
	class UFortLockerCategoryItemVM*              Category_Item;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFortLockerCategorySlotInfo            CallFunc_GetSlotInfo_ReturnValue;                  // 0x0018(0x0050)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_Initialize) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_Initialize");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_Initialize) == 0x000078, "Wrong size on WBP_UIKit_ItemCard_Category_C_Initialize");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Initialize, Category_Item) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_Initialize::Category_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Initialize, Temp_bool_Variable) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_Initialize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Initialize, Temp_object_Variable) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_Initialize::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Initialize, CallFunc_GetSlotInfo_ReturnValue) == 0x000018, "Member 'WBP_UIKit_ItemCard_Category_C_Initialize::CallFunc_GetSlotInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_UIKit_ItemCard_Category_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Initialize, K2Node_Select_Default) == 0x000070, "Member 'WBP_UIKit_ItemCard_Category_C_Initialize::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C, Success) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_OnOperationCompleted_23BD25804DD9BC64D93D4199EE41874C::Success' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Category_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.Set Context Menu Action Context
// 0x0198 (0x0198 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context final
{
public:
	TDelegate<void()>                             FavoriteInInteractionDelegate;                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             ClearBadgesInInteractionDelegate;                  // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             EditStylesInInteractionDelegate;                   // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             ApplyToAllInInteractionDelegate;                   // 0x0024(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CanFavorite;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanApplyToAll;                                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortLockerCategoryConfig*        CallFunc_GetItemCategory_ReturnValue;              // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUIKitContextMenuActionInfo            K2Node_MakeStruct_UIKitContextMenuActionInfo;      // 0x0040(0x0050)(ContainsInstancedReference)
	struct FUIKitContextMenuActionInfo            K2Node_MakeStruct_UIKitContextMenuActionInfo_1;    // 0x0090(0x0050)(ContainsInstancedReference)
	struct FUIKitContextMenuActionInfo            K2Node_MakeStruct_UIKitContextMenuActionInfo_2;    // 0x00E0(0x0050)(ContainsInstancedReference)
	class FText                                   CallFunc_GetFavoriteState_Result;                  // 0x0130(0x0018)()
	struct FUIKitContextMenuActionInfo            K2Node_MakeStruct_UIKitContextMenuActionInfo_3;    // 0x0148(0x0050)(ContainsInstancedReference)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context) == 0x000198, "Wrong size on WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, FavoriteInInteractionDelegate) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::FavoriteInInteractionDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, ClearBadgesInInteractionDelegate) == 0x00000C, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::ClearBadgesInInteractionDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, EditStylesInInteractionDelegate) == 0x000018, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::EditStylesInInteractionDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, ApplyToAllInInteractionDelegate) == 0x000024, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::ApplyToAllInInteractionDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, CanFavorite) == 0x000030, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::CanFavorite' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, CanApplyToAll) == 0x000031, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::CanApplyToAll' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, CallFunc_GetItemCategory_ReturnValue) == 0x000038, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::CallFunc_GetItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, K2Node_MakeStruct_UIKitContextMenuActionInfo) == 0x000040, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::K2Node_MakeStruct_UIKitContextMenuActionInfo' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, K2Node_MakeStruct_UIKitContextMenuActionInfo_1) == 0x000090, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::K2Node_MakeStruct_UIKitContextMenuActionInfo_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, K2Node_MakeStruct_UIKitContextMenuActionInfo_2) == 0x0000E0, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::K2Node_MakeStruct_UIKitContextMenuActionInfo_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, CallFunc_GetFavoriteState_Result) == 0x000130, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::CallFunc_GetFavoriteState_Result' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context, K2Node_MakeStruct_UIKitContextMenuActionInfo_3) == 0x000148, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Action_Context::K2Node_MakeStruct_UIKitContextMenuActionInfo_3' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.Set Context Menu Preview Actions
// 0x0090 (0x0090 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions final
{
public:
	class FText                                   PreviewActionName;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void()>                             InInPreviewActionIteractionDelegate;               // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIKitContextMenuActionInfo            K2Node_MakeStruct_UIKitContextMenuActionInfo;      // 0x0040(0x0050)(ContainsInstancedReference)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions) == 0x000090, "Wrong size on WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions, PreviewActionName) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions::PreviewActionName' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions, InInPreviewActionIteractionDelegate) == 0x000018, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions::InInPreviewActionIteractionDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions, K2Node_MakeStruct_UIKitContextMenuActionInfo) == 0x000040, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Context_Menu_Preview_Actions::K2Node_MakeStruct_UIKitContextMenuActionInfo' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.Set Item Favorite State
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Item_Favorite_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.Set Tile Image
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_Set_Tile_Image final
{
public:
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_Set_Tile_Image) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_Set_Tile_Image");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_Set_Tile_Image) == 0x000020, "Wrong size on WBP_UIKit_ItemCard_Category_C_Set_Tile_Image");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_Set_Tile_Image, Image) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_Set_Tile_Image::Image' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetBangCount
// 0x000C (0x000C - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetBangCount final
{
public:
	int32                                         NewBangCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetBangCount) == 0x000004, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetBangCount");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetBangCount) == 0x00000C, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetBangCount");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetBangCount, NewBangCount) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetBangCount::NewBangCount' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetBangCount, Temp_byte_Variable) == 0x000004, "Member 'WBP_UIKit_ItemCard_Category_C_SetBangCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetBangCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'WBP_UIKit_ItemCard_Category_C_SetBangCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetBangCount, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UIKit_ItemCard_Category_C_SetBangCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetBangCount, Temp_bool_Variable) == 0x000007, "Member 'WBP_UIKit_ItemCard_Category_C_SetBangCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetBangCount, K2Node_Select_Default) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetBangCount::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetContextMenuAnchorPadding
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding) == 0x000018, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding, K2Node_MakeStruct_Margin) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_SetContextMenuAnchorPadding::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetFIVMItemAndSlot
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot final
{
public:
	class UFortItemVM*                            Selected_Item;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Slot_Index;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot) == 0x000010, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot, Selected_Item) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot::Selected_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot, Slot_Index) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetFIVMItemAndSlot::Slot_Index' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetFortItemVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetFortItemVM final
{
public:
	class UFortItemVM*                            ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetFortItemVM) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetFortItemVM");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetFortItemVM) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetFortItemVM");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortItemVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortItemVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortItemVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortItemVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortItemVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortItemVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortItemVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortItemVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetFortLockerCategoryGroupVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM final
{
public:
	class UFortLockerCategoryGroupVM*             ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryGroupVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetFortLockerCategoryItemVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM final
{
public:
	class UFortLockerCategoryItemVM*              ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM) == 0x000028, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemCard_Category_C_SetFortLockerCategoryItemVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetImageSize
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetImageSize final
{
public:
	bool                                          IsSmall;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SmallSize;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultSize;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetImageSize) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetImageSize");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetImageSize) == 0x000018, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetImageSize");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetImageSize, IsSmall) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetImageSize::IsSmall' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetImageSize, SmallSize) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetImageSize::SmallSize' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetImageSize, DefaultSize) == 0x000010, "Member 'WBP_UIKit_ItemCard_Category_C_SetImageSize::DefaultSize' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetItemIsFavorite
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite final
{
public:
	bool                                          Is_Favorite;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite) == 0x000001, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite, Is_Favorite) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetItemIsFavorite::Is_Favorite' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetNewIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetNewIcon final
{
public:
	int32                                         Item_Count;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetNewIcon) == 0x000004, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetNewIcon");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetNewIcon) == 0x000008, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetNewIcon");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetNewIcon, Item_Count) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetNewIcon::Item_Count' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetNewIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'WBP_UIKit_ItemCard_Category_C_SetNewIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.SetTileSize
// 0x0078 (0x0078 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C_SetTileSize final
{
public:
	ELockerTileSize                               TileSize;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockerTileSize                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C_SetTileSize) == 0x000008, "Wrong alignment on WBP_UIKit_ItemCard_Category_C_SetTileSize");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C_SetTileSize) == 0x000078, "Wrong size on WBP_UIKit_ItemCard_Category_C_SetTileSize");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, TileSize) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::TileSize' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_struct_Variable) == 0x000008, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_struct_Variable_2) == 0x000028, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_struct_Variable_3) == 0x000038, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_struct_Variable_4) == 0x000048, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, Temp_struct_Variable_5) == 0x000058, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C_SetTileSize, K2Node_Select_Default) == 0x000068, "Member 'WBP_UIKit_ItemCard_Category_C_SetTileSize::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.__5b383b64-4f8e-5cf5-053d-ed9109e9c8c2_SourceToDest
// 0x0003 (0x0003 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemVisible_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Conv_BoolToSlateVisibility_ReturnValue;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest) == 0x000003, "Wrong size on WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest, CallFunc_IsItemVisible_ReturnValue) == 0x000001, "Member 'WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest::CallFunc_IsItemVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest, CallFunc_Conv_BoolToSlateVisibility_ReturnValue) == 0x000002, "Member 'WBP_UIKit_ItemCard_Category_C___5b383b64_4f8e_5cf5_053d_ed9109e9c8c2_SourceToDest::CallFunc_Conv_BoolToSlateVisibility_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemCard_Category.WBP_UIKit_ItemCard_Category_C.__79e9f624-449e-0d40-8030-13852634ec9a_SourceToDest
// 0x0002 (0x0002 - 0x0000)
struct WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Conv_BoolToSlateVisibility_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest) == 0x000001, "Wrong alignment on WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest");
static_assert(sizeof(WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest) == 0x000002, "Wrong size on WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest, CallFunc_Conv_BoolToSlateVisibility_ReturnValue) == 0x000001, "Member 'WBP_UIKit_ItemCard_Category_C___79e9f624_449e_0d40_8030_13852634ec9a_SourceToDest::CallFunc_Conv_BoolToSlateVisibility_ReturnValue' has a wrong offset!");

}

