#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoFishing

#include "Basic.hpp"


namespace SDK::Params
{

// Function JunoFishing.JunoFishingBlueprintLibrary.FireEvent_BeginJunoFishingSession
// 0x0008 (0x0008 - 0x0000)
struct JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession) == 0x000008, "Wrong alignment on JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession");
static_assert(sizeof(JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession) == 0x000008, "Wrong size on JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession, PlayerPawn) == 0x000000, "Member 'JunoFishingBlueprintLibrary_FireEvent_BeginJunoFishingSession::PlayerPawn' has a wrong offset!");

// Function JunoFishing.JunoFishingBlueprintLibrary.FireEvent_EndJunoFishingSession
// 0x0050 (0x0050 - 0x0000)
struct JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortWorldItemDefinition*         ItemFished;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromHotspot;                                      // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerSpawnedHotspot;                           // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 HotspotTierTag;                                    // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WaterBodyName;                                     // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CatchTypeName;                                     // 0x0038(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           ItemUsedToFish;                                    // 0x0048(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession) == 0x000008, "Wrong alignment on JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession");
static_assert(sizeof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession) == 0x000050, "Wrong size on JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, PlayerPawn) == 0x000000, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, ItemFished) == 0x000008, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::ItemFished' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, bFromHotspot) == 0x000010, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::bFromHotspot' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, bIsPlayerSpawnedHotspot) == 0x000011, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::bIsPlayerSpawnedHotspot' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, HotspotTierTag) == 0x000018, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::HotspotTierTag' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, WaterBodyName) == 0x000028, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::WaterBodyName' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, CatchTypeName) == 0x000038, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::CatchTypeName' has a wrong offset!");
static_assert(offsetof(JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession, ItemUsedToFish) == 0x000048, "Member 'JunoFishingBlueprintLibrary_FireEvent_EndJunoFishingSession::ItemUsedToFish' has a wrong offset!");

}

