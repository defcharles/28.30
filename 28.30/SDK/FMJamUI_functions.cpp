#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMJamUI

#include "Basic.hpp"

#include "FMJamUI_classes.hpp"
#include "FMJamUI_parameters.hpp"


namespace SDK
{

// Function FMJamUI.JamUIManagerComponent_SongIndicators.ClearJamIndicators
// (Final, Native, Public, BlueprintCallable)

void UJamUIManagerComponent_SongIndicators::ClearJamIndicators()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearJamIndicators");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMJamUI.JamUIManagerComponent_SongIndicators.RebuildJamSongIndicatorsForPlayspace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AJamPlayspace*                    Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJamUIManagerComponent_SongIndicators::RebuildJamSongIndicatorsForPlayspace(class AJamPlayspace* Playspace)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RebuildJamSongIndicatorsForPlayspace");

	Params::JamUIManagerComponent_SongIndicators_RebuildJamSongIndicatorsForPlayspace Parms{};

	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMJamUI.JamSongIndicator.OnDistanceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJamSongIndicator::OnDistanceChanged(int32 Distance)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDistanceChanged");

	Params::JamSongIndicator_OnDistanceChanged Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMJamUI.JamSongIndicator.OnInitInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UCatalogData*                     Song                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFMJamLoopType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJamSongIndicator::OnInitInfo(const class UCatalogData* Song, EFMJamLoopType Type)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInitInfo");

	Params::JamSongIndicator_OnInitInfo Parms{};

	Parms.Song = Song;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMJamUI.JamSongIndicator.OnScreenClampChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsClamped                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJamSongIndicator::OnScreenClampChanged(bool bIsClamped)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnScreenClampChanged");

	Params::JamSongIndicator_OnScreenClampChanged Parms{};

	Parms.bIsClamped = bIsClamped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FMJamUI.JamSongIndicator.GetIndicatedPlayerStateAthena
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AFortPlayerStateAthena*     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class AFortPlayerStateAthena* UJamSongIndicator::GetIndicatedPlayerStateAthena() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIndicatedPlayerStateAthena");

	Params::JamSongIndicator_GetIndicatedPlayerStateAthena Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

