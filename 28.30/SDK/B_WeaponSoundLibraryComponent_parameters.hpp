#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WeaponSoundLibraryComponent

#include "Basic.hpp"

#include "SoundLibrary_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "MetasoundEngine_structs.hpp"
#include "MetasoundFrontend_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.ValidateModMetasounds
// 0x0018 (0x0018 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_ValidateModMetasounds final
{
public:
	class UObject*                                OnepMetaSoundPatch;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ThreepMetaSoundPatch;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldBuild;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_ValidateModMetasounds");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds) == 0x000018, "Wrong size on B_WeaponSoundLibraryComponent_C_ValidateModMetasounds");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds, OnepMetaSoundPatch) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_ValidateModMetasounds::OnepMetaSoundPatch' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds, ThreepMetaSoundPatch) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_ValidateModMetasounds::ThreepMetaSoundPatch' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds, bShouldBuild) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_ValidateModMetasounds::bShouldBuild' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'B_WeaponSoundLibraryComponent_C_ValidateModMetasounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'B_WeaponSoundLibraryComponent_C_ValidateModMetasounds::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ValidateModMetasounds, CallFunc_IsLocallyViewed_ReturnValue) == 0x000013, "Member 'B_WeaponSoundLibraryComponent_C_ValidateModMetasounds::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.TryHandleFireEvent
// 0x0048 (0x0048 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_TryHandleFireEvent final
{
public:
	struct FGameplayTag                           Event;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_DynamicCast_AsFort_Weapon;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioParameterComponent*               CallFunc_GetAudioParameterComponent_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFiringRate_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAudioParameterComponent_Weapon*    K2Node_DynamicCast_AsFort_Audio_Parameter_Component_Weapon; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_TryHandleFireEvent");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent) == 0x000048, "Wrong size on B_WeaponSoundLibraryComponent_C_TryHandleFireEvent");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, Event) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::Event' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, Component) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::Component' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, K2Node_DynamicCast_AsFort_Weapon) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::K2Node_DynamicCast_AsFort_Weapon' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_MatchesTag_ReturnValue) == 0x000021, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_GetAudioParameterComponent_ReturnValue) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_GetAudioParameterComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_GetFiringRate_ReturnValue) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_GetFiringRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, K2Node_DynamicCast_AsFort_Audio_Parameter_Component_Weapon) == 0x000038, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::K2Node_DynamicCast_AsFort_Audio_Parameter_Component_Weapon' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_TryHandleFireEvent, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'B_WeaponSoundLibraryComponent_C_TryHandleFireEvent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.StopComponentOnDeath
// 0x0040 (0x0040 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_StopComponentOnDeath final
{
public:
	class AActor*                                 DeadActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopEvent_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopEvent_ReturnValue_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_StopComponentOnDeath");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath) == 0x000040, "Wrong size on B_WeaponSoundLibraryComponent_C_StopComponentOnDeath");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, DeadActor) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::DeadActor' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, Damage) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::Damage' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, InstigatedBy) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, HitLocation) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::HitLocation' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, DamageCauser) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, CallFunc_StopEvent_ReturnValue) == 0x000038, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::CallFunc_StopEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_StopComponentOnDeath, CallFunc_StopEvent_ReturnValue_1) == 0x000039, "Member 'B_WeaponSoundLibraryComponent_C_StopComponentOnDeath::CallFunc_StopEvent_ReturnValue_1' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.SetModMS
// 0x0050 (0x0050 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_SetModMS final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortWeaponModAudioData*>        CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWeaponModAudioData*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundPatch*                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_SetModMS) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_SetModMS");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_SetModMS) == 0x000050, "Wrong size on B_WeaponSoundLibraryComponent_C_SetModMS");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, Temp_bool_Variable) == 0x000004, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_Map_Values_Values) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_IsLocallyViewed_ReturnValue) == 0x000039, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, K2Node_Select_Default) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetModMS, CallFunc_Array_AddUnique_ReturnValue) == 0x000048, "Member 'B_WeaponSoundLibraryComponent_C_SetModMS::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.SetBaseMS
// 0x0048 (0x0048 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_SetBaseMS final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash)
	TArray<class USoundBase*>                     CallFunc_GetSoundsFromEvent_Out_Sounds;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_DynamicCast_AsMeta_Sound_Source;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_SetBaseMS) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_SetBaseMS");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_SetBaseMS) == 0x000048, "Wrong size on B_WeaponSoundLibraryComponent_C_SetBaseMS");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, Temp_struct_Variable) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, Temp_struct_Variable_1) == 0x000004, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, CallFunc_IsLocallyViewed_ReturnValue) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, Temp_bool_Variable) == 0x000009, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, K2Node_Select_Default) == 0x00000C, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, CallFunc_GetSoundsFromEvent_Out_Sounds) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::CallFunc_GetSoundsFromEvent_Out_Sounds' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, K2Node_DynamicCast_AsMeta_Sound_Source) == 0x000038, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::K2Node_DynamicCast_AsMeta_Sound_Source' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_SetBaseMS, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'B_WeaponSoundLibraryComponent_C_SetBaseMS::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_WeaponSoundLibraryComponent_C_ReceiveEndPlay");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_WeaponSoundLibraryComponent_C_ReceiveEndPlay");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.OnSoundStopped
// 0x0030 (0x0030 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_OnSoundStopped final
{
public:
	struct FGameplayTag                           InEventName;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        InComponent;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bStopped;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput;       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_OnSoundStopped) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_OnSoundStopped");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_OnSoundStopped) == 0x000030, "Wrong size on B_WeaponSoundLibraryComponent_C_OnSoundStopped");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundStopped, InEventName) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundStopped::InEventName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundStopped, InComponent) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundStopped::InComponent' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundStopped, bStopped) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundStopped::bStopped' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundStopped, CallFunc_SetTriggerParameter_self_CastInput) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundStopped::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundStopped, CallFunc_MatchesTag_ReturnValue) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundStopped::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.OnSoundPlayed
// 0x0010 (0x0010 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_OnSoundPlayed final
{
public:
	struct FGameplayTag                           InEventName;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        InComponent;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_OnSoundPlayed) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_OnSoundPlayed");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_OnSoundPlayed) == 0x000010, "Wrong size on B_WeaponSoundLibraryComponent_C_OnSoundPlayed");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundPlayed, InEventName) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundPlayed::InEventName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnSoundPlayed, InComponent) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_OnSoundPlayed::InComponent' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.OnModRemoved
// 0x0008 (0x0008 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_OnModRemoved final
{
public:
	const class UFortWeaponModAudioData*          InModAudioData;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_OnModRemoved) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_OnModRemoved");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_OnModRemoved) == 0x000008, "Wrong size on B_WeaponSoundLibraryComponent_C_OnModRemoved");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnModRemoved, InModAudioData) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_OnModRemoved::InModAudioData' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.OnModApplied
// 0x0008 (0x0008 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_OnModApplied final
{
public:
	const class UFortWeaponModAudioData*          InModAudioData;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_OnModApplied) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_OnModApplied");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_OnModApplied) == 0x000008, "Wrong size on B_WeaponSoundLibraryComponent_C_OnModApplied");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_OnModApplied, InModAudioData) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_OnModApplied::InModAudioData' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.GetSoundsFromEvent
// 0x0070 (0x0070 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent final
{
public:
	struct FGameplayTag                           InEventName;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundBase*>                     Out_Sounds;                                        // 0x0008(0x0010)(Parm, OutParm)
	class UB_WeaponSoundLibraryContext_C*         WeaponContext;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USoundBase*>                     Sounds;                                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FSoundLibraryPlayResult                CallFunc_PlayEvent_ReturnValue;                    // 0x0030(0x0018)(ContainsInstancedReference)
	TArray<class USoundBase*>                     CallFunc_GetRetrievedSounds_GatheredSounds;        // 0x0048(0x0010)(ReferenceParm)
	class USoundLibraryContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_WeaponSoundLibraryContext_C*         K2Node_DynamicCast_AsB_Weapon_Sound_Library_Context; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent) == 0x000070, "Wrong size on B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, InEventName) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::InEventName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, Out_Sounds) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::Out_Sounds' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, WeaponContext) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::WeaponContext' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, Sounds) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::Sounds' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, CallFunc_PlayEvent_ReturnValue) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::CallFunc_PlayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, CallFunc_GetRetrievedSounds_GatheredSounds) == 0x000048, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::CallFunc_GetRetrievedSounds_GatheredSounds' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, CallFunc_GetContext_ReturnValue) == 0x000058, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, K2Node_DynamicCast_AsB_Weapon_Sound_Library_Context) == 0x000060, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::K2Node_DynamicCast_AsB_Weapon_Sound_Library_Context' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'B_WeaponSoundLibraryComponent_C_GetSoundsFromEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.ExecuteUbergraph_B_WeaponSoundLibraryComponent
// 0x0058 (0x0058 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortWeaponModAudioData*          K2Node_Event_InModAudioData;                       // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DeadActor, float Damage, class AFortPawn* InstigatedBy, const struct FVector& HitLocation, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeaponRanged*                      K2Node_DynamicCast_AsFort_Weapon_Ranged;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortWeaponModAudioData*          K2Node_Event_InModAudioData_1;                     // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent) == 0x000058, "Wrong size on B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, EntryPoint) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_Event_InModAudioData) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_Event_InModAudioData' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_DynamicCast_AsFort_Weapon_Ranged) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_DynamicCast_AsFort_Weapon_Ranged' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_Event_InModAudioData_1) == 0x000038, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_Event_InModAudioData_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, CallFunc_GetInstigator_ReturnValue) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000048, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent, K2Node_Event_EndPlayReason) == 0x000051, "Member 'B_WeaponSoundLibraryComponent_C_ExecuteUbergraph_B_WeaponSoundLibraryComponent::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.CreateModSoundLibrary
// 0x0028 (0x0028 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	class USoundLibrary*                          CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       CallFunc_GetCachedMetaSound_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0024(0x0004)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary) == 0x000028, "Wrong size on B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, Temp_struct_Variable) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, Temp_struct_Variable_1) == 0x000004, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, Temp_bool_Variable) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, CallFunc_GetCachedMetaSound_ReturnValue) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::CallFunc_GetCachedMetaSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, CallFunc_IsLocallyViewed_ReturnValue) == 0x000021, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary, K2Node_Select_Default) == 0x000024, "Member 'B_WeaponSoundLibraryComponent_C_CreateModSoundLibrary::K2Node_Select_Default' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.CreateModMetaSound
// 0x04B0 (0x04B0 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_CreateModMetaSound final
{
public:
	struct FMetaSoundBuilderNodeOutputHandle      SourceFireRateOutput;                              // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundBuilderNodeOutputHandle      SourceStartingAmmoOutpu;                           // 0x0020(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundBuilderNodeOutputHandle      BaseWeaponGunshotOutHandle;                        // 0x0040(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundNodeHandle                   ModNodeHandle;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FMetaSoundBuilderNodeOutputHandle      SourceOnStopOutputHandle;                          // 0x0070(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundNodeHandle                   BaseWeaponNodeHandle;                              // 0x0090(0x0010)(Edit, BlueprintVisible, NoDestructor)
	class UMetaSoundSourceBuilder*                MSSBuilder;                                        // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundBuilderNodeInputHandle       SourceOnFinishedNodeInput;                         // 0x00A8(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundBuilderNodeOutputHandle      SourceOnPlayNodeOutput;                            // 0x00C8(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class USoundClass*                            Temp_object_Variable;                              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundOutputAudioFormat                   Temp_byte_Variable;                                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundOutputAudioFormat                   Temp_byte_Variable_1;                              // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundBuilderSubsystem*             CallFunc_GetEngineSubsystem_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSet<class USoundConcurrency*>                K2Node_MakeSet_Set;                                // 0x0100(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundClass*                            Temp_object_Variable_1;                            // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundLibraryContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortWeaponSoundLibraryContext*         K2Node_DynamicCast_AsFort_Weapon_Sound_Library_Context; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundClass*                            K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      Temp_object_Variable_2;                            // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class USoundConcurrency*>                K2Node_MakeSet_Set_1;                              // 0x0198(0x0050)()
	EMetaSoundBuilderResult                       CallFunc_AddInterface_OutResult;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddInterface_OutResult_1;                 // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddInterface_OutResult_2;                 // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddInterface_OutResult_3;                 // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x01EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddInterface_OutResult_4;                 // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue_1;            // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue_2;            // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      Temp_object_Variable_3;                            // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMetaSoundPatch*                        CallFunc_Array_Get_Item;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class USoundConcurrency*>                K2Node_Select_Default_1;                           // 0x0220(0x0050)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderOptions               K2Node_MakeStruct_MetaSoundBuilderOptions;         // 0x02A0(0x0018)(NoDestructor)
	TScriptInterface<class IMetaSoundDocumentInterface> CallFunc_Build_ReturnValue;                        // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeOutputByName_OutResult;           // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeOutputHandle      CallFunc_FindNodeOutputByName_ReturnValue;         // 0x02CC(0x0020)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_DynamicCast_AsMeta_Sound_Source;            // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodes_OutResult;                   // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodeOutputsToMatchingGraphInterfaceOutputs_OutResult; // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMetaSoundBuilderNodeInputHandle> CallFunc_ConnectNodeOutputsToMatchingGraphInterfaceOutputs_ReturnValue; // 0x0300(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeInputByName_OutResult;            // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_FindNodeInputByName_ReturnValue;          // 0x0314(0x0020)(NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodes_OutResult_1;                 // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeOutputByName_OutResult_1;         // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeOutputHandle      CallFunc_FindNodeOutputByName_ReturnValue_1;       // 0x0338(0x0020)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_8;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_9;                    // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_10;                   // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B[0x5];                                      // 0x035B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMetaSoundDocumentInterface> CallFunc_AddNode_NodeClass_CastInput;              // 0x0360(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddNode_OutResult;                        // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundNodeHandle                   CallFunc_AddNode_ReturnValue;                      // 0x0374(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_11;                   // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeInputByName_OutResult_1;          // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_FindNodeInputByName_ReturnValue_1;        // 0x0388(0x0020)(NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddGraphInputNode_OutResult;              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeOutputHandle      CallFunc_AddGraphInputNode_ReturnValue;            // 0x03AC(0x0020)(NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodes_OutResult_2;                 // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_12;                   // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_13;                   // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_14;                   // 0x03CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeInputByName_OutResult_2;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_FindNodeInputByName_ReturnValue_2;        // 0x03D4(0x0020)(NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodes_OutResult_3;                 // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMetaSoundDocumentInterface> CallFunc_AddNode_NodeClass_CastInput_1;            // 0x03F8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_AddNode_OutResult_1;                      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundNodeHandle                   CallFunc_AddNode_ReturnValue_1;                    // 0x040C(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_15;                   // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_16;                   // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_17;                   // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F[0x1];                                      // 0x041F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      Temp_object_Variable_4;                            // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue_3;            // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      K2Node_Select_Default_2;                           // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMetaSoundOutputAudioFormat                   K2Node_Select_Default_3;                           // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      K2Node_Select_Default_4;                           // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundBuilderNodeOutputHandle      CallFunc_CreateSourceBuilder_OnPlayNodeOutput;     // 0x0448(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_CreateSourceBuilder_OnFinishedNodeInput;  // 0x0468(0x0020)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FMetaSoundBuilderNodeInputHandle> CallFunc_CreateSourceBuilder_AudioOutNodeInputs;   // 0x0488(0x0010)(ReferenceParm)
	EMetaSoundBuilderResult                       CallFunc_CreateSourceBuilder_OutResult;            // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSourceBuilder*                CallFunc_CreateSourceBuilder_ReturnValue;          // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_18;                   // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_CreateModMetaSound");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound) == 0x0004B0, "Wrong size on B_WeaponSoundLibraryComponent_C_CreateModMetaSound");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, SourceFireRateOutput) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::SourceFireRateOutput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, SourceStartingAmmoOutpu) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::SourceStartingAmmoOutpu' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, BaseWeaponGunshotOutHandle) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::BaseWeaponGunshotOutHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, ModNodeHandle) == 0x000060, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::ModNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, SourceOnStopOutputHandle) == 0x000070, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::SourceOnStopOutputHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, BaseWeaponNodeHandle) == 0x000090, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::BaseWeaponNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, MSSBuilder) == 0x0000A0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::MSSBuilder' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, SourceOnFinishedNodeInput) == 0x0000A8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::SourceOnFinishedNodeInput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, SourceOnPlayNodeOutput) == 0x0000C8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::SourceOnPlayNodeOutput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_object_Variable) == 0x0000E8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_bool_Variable) == 0x0000F0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_byte_Variable) == 0x0000F1, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_byte_Variable_1) == 0x0000F2, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_GetEngineSubsystem_ReturnValue) == 0x0000F8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_MakeSet_Set) == 0x000100, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsValid_ReturnValue_1) == 0x000151, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_object_Variable_1) == 0x000158, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsLocallyViewed_ReturnValue) == 0x000160, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_GetContext_ReturnValue) == 0x000168, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_DynamicCast_AsFort_Weapon_Sound_Library_Context) == 0x000170, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_DynamicCast_AsFort_Weapon_Sound_Library_Context' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsValid_ReturnValue_2) == 0x000179, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_bool_Variable_1) == 0x00017A, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_Select_Default) == 0x000180, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_object_Variable_2) == 0x000188, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_bool_Variable_2) == 0x000190, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_MakeSet_Set_1) == 0x000198, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_MakeSet_Set_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddInterface_OutResult) == 0x0001E8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddInterface_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess) == 0x0001E9, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddInterface_OutResult_1) == 0x0001EA, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddInterface_OutResult_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001EB, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddInterface_OutResult_2) == 0x0001EC, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddInterface_OutResult_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_2) == 0x0001ED, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddInterface_OutResult_3) == 0x0001EE, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddInterface_OutResult_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_3) == 0x0001EF, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddInterface_OutResult_4) == 0x0001F0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddInterface_OutResult_4' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_4) == 0x0001F1, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsLocallyViewed_ReturnValue_1) == 0x0001F2, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsLocallyViewed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsLocallyViewed_ReturnValue_2) == 0x0001F3, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsLocallyViewed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_object_Variable_3) == 0x0001F8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_int_Array_Index_Variable) == 0x000200, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Array_Length_ReturnValue) == 0x000204, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Array_Get_Item) == 0x000208, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_bool_Variable_3) == 0x000210, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_int_Loop_Counter_Variable) == 0x000214, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_bool_Variable_4) == 0x000218, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Less_IntInt_ReturnValue) == 0x000219, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_Select_Default_1) == 0x000220, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Add_IntInt_ReturnValue) == 0x000270, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_GetObjectName_ReturnValue) == 0x000278, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Concat_StrStr_ReturnValue) == 0x000288, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Conv_StringToName_ReturnValue) == 0x000298, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_MakeStruct_MetaSoundBuilderOptions) == 0x0002A0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_MakeStruct_MetaSoundBuilderOptions' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_Build_ReturnValue) == 0x0002B8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_Build_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeOutputByName_OutResult) == 0x0002C8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeOutputByName_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeOutputByName_ReturnValue) == 0x0002CC, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeOutputByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_DynamicCast_AsMeta_Sound_Source) == 0x0002F0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_DynamicCast_AsMeta_Sound_Source' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_DynamicCast_bSuccess_1) == 0x0002F8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_ConnectNodes_OutResult) == 0x0002F9, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_ConnectNodes_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_5) == 0x0002FA, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_6) == 0x0002FB, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_ConnectNodeOutputsToMatchingGraphInterfaceOutputs_OutResult) == 0x0002FC, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_ConnectNodeOutputsToMatchingGraphInterfaceOutputs_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_ConnectNodeOutputsToMatchingGraphInterfaceOutputs_ReturnValue) == 0x000300, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_ConnectNodeOutputsToMatchingGraphInterfaceOutputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_7) == 0x000310, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeInputByName_OutResult) == 0x000311, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeInputByName_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeInputByName_ReturnValue) == 0x000314, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeInputByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_ConnectNodes_OutResult_1) == 0x000334, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_ConnectNodes_OutResult_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeOutputByName_OutResult_1) == 0x000335, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeOutputByName_OutResult_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeOutputByName_ReturnValue_1) == 0x000338, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeOutputByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_8) == 0x000358, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_9) == 0x000359, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_9' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_10) == 0x00035A, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_10' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddNode_NodeClass_CastInput) == 0x000360, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddNode_NodeClass_CastInput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddNode_OutResult) == 0x000370, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddNode_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddNode_ReturnValue) == 0x000374, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddNode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_11) == 0x000384, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_11' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeInputByName_OutResult_1) == 0x000385, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeInputByName_OutResult_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeInputByName_ReturnValue_1) == 0x000388, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeInputByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddGraphInputNode_OutResult) == 0x0003A8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddGraphInputNode_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddGraphInputNode_ReturnValue) == 0x0003AC, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddGraphInputNode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_ConnectNodes_OutResult_2) == 0x0003CC, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_ConnectNodes_OutResult_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_12) == 0x0003CD, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_12' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_13) == 0x0003CE, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_13' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_14) == 0x0003CF, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_14' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeInputByName_OutResult_2) == 0x0003D0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeInputByName_OutResult_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_FindNodeInputByName_ReturnValue_2) == 0x0003D4, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_FindNodeInputByName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_ConnectNodes_OutResult_3) == 0x0003F4, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_ConnectNodes_OutResult_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddNode_NodeClass_CastInput_1) == 0x0003F8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddNode_NodeClass_CastInput_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddNode_OutResult_1) == 0x000408, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddNode_OutResult_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_AddNode_ReturnValue_1) == 0x00040C, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_AddNode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_15) == 0x00041C, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_15' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_16) == 0x00041D, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_16' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_17) == 0x00041E, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_17' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, Temp_object_Variable_4) == 0x000420, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_IsLocallyViewed_ReturnValue_3) == 0x000428, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_IsLocallyViewed_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_Select_Default_2) == 0x000430, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_Select_Default_3) == 0x000438, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_Select_Default_4) == 0x000440, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_CreateSourceBuilder_OnPlayNodeOutput) == 0x000448, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_CreateSourceBuilder_OnPlayNodeOutput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_CreateSourceBuilder_OnFinishedNodeInput) == 0x000468, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_CreateSourceBuilder_OnFinishedNodeInput' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_CreateSourceBuilder_AudioOutNodeInputs) == 0x000488, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_CreateSourceBuilder_AudioOutNodeInputs' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_CreateSourceBuilder_OutResult) == 0x000498, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_CreateSourceBuilder_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, CallFunc_CreateSourceBuilder_ReturnValue) == 0x0004A0, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::CallFunc_CreateSourceBuilder_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CreateModMetaSound, K2Node_SwitchEnum_CmpSuccess_18) == 0x0004A8, "Member 'B_WeaponSoundLibraryComponent_C_CreateModMetaSound::K2Node_SwitchEnum_CmpSuccess_18' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.ConnectNodesIO
// 0x0080 (0x0080 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_ConnectNodesIO final
{
public:
	class UMetaSoundBuilderBase*                  BuilderRef;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   InputName;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutputName;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundNodeHandle                   BaseNodeHandle;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FMetaSoundNodeHandle                   ModNodeHandle;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	EMetaSoundBuilderResult                       CallFunc_FindNodeInputByName_OutResult;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_FindNodeInputByName_ReturnValue;          // 0x0034(0x0020)(NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeOutputByName_OutResult;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeOutputHandle      CallFunc_FindNodeOutputByName_ReturnValue;         // 0x0058(0x0020)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodes_OutResult;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_ConnectNodesIO");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO) == 0x000080, "Wrong size on B_WeaponSoundLibraryComponent_C_ConnectNodesIO");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, BuilderRef) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::BuilderRef' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, InputName) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::InputName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, OutputName) == 0x00000C, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::OutputName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, BaseNodeHandle) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::BaseNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, ModNodeHandle) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::ModNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, CallFunc_FindNodeInputByName_OutResult) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::CallFunc_FindNodeInputByName_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, CallFunc_FindNodeInputByName_ReturnValue) == 0x000034, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::CallFunc_FindNodeInputByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, CallFunc_FindNodeOutputByName_OutResult) == 0x000054, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::CallFunc_FindNodeOutputByName_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, CallFunc_FindNodeOutputByName_ReturnValue) == 0x000058, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::CallFunc_FindNodeOutputByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, CallFunc_ConnectNodes_OutResult) == 0x000079, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::CallFunc_ConnectNodes_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, K2Node_SwitchEnum_CmpSuccess_1) == 0x00007A, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectNodesIO, K2Node_SwitchEnum_CmpSuccess_2) == 0x00007B, "Member 'B_WeaponSoundLibraryComponent_C_ConnectNodesIO::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.ConnectInterfaceInputs
// 0x0048 (0x0048 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs final
{
public:
	class UMetaSoundBuilderBase*                  BuilderRef;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundNodeHandle                   BaseWeaponNodeHandle;                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   InputName;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeInputByName_OutResult;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_FindNodeInputByName_ReturnValue;          // 0x0020(0x0020)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_ConnectNodeInputToGraphInput_OutResult;   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs) == 0x000048, "Wrong size on B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, BuilderRef) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::BuilderRef' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, BaseWeaponNodeHandle) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::BaseWeaponNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, InputName) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::InputName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, CallFunc_FindNodeInputByName_OutResult) == 0x00001C, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::CallFunc_FindNodeInputByName_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, CallFunc_FindNodeInputByName_ReturnValue) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::CallFunc_FindNodeInputByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, CallFunc_ConnectNodeInputToGraphInput_OutResult) == 0x000041, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::CallFunc_ConnectNodeInputToGraphInput_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs, K2Node_SwitchEnum_CmpSuccess_1) == 0x000042, "Member 'B_WeaponSoundLibraryComponent_C_ConnectInterfaceInputs::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.CheckIfSuppressor
// 0x00D0 (0x00D0 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_CheckIfSuppressor final
{
public:
	class UMetaSoundBuilderBase*                  BuilderRef;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundNodeHandle                   BaseNodeHandle;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FMetaSoundNodeHandle                   ModNodeHandle;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	const class UObject*                          ModRef;                                            // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaSoundBuilderResult                       CallFunc_FindNodeInputByName_OutResult;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetaSoundBuilderNodeInputHandle       CallFunc_FindNodeInputByName_ReturnValue;          // 0x0044(0x0020)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundBuilderSubsystem*             CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMetasoundFrontendLiteral              CallFunc_CreateObjectMetaSoundLiteral_ReturnValue; // 0x0070(0x0058)()
	EMetaSoundBuilderResult                       CallFunc_SetNodeInputDefault_OutResult;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_CheckIfSuppressor");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor) == 0x0000D0, "Wrong size on B_WeaponSoundLibraryComponent_C_CheckIfSuppressor");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, BuilderRef) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::BuilderRef' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, BaseNodeHandle) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::BaseNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, ModNodeHandle) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::ModNodeHandle' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, ModRef) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::ModRef' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_GetObjectName_ReturnValue) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_Contains_ReturnValue) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_FindNodeInputByName_OutResult) == 0x000041, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_FindNodeInputByName_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_FindNodeInputByName_ReturnValue) == 0x000044, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_FindNodeInputByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000068, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_CreateObjectMetaSoundLiteral_ReturnValue) == 0x000070, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_CreateObjectMetaSoundLiteral_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, CallFunc_SetNodeInputDefault_OutResult) == 0x0000C8, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::CallFunc_SetNodeInputDefault_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_CheckIfSuppressor, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000C9, "Member 'B_WeaponSoundLibraryComponent_C_CheckIfSuppressor::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.BuiltSoundFireRateInit
// 0x00C8 (0x00C8 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit final
{
public:
	class UMetaSoundBuilderBase*                  BuilderRef;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundBuilderSubsystem*             CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_DynamicCast_AsFort_Weapon;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFiringRate_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CreateFloatMetaSoundLiteral_DataType;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMetasoundFrontendLiteral              CallFunc_CreateFloatMetaSoundLiteral_ReturnValue;  // 0x0058(0x0058)()
	EMetaSoundBuilderResult                       CallFunc_SetGraphInputDefault_OutResult;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit) == 0x0000C8, "Wrong size on B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, BuilderRef) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::BuilderRef' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, Temp_real_Variable) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, Temp_bool_Variable) == 0x00000C, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, K2Node_DynamicCast_AsFort_Weapon) == 0x000020, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::K2Node_DynamicCast_AsFort_Weapon' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_GetObjectName_ReturnValue) == 0x000030, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_Contains_ReturnValue) == 0x000041, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_GetFiringRate_ReturnValue) == 0x000044, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_GetFiringRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_SafeDivide_ReturnValue) == 0x000048, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, K2Node_Select_Default) == 0x000050, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_CreateFloatMetaSoundLiteral_DataType) == 0x000054, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_CreateFloatMetaSoundLiteral_DataType' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_CreateFloatMetaSoundLiteral_ReturnValue) == 0x000058, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_CreateFloatMetaSoundLiteral_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_SetGraphInputDefault_OutResult) == 0x0000B0, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_SetGraphInputDefault_OutResult' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, K2Node_SwitchEnum_CmpSuccess) == 0x0000B1, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, CallFunc_SafeDivide_B_ImplicitCast) == 0x0000B8, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit, K2Node_Select_Option_0_ImplicitCast) == 0x0000C0, "Member 'B_WeaponSoundLibraryComponent_C_BuiltSoundFireRateInit::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");

// Function B_WeaponSoundLibraryComponent.B_WeaponSoundLibraryComponent_C.AddConnectedGraphInput
// 0x0020 (0x0020 - 0x0000)
struct B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput final
{
public:
	class FName                                   InputName;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DataType;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMetaSoundSourceBuilder*                BuilderRef;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMetaSoundNodeHandle                   BaseWeaponNodeHandleRef;                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput) == 0x000008, "Wrong alignment on B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput");
static_assert(sizeof(B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput) == 0x000020, "Wrong size on B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput, InputName) == 0x000000, "Member 'B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput::InputName' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput, DataType) == 0x000004, "Member 'B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput::DataType' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput, BuilderRef) == 0x000008, "Member 'B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput::BuilderRef' has a wrong offset!");
static_assert(offsetof(B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput, BaseWeaponNodeHandleRef) == 0x000010, "Member 'B_WeaponSoundLibraryComponent_C_AddConnectedGraphInput::BaseWeaponNodeHandleRef' has a wrong offset!");

}

