#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FabricUI

#include "Basic.hpp"

#include "ModelViewViewModel_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class FabricUI.FabricInteractableViewModel
// 0x0038 (0x00A0 - 0x0068)
class UFabricInteractableViewModel : public UMVVMViewModelBase
{
public:
	class FText                                   Label;                                             // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   Value;                                             // 0x0080(0x0018)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                          bEnabled;                                          // 0x0098(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bVisible;                                          // 0x0099(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricInteractableViewModel">();
	}
	static class UFabricInteractableViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricInteractableViewModel>();
	}
};
static_assert(alignof(UFabricInteractableViewModel) == 0x000008, "Wrong alignment on UFabricInteractableViewModel");
static_assert(sizeof(UFabricInteractableViewModel) == 0x0000A0, "Wrong size on UFabricInteractableViewModel");
static_assert(offsetof(UFabricInteractableViewModel, Label) == 0x000068, "Member 'UFabricInteractableViewModel::Label' has a wrong offset!");
static_assert(offsetof(UFabricInteractableViewModel, Value) == 0x000080, "Member 'UFabricInteractableViewModel::Value' has a wrong offset!");
static_assert(offsetof(UFabricInteractableViewModel, bEnabled) == 0x000098, "Member 'UFabricInteractableViewModel::bEnabled' has a wrong offset!");
static_assert(offsetof(UFabricInteractableViewModel, bVisible) == 0x000099, "Member 'UFabricInteractableViewModel::bVisible' has a wrong offset!");

// Class FabricUI.FabricButtonBaseViewModel
// 0x0008 (0x00A8 - 0x00A0)
class UFabricButtonBaseViewModel final : public UFabricInteractableViewModel
{
public:
	ECheckBoxState                                ToggleState;                                       // 0x00A0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricButtonBaseViewModel">();
	}
	static class UFabricButtonBaseViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricButtonBaseViewModel>();
	}
};
static_assert(alignof(UFabricButtonBaseViewModel) == 0x000008, "Wrong alignment on UFabricButtonBaseViewModel");
static_assert(sizeof(UFabricButtonBaseViewModel) == 0x0000A8, "Wrong size on UFabricButtonBaseViewModel");
static_assert(offsetof(UFabricButtonBaseViewModel, ToggleState) == 0x0000A0, "Member 'UFabricButtonBaseViewModel::ToggleState' has a wrong offset!");

// Class FabricUI.FabricCarouselViewModel
// 0x0008 (0x00A8 - 0x00A0)
class UFabricCarouselViewModel final : public UFabricInteractableViewModel
{
public:
	bool                                          bPresetEnabled;                                    // 0x00A0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShowBorder;                                       // 0x00A1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricCarouselViewModel">();
	}
	static class UFabricCarouselViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricCarouselViewModel>();
	}
};
static_assert(alignof(UFabricCarouselViewModel) == 0x000008, "Wrong alignment on UFabricCarouselViewModel");
static_assert(sizeof(UFabricCarouselViewModel) == 0x0000A8, "Wrong size on UFabricCarouselViewModel");
static_assert(offsetof(UFabricCarouselViewModel, bPresetEnabled) == 0x0000A0, "Member 'UFabricCarouselViewModel::bPresetEnabled' has a wrong offset!");
static_assert(offsetof(UFabricCarouselViewModel, bShowBorder) == 0x0000A1, "Member 'UFabricCarouselViewModel::bShowBorder' has a wrong offset!");

// Class FabricUI.FabricGridStyle
// 0x0020 (0x0048 - 0x0028)
class UFabricGridStyle final : public UObject
{
public:
	struct FMargin                                Padding;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0039(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RowSpan;                                           // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColumnSpan;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricGridStyle">();
	}
	static class UFabricGridStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricGridStyle>();
	}
};
static_assert(alignof(UFabricGridStyle) == 0x000008, "Wrong alignment on UFabricGridStyle");
static_assert(sizeof(UFabricGridStyle) == 0x000048, "Wrong size on UFabricGridStyle");
static_assert(offsetof(UFabricGridStyle, Padding) == 0x000028, "Member 'UFabricGridStyle::Padding' has a wrong offset!");
static_assert(offsetof(UFabricGridStyle, HorizontalAlignment) == 0x000038, "Member 'UFabricGridStyle::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UFabricGridStyle, VerticalAlignment) == 0x000039, "Member 'UFabricGridStyle::VerticalAlignment' has a wrong offset!");
static_assert(offsetof(UFabricGridStyle, RowSpan) == 0x00003C, "Member 'UFabricGridStyle::RowSpan' has a wrong offset!");
static_assert(offsetof(UFabricGridStyle, ColumnSpan) == 0x000040, "Member 'UFabricGridStyle::ColumnSpan' has a wrong offset!");

// Class FabricUI.FabricKnobViewModel
// 0x0008 (0x00A8 - 0x00A0)
class UFabricKnobViewModel final : public UFabricInteractableViewModel
{
public:
	bool                                          bValueVisible;                                     // 0x00A0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricKnobViewModel">();
	}
	static class UFabricKnobViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricKnobViewModel>();
	}
};
static_assert(alignof(UFabricKnobViewModel) == 0x000008, "Wrong alignment on UFabricKnobViewModel");
static_assert(sizeof(UFabricKnobViewModel) == 0x0000A8, "Wrong size on UFabricKnobViewModel");
static_assert(offsetof(UFabricKnobViewModel, bValueVisible) == 0x0000A0, "Member 'UFabricKnobViewModel::bValueVisible' has a wrong offset!");

// Class FabricUI.FabricPageInfoViewModel
// 0x0008 (0x0070 - 0x0068)
class UFabricPageInfoViewModel final : public UMVVMViewModelBase
{
public:
	bool                                          bHasContent;                                       // 0x0068(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bActivePage;                                       // 0x0069(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricPageInfoViewModel">();
	}
	static class UFabricPageInfoViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricPageInfoViewModel>();
	}
};
static_assert(alignof(UFabricPageInfoViewModel) == 0x000008, "Wrong alignment on UFabricPageInfoViewModel");
static_assert(sizeof(UFabricPageInfoViewModel) == 0x000070, "Wrong size on UFabricPageInfoViewModel");
static_assert(offsetof(UFabricPageInfoViewModel, bHasContent) == 0x000068, "Member 'UFabricPageInfoViewModel::bHasContent' has a wrong offset!");
static_assert(offsetof(UFabricPageInfoViewModel, bActivePage) == 0x000069, "Member 'UFabricPageInfoViewModel::bActivePage' has a wrong offset!");

// Class FabricUI.FabricScreenWidget
// 0x0030 (0x0318 - 0x02E8)
class UFabricScreenWidget final : public UCommonUserWidget
{
public:
	class UInvalidationBox*                       InvalidationBox_RootBox;                           // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                              ScaleBox_ScreenScale;                              // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridPanel*                             GridPanel_ScreenGrid;                              // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                Spacer_ElementSpacer;                              // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x10];                                     // 0x0308(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFabricWidget* AttachFabricWidget(const TSubclassOf<class UFabricWidget>& FabricWidgetClass, const struct FVector2D& GridPosition);
	void SetScreenGridDimensions(const struct FVector2D& InNewDimensions);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricScreenWidget">();
	}
	static class UFabricScreenWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricScreenWidget>();
	}
};
static_assert(alignof(UFabricScreenWidget) == 0x000008, "Wrong alignment on UFabricScreenWidget");
static_assert(sizeof(UFabricScreenWidget) == 0x000318, "Wrong size on UFabricScreenWidget");
static_assert(offsetof(UFabricScreenWidget, InvalidationBox_RootBox) == 0x0002E8, "Member 'UFabricScreenWidget::InvalidationBox_RootBox' has a wrong offset!");
static_assert(offsetof(UFabricScreenWidget, ScaleBox_ScreenScale) == 0x0002F0, "Member 'UFabricScreenWidget::ScaleBox_ScreenScale' has a wrong offset!");
static_assert(offsetof(UFabricScreenWidget, GridPanel_ScreenGrid) == 0x0002F8, "Member 'UFabricScreenWidget::GridPanel_ScreenGrid' has a wrong offset!");
static_assert(offsetof(UFabricScreenWidget, Spacer_ElementSpacer) == 0x000300, "Member 'UFabricScreenWidget::Spacer_ElementSpacer' has a wrong offset!");

// Class FabricUI.FabricWidget
// 0x0010 (0x02F8 - 0x02E8)
class UFabricWidget final : public UCommonUserWidget
{
public:
	TSubclassOf<class UFabricGridStyle>           GridStyle;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFabricInteractableViewModel> ViewModelClass;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UFabricInteractableViewModel* GetFabricViewModel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricWidget">();
	}
	static class UFabricWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricWidget>();
	}
};
static_assert(alignof(UFabricWidget) == 0x000008, "Wrong alignment on UFabricWidget");
static_assert(sizeof(UFabricWidget) == 0x0002F8, "Wrong size on UFabricWidget");
static_assert(offsetof(UFabricWidget, GridStyle) == 0x0002E8, "Member 'UFabricWidget::GridStyle' has a wrong offset!");
static_assert(offsetof(UFabricWidget, ViewModelClass) == 0x0002F0, "Member 'UFabricWidget::ViewModelClass' has a wrong offset!");

// Class FabricUI.FabricWidgetComponent
// 0x0010 (0x0680 - 0x0670)
class UFabricWidgetComponent final : public UWidgetComponent
{
public:
	bool                                          bShouldSuscribeToSignificanceSubsystem;            // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_671[0xF];                                      // 0x0671(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetShouldSuscribeToSignificanceSubsystem(bool ShouldSuscribe);

	ETickMode GetTickMode() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricWidgetComponent">();
	}
	static class UFabricWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricWidgetComponent>();
	}
};
static_assert(alignof(UFabricWidgetComponent) == 0x000010, "Wrong alignment on UFabricWidgetComponent");
static_assert(sizeof(UFabricWidgetComponent) == 0x000680, "Wrong size on UFabricWidgetComponent");
static_assert(offsetof(UFabricWidgetComponent, bShouldSuscribeToSignificanceSubsystem) == 0x000670, "Member 'UFabricWidgetComponent::bShouldSuscribeToSignificanceSubsystem' has a wrong offset!");

// Class FabricUI.FabricWidgetTickControlSubsystem
// 0x0018 (0x0058 - 0x0040)
class UFabricWidgetTickControlSubsystem final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RegisterFabricWidgetComponent(class UFabricWidgetComponent* WidgetComponent);
	void UnregisterFabricWidgetComponent(class UFabricWidgetComponent* WidgetComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricWidgetTickControlSubsystem">();
	}
	static class UFabricWidgetTickControlSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricWidgetTickControlSubsystem>();
	}
};
static_assert(alignof(UFabricWidgetTickControlSubsystem) == 0x000008, "Wrong alignment on UFabricWidgetTickControlSubsystem");
static_assert(sizeof(UFabricWidgetTickControlSubsystem) == 0x000058, "Wrong size on UFabricWidgetTickControlSubsystem");

}

