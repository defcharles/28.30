#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Block_Toggle

#include "Basic.hpp"

#include "E_UI_ToggleType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.ExecuteUbergraph_WBP_UIKit_Block_Toggle
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_2;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_3;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue_1;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue_2;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_4;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_5;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle) == 0x000004, "Wrong alignment on WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle) == 0x000010, "Wrong size on WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_IsAnyAnimationPlaying_ReturnValue) == 0x000004, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_IsAnyAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_GetIsSelected_IsSelected) == 0x000005, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_GetIsSelected_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_GetIsSelected_IsSelected_1) == 0x000006, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_GetIsSelected_IsSelected_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_GetIsSelected_IsSelected_2) == 0x000007, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_GetIsSelected_IsSelected_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_GetIsSelected_IsSelected_3) == 0x000008, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_GetIsSelected_IsSelected_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_IsAnyAnimationPlaying_ReturnValue_1) == 0x000009, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_IsAnyAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_IsAnyAnimationPlaying_ReturnValue_2) == 0x00000B, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_IsAnyAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_GetIsSelected_IsSelected_4) == 0x00000C, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_GetIsSelected_IsSelected_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle, CallFunc_GetIsSelected_IsSelected_5) == 0x00000D, "Member 'WBP_UIKit_Block_Toggle_C_ExecuteUbergraph_WBP_UIKit_Block_Toggle::CallFunc_GetIsSelected_IsSelected_5' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_Block_Toggle_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_Block_Toggle_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.RefreshImageMID
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_RefreshImageMID final
{
public:
	class UMaterialInstanceDynamic*               NewMID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_RefreshImageMID) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Toggle_C_RefreshImageMID");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_RefreshImageMID) == 0x000010, "Wrong size on WBP_UIKit_Block_Toggle_C_RefreshImageMID");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_RefreshImageMID, NewMID) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_RefreshImageMID::NewMID' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_RefreshImageMID, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Block_Toggle_C_RefreshImageMID::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.SetBrush
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_SetBrush final
{
public:
	struct FSlateBrush                            InBrush;                                           // 0x0000(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_SetBrush) == 0x000010, "Wrong alignment on WBP_UIKit_Block_Toggle_C_SetBrush");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_SetBrush) == 0x0000C0, "Wrong size on WBP_UIKit_Block_Toggle_C_SetBrush");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetBrush, InBrush) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_SetBrush::InBrush' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.SetMaterial
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_SetMaterial final
{
public:
	const class UMaterialInstance*                InMaterial;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_SetMaterial) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Toggle_C_SetMaterial");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_SetMaterial) == 0x000008, "Wrong size on WBP_UIKit_Block_Toggle_C_SetMaterial");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetMaterial, InMaterial) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_SetMaterial::InMaterial' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_SetSelected) == 0x000001, "Wrong alignment on WBP_UIKit_Block_Toggle_C_SetSelected");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_SetSelected) == 0x000001, "Wrong size on WBP_UIKit_Block_Toggle_C_SetSelected");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetSelected, Selected) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_SetSelected::Selected' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.SetSize
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_SetSize final
{
public:
	struct FVector2D                              Desired_Size;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_SetSize) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Toggle_C_SetSize");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_SetSize) == 0x000010, "Wrong size on WBP_UIKit_Block_Toggle_C_SetSize");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetSize, Desired_Size) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_SetSize::Desired_Size' has a wrong offset!");

// Function WBP_UIKit_Block_Toggle.WBP_UIKit_Block_Toggle_C.SetToggleType
// 0x0014 (0x0014 - 0x0000)
struct WBP_UIKit_Block_Toggle_C_SetToggleType final
{
public:
	E_UI_ToggleType                               Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_ToggleType                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Toggle_C_SetToggleType) == 0x000004, "Wrong alignment on WBP_UIKit_Block_Toggle_C_SetToggleType");
static_assert(sizeof(WBP_UIKit_Block_Toggle_C_SetToggleType) == 0x000014, "Wrong size on WBP_UIKit_Block_Toggle_C_SetToggleType");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetToggleType, Type) == 0x000000, "Member 'WBP_UIKit_Block_Toggle_C_SetToggleType::Type' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetToggleType, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_Block_Toggle_C_SetToggleType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetToggleType, Temp_real_Variable) == 0x000004, "Member 'WBP_UIKit_Block_Toggle_C_SetToggleType::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetToggleType, Temp_real_Variable_1) == 0x000008, "Member 'WBP_UIKit_Block_Toggle_C_SetToggleType::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetToggleType, Temp_real_Variable_2) == 0x00000C, "Member 'WBP_UIKit_Block_Toggle_C_SetToggleType::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Toggle_C_SetToggleType, K2Node_Select_Default) == 0x000010, "Member 'WBP_UIKit_Block_Toggle_C_SetToggleType::K2Node_Select_Default' has a wrong offset!");

}

