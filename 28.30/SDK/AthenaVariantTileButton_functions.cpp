#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaVariantTileButton

#include "Basic.hpp"

#include "AthenaVariantTileButton_classes.hpp"
#include "AthenaVariantTileButton_parameters.hpp"


namespace SDK
{

// Function AthenaVariantTileButton.AthenaVariantTileButton_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UAthenaVariantTileButton_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaVariantTileButton.AthenaVariantTileButton_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UAthenaVariantTileButton_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaVariantTileButton.AthenaVariantTileButton_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UAthenaVariantTileButton_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaVariantTileButton.AthenaVariantTileButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaVariantTileButton_C::Construct()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaVariantTileButton.AthenaVariantTileButton_C.ExecuteUbergraph_AthenaVariantTileButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaVariantTileButton_C::ExecuteUbergraph_AthenaVariantTileButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_AthenaVariantTileButton");

	Params::AthenaVariantTileButton_C_ExecuteUbergraph_AthenaVariantTileButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaVariantTileButton.AthenaVariantTileButton_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAthenaVariantTileButton_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnListItemObjectSet");

	Params::AthenaVariantTileButton_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaVariantTileButton.AthenaVariantTileButton_C.UpdateConflictStatus
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bIsConflicting                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ConflictReason                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UAthenaVariantTileButton_C::UpdateConflictStatus(const bool bIsConflicting, const class FText& ConflictReason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateConflictStatus");

	Params::AthenaVariantTileButton_C_UpdateConflictStatus Parms{};

	Parms.bIsConflicting = bIsConflicting;
	Parms.ConflictReason = std::move(ConflictReason);

	UObject::ProcessEvent(Func, &Parms);
}

}

