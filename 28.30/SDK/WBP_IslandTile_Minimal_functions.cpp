#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IslandTile_Minimal

#include "Basic.hpp"

#include "WBP_IslandTile_Minimal_classes.hpp"
#include "WBP_IslandTile_Minimal_parameters.hpp"


namespace SDK
{

// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.AddContextMenuItems
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::AddContextMenuItems()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddContextMenuItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.AddRecommendedModalToContextMenu
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::AddRecommendedModalToContextMenu()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddRecommendedModalToContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnHoldTriggered
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_IslandTile_Minimal_C::BP_OnHoldTriggered(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnHoldTriggered");

	Params::WBP_IslandTile_Minimal_C_BP_OnHoldTriggered Parms{};

	Parms.CurrentInputType = CurrentInputType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnItemExpansionChanged");

	Params::WBP_IslandTile_Minimal_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnItemSelectionChanged");

	Params::WBP_IslandTile_Minimal_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnReleased
// (Event, Protected, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::BP_OnReleased()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::Construct()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::Destruct()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.ExecuteUbergraph_WBP_IslandTile_Minimal
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::ExecuteUbergraph_WBP_IslandTile_Minimal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_IslandTile_Minimal");

	Params::WBP_IslandTile_Minimal_C_ExecuteUbergraph_WBP_IslandTile_Minimal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.GoToLobby
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::GoToLobby()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GoToLobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.MoreFromCreator
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::MoreFromCreator()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MoreFromCreator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnByEpicUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsByEpic                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnByEpicUpdated(bool IsByEpic)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnByEpicUpdated");

	Params::WBP_IslandTile_Minimal_C_OnByEpicUpdated Parms{};

	Parms.IsByEpic = IsByEpic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnIsContentGatedUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsContentGated                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnIsContentGatedUpdated(bool IsContentGated)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIsContentGatedUpdated");

	Params::WBP_IslandTile_Minimal_C_OnIsContentGatedUpdated Parms{};

	Parms.IsContentGated = IsContentGated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnListItemObjectSet");

	Params::WBP_IslandTile_Minimal_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnModalDismissed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnModalDismissed(int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnModalDismissed");

	Params::WBP_IslandTile_Minimal_C_OnModalDismissed Parms{};

	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_IslandTile_Minimal_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMouseButtonDown");

	Params::WBP_IslandTile_Minimal_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnRespondToTileViewVisibilityChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnRespondToTileViewVisibilityChange(bool bIsVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRespondToTileViewVisibilityChange");

	Params::WBP_IslandTile_Minimal_C_OnRespondToTileViewVisibilityChange Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnSetInvalidActivityReason
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortInvalidActivityReason              InvalidActivityReason                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnSetInvalidActivityReason(EFortInvalidActivityReason InvalidActivityReason)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetInvalidActivityReason");

	Params::WBP_IslandTile_Minimal_C_OnSetInvalidActivityReason Parms{};

	Parms.InvalidActivityReason = InvalidActivityReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileActiveSet");

	Params::WBP_IslandTile_Minimal_C_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnTileSelectionActive
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::OnTileSelectionActive()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileSelectionActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OnTileSelectionNotActive
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::OnTileSelectionNotActive()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileSelectionNotActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.OpenInfoModal
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::OpenInfoModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenInfoModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::WBP_IslandTile_Minimal_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Set Image Spinner State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActivityImageLoadingState              InImageState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::Set_Image_Spinner_State(EActivityImageLoadingState InImageState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Set Image Spinner State");

	Params::WBP_IslandTile_Minimal_C_Set_Image_Spinner_State Parms{};

	Parms.InImageState = InImageState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Set Image State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActivityImageLoadingState              LoadingEnum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::Set_Image_State(EActivityImageLoadingState LoadingEnum)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Set Image State");

	Params::WBP_IslandTile_Minimal_C_Set_Image_State Parms{};

	Parms.LoadingEnum = LoadingEnum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Set Image Success State
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::Set_Image_Success_State()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Set Image Success State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Set Up Favorite Interaction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFavorited                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::Set_Up_Favorite_Interaction(bool IsFavorited)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Set Up Favorite Interaction");

	Params::WBP_IslandTile_Minimal_C_Set_Up_Favorite_Interaction Parms{};

	Parms.IsFavorited = IsFavorited;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetCCUCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CCUCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetCCUCount(int32 CCUCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCCUCount");

	Params::WBP_IslandTile_Minimal_C_SetCCUCount Parms{};

	Parms.CCUCount = CCUCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetColumnSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSize                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetColumnSize(int32 NewSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetColumnSize");

	Params::WBP_IslandTile_Minimal_C_SetColumnSize Parms{};

	Parms.NewSize = NewSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetCornerRadius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     CornerRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetCornerRadius(const struct FLinearColor& CornerRadius)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCornerRadius");

	Params::WBP_IslandTile_Minimal_C_SetCornerRadius Parms{};

	Parms.CornerRadius = std::move(CornerRadius);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetDisabledThumbnailOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::SetDisabledThumbnailOverlay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetDisabledThumbnailOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetFortActivityViewModel
// (Final, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortActivityViewModel*           ViewModel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetFortActivityViewModel(class UFortActivityViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFortActivityViewModel");

	Params::WBP_IslandTile_Minimal_C_SetFortActivityViewModel Parms{};

	Parms.ViewModel = ViewModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetFriendsPlayingCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FriendsPlayingCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetFriendsPlayingCount(int32 FriendsPlayingCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFriendsPlayingCount");

	Params::WBP_IslandTile_Minimal_C_SetFriendsPlayingCount Parms{};

	Parms.FriendsPlayingCount = FriendsPlayingCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetHighlightText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_IslandTile_Minimal_C::SetHighlightText(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHighlightText");

	Params::WBP_IslandTile_Minimal_C_SetHighlightText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetIconPaddingForLockOrFavorite
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::SetIconPaddingForLockOrFavorite()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIconPaddingForLockOrFavorite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetImageErrorState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActivityImageLoadingState              ImageLoadState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetImageErrorState(EActivityImageLoadingState ImageLoadState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetImageErrorState");

	Params::WBP_IslandTile_Minimal_C_SetImageErrorState Parms{};

	Parms.ImageLoadState = ImageLoadState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetIsCurrentActivity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCurrentActivity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetIsCurrentActivity(bool IsCurrentActivity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsCurrentActivity");

	Params::WBP_IslandTile_Minimal_C_SetIsCurrentActivity Parms{};

	Parms.IsCurrentActivity = IsCurrentActivity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetIsFavorite
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFavorited                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetIsFavorite(bool IsFavorited)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsFavorite");

	Params::WBP_IslandTile_Minimal_C_SetIsFavorite Parms{};

	Parms.IsFavorited = IsFavorited;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetIslandName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             IslandName                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_IslandTile_Minimal_C::SetIslandName(const class FText& IslandName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIslandName");

	Params::WBP_IslandTile_Minimal_C_SetIslandName Parms{};

	Parms.IslandName = std::move(IslandName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetIsPreviewTile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPreviewTile                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetIsPreviewTile(bool IsPreviewTile)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsPreviewTile");

	Params::WBP_IslandTile_Minimal_C_SetIsPreviewTile Parms{};

	Parms.IsPreviewTile = IsPreviewTile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetIsTileEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::SetIsTileEnabled()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsTileEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetPanelType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortCreativeDiscoveryPanelType         PanelTypeEnum                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetPanelType(EFortCreativeDiscoveryPanelType PanelTypeEnum)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPanelType");

	Params::WBP_IslandTile_Minimal_C_SetPanelType Parms{};

	Parms.PanelTypeEnum = PanelTypeEnum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetPurchaseRequired
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPurchaseRequired                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetPurchaseRequired(bool IsPurchaseRequired)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPurchaseRequired");

	Params::WBP_IslandTile_Minimal_C_SetPurchaseRequired Parms{};

	Parms.IsPurchaseRequired = IsPurchaseRequired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetupSqueegeeWidgets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortActivityViewModel*           ActivityVM                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetupSqueegeeWidgets(class UFortActivityViewModel* ActivityVM)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupSqueegeeWidgets");

	Params::WBP_IslandTile_Minimal_C_SetupSqueegeeWidgets Parms{};

	Parms.ActivityVM = ActivityVM;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.ToggleFavorite
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::ToggleFavorite()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleFavorite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.Update Texture Margin To Resolution
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         MaterialInstance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::Update_Texture_Margin_To_Resolution(class UMaterialInstanceDynamic* MaterialInstance)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Update Texture Margin To Resolution");

	Params::WBP_IslandTile_Minimal_C_Update_Texture_Margin_To_Resolution Parms{};

	Parms.MaterialInstance = MaterialInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.ViewDetails
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::ViewDetails()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ViewDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.WrapperCleanupContextMenuOnRelease
// (BlueprintCallable, BlueprintEvent)

void UWBP_IslandTile_Minimal_C::WrapperCleanupContextMenuOnRelease()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("WrapperCleanupContextMenuOnRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.__17bf98a4-4533-78f4-90a0-50ba916912d2_SourceToDest
// (Final, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          VisibleWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::__17bf98a4_4533_78f4_90a0_50ba916912d2_SourceToDest(class UWidget** VisibleWidget) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("__17bf98a4-4533-78f4-90a0-50ba916912d2_SourceToDest");

	Params::WBP_IslandTile_Minimal_C___17bf98a4_4533_78f4_90a0_50ba916912d2_SourceToDest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VisibleWidget != nullptr)
		*VisibleWidget = Parms.VisibleWidget;
}


// Function WBP_IslandTile_Minimal.WBP_IslandTile_Minimal_C.SetCreatorLogoOverrideVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EActivityImageLoadingState              CreatorLogoLoadingState                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         CreatorLogoTexture                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          VisibleWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_IslandTile_Minimal_C::SetCreatorLogoOverrideVisible(EActivityImageLoadingState CreatorLogoLoadingState, class UTexture* CreatorLogoTexture, class UWidget** VisibleWidget) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCreatorLogoOverrideVisible");

	Params::WBP_IslandTile_Minimal_C_SetCreatorLogoOverrideVisible Parms{};

	Parms.CreatorLogoLoadingState = CreatorLogoLoadingState;
	Parms.CreatorLogoTexture = CreatorLogoTexture;

	UObject::ProcessEvent(Func, &Parms);

	if (VisibleWidget != nullptr)
		*VisibleWidget = Parms.VisibleWidget;
}

}

