#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksMusicPlayspaceRuntime

#include "Basic.hpp"

#include "FMCoreRuntime_structs.hpp"


namespace SDK
{

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceEvent_OnBeat
// 0x0008 (0x0008 - 0x0000)
struct FSparksPlayspaceEvent_OnBeat final
{
public:
	int32                                         BeatNumber;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BeatInBar;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksPlayspaceEvent_OnBeat) == 0x000004, "Wrong alignment on FSparksPlayspaceEvent_OnBeat");
static_assert(sizeof(FSparksPlayspaceEvent_OnBeat) == 0x000008, "Wrong size on FSparksPlayspaceEvent_OnBeat");
static_assert(offsetof(FSparksPlayspaceEvent_OnBeat, BeatNumber) == 0x000000, "Member 'FSparksPlayspaceEvent_OnBeat::BeatNumber' has a wrong offset!");
static_assert(offsetof(FSparksPlayspaceEvent_OnBeat, BeatInBar) == 0x000004, "Member 'FSparksPlayspaceEvent_OnBeat::BeatInBar' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceInteractor
// 0x0020 (0x0020 - 0x0000)
struct FSparksPlayspaceInteractor
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsValidInteractor;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 AddedForActor;                                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksPlayspaceInteractor) == 0x000008, "Wrong alignment on FSparksPlayspaceInteractor");
static_assert(sizeof(FSparksPlayspaceInteractor) == 0x000020, "Wrong size on FSparksPlayspaceInteractor");
static_assert(offsetof(FSparksPlayspaceInteractor, bIsValidInteractor) == 0x000008, "Member 'FSparksPlayspaceInteractor::bIsValidInteractor' has a wrong offset!");
static_assert(offsetof(FSparksPlayspaceInteractor, Object) == 0x000010, "Member 'FSparksPlayspaceInteractor::Object' has a wrong offset!");
static_assert(offsetof(FSparksPlayspaceInteractor, AddedForActor) == 0x000018, "Member 'FSparksPlayspaceInteractor::AddedForActor' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceEvent_OnMeasure
// 0x0004 (0x0004 - 0x0000)
struct FSparksPlayspaceEvent_OnMeasure final
{
public:
	int32                                         MeasureNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksPlayspaceEvent_OnMeasure) == 0x000004, "Wrong alignment on FSparksPlayspaceEvent_OnMeasure");
static_assert(sizeof(FSparksPlayspaceEvent_OnMeasure) == 0x000004, "Wrong size on FSparksPlayspaceEvent_OnMeasure");
static_assert(offsetof(FSparksPlayspaceEvent_OnMeasure, MeasureNumber) == 0x000000, "Member 'FSparksPlayspaceEvent_OnMeasure::MeasureNumber' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceMusicPlayer
// 0x0008 (0x0028 - 0x0020)
struct FSparksPlayspaceMusicPlayer final : public FSparksPlayspaceInteractor
{
public:
	bool                                          bIsValidMusicPlayer;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksPlayspaceMusicPlayer) == 0x000008, "Wrong alignment on FSparksPlayspaceMusicPlayer");
static_assert(sizeof(FSparksPlayspaceMusicPlayer) == 0x000028, "Wrong size on FSparksPlayspaceMusicPlayer");
static_assert(offsetof(FSparksPlayspaceMusicPlayer, bIsValidMusicPlayer) == 0x000020, "Member 'FSparksPlayspaceMusicPlayer::bIsValidMusicPlayer' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksServerPerfMemSettings
// 0x0020 (0x0020 - 0x0000)
struct FSparksServerPerfMemSettings final
{
public:
	class FString                                 GamePhaseName;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPeriodicCaptures;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PeriodicCaptureCount;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PeriodicCapturePeriodInSeconds;                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PeriodicCaptureMinDelayInSeconds;                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksServerPerfMemSettings) == 0x000008, "Wrong alignment on FSparksServerPerfMemSettings");
static_assert(sizeof(FSparksServerPerfMemSettings) == 0x000020, "Wrong size on FSparksServerPerfMemSettings");
static_assert(offsetof(FSparksServerPerfMemSettings, GamePhaseName) == 0x000000, "Member 'FSparksServerPerfMemSettings::GamePhaseName' has a wrong offset!");
static_assert(offsetof(FSparksServerPerfMemSettings, bPeriodicCaptures) == 0x000010, "Member 'FSparksServerPerfMemSettings::bPeriodicCaptures' has a wrong offset!");
static_assert(offsetof(FSparksServerPerfMemSettings, PeriodicCaptureCount) == 0x000014, "Member 'FSparksServerPerfMemSettings::PeriodicCaptureCount' has a wrong offset!");
static_assert(offsetof(FSparksServerPerfMemSettings, PeriodicCapturePeriodInSeconds) == 0x000018, "Member 'FSparksServerPerfMemSettings::PeriodicCapturePeriodInSeconds' has a wrong offset!");
static_assert(offsetof(FSparksServerPerfMemSettings, PeriodicCaptureMinDelayInSeconds) == 0x00001C, "Member 'FSparksServerPerfMemSettings::PeriodicCaptureMinDelayInSeconds' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceEvent_KeyChanged
// 0x0001 (0x0001 - 0x0000)
struct FSparksPlayspaceEvent_KeyChanged final
{
public:
	EMusicKey                                     Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksPlayspaceEvent_KeyChanged) == 0x000001, "Wrong alignment on FSparksPlayspaceEvent_KeyChanged");
static_assert(sizeof(FSparksPlayspaceEvent_KeyChanged) == 0x000001, "Wrong size on FSparksPlayspaceEvent_KeyChanged");
static_assert(offsetof(FSparksPlayspaceEvent_KeyChanged, Key) == 0x000000, "Member 'FSparksPlayspaceEvent_KeyChanged::Key' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceEvent_KeyModeChanged
// 0x0001 (0x0001 - 0x0000)
struct FSparksPlayspaceEvent_KeyModeChanged final
{
public:
	EMusicKeyMode                                 KeyMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksPlayspaceEvent_KeyModeChanged) == 0x000001, "Wrong alignment on FSparksPlayspaceEvent_KeyModeChanged");
static_assert(sizeof(FSparksPlayspaceEvent_KeyModeChanged) == 0x000001, "Wrong size on FSparksPlayspaceEvent_KeyModeChanged");
static_assert(offsetof(FSparksPlayspaceEvent_KeyModeChanged, KeyMode) == 0x000000, "Member 'FSparksPlayspaceEvent_KeyModeChanged::KeyMode' has a wrong offset!");

// ScriptStruct SparksMusicPlayspaceRuntime.SparksPlayspaceEvent_TempoChanged
// 0x0004 (0x0004 - 0x0000)
struct FSparksPlayspaceEvent_TempoChanged final
{
public:
	int32                                         Tempo;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksPlayspaceEvent_TempoChanged) == 0x000004, "Wrong alignment on FSparksPlayspaceEvent_TempoChanged");
static_assert(sizeof(FSparksPlayspaceEvent_TempoChanged) == 0x000004, "Wrong size on FSparksPlayspaceEvent_TempoChanged");
static_assert(offsetof(FSparksPlayspaceEvent_TempoChanged, Tempo) == 0x000000, "Member 'FSparksPlayspaceEvent_TempoChanged::Tempo' has a wrong offset!");

}

