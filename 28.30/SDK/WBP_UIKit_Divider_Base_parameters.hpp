#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Divider_Base

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.ExecuteUbergraph_WBP_UIKit_Divider_Base
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base) == 0x000004, "Wrong alignment on WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base");
static_assert(sizeof(WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base) == 0x000008, "Wrong size on WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Divider_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Divider_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_Divider_Base_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_Divider_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_Divider_Base_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_Divider_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.SetDividerOrientation
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_Divider_Base_C_SetDividerOrientation final
{
public:
	bool                                          IsVertical;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_1;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Divider_Base_C_SetDividerOrientation) == 0x000008, "Wrong alignment on WBP_UIKit_Divider_Base_C_SetDividerOrientation");
static_assert(sizeof(WBP_UIKit_Divider_Base_C_SetDividerOrientation) == 0x000018, "Wrong size on WBP_UIKit_Divider_Base_C_SetDividerOrientation");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, IsVertical) == 0x000000, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::IsVertical' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, K2Node_Select_Default) == 0x000010, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, Temp_byte_Variable_2) == 0x000012, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, Temp_byte_Variable_3) == 0x000013, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, Temp_bool_Variable_1) == 0x000014, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerOrientation, K2Node_Select_Default_1) == 0x000015, "Member 'WBP_UIKit_Divider_Base_C_SetDividerOrientation::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.SetDividerPadding
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_Divider_Base_C_SetDividerPadding final
{
public:
	struct FMargin                                Padding_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Divider_Base_C_SetDividerPadding) == 0x000008, "Wrong alignment on WBP_UIKit_Divider_Base_C_SetDividerPadding");
static_assert(sizeof(WBP_UIKit_Divider_Base_C_SetDividerPadding) == 0x000020, "Wrong size on WBP_UIKit_Divider_Base_C_SetDividerPadding");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerPadding, Padding_0) == 0x000000, "Member 'WBP_UIKit_Divider_Base_C_SetDividerPadding::Padding_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerPadding, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000010, "Member 'WBP_UIKit_Divider_Base_C_SetDividerPadding::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerPadding, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_UIKit_Divider_Base_C_SetDividerPadding::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.SetDividerSpacing
// 0x0060 (0x0060 - 0x0000)
struct WBP_UIKit_Divider_Base_C_SetDividerSpacing final
{
public:
	double                                        Spacing;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVertical;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Divider_Base_C_SetDividerSpacing) == 0x000008, "Wrong alignment on WBP_UIKit_Divider_Base_C_SetDividerSpacing");
static_assert(sizeof(WBP_UIKit_Divider_Base_C_SetDividerSpacing) == 0x000060, "Wrong size on WBP_UIKit_Divider_Base_C_SetDividerSpacing");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, Spacing) == 0x000000, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::Spacing' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, IsVertical) == 0x000008, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::IsVertical' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, Temp_bool_Variable) == 0x000009, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_MakeStruct_Margin) == 0x00000C, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_MakeStruct_Margin_1) == 0x00001C, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_Select_Default) == 0x00002C, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000040, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_MakeStruct_Left_ImplicitCast) == 0x00004C, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_MakeStruct_Right_ImplicitCast) == 0x000050, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_MakeStruct_Top_ImplicitCast) == 0x000054, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Divider_Base_C_SetDividerSpacing, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000058, "Member 'WBP_UIKit_Divider_Base_C_SetDividerSpacing::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

}

