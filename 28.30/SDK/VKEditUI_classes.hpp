#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VKEditUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "DynamicUI_classes.hpp"


namespace SDK
{

// Class VKEditUI.VKConnectionIndicator
// 0x0250 (0x0650 - 0x0400)
class UVKConnectionIndicator final : public UCommonActivatableWidget
{
public:
	class FText                                   EditStatusLocalizedText[0xA];                      // 0x0400(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                    OpenLogInputAction;                                // 0x04F0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_NotConnected;                           // 0x0500(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_Connected;                              // 0x0508(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_RefreshRequired;                        // 0x0510(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_Preparing;                              // 0x0518(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_Downloading;                            // 0x0520(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_UpToDate;                               // 0x0528(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_StartingGame;                           // 0x0530(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_GameInProgress;                         // 0x0538(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                StatusIcon_Error;                                  // 0x0540(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Image_StatusIcon;                                  // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_StatusMessage;                                // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        Switcher_AdditionalInfo;                           // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           Panel_DownloadContainer;                           // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSimpleMaterialProgressBar*         ProgressBar_Download;                              // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_DownloadProgress;                             // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           Panel_OpenLogContainer;                            // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActionWidget*                    Action_OpenLog;                                    // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           Panel_SubMessageContainer;                         // 0x0588(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SubMessage;                                   // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_EditMode;                                     // 0x0598(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           Panel_SquadListContainer;                          // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaSquadListBase*                   AthenaSquadList;                                   // 0x05A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B0[0xA0];                                     // 0x05B0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleMemorySamplerProgressUpdated(float Progress);
	void OnMinigameStateChanged(const EFortMinigameState MinigameState, const EFortMinigameState PreviousMinigameState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VKConnectionIndicator">();
	}
	static class UVKConnectionIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVKConnectionIndicator>();
	}
};
static_assert(alignof(UVKConnectionIndicator) == 0x000008, "Wrong alignment on UVKConnectionIndicator");
static_assert(sizeof(UVKConnectionIndicator) == 0x000650, "Wrong size on UVKConnectionIndicator");
static_assert(offsetof(UVKConnectionIndicator, EditStatusLocalizedText) == 0x000400, "Member 'UVKConnectionIndicator::EditStatusLocalizedText' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, OpenLogInputAction) == 0x0004F0, "Member 'UVKConnectionIndicator::OpenLogInputAction' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_NotConnected) == 0x000500, "Member 'UVKConnectionIndicator::StatusIcon_NotConnected' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_Connected) == 0x000508, "Member 'UVKConnectionIndicator::StatusIcon_Connected' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_RefreshRequired) == 0x000510, "Member 'UVKConnectionIndicator::StatusIcon_RefreshRequired' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_Preparing) == 0x000518, "Member 'UVKConnectionIndicator::StatusIcon_Preparing' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_Downloading) == 0x000520, "Member 'UVKConnectionIndicator::StatusIcon_Downloading' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_UpToDate) == 0x000528, "Member 'UVKConnectionIndicator::StatusIcon_UpToDate' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_StartingGame) == 0x000530, "Member 'UVKConnectionIndicator::StatusIcon_StartingGame' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_GameInProgress) == 0x000538, "Member 'UVKConnectionIndicator::StatusIcon_GameInProgress' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, StatusIcon_Error) == 0x000540, "Member 'UVKConnectionIndicator::StatusIcon_Error' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Image_StatusIcon) == 0x000548, "Member 'UVKConnectionIndicator::Image_StatusIcon' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Text_StatusMessage) == 0x000550, "Member 'UVKConnectionIndicator::Text_StatusMessage' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Switcher_AdditionalInfo) == 0x000558, "Member 'UVKConnectionIndicator::Switcher_AdditionalInfo' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Panel_DownloadContainer) == 0x000560, "Member 'UVKConnectionIndicator::Panel_DownloadContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, ProgressBar_Download) == 0x000568, "Member 'UVKConnectionIndicator::ProgressBar_Download' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Text_DownloadProgress) == 0x000570, "Member 'UVKConnectionIndicator::Text_DownloadProgress' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Panel_OpenLogContainer) == 0x000578, "Member 'UVKConnectionIndicator::Panel_OpenLogContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Action_OpenLog) == 0x000580, "Member 'UVKConnectionIndicator::Action_OpenLog' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Panel_SubMessageContainer) == 0x000588, "Member 'UVKConnectionIndicator::Panel_SubMessageContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Text_SubMessage) == 0x000590, "Member 'UVKConnectionIndicator::Text_SubMessage' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Text_EditMode) == 0x000598, "Member 'UVKConnectionIndicator::Text_EditMode' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, Panel_SquadListContainer) == 0x0005A0, "Member 'UVKConnectionIndicator::Panel_SquadListContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, AthenaSquadList) == 0x0005A8, "Member 'UVKConnectionIndicator::AthenaSquadList' has a wrong offset!");

// Class VKEditUI.VKDebugMessagesBase
// 0x0000 (0x0328 - 0x0328)
class UVKDebugMessagesBase final : public UFortHUDElementWidget
{
public:
	void BP_OnGameStateInitialized(class AFortGameState* GameState);
	void HandleGameStateInitialized(class AFortGameState* GameState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VKDebugMessagesBase">();
	}
	static class UVKDebugMessagesBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVKDebugMessagesBase>();
	}
};
static_assert(alignof(UVKDebugMessagesBase) == 0x000008, "Wrong alignment on UVKDebugMessagesBase");
static_assert(sizeof(UVKDebugMessagesBase) == 0x000328, "Wrong size on UVKDebugMessagesBase");

// Class VKEditUI.VkEditDynamicUIDirector
// 0x0058 (0x0308 - 0x02B0)
class AVkEditDynamicUIDirector final : public ADynamicUIDirectorBase
{
public:
	class UDynamicUIScene*                        MemorySamplingScene;                               // 0x02B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B8[0x50];                                     // 0x02B8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VkEditDynamicUIDirector">();
	}
	static class AVkEditDynamicUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVkEditDynamicUIDirector>();
	}
};
static_assert(alignof(AVkEditDynamicUIDirector) == 0x000008, "Wrong alignment on AVkEditDynamicUIDirector");
static_assert(sizeof(AVkEditDynamicUIDirector) == 0x000308, "Wrong size on AVkEditDynamicUIDirector");
static_assert(offsetof(AVkEditDynamicUIDirector, MemorySamplingScene) == 0x0002B0, "Member 'AVkEditDynamicUIDirector::MemorySamplingScene' has a wrong offset!");

// Class VKEditUI.VkEditLogTab
// 0x0190 (0x0590 - 0x0400)
class UVkEditLogTab final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x30];                                     // 0x0400(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                TabButtonLabelInfo;                                // 0x0430(0x0110)(Edit, NativeAccessSpecifierPrivate)
	struct FAthenaMapScreenContainerTabInfo       MapTabInfo;                                        // 0x0540(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_588[0x8];                                      // 0x0588(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VkEditLogTab">();
	}
	static class UVkEditLogTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVkEditLogTab>();
	}
};
static_assert(alignof(UVkEditLogTab) == 0x000010, "Wrong alignment on UVkEditLogTab");
static_assert(sizeof(UVkEditLogTab) == 0x000590, "Wrong size on UVkEditLogTab");
static_assert(offsetof(UVkEditLogTab, TabButtonLabelInfo) == 0x000430, "Member 'UVkEditLogTab::TabButtonLabelInfo' has a wrong offset!");
static_assert(offsetof(UVkEditLogTab, MapTabInfo) == 0x000540, "Member 'UVkEditLogTab::MapTabInfo' has a wrong offset!");

}

