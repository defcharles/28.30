#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StyleSheets

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "GameFeatures_classes.hpp"
#include "StyleSheets_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class StyleSheets.GameFeatureAction_ActivateStyleTheme
// 0x0008 (0x0030 - 0x0028)
class UGameFeatureAction_ActivateStyleTheme final : public UGameFeatureAction
{
public:
	class FName                                   ThemeName;                                         // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_ActivateStyleTheme">();
	}
	static class UGameFeatureAction_ActivateStyleTheme* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_ActivateStyleTheme>();
	}
};
static_assert(alignof(UGameFeatureAction_ActivateStyleTheme) == 0x000008, "Wrong alignment on UGameFeatureAction_ActivateStyleTheme");
static_assert(sizeof(UGameFeatureAction_ActivateStyleTheme) == 0x000030, "Wrong size on UGameFeatureAction_ActivateStyleTheme");
static_assert(offsetof(UGameFeatureAction_ActivateStyleTheme, ThemeName) == 0x000028, "Member 'UGameFeatureAction_ActivateStyleTheme::ThemeName' has a wrong offset!");

// Class StyleSheets.GameFeatureAction_RegisterStyleThemes
// 0x0020 (0x0048 - 0x0028)
class UGameFeatureAction_RegisterStyleThemes final : public UGameFeatureAction
{
public:
	TSoftObjectPtr<class UStyleThemeConfig>       StyleThemeConfig;                                  // 0x0028(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_RegisterStyleThemes">();
	}
	static class UGameFeatureAction_RegisterStyleThemes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_RegisterStyleThemes>();
	}
};
static_assert(alignof(UGameFeatureAction_RegisterStyleThemes) == 0x000008, "Wrong alignment on UGameFeatureAction_RegisterStyleThemes");
static_assert(sizeof(UGameFeatureAction_RegisterStyleThemes) == 0x000048, "Wrong size on UGameFeatureAction_RegisterStyleThemes");
static_assert(offsetof(UGameFeatureAction_RegisterStyleThemes, StyleThemeConfig) == 0x000028, "Member 'UGameFeatureAction_RegisterStyleThemes::StyleThemeConfig' has a wrong offset!");

// Class StyleSheets.PropertyTweenContext
// 0x0008 (0x0030 - 0x0028)
class UPropertyTweenContext final : public UObject
{
public:
	class FName                                   PropertyPath;                                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PropertyTweenContext">();
	}
	static class UPropertyTweenContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropertyTweenContext>();
	}
};
static_assert(alignof(UPropertyTweenContext) == 0x000008, "Wrong alignment on UPropertyTweenContext");
static_assert(sizeof(UPropertyTweenContext) == 0x000030, "Wrong size on UPropertyTweenContext");
static_assert(offsetof(UPropertyTweenContext, PropertyPath) == 0x000028, "Member 'UPropertyTweenContext::PropertyPath' has a wrong offset!");

// Class StyleSheets.StyleAnimationProvider
// 0x0050 (0x0078 - 0x0028)
class UStyleAnimationProvider final : public UObject
{
public:
	TMap<struct FWidgetProperty, int32>           WidgetPropertyTweens;                              // 0x0028(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleAnimationProvider">();
	}
	static class UStyleAnimationProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleAnimationProvider>();
	}
};
static_assert(alignof(UStyleAnimationProvider) == 0x000008, "Wrong alignment on UStyleAnimationProvider");
static_assert(sizeof(UStyleAnimationProvider) == 0x000078, "Wrong size on UStyleAnimationProvider");
static_assert(offsetof(UStyleAnimationProvider, WidgetPropertyTweens) == 0x000028, "Member 'UStyleAnimationProvider::WidgetPropertyTweens' has a wrong offset!");

// Class StyleSheets.StyleProvider
// 0x00E8 (0x0110 - 0x0028)
class UStyleProvider final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UStyleRuleTree>          StyleRuleTree;                                     // 0x0048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UStyleAnimationProvider> StyleAnimationProvider;                            // 0x0050(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0xB8];                                      // 0x0058(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleProvider">();
	}
	static class UStyleProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleProvider>();
	}
};
static_assert(alignof(UStyleProvider) == 0x000008, "Wrong alignment on UStyleProvider");
static_assert(sizeof(UStyleProvider) == 0x000110, "Wrong size on UStyleProvider");
static_assert(offsetof(UStyleProvider, StyleRuleTree) == 0x000048, "Member 'UStyleProvider::StyleRuleTree' has a wrong offset!");
static_assert(offsetof(UStyleProvider, StyleAnimationProvider) == 0x000050, "Member 'UStyleProvider::StyleAnimationProvider' has a wrong offset!");

// Class StyleSheets.StyleRule
// 0x0138 (0x0160 - 0x0028)
class UStyleRule final : public UObject
{
public:
	TArray<class UStyleRule*>                     Children;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FStyleSelectorItem                     StyleSelectorItem;                                 // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UStyleRule>              Parent;                                            // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStyleClass                            style;                                             // 0x0050(0x0108)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleRule">();
	}
	static class UStyleRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleRule>();
	}
};
static_assert(alignof(UStyleRule) == 0x000008, "Wrong alignment on UStyleRule");
static_assert(sizeof(UStyleRule) == 0x000160, "Wrong size on UStyleRule");
static_assert(offsetof(UStyleRule, Children) == 0x000028, "Member 'UStyleRule::Children' has a wrong offset!");
static_assert(offsetof(UStyleRule, StyleSelectorItem) == 0x000038, "Member 'UStyleRule::StyleSelectorItem' has a wrong offset!");
static_assert(offsetof(UStyleRule, Parent) == 0x000048, "Member 'UStyleRule::Parent' has a wrong offset!");
static_assert(offsetof(UStyleRule, style) == 0x000050, "Member 'UStyleRule::style' has a wrong offset!");

// Class StyleSheets.StyleRuleTree
// 0x0040 (0x0068 - 0x0028)
class UStyleRuleTree final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStyleSheetCollection*>          StyleSheetCollections;                             // 0x0040(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FStyleRuleEntry>                StyleRuleEntries;                                  // 0x0050(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleRuleTree">();
	}
	static class UStyleRuleTree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleRuleTree>();
	}
};
static_assert(alignof(UStyleRuleTree) == 0x000008, "Wrong alignment on UStyleRuleTree");
static_assert(sizeof(UStyleRuleTree) == 0x000068, "Wrong size on UStyleRuleTree");
static_assert(offsetof(UStyleRuleTree, StyleSheetCollections) == 0x000040, "Member 'UStyleRuleTree::StyleSheetCollections' has a wrong offset!");
static_assert(offsetof(UStyleRuleTree, StyleRuleEntries) == 0x000050, "Member 'UStyleRuleTree::StyleRuleEntries' has a wrong offset!");

// Class StyleSheets.StyleSheet
// 0x0030 (0x0058 - 0x0028)
class UStyleSheet final : public UObject
{
public:
	TArray<class UStyleRule*>                     StyleRules;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FStyleSheetSettings                    Settings;                                          // 0x0038(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleSheet">();
	}
	static class UStyleSheet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleSheet>();
	}
};
static_assert(alignof(UStyleSheet) == 0x000008, "Wrong alignment on UStyleSheet");
static_assert(sizeof(UStyleSheet) == 0x000058, "Wrong size on UStyleSheet");
static_assert(offsetof(UStyleSheet, StyleRules) == 0x000028, "Member 'UStyleSheet::StyleRules' has a wrong offset!");
static_assert(offsetof(UStyleSheet, Settings) == 0x000038, "Member 'UStyleSheet::Settings' has a wrong offset!");

// Class StyleSheets.StyleSheetCollection
// 0x0010 (0x0040 - 0x0030)
class UStyleSheetCollection final : public UDataAsset
{
public:
	TArray<class UStyleSheet*>                    StyleSheets;                                       // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleSheetCollection">();
	}
	static class UStyleSheetCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleSheetCollection>();
	}
};
static_assert(alignof(UStyleSheetCollection) == 0x000008, "Wrong alignment on UStyleSheetCollection");
static_assert(sizeof(UStyleSheetCollection) == 0x000040, "Wrong size on UStyleSheetCollection");
static_assert(offsetof(UStyleSheetCollection, StyleSheets) == 0x000030, "Member 'UStyleSheetCollection::StyleSheets' has a wrong offset!");

// Class StyleSheets.StyleTagFinder
// 0x0000 (0x0028 - 0x0028)
class UStyleTagFinder final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleTagFinder">();
	}
	static class UStyleTagFinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleTagFinder>();
	}
};
static_assert(alignof(UStyleTagFinder) == 0x000008, "Wrong alignment on UStyleTagFinder");
static_assert(sizeof(UStyleTagFinder) == 0x000028, "Wrong size on UStyleTagFinder");

// Class StyleSheets.StyleThemeConfig
// 0x0010 (0x0040 - 0x0030)
class UStyleThemeConfig final : public UDataAsset
{
public:
	TArray<struct FStyleThemeConfigEntry>         Entries;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleThemeConfig">();
	}
	static class UStyleThemeConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleThemeConfig>();
	}
};
static_assert(alignof(UStyleThemeConfig) == 0x000008, "Wrong alignment on UStyleThemeConfig");
static_assert(sizeof(UStyleThemeConfig) == 0x000040, "Wrong size on UStyleThemeConfig");
static_assert(offsetof(UStyleThemeConfig, Entries) == 0x000030, "Member 'UStyleThemeConfig::Entries' has a wrong offset!");

// Class StyleSheets.StyleThemeProvider
// 0x00A8 (0x00D0 - 0x0028)
class UStyleThemeProvider final : public UObject
{
public:
	TWeakObjectPtr<class UStyleRuleTree>          StyleRuleTree;                                     // 0x0028(0x0008)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FStyleThemeConfigKey, class UStyleThemeConfig*> ThemeConfigSourceMap;                              // 0x0030(0x0050)(Edit, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSet<class FName>                             ActiveThemeNames;                                  // 0x0080(0x0050)(Edit, Transient, EditConst, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleThemeProvider">();
	}
	static class UStyleThemeProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleThemeProvider>();
	}
};
static_assert(alignof(UStyleThemeProvider) == 0x000008, "Wrong alignment on UStyleThemeProvider");
static_assert(sizeof(UStyleThemeProvider) == 0x0000D0, "Wrong size on UStyleThemeProvider");
static_assert(offsetof(UStyleThemeProvider, StyleRuleTree) == 0x000028, "Member 'UStyleThemeProvider::StyleRuleTree' has a wrong offset!");
static_assert(offsetof(UStyleThemeProvider, ThemeConfigSourceMap) == 0x000030, "Member 'UStyleThemeProvider::ThemeConfigSourceMap' has a wrong offset!");
static_assert(offsetof(UStyleThemeProvider, ActiveThemeNames) == 0x000080, "Member 'UStyleThemeProvider::ActiveThemeNames' has a wrong offset!");

// Class StyleSheets.WidgetBlueprintGeneratedClassExtension_StyleClass
// 0x0050 (0x0078 - 0x0028)
class UWidgetBlueprintGeneratedClassExtension_StyleClass final : public UWidgetBlueprintGeneratedClassExtension
{
public:
	TMap<class FName, struct FStyleTag>           WidgetStyleTagMap;                                 // 0x0028(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WidgetBlueprintGeneratedClassExtension_StyleClass">();
	}
	static class UWidgetBlueprintGeneratedClassExtension_StyleClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetBlueprintGeneratedClassExtension_StyleClass>();
	}
};
static_assert(alignof(UWidgetBlueprintGeneratedClassExtension_StyleClass) == 0x000008, "Wrong alignment on UWidgetBlueprintGeneratedClassExtension_StyleClass");
static_assert(sizeof(UWidgetBlueprintGeneratedClassExtension_StyleClass) == 0x000078, "Wrong size on UWidgetBlueprintGeneratedClassExtension_StyleClass");
static_assert(offsetof(UWidgetBlueprintGeneratedClassExtension_StyleClass, WidgetStyleTagMap) == 0x000028, "Member 'UWidgetBlueprintGeneratedClassExtension_StyleClass::WidgetStyleTagMap' has a wrong offset!");

// Class StyleSheets.StylableWidget
// 0x0000 (0x0028 - 0x0028)
class IStylableWidget final : public IInterface
{
public:
	void BP_OnWidgetStyled();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StylableWidget">();
	}
	static class IStylableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<IStylableWidget>();
	}
};
static_assert(alignof(IStylableWidget) == 0x000008, "Wrong alignment on IStylableWidget");
static_assert(sizeof(IStylableWidget) == 0x000028, "Wrong size on IStylableWidget");

// Class StyleSheets.StyleSheetsSettings
// 0x0038 (0x0060 - 0x0028)
class UStyleSheetsSettings final : public UObject
{
public:
	TArray<struct FWidgetTypeEntry>               WidgetTypes;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStyleThemeConfig>       StyleThemeConfig;                                  // 0x0038(0x0020)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowAssigningStyleTagsToWidgets;                 // 0x0058(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleSheetsSettings">();
	}
	static class UStyleSheetsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleSheetsSettings>();
	}
};
static_assert(alignof(UStyleSheetsSettings) == 0x000008, "Wrong alignment on UStyleSheetsSettings");
static_assert(sizeof(UStyleSheetsSettings) == 0x000060, "Wrong size on UStyleSheetsSettings");
static_assert(offsetof(UStyleSheetsSettings, WidgetTypes) == 0x000028, "Member 'UStyleSheetsSettings::WidgetTypes' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSettings, StyleThemeConfig) == 0x000038, "Member 'UStyleSheetsSettings::StyleThemeConfig' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSettings, bAllowAssigningStyleTagsToWidgets) == 0x000058, "Member 'UStyleSheetsSettings::bAllowAssigningStyleTagsToWidgets' has a wrong offset!");

// Class StyleSheets.StyleSheetsSubsystem
// 0x0030 (0x0060 - 0x0030)
class UStyleSheetsSubsystem final : public UEngineSubsystem
{
public:
	class UStyleTagFinder*                        EditorStyleTagFinder;                              // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStyleRuleTree*                         StyleRuleTree;                                     // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStyleAnimationProvider*                StyleAnimationProvider;                            // 0x0040(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStyleProvider*                         StyleProvider;                                     // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStyleThemeProvider*                    StyleThemeProvider;                                // 0x0050(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStyleTagFinder*                        StyleTagFinder;                                    // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StyleSheetsSubsystem">();
	}
	static class UStyleSheetsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStyleSheetsSubsystem>();
	}
};
static_assert(alignof(UStyleSheetsSubsystem) == 0x000008, "Wrong alignment on UStyleSheetsSubsystem");
static_assert(sizeof(UStyleSheetsSubsystem) == 0x000060, "Wrong size on UStyleSheetsSubsystem");
static_assert(offsetof(UStyleSheetsSubsystem, EditorStyleTagFinder) == 0x000030, "Member 'UStyleSheetsSubsystem::EditorStyleTagFinder' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSubsystem, StyleRuleTree) == 0x000038, "Member 'UStyleSheetsSubsystem::StyleRuleTree' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSubsystem, StyleAnimationProvider) == 0x000040, "Member 'UStyleSheetsSubsystem::StyleAnimationProvider' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSubsystem, StyleProvider) == 0x000048, "Member 'UStyleSheetsSubsystem::StyleProvider' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSubsystem, StyleThemeProvider) == 0x000050, "Member 'UStyleSheetsSubsystem::StyleThemeProvider' has a wrong offset!");
static_assert(offsetof(UStyleSheetsSubsystem, StyleTagFinder) == 0x000058, "Member 'UStyleSheetsSubsystem::StyleTagFinder' has a wrong offset!");

}

