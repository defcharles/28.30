#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEngineExperimental

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "LocalizableMessage_structs.hpp"


namespace SDK
{

// Enum UnrealEngineExperimental.EScriptDiagnosticMessageType
// NumValues: 0x0005
enum class EScriptDiagnosticMessageType : uint8
{
	Debug                                    = 0,
	Verbose                                  = 1,
	Normal                                   = 2,
	Warning                                  = 3,
	Error                                    = 4,
};

// ScriptStruct UnrealEngineExperimental.PersistentLineBatcher
// 0x0010 (0x0010 - 0x0000)
struct FPersistentLineBatcher final
{
public:
	class ULineBatchComponent*                    PersistentLineBatcher;                             // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPersistentLineBatcher) == 0x000008, "Wrong alignment on FPersistentLineBatcher");
static_assert(sizeof(FPersistentLineBatcher) == 0x000010, "Wrong size on FPersistentLineBatcher");
static_assert(offsetof(FPersistentLineBatcher, PersistentLineBatcher) == 0x000000, "Member 'FPersistentLineBatcher::PersistentLineBatcher' has a wrong offset!");

// ScriptStruct UnrealEngineExperimental.ScriptDiagnosticSourceLocation
// 0x0020 (0x0020 - 0x0000)
struct FScriptDiagnosticSourceLocation final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              RowSpan;                                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              ColSpan;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScriptDiagnosticSourceLocation) == 0x000008, "Wrong alignment on FScriptDiagnosticSourceLocation");
static_assert(sizeof(FScriptDiagnosticSourceLocation) == 0x000020, "Wrong size on FScriptDiagnosticSourceLocation");
static_assert(offsetof(FScriptDiagnosticSourceLocation, FilePath) == 0x000000, "Member 'FScriptDiagnosticSourceLocation::FilePath' has a wrong offset!");
static_assert(offsetof(FScriptDiagnosticSourceLocation, RowSpan) == 0x000010, "Member 'FScriptDiagnosticSourceLocation::RowSpan' has a wrong offset!");
static_assert(offsetof(FScriptDiagnosticSourceLocation, ColSpan) == 0x000018, "Member 'FScriptDiagnosticSourceLocation::ColSpan' has a wrong offset!");

// ScriptStruct UnrealEngineExperimental.ScriptDiagnosticMessage
// 0x0058 (0x0058 - 0x0000)
struct FScriptDiagnosticMessage
{
public:
	EScriptDiagnosticMessageType                  MessageType;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              Timestamp;                                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Channel;                                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   MessageStr;                                        // 0x0020(0x0018)(NativeAccessSpecifierPublic)
	struct FScriptDiagnosticSourceLocation        SourceLocation;                                    // 0x0038(0x0020)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FScriptDiagnosticMessage) == 0x000008, "Wrong alignment on FScriptDiagnosticMessage");
static_assert(sizeof(FScriptDiagnosticMessage) == 0x000058, "Wrong size on FScriptDiagnosticMessage");
static_assert(offsetof(FScriptDiagnosticMessage, MessageType) == 0x000000, "Member 'FScriptDiagnosticMessage::MessageType' has a wrong offset!");
static_assert(offsetof(FScriptDiagnosticMessage, Timestamp) == 0x000008, "Member 'FScriptDiagnosticMessage::Timestamp' has a wrong offset!");
static_assert(offsetof(FScriptDiagnosticMessage, Channel) == 0x000010, "Member 'FScriptDiagnosticMessage::Channel' has a wrong offset!");
static_assert(offsetof(FScriptDiagnosticMessage, MessageStr) == 0x000020, "Member 'FScriptDiagnosticMessage::MessageStr' has a wrong offset!");
static_assert(offsetof(FScriptDiagnosticMessage, SourceLocation) == 0x000038, "Member 'FScriptDiagnosticMessage::SourceLocation' has a wrong offset!");

// ScriptStruct UnrealEngineExperimental.ScriptScreenLogMessage
// 0x0008 (0x0060 - 0x0058)
struct FScriptScreenLogMessage final : public FScriptDiagnosticMessage
{
public:
	struct FColor                                 ScreenColor;                                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplayDuration;                                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScriptScreenLogMessage) == 0x000008, "Wrong alignment on FScriptScreenLogMessage");
static_assert(sizeof(FScriptScreenLogMessage) == 0x000060, "Wrong size on FScriptScreenLogMessage");
static_assert(offsetof(FScriptScreenLogMessage, ScreenColor) == 0x000058, "Member 'FScriptScreenLogMessage::ScreenColor' has a wrong offset!");
static_assert(offsetof(FScriptScreenLogMessage, DisplayDuration) == 0x00005C, "Member 'FScriptScreenLogMessage::DisplayDuration' has a wrong offset!");

// ScriptStruct UnrealEngineExperimental.ScriptScreenLogMessageWithLocalization
// 0x0050 (0x0050 - 0x0000)
struct FScriptScreenLogMessageWithLocalization final
{
public:
	struct FDateTime                              Timestamp;                                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLocalizableMessage                    Message;                                           // 0x0008(0x0030)(NativeAccessSpecifierPublic)
	class FString                                 Prefix;                                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ScreenColor;                                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplayDuration;                                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScriptScreenLogMessageWithLocalization) == 0x000008, "Wrong alignment on FScriptScreenLogMessageWithLocalization");
static_assert(sizeof(FScriptScreenLogMessageWithLocalization) == 0x000050, "Wrong size on FScriptScreenLogMessageWithLocalization");
static_assert(offsetof(FScriptScreenLogMessageWithLocalization, Timestamp) == 0x000000, "Member 'FScriptScreenLogMessageWithLocalization::Timestamp' has a wrong offset!");
static_assert(offsetof(FScriptScreenLogMessageWithLocalization, Message) == 0x000008, "Member 'FScriptScreenLogMessageWithLocalization::Message' has a wrong offset!");
static_assert(offsetof(FScriptScreenLogMessageWithLocalization, Prefix) == 0x000038, "Member 'FScriptScreenLogMessageWithLocalization::Prefix' has a wrong offset!");
static_assert(offsetof(FScriptScreenLogMessageWithLocalization, ScreenColor) == 0x000048, "Member 'FScriptScreenLogMessageWithLocalization::ScreenColor' has a wrong offset!");
static_assert(offsetof(FScriptScreenLogMessageWithLocalization, DisplayDuration) == 0x00004C, "Member 'FScriptScreenLogMessageWithLocalization::DisplayDuration' has a wrong offset!");

}

