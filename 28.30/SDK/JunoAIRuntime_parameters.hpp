#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoAIRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function JunoAIRuntime.JunoAICampPawnComponent.ConvertAIRoleToDisplayText
// 0x0020 (0x0020 - 0x0000)
struct JunoAICampPawnComponent_ConvertAIRoleToDisplayText final
{
public:
	struct FGameplayTag                           AIRole;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICampPawnComponent_ConvertAIRoleToDisplayText) == 0x000008, "Wrong alignment on JunoAICampPawnComponent_ConvertAIRoleToDisplayText");
static_assert(sizeof(JunoAICampPawnComponent_ConvertAIRoleToDisplayText) == 0x000020, "Wrong size on JunoAICampPawnComponent_ConvertAIRoleToDisplayText");
static_assert(offsetof(JunoAICampPawnComponent_ConvertAIRoleToDisplayText, AIRole) == 0x000000, "Member 'JunoAICampPawnComponent_ConvertAIRoleToDisplayText::AIRole' has a wrong offset!");
static_assert(offsetof(JunoAICampPawnComponent_ConvertAIRoleToDisplayText, ReturnValue) == 0x000008, "Member 'JunoAICampPawnComponent_ConvertAIRoleToDisplayText::ReturnValue' has a wrong offset!");

// Function JunoAIRuntime.JunoAICampPawnComponent.GetAIRole
// 0x0004 (0x0004 - 0x0000)
struct JunoAICampPawnComponent_GetAIRole final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICampPawnComponent_GetAIRole) == 0x000004, "Wrong alignment on JunoAICampPawnComponent_GetAIRole");
static_assert(sizeof(JunoAICampPawnComponent_GetAIRole) == 0x000004, "Wrong size on JunoAICampPawnComponent_GetAIRole");
static_assert(offsetof(JunoAICampPawnComponent_GetAIRole, ReturnValue) == 0x000000, "Member 'JunoAICampPawnComponent_GetAIRole::ReturnValue' has a wrong offset!");

// Function JunoAIRuntime.JunoAICampPawnComponent.GetAIRoleDisplayText
// 0x0018 (0x0018 - 0x0000)
struct JunoAICampPawnComponent_GetAIRoleDisplayText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICampPawnComponent_GetAIRoleDisplayText) == 0x000008, "Wrong alignment on JunoAICampPawnComponent_GetAIRoleDisplayText");
static_assert(sizeof(JunoAICampPawnComponent_GetAIRoleDisplayText) == 0x000018, "Wrong size on JunoAICampPawnComponent_GetAIRoleDisplayText");
static_assert(offsetof(JunoAICampPawnComponent_GetAIRoleDisplayText, ReturnValue) == 0x000000, "Member 'JunoAICampPawnComponent_GetAIRoleDisplayText::ReturnValue' has a wrong offset!");

// Function JunoAIRuntime.JunoAICampPawnComponent.GetSoftRemovedReasons
// 0x0020 (0x0020 - 0x0000)
struct JunoAICampPawnComponent_GetSoftRemovedReasons final
{
public:
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICampPawnComponent_GetSoftRemovedReasons) == 0x000008, "Wrong alignment on JunoAICampPawnComponent_GetSoftRemovedReasons");
static_assert(sizeof(JunoAICampPawnComponent_GetSoftRemovedReasons) == 0x000020, "Wrong size on JunoAICampPawnComponent_GetSoftRemovedReasons");
static_assert(offsetof(JunoAICampPawnComponent_GetSoftRemovedReasons, ReturnValue) == 0x000000, "Member 'JunoAICampPawnComponent_GetSoftRemovedReasons::ReturnValue' has a wrong offset!");

// Function JunoAIRuntime.PlayspaceComponent_Root_JunoAIManagement.HandleFTUENPCSpawned
// 0x0008 (0x0008 - 0x0000)
struct PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned final
{
public:
	const class AActor*                           FTUENPC;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned) == 0x000008, "Wrong alignment on PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned");
static_assert(sizeof(PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned) == 0x000008, "Wrong size on PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned");
static_assert(offsetof(PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned, FTUENPC) == 0x000000, "Member 'PlayspaceComponent_Root_JunoAIManagement_HandleFTUENPCSpawned::FTUENPC' has a wrong offset!");

// Function JunoAIRuntime.JunoAISafetyBubbleComponent.OnTimeOfDayPhaseChanged
// 0x0003 (0x0003 - 0x0000)
struct JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged final
{
public:
	EFortDayPhase                                 CurrentDayPhase;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged) == 0x000001, "Wrong alignment on JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged");
static_assert(sizeof(JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged) == 0x000003, "Wrong size on JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged");
static_assert(offsetof(JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged, CurrentDayPhase) == 0x000000, "Member 'JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged::CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged, PreviousDayPhase) == 0x000001, "Member 'JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged, bAtCreation) == 0x000002, "Member 'JunoAISafetyBubbleComponent_OnTimeOfDayPhaseChanged::bAtCreation' has a wrong offset!");

// Function JunoAIRuntime.JunoAICheatManager.JunoEnableFriendlyCreatures
// 0x0001 (0x0001 - 0x0000)
struct JunoAICheatManager_JunoEnableFriendlyCreatures final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICheatManager_JunoEnableFriendlyCreatures) == 0x000001, "Wrong alignment on JunoAICheatManager_JunoEnableFriendlyCreatures");
static_assert(sizeof(JunoAICheatManager_JunoEnableFriendlyCreatures) == 0x000001, "Wrong size on JunoAICheatManager_JunoEnableFriendlyCreatures");
static_assert(offsetof(JunoAICheatManager_JunoEnableFriendlyCreatures, bEnable) == 0x000000, "Member 'JunoAICheatManager_JunoEnableFriendlyCreatures::bEnable' has a wrong offset!");

// Function JunoAIRuntime.JunoAICheatManager.JunoEnableFriendlyNPCs
// 0x0001 (0x0001 - 0x0000)
struct JunoAICheatManager_JunoEnableFriendlyNPCs final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICheatManager_JunoEnableFriendlyNPCs) == 0x000001, "Wrong alignment on JunoAICheatManager_JunoEnableFriendlyNPCs");
static_assert(sizeof(JunoAICheatManager_JunoEnableFriendlyNPCs) == 0x000001, "Wrong size on JunoAICheatManager_JunoEnableFriendlyNPCs");
static_assert(offsetof(JunoAICheatManager_JunoEnableFriendlyNPCs, bEnable) == 0x000000, "Member 'JunoAICheatManager_JunoEnableFriendlyNPCs::bEnable' has a wrong offset!");

// Function JunoAIRuntime.JunoAICheatManager.JunoEnableHostileCreatures
// 0x0001 (0x0001 - 0x0000)
struct JunoAICheatManager_JunoEnableHostileCreatures final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoAICheatManager_JunoEnableHostileCreatures) == 0x000001, "Wrong alignment on JunoAICheatManager_JunoEnableHostileCreatures");
static_assert(sizeof(JunoAICheatManager_JunoEnableHostileCreatures) == 0x000001, "Wrong size on JunoAICheatManager_JunoEnableHostileCreatures");
static_assert(offsetof(JunoAICheatManager_JunoEnableHostileCreatures, bEnable) == 0x000000, "Member 'JunoAICheatManager_JunoEnableHostileCreatures::bEnable' has a wrong offset!");

}

