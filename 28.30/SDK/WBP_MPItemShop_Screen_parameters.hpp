#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_Screen

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToGame_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_BackToNav_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_OpenQuickNavTouch_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_SAC_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_Button_ShowPreviewTouch_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature final
{
public:
	class FString                                 OfferId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature) == 0x000010, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature, OfferId) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_MPItemShop_Content_K2Node_ComponentBoundEvent_3_OnOfferFocused__DelegateSignature::OfferId' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BndEvt__WBP_MPItemShop_Screen_WBP_UIKit_Button_Quiet_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.ClearSectionNavigatorVM
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM");
static_assert(sizeof(WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_ClearSectionNavigatorVM::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.CreateNavigationBindings
// 0x000C (0x000C - 0x0000)
struct WBP_MPItemShop_Screen_C_CreateNavigationBindings final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_CreateNavigationBindings) == 0x000004, "Wrong alignment on WBP_MPItemShop_Screen_C_CreateNavigationBindings");
static_assert(sizeof(WBP_MPItemShop_Screen_C_CreateNavigationBindings) == 0x00000C, "Wrong size on WBP_MPItemShop_Screen_C_CreateNavigationBindings");
static_assert(offsetof(WBP_MPItemShop_Screen_C_CreateNavigationBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_CreateNavigationBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.CreateSectionNavigatorBindings
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x000C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings) == 0x000004, "Wrong alignment on WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings");
static_assert(sizeof(WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings) == 0x000018, "Wrong size on WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings");
static_assert(offsetof(WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x00000C, "Member 'WBP_MPItemShop_Screen_C_CreateSectionNavigatorBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.ExecuteUbergraph_WBP_MPItemShop_Screen
// 0x0168 (0x0168 - 0x0000)
struct WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_5;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_OfferId;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_4;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFortItemShopCMSBackground             CallFunc_GetPreferredBackgroundForLayout_ReturnValue; // 0x0028(0x0020)()
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_OfferTrackingId;                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowOfferDetails;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetDesiredFocusTile_TileWidget;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemShopOfferVM*             CallFunc_FindOfferByTrackingId_ReturnValue;        // 0x0078(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_3;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUsingGamepad;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ScrollAmount;                         // 0x009C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPreviewEnabled_ReturnValue;         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_FeaturedOfferId;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemShopOfferGroupVM*        CallFunc_GetOfferGroupWithOffer_ReturnValue;       // 0x00E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemShopOfferVM*             CallFunc_GetOfferFromId_ReturnValue;               // 0x00F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDialogVM_ShopInfo_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUIKitDialogViewModel*                  CallFunc_OverrideDialogInfoText_Out_ModalVM;       // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_SupportACreator_Dialog_C*          CallFunc_Create_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonActivatableWidget*         K2Node_Event_OfferInspectionScreenWidget;          // 0x0120(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAthenaItemShopOfferDetailsPreviewWidget* K2Node_DynamicCast_AsAthena_Item_Shop_Offer_Details_Preview_Widget; // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_OfferInspection_C*      K2Node_DynamicCast_AsWBP_MPItem_Shop_Offer_Inspection; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* LoadedBackground)> K2Node_CreateDelegate_OutputDelegate;              // 0x0144(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadBackground_ReturnValue;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_LoadedBackground;               // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HandleScroll_OffsetAmount_ImplicitCast;   // 0x0160(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen");
static_assert(sizeof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen) == 0x000168, "Wrong size on WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, EntryPoint) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_Button_5) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_OfferId) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_OfferId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_Button_4) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_GetPreferredBackgroundForLayout_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_GetPreferredBackgroundForLayout_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_GetCurrentRowWidget_RowWidget) == 0x000048, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_GetCurrentRowWidget_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_Event_OfferTrackingId) == 0x000050, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_Event_OfferTrackingId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_Event_bShowOfferDetails) == 0x000060, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_Event_bShowOfferDetails' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_GetDesiredFocusTile_TileWidget) == 0x000068, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_GetDesiredFocusTile_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_FindOfferByTrackingId_ReturnValue) == 0x000078, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_FindOfferByTrackingId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_Button_3) == 0x000088, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_Button_2) == 0x000090, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_Event_bUsingGamepad) == 0x000098, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_Event_bUsingGamepad' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_Event_ScrollAmount) == 0x00009C, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_Event_ScrollAmount' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_Button_1) == 0x0000A0, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_ComponentBoundEvent_Button) == 0x0000A8, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_IsUsingTouch_ReturnValue) == 0x0000B0, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_IsItemPreviewEnabled_ReturnValue) == 0x0000B1, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_IsItemPreviewEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_SpawnSound2D_ReturnValue) == 0x0000B8, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_SpawnSound2D_ReturnValue_1) == 0x0000C0, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_IsUsingTouch_ReturnValue_1) == 0x0000C8, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_CustomEvent_FeaturedOfferId) == 0x0000D0, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_CustomEvent_FeaturedOfferId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_IsEmpty_ReturnValue) == 0x0000E0, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E1, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_GetOfferGroupWithOffer_ReturnValue) == 0x0000E8, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_GetOfferGroupWithOffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_BooleanAND_ReturnValue) == 0x0000F0, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_GetOfferFromId_ReturnValue) == 0x0000F8, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_GetOfferFromId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_SpawnObject_ReturnValue) == 0x000100, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_OverrideDialogInfoText_Out_ModalVM) == 0x000108, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_OverrideDialogInfoText_Out_ModalVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_Create_ReturnValue) == 0x000110, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_Not_PreBool_ReturnValue_2) == 0x000118, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_BooleanAND_ReturnValue_1) == 0x000119, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_Event_OfferInspectionScreenWidget) == 0x000120, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_Event_OfferInspectionScreenWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_DynamicCast_AsAthena_Item_Shop_Offer_Details_Preview_Widget) == 0x000128, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_DynamicCast_AsAthena_Item_Shop_Offer_Details_Preview_Widget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_DynamicCast_AsWBP_MPItem_Shop_Offer_Inspection) == 0x000138, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_DynamicCast_AsWBP_MPItem_Shop_Offer_Inspection' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_CreateDelegate_OutputDelegate) == 0x000144, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_LoadBackground_ReturnValue) == 0x000150, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_LoadBackground_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, K2Node_CustomEvent_LoadedBackground) == 0x000158, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::K2Node_CustomEvent_LoadedBackground' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen, CallFunc_HandleScroll_OffsetAmount_ImplicitCast) == 0x000160, "Member 'WBP_MPItemShop_Screen_C_ExecuteUbergraph_WBP_MPItemShop_Screen::CallFunc_HandleScroll_OffsetAmount_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.FocusContent
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Screen_C_FocusContent final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetDesiredFocusTile_TileWidget;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_FocusContent) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_FocusContent");
static_assert(sizeof(WBP_MPItemShop_Screen_C_FocusContent) == 0x000030, "Wrong size on WBP_MPItemShop_Screen_C_FocusContent");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusContent, Navigation_0) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_FocusContent::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusContent, ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_FocusContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusContent, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_FocusContent::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusContent, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_FocusContent::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusContent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_FocusContent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusContent, CallFunc_GetDesiredFocusTile_TileWidget) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_FocusContent::CallFunc_GetDesiredFocusTile_TileWidget' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.FocusFirstOfferInCurrentRow
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow final
{
public:
	class UFortItemShopOfferVM*                   Offer;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferVM*                   CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow");
static_assert(sizeof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow) == 0x000028, "Wrong size on WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow, Offer) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow::Offer' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_FocusFirstOfferInCurrentRow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.FullActivate
// 0x0040 (0x0040 - 0x0000)
struct WBP_MPItemShop_Screen_C_FullActivate final
{
public:
	ECosmeticCompatibleMode                       CallFunc_GetItemShopContext_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContextChanged_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContextChanged_ReturnValue_1;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFirstSectionID_SectionId;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFortItemShopLayout                    K2Node_MakeStruct_FortItemShopLayout;              // 0x0018(0x0020)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_FullActivate) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_FullActivate");
static_assert(sizeof(WBP_MPItemShop_Screen_C_FullActivate) == 0x000040, "Wrong size on WBP_MPItemShop_Screen_C_FullActivate");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_GetItemShopContext_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_GetItemShopContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_HasContextChanged_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_HasContextChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_HasContextChanged_ReturnValue_1) == 0x000003, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_HasContextChanged_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_GetFirstSectionID_SectionId) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_GetFirstSectionID_SectionId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, K2Node_MakeStruct_FortItemShopLayout) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_FullActivate::K2Node_MakeStruct_FortItemShopLayout' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_IsEmpty_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'WBP_MPItemShop_Screen_C_FullActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.FullDeactivate
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_FullDeactivate final
{
public:
	ECosmeticCompatibleMode                       CallFunc_GetItemShopContext_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_FullDeactivate) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_FullDeactivate");
static_assert(sizeof(WBP_MPItemShop_Screen_C_FullDeactivate) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_FullDeactivate");
static_assert(offsetof(WBP_MPItemShop_Screen_C_FullDeactivate, CallFunc_GetItemShopContext_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_FullDeactivate::CallFunc_GetItemShopContext_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.GetItemShopVM
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_GetItemShopVM final
{
public:
	class UFortItemShopVM*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_GetItemShopVM) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_GetItemShopVM");
static_assert(sizeof(WBP_MPItemShop_Screen_C_GetItemShopVM) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_GetItemShopVM");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetItemShopVM, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_GetItemShopVM::ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.Handle Quicknav or Content Focus
// 0x000D (0x000D - 0x0000)
struct WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus final
{
public:
	bool                                          ShouldFocusSectionNavigator;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPreviewEnabled_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowNavPromptBelowNav_ReturnValue;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPreviewEnabled_ReturnValue_1;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus");
static_assert(sizeof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus) == 0x00000D, "Wrong size on WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, ShouldFocusSectionNavigator) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::ShouldFocusSectionNavigator' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, Temp_byte_Variable) == 0x000003, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_IsItemPreviewEnabled_ReturnValue) == 0x000005, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_IsItemPreviewEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_IsUsingTouch_ReturnValue) == 0x000007, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_ShouldShowNavPromptBelowNav_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_ShouldShowNavPromptBelowNav_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_IsItemPreviewEnabled_ReturnValue_1) == 0x00000A, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_IsItemPreviewEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus, K2Node_Select_Default) == 0x00000C, "Member 'WBP_MPItemShop_Screen_C_Handle_Quicknav_or_Content_Focus::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.HandleItemPreview
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_HandleItemPreview final
{
public:
	class UFortItemVM*                            PreviewedItem_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_HandleItemPreview) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_HandleItemPreview");
static_assert(sizeof(WBP_MPItemShop_Screen_C_HandleItemPreview) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_HandleItemPreview");
static_assert(offsetof(WBP_MPItemShop_Screen_C_HandleItemPreview, PreviewedItem_0) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_HandleItemPreview::PreviewedItem_0' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.MarkAllOfferGroupsAsItemShopVisited
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited");
static_assert(sizeof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited");
static_assert(offsetof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_MarkAllOfferGroupsAsItemShopVisited::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnBackgroundDataLoaded
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded final
{
public:
	class UObject*                                LoadedBackground;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded, LoadedBackground) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnBackgroundDataLoaded::LoadedBackground' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnInputModeChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnInputModeChanged) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_OnInputModeChanged");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnInputModeChanged) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_OnInputModeChanged");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnInputModeChanged, bUsingGamepad) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnInputModeChanged::bUsingGamepad' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnIsItemPreviewEnabledChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged final
{
public:
	bool                                          IsItemPreviewEnabled;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged, IsItemPreviewEnabled) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged::IsItemPreviewEnabled' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_OnIsItemPreviewEnabledChanged::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnNavigateToOffer
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnNavigateToOffer final
{
public:
	class FString                                 OfferTrackingId;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bShowOfferDetails;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnNavigateToOffer) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OnNavigateToOffer");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnNavigateToOffer) == 0x000018, "Wrong size on WBP_MPItemShop_Screen_C_OnNavigateToOffer");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnNavigateToOffer, OfferTrackingId) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnNavigateToOffer::OfferTrackingId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnNavigateToOffer, bShowOfferDetails) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_OnNavigateToOffer::bShowOfferDetails' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnOfferInspectionScreenShown
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown final
{
public:
	const class UCommonActivatableWidget*         OfferInspectionScreenWidget;                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown) == 0x000008, "Wrong size on WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown, OfferInspectionScreenWidget) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnOfferInspectionScreenShown::OfferInspectionScreenWidget' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnScrollInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnScrollInput final
{
public:
	float                                         ScrollAmount;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnScrollInput) == 0x000004, "Wrong alignment on WBP_MPItemShop_Screen_C_OnScrollInput");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnScrollInput) == 0x000004, "Wrong size on WBP_MPItemShop_Screen_C_OnScrollInput");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnScrollInput, ScrollAmount) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnScrollInput::ScrollAmount' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnSetFeaturedOfferId
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId final
{
public:
	class FString                                 FeaturedOfferId;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId) == 0x000010, "Wrong size on WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId, FeaturedOfferId) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnSetFeaturedOfferId::FeaturedOfferId' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OnUpdateBackground
// 0x0040 (0x0040 - 0x0000)
struct WBP_MPItemShop_Screen_C_OnUpdateBackground final
{
public:
	struct FFortItemShopLayout                    InLayout;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemShopDynamicBackgroundEnabled_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OnUpdateBackground) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OnUpdateBackground");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OnUpdateBackground) == 0x000040, "Wrong size on WBP_MPItemShop_Screen_C_OnUpdateBackground");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnUpdateBackground, InLayout) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OnUpdateBackground::InLayout' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnUpdateBackground, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_OnUpdateBackground::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnUpdateBackground, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00002C, "Member 'WBP_MPItemShop_Screen_C_OnUpdateBackground::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnUpdateBackground, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Screen_C_OnUpdateBackground::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OnUpdateBackground, CallFunc_IsItemShopDynamicBackgroundEnabled_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Screen_C_OnUpdateBackground::CallFunc_IsItemShopDynamicBackgroundEnabled_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.OverrideDialogInfoText
// 0x0058 (0x0058 - 0x0000)
struct WBP_MPItemShop_Screen_C_OverrideDialogInfoText final
{
public:
	class UUIKitDialogViewModel*                  ModalVM;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUIKitDialogViewModel*                  Out_ModalVM;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_OverrideDialogInfoText");
static_assert(sizeof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText) == 0x000058, "Wrong size on WBP_MPItemShop_Screen_C_OverrideDialogInfoText");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText, ModalVM) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_OverrideDialogInfoText::ModalVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText, Out_ModalVM) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_OverrideDialogInfoText::Out_ModalVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_OverrideDialogInfoText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_OverrideDialogInfoText::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText, CallFunc_Replace_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Screen_C_OverrideDialogInfoText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_OverrideDialogInfoText, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_Screen_C_OverrideDialogInfoText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.PreviewOfferFromID
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPItemShop_Screen_C_PreviewOfferFromID final
{
public:
	class FString                                 Offer_ID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UFortItemShopOfferVM*                   Offer;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemVM*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAthenaItemVM*                          K2Node_DynamicCast_AsAthena_Item_VM;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaCosmeticItemDefinition*          K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemShopOfferVM*             CallFunc_GetOfferFromId_ReturnValue;               // 0x0050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_PreviewOfferFromID) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_PreviewOfferFromID");
static_assert(sizeof(WBP_MPItemShop_Screen_C_PreviewOfferFromID) == 0x000060, "Wrong size on WBP_MPItemShop_Screen_C_PreviewOfferFromID");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, Offer_ID) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::Offer_ID' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, Offer) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::Offer' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, K2Node_DynamicCast_AsAthena_Item_VM) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::K2Node_DynamicCast_AsAthena_Item_VM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition) == 0x000038, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::K2Node_DynamicCast_AsAthena_Cosmetic_Item_Definition' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, CallFunc_GetOfferFromId_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::CallFunc_GetOfferFromId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PreviewOfferFromID, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_MPItemShop_Screen_C_PreviewOfferFromID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.PushModal
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Screen_C_PushModal final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_PushModal) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_PushModal");
static_assert(sizeof(WBP_MPItemShop_Screen_C_PushModal) == 0x000018, "Wrong size on WBP_MPItemShop_Screen_C_PushModal");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PushModal, ActivatableWidget) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_PushModal::ActivatableWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_PushModal, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_PushModal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.RefreshWidgetCameraFrame
// 0x01F0 (0x01F0 - 0x0000)
struct WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame final
{
public:
	bool                                          UseWidePreview;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RowDiff;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreviewingVehicle_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0014(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x004C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetAbsolutePosition_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_2;          // 0x00C8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbsolutePosition_ReturnValue_1;        // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_3;          // 0x0138(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetRowWidgetByRowIndex_RowWidget;         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue_1;            // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame");
static_assert(sizeof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame) == 0x0001F0, "Wrong size on WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, UseWidePreview) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::UseWidePreview' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, RowDiff) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::RowDiff' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_IsPreviewingVehicle_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_IsPreviewingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetCachedGeometry_ReturnValue) == 0x000014, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x00004C, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetAbsolutePosition_ReturnValue) == 0x000088, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetAbsolutePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000098, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000A8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_BreakVector2D_X) == 0x0000B0, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_BreakVector2D_Y) == 0x0000B8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetCachedGeometry_ReturnValue_2) == 0x0000C8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetCachedGeometry_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_SelectFloat_ReturnValue) == 0x000100, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetAbsolutePosition_ReturnValue_1) == 0x000108, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetAbsolutePosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000118, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000128, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetCachedGeometry_ReturnValue_3) == 0x000138, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetCachedGeometry_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetLocalSize_ReturnValue) == 0x000170, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_GetRowWidgetByRowIndex_RowWidget) == 0x000188, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_GetRowWidgetByRowIndex_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_AbsoluteToLocal_ReturnValue_1) == 0x000198, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_AbsoluteToLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001A8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_BreakVector2D_X_1) == 0x0001B8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_BreakVector2D_Y_1) == 0x0001C0, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0001C8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, CallFunc_SelectFloat_ReturnValue_1) == 0x0001D0, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, K2Node_MakeStruct_Margin) == 0x0001D8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, K2Node_MakeStruct_Left_ImplicitCast) == 0x0001E8, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame, K2Node_MakeStruct_Right_ImplicitCast) == 0x0001EC, "Member 'WBP_MPItemShop_Screen_C_RefreshWidgetCameraFrame::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.RequestMarkAllOfferGroupsAsItemShopVisited
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited final
{
public:
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited");
static_assert(sizeof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_RequestMarkAllOfferGroupsAsItemShopVisited::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetAllInteractionsEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled final
{
public:
	bool                                          bInIsInteractionEnabled;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled, bInIsInteractionEnabled) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetAllInteractionsEnabled::bInIsInteractionEnabled' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetCameraFrameCollapseAnimationValue
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue, Alpha) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue::Alpha' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_SetCameraFrameCollapseAnimationValue::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetMobileStyle
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Screen_C_SetMobileStyle final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetMobileStyle) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_SetMobileStyle");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetMobileStyle) == 0x000030, "Wrong size on WBP_MPItemShop_Screen_C_SetMobileStyle");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetMobileStyle, K2Node_MakeStruct_Margin) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetMobileStyle::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetMobileStyle, K2Node_MakeStruct_Margin_1) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_SetMobileStyle::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetMobileStyle, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_SetMobileStyle::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetMobileStyle, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_SetMobileStyle::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetSectionNavigatorCollapsed
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed final
{
public:
	bool                                          ShouldCollapse;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed, ShouldCollapse) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed::ShouldCollapse' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_MPItemShop_Screen_C_SetSectionNavigatorCollapsed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetSectionNavigatorFortItemShopVM
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetSectionNavigatorFortItemShopVM::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetupAndPushInfoModal
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_SetupAndPushInfoModal final
{
public:
	class UUIKitDialogViewModel*                  ModalVM;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ShopInfo_Dialog_C*                 CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ShopInfo_Dialog_C*                 K2Node_DynamicCast_AsWBP_Shop_Info_Dialog;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetupAndPushInfoModal) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_SetupAndPushInfoModal");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetupAndPushInfoModal) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_SetupAndPushInfoModal");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetupAndPushInfoModal, ModalVM) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetupAndPushInfoModal::ModalVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetupAndPushInfoModal, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_SetupAndPushInfoModal::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetupAndPushInfoModal, K2Node_DynamicCast_AsWBP_Shop_Info_Dialog) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_SetupAndPushInfoModal::K2Node_DynamicCast_AsWBP_Shop_Info_Dialog' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetupAndPushInfoModal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_SetupAndPushInfoModal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SetupSectionNavigator
// 0x000C (0x000C - 0x0000)
struct WBP_MPItemShop_Screen_C_SetupSectionNavigator final
{
public:
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SetupSectionNavigator) == 0x000004, "Wrong alignment on WBP_MPItemShop_Screen_C_SetupSectionNavigator");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SetupSectionNavigator) == 0x00000C, "Wrong size on WBP_MPItemShop_Screen_C_SetupSectionNavigator");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SetupSectionNavigator, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SetupSectionNavigator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.SoftDeactivate
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_SoftDeactivate final
{
public:
	ECosmeticCompatibleMode                       CallFunc_GetItemShopContext_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_SoftDeactivate) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_SoftDeactivate");
static_assert(sizeof(WBP_MPItemShop_Screen_C_SoftDeactivate) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_SoftDeactivate");
static_assert(offsetof(WBP_MPItemShop_Screen_C_SoftDeactivate, CallFunc_GetItemShopContext_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_SoftDeactivate::CallFunc_GetItemShopContext_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.TryShowJunoOutfitsFTUEModal
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal final
{
public:
	class UWBP_MinifigsInfo_Dialog_C*             CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MinifigsInfo_Dialog_C*             K2Node_DynamicCast_AsWBP_Minifigs_Info_Dialog;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDialogVM_MinifigsInfo_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowJunoOutfitsFTUE_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal");
static_assert(sizeof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal) == 0x000030, "Wrong size on WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal");
static_assert(offsetof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal, K2Node_DynamicCast_AsWBP_Minifigs_Info_Dialog) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal::K2Node_DynamicCast_AsWBP_Minifigs_Info_Dialog' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal, CallFunc_ShouldShowJunoOutfitsFTUE_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_TryShowJunoOutfitsFTUEModal::CallFunc_ShouldShowJunoOutfitsFTUE_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.Update Preview Quick Nav Buttons Visibility
// 0x0003 (0x0003 - 0x0000)
struct WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility final
{
public:
	bool                                          CallFunc_IsSectionNavigatorCollapsed_IsCollapsed;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPreviewEnabled_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility");
static_assert(sizeof(WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility) == 0x000003, "Wrong size on WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility, CallFunc_IsSectionNavigatorCollapsed_IsCollapsed) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility::CallFunc_IsSectionNavigatorCollapsed_IsCollapsed' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility, CallFunc_IsItemPreviewEnabled_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_Update_Preview_Quick_Nav_Buttons_Visibility::CallFunc_IsItemPreviewEnabled_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateCameraButtonVisibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility) == 0x000018, "Wrong size on WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility, K2Node_Select_Default) == 0x000014, "Member 'WBP_MPItemShop_Screen_C_UpdateCameraButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateHasSeenItemShop
// 0x0002 (0x0002 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop final
{
public:
	bool                                          CallFunc_GetHasSeenItemShop_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop) == 0x000002, "Wrong size on WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop, CallFunc_GetHasSeenItemShop_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop::CallFunc_GetHasSeenItemShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_UpdateHasSeenItemShop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateInGameButtons
// 0x0038 (0x0038 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateInGameButtons final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortGameState_InGame*                  K2Node_DynamicCast_AsFort_Game_State_in_Game;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0028(0x0010)(NoDestructor)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateInGameButtons) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateInGameButtons");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateInGameButtons) == 0x000038, "Wrong size on WBP_MPItemShop_Screen_C_UpdateInGameButtons");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, Temp_bool_Variable) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, Temp_name_Variable) == 0x000004, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, Temp_name_Variable_1) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, Temp_byte_Variable) == 0x00000D, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, Temp_byte_Variable_1) == 0x00000E, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, K2Node_DynamicCast_AsFort_Game_State_in_Game) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::K2Node_DynamicCast_AsFort_Game_State_in_Game' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, K2Node_Select_Default) == 0x000021, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, K2Node_Select_Default_1) == 0x000024, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateInGameButtons, K2Node_MakeStruct_DataTableRowHandle) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_UpdateInGameButtons::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateItemPreview
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateItemPreview final
{
public:
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateItemPreview) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateItemPreview");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateItemPreview) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_UpdateItemPreview");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateItemPreview, CallFunc_IsEmpty_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateItemPreview::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateMainActiveWidget
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateMainActiveWidget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemShopLoadingState                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default;                             // 0x0018(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UWidget*                          K2Node_Select_Default_1;                           // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateMainActiveWidget");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget) == 0x000030, "Wrong size on WBP_MPItemShop_Screen_C_UpdateMainActiveWidget");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, Temp_bool_Variable) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, Temp_byte_Variable) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, CallFunc_Array_IsEmpty_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, K2Node_Select_Default) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateMainActiveWidgetFromLoadingState
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState final
{
public:
	EFortItemShopLoadingState                     LoadingState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState, LoadingState) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromLoadingState::LoadingState' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateMainActiveWidgetFromOfferGroups
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups final
{
public:
	TArray<class UFortItemShopOfferGroupVM*>      AllOfferGroupsWithOffers;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups) == 0x000010, "Wrong size on WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups, AllOfferGroupsWithOffers) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateMainActiveWidgetFromOfferGroups::AllOfferGroupsWithOffers' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateSongInfoSizing
// 0x0088 (0x0088 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateSongInfoSizing final
{
public:
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0008(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateSongInfoSizing");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing) == 0x000088, "Wrong size on WBP_MPItemShop_Screen_C_UpdateSongInfoSizing");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_GetCachedGeometry_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_GetLocalSize_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_BreakVector2D_X) == 0x000050, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, K2Node_MakeStruct_Margin) == 0x000070, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoSizing, K2Node_MakeStruct_Top_ImplicitCast) == 0x000080, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoSizing::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.UpdateSongInfoVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility final
{
public:
	bool                                          ShouldShow;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility");
static_assert(sizeof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility) == 0x000005, "Wrong size on WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility, ShouldShow) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility::ShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_MPItemShop_Screen_C_UpdateSongInfoVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.BP_GetDesiredFocusTarget
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetSectionNavigatorFocusTarget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSectionNavigatorCollapsed_IsCollapsed;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetDesiredFocusTile_TileWidget;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget) == 0x000028, "Wrong size on WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget, CallFunc_GetSectionNavigatorFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget::CallFunc_GetSectionNavigatorFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget, CallFunc_IsSectionNavigatorCollapsed_IsCollapsed) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget::CallFunc_IsSectionNavigatorCollapsed_IsCollapsed' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget, CallFunc_GetCurrentRowWidget_RowWidget) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget::CallFunc_GetCurrentRowWidget_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTile_TileWidget) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTile_TileWidget' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.GetFirstSectionID
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Screen_C_GetFirstSectionID final
{
public:
	class FString                                 SectionId;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UFortItemShopSectionVM*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_GetFirstSectionID) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_GetFirstSectionID");
static_assert(sizeof(WBP_MPItemShop_Screen_C_GetFirstSectionID) == 0x000020, "Wrong size on WBP_MPItemShop_Screen_C_GetFirstSectionID");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetFirstSectionID, SectionId) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_GetFirstSectionID::SectionId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetFirstSectionID, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_GetFirstSectionID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetFirstSectionID, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Screen_C_GetFirstSectionID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.GetSectionNavigatorFocusTarget
// 0x0050 (0x0050 - 0x0000)
struct WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContextChanged_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFirstSectionID_SectionId;              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      CallFunc_GetSectionButton_Button;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget");
static_assert(sizeof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget) == 0x000050, "Wrong size on WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_HasContextChanged_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_HasContextChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_GetFirstSectionID_SectionId) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_GetFirstSectionID_SectionId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_IsEmpty_ReturnValue) == 0x000021, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_SelectString_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_SelectString_ReturnValue_1) == 0x000038, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget, CallFunc_GetSectionButton_Button) == 0x000048, "Member 'WBP_MPItemShop_Screen_C_GetSectionNavigatorFocusTarget::CallFunc_GetSectionButton_Button' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.GetSongInfoText
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_MPItemShop_Screen_C_GetSongInfoText final
{
public:
	class UFortItemVM*                            PreviewedItem_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   FormattedText;                                     // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
};
static_assert(alignof(WBP_MPItemShop_Screen_C_GetSongInfoText) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_GetSongInfoText");
static_assert(sizeof(WBP_MPItemShop_Screen_C_GetSongInfoText) == 0x0000F0, "Wrong size on WBP_MPItemShop_Screen_C_GetSongInfoText");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, PreviewedItem_0) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::PreviewedItem_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, FormattedText) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::FormattedText' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoText, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.GetSongInfoVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Screen_C_GetSongInfoVisibility final
{
public:
	class UFortItemVM*                            PreviewedItem_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Visibility_0;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetItemType_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_GetSongInfoVisibility");
static_assert(sizeof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility) == 0x000010, "Wrong size on WBP_MPItemShop_Screen_C_GetSongInfoVisibility");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, PreviewedItem_0) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::PreviewedItem_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, Visibility_0) == 0x000008, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, Temp_byte_Variable) == 0x000009, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, CallFunc_GetItemType_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::CallFunc_GetItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, Temp_bool_Variable) == 0x00000E, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSongInfoVisibility, K2Node_Select_Default) == 0x00000F, "Member 'WBP_MPItemShop_Screen_C_GetSongInfoVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.GetSupportCreatorText
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_MPItemShop_Screen_C_GetSupportCreatorText final
{
public:
	class FString                                 AffiliateName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   TimerText;                                         // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
};
static_assert(alignof(WBP_MPItemShop_Screen_C_GetSupportCreatorText) == 0x000008, "Wrong alignment on WBP_MPItemShop_Screen_C_GetSupportCreatorText");
static_assert(sizeof(WBP_MPItemShop_Screen_C_GetSupportCreatorText) == 0x0000F8, "Wrong size on WBP_MPItemShop_Screen_C_GetSupportCreatorText");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, AffiliateName) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::AffiliateName' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, TimerText) == 0x000010, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::TimerText' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, Temp_bool_Variable) == 0x000028, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, CallFunc_IsEmpty_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, Temp_text_Variable) == 0x0000B0, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_GetSupportCreatorText, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_MPItemShop_Screen_C_GetSupportCreatorText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.HasContextChanged
// 0x0003 (0x0003 - 0x0000)
struct WBP_MPItemShop_Screen_C_HasContextChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECosmeticCompatibleMode                       CallFunc_GetItemShopContext_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_HasContextChanged) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_HasContextChanged");
static_assert(sizeof(WBP_MPItemShop_Screen_C_HasContextChanged) == 0x000003, "Wrong size on WBP_MPItemShop_Screen_C_HasContextChanged");
static_assert(offsetof(WBP_MPItemShop_Screen_C_HasContextChanged, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_HasContextChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_HasContextChanged, CallFunc_GetItemShopContext_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Screen_C_HasContextChanged::CallFunc_GetItemShopContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Screen_C_HasContextChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Screen_C_HasContextChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Screen.WBP_MPItemShop_Screen_C.IsSectionNavigatorCollapsed
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed final
{
public:
	bool                                          IsCollapsed;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed) == 0x000001, "Wrong alignment on WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed");
static_assert(sizeof(WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed) == 0x000001, "Wrong size on WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed");
static_assert(offsetof(WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed, IsCollapsed) == 0x000000, "Member 'WBP_MPItemShop_Screen_C_IsSectionNavigatorCollapsed::IsCollapsed' has a wrong offset!");

}

