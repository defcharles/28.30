#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationVerse_0

#include "Basic.hpp"

#include "ItemizationVerse_0_structs.hpp"
#include "VerseNative_structs.hpp"
#include "EpicGamesTemporary_0_structs.hpp"


namespace SDK::Params
{

// Function ItemizationVerse.item_definition_base_asset._L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R
// 0x0028 (0x0028 - 0x0000)
struct item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TOptional<TArray<struct Ftuple_Lsubtype_Litem__attribute__base_R_Mitem__attribute__value__base_R>> RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R) == 0x000008, "Wrong alignment on item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R");
static_assert(sizeof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R) == 0x000028, "Wrong size on item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R");
static_assert(offsetof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R, RetVal) == 0x000010, "Member 'item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse.item_definition_base_asset._L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R
// 0x0028 (0x0028 - 0x0000)
struct item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TOptional<TArray<struct Ftuple_Lsubtype_Lfort__item__component__base_R_Mfort__item__component__base_R>> RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R) == 0x000008, "Wrong alignment on item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R");
static_assert(sizeof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R) == 0x000028, "Wrong size on item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R");
static_assert(offsetof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R, RetVal) == 0x000010, "Member 'item_definition_base_asset__L_2fFortnite_2ecom_2fItemization_2fitem__definition__base__asset_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse._Root._L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R
// 0x0010 (0x0010 - 0x0000)
struct _Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R final
{
public:
	struct Ftuple_Lfort__item_Mitem__state_R      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(_Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R) == 0x000008, "Wrong alignment on _Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R");
static_assert(sizeof(_Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R) == 0x000010, "Wrong size on _Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_ROnItemStateUpdate_L_Nfort__item_M_Nitem__state_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function ItemizationVerse._Root._L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R
// 0x0018 (0x0018 - 0x0000)
struct _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R final
{
public:
	struct ItemizationVerse_0::Ftuple_Lcreative__object_Mtuple_L_R_Mtuple_L_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<class Ufort_inventory_collection*, true> RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R) == 0x000008, "Wrong alignment on _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R");
static_assert(sizeof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R) == 0x000018, "Wrong size on _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R, RetVal) == 0x000010, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse._Root._L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R
// 0x0018 (0x0018 - 0x0000)
struct _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R final
{
public:
	struct ItemizationVerse_0::Ftuple_Lcreative__object_Mtuple_L_R_Mtuple_L_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<class Ufort_inventory_collection*, true> RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R) == 0x000008, "Wrong alignment on _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R");
static_assert(sizeof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R) == 0x000018, "Wrong size on _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R, RetVal) == 0x000010, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetOrCreateInventoryCollection_U_L_Ncreative__object_M_Ntuple_L_R_M_Ntuple_L_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse._Root._L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R
// 0x0018 (0x0018 - 0x0000)
struct _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R final
{
public:
	struct ItemizationVerse_0::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<class Ufort_inventory_collection*, true> RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R) == 0x000008, "Wrong alignment on _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R");
static_assert(sizeof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R) == 0x000018, "Wrong size on _Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R, RetVal) == 0x000010, "Member '_Root__L_2fFortnite_2ecom_2fItemization_N_Roperator_U_2eGetPlayerInventoryCollection_U_L_Nfort__character_M_Ntuple_L_R_M_Ntuple_L_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item.$InitCDO
// 0x0040 (0x0040 - 0x0000)
struct fort_item__InitCDO final
{
public:
	TOptional<class Uitem_definition_base_asset*, true> _ExprResult_0;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__1;                             // 0x0008(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_1 : 1;                                 // 0x000A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_2;                                // 0x000B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_3;                                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Eitem_state                                   _ExprResult_4;                                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<class Uitem_definition_base_asset*, true> _ExprResult_5;                                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__3;                             // 0x0028(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_6 : 1;                                 // 0x002A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_7;                                // 0x002B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_8;                                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Eitem_state                                   _ExprResult_9;                                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__InitCDO) == 0x000008, "Wrong alignment on fort_item__InitCDO");
static_assert(sizeof(fort_item__InitCDO) == 0x000040, "Wrong size on fort_item__InitCDO");
static_assert(offsetof(fort_item__InitCDO, _ExprResult_0) == 0x000000, "Member 'fort_item__InitCDO::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, __verse_0x00000000__1) == 0x000008, "Member 'fort_item__InitCDO::__verse_0x00000000__1' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResultStack_2) == 0x00000B, "Member 'fort_item__InitCDO::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResult_3) == 0x000010, "Member 'fort_item__InitCDO::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResult_4) == 0x000018, "Member 'fort_item__InitCDO::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResult_5) == 0x000020, "Member 'fort_item__InitCDO::_ExprResult_5' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, __verse_0x00000000__3) == 0x000028, "Member 'fort_item__InitCDO::__verse_0x00000000__3' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResultStack_7) == 0x00002B, "Member 'fort_item__InitCDO::_ExprResultStack_7' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResult_8) == 0x000030, "Member 'fort_item__InitCDO::_ExprResult_8' has a wrong offset!");
static_assert(offsetof(fort_item__InitCDO, _ExprResult_9) == 0x000038, "Member 'fort_item__InitCDO::_ExprResult_9' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R
// 0x0028 (0x0028 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TOptional<TArray<struct Ftuple_Lsubtype_Litem__attribute__base_R_Mitem__attribute__value__base_R>> RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R) == 0x000028, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R, RetVal) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetAttribute_L_N_Ksubtype_Litem__attribute__base_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R
// 0x0028 (0x0028 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TOptional<TArray<struct Ftuple_Lsubtype_Lfort__item__component__base_R_Mfort__item__component__base_R>> RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R) == 0x000028, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R, RetVal) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponent_L_N_Ksubtype_Lfort__item__component__base_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R
// 0x0028 (0x0028 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TOptional<TArray<struct Ftuple_Lsubtype_Lfort__item__component__local__storage_R_Mfort__item__component__local__storage_R>> RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R) == 0x000028, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R, RetVal) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentLocalStorage_L_N_Ksubtype_Lfort__item__component__local__storage_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R
// 0x0028 (0x0028 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TOptional<TArray<struct Ftuple_Lsubtype_Lfort__item__component__shared__local__storage_R_Mfort__item__component__shared__local__storage_R>> RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R) == 0x000028, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R, RetVal) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemComponentSharedLocalStorage_L_N_Ksubtype_Lfort__item__component__shared__local__storage_R_R::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition
// 0x0020 (0x0020 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<class Uitem_definition_base_asset*, true> RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TOptional<class Uitem_definition_base_asset*, true> _ExprResultStack_0;                                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TOptional<class Uitem_definition_base_asset*, true> _ExprResultStack_1;                                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition) == 0x000020, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition, RetVal) == 0x000008, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition::RetVal' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition, _ExprResultStack_0) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition, _ExprResultStack_1) == 0x000018, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemDefinition::_ExprResultStack_1' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform
// 0x0080 (0x0080 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<struct FSpatialMath_transform>      RetVal;                                            // 0x0010(0x0070)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform) == 0x000010, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform) == 0x000080, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform, RetVal) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemOwnerTransform::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot
// 0x0020 (0x0020 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<int64>                              RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   _ExprResult_0;                                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   _ExprResult_1;                                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot) == 0x000020, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot, RetVal) == 0x000008, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot::RetVal' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot, _ExprResult_0) == 0x000018, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot, _ExprResult_1) == 0x000019, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemSlot::_ExprResult_1' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState
// 0x0005 (0x0005 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	TOptional<Eitem_state>                        RetVal;                                            // 0x0001(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   _ExprResult_0;                                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   _ExprResult_1;                                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState) == 0x000001, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState) == 0x000005, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState, RetVal) == 0x000001, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState::RetVal' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState, _ExprResult_0) == 0x000003, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState, _ExprResult_1) == 0x000004, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetItemState::_ExprResult_1' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory
// 0x0010 (0x0010 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<class Ufort_inventory*, true>       RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory) == 0x000010, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory, RetVal) == 0x000008, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventory::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection
// 0x0010 (0x0010 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<class Ufort_inventory_collection*, true> RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection) == 0x000010, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection, RetVal) == 0x000008, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_RGetOwningInventoryCollection::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R
// 0x0018 (0x0018 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _AssignmentScratch_0;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _AssignmentScratch_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R) == 0x000008, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R) == 0x000018, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R, _AssignmentScratch_0) == 0x000008, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R::_AssignmentScratch_0' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R, _AssignmentScratch_1) == 0x000010, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemSlotChanged_L_Nint_R::_AssignmentScratch_1' has a wrong offset!");

// Function ItemizationVerse.fort_item._L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R
// 0x0003 (0x0003 - 0x0000)
struct fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R final
{
public:
	Eitem_state                                   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Eitem_state                                   _AssignmentScratch_0;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Eitem_state                                   _AssignmentScratch_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R) == 0x000001, "Wrong alignment on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R");
static_assert(sizeof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R) == 0x000003, "Wrong size on fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R, _AssignmentScratch_0) == 0x000001, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R::_AssignmentScratch_0' has a wrong offset!");
static_assert(offsetof(fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R, _AssignmentScratch_1) == 0x000002, "Member 'fort_item__L_2fFortnite_2ecom_2fItemization_2ffort__item_N_ROnItemStateChanged_L_Nitem__state_R::_AssignmentScratch_1' has a wrong offset!");

// Function ItemizationVerse.fort_inventory._L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList
// 0x0020 (0x0020 - 0x0000)
struct fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<TArray<class Ufort_item*>>          RetVal;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList) == 0x000008, "Wrong alignment on fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList");
static_assert(sizeof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList) == 0x000020, "Wrong size on fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList");
static_assert(offsetof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList, RetVal) == 0x000008, "Member 'fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetItemList::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory._L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection
// 0x0010 (0x0010 - 0x0000)
struct fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<class Ufort_inventory_collection*, true> RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection) == 0x000008, "Wrong alignment on fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection");
static_assert(sizeof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection) == 0x000010, "Wrong size on fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection");
static_assert(offsetof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection, RetVal) == 0x000008, "Member 'fort_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__inventory_N_RGetOwningInventoryCollection::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_equippable_inventory._L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList
// 0x0020 (0x0020 - 0x0000)
struct fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<TArray<class Ufort_item*>>          RetVal;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList) == 0x000008, "Wrong alignment on fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList");
static_assert(sizeof(fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList) == 0x000020, "Wrong size on fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList");
static_assert(offsetof(fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList, RetVal) == 0x000008, "Member 'fort_equippable_inventory__L_2fFortnite_2ecom_2fItemization_2ffort__equippable__inventory_N_RGetEquippedItemList::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection.$InitCDO
// 0x00A0 (0x00A0 - 0x0000)
struct fort_inventory_collection__InitCDO final
{
public:
	class UVerseEngine_subscribable_event*        _ExprResult_0;                                     // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_1;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_2;                                     // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_3;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_4;                                     // 0x0020(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_5;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_6;                                     // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_7;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_8;                                     // 0x0040(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_9;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_10;                                    // 0x0050(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_11;                               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_12;                                    // 0x0060(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_13;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_14;                                    // 0x0070(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_15;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_16;                                    // 0x0080(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_17;                               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerseEngine_subscribable_event*        _ExprResult_18;                                    // 0x0090(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_19;                               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory_collection__InitCDO) == 0x000008, "Wrong alignment on fort_inventory_collection__InitCDO");
static_assert(sizeof(fort_inventory_collection__InitCDO) == 0x0000A0, "Wrong size on fort_inventory_collection__InitCDO");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_0) == 0x000000, "Member 'fort_inventory_collection__InitCDO::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_1) == 0x000008, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_1' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_2) == 0x000010, "Member 'fort_inventory_collection__InitCDO::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_3) == 0x000018, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_3' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_4) == 0x000020, "Member 'fort_inventory_collection__InitCDO::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_5) == 0x000028, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_5' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_6) == 0x000030, "Member 'fort_inventory_collection__InitCDO::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_7) == 0x000038, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_7' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_8) == 0x000040, "Member 'fort_inventory_collection__InitCDO::_ExprResult_8' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_9) == 0x000048, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_9' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_10) == 0x000050, "Member 'fort_inventory_collection__InitCDO::_ExprResult_10' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_11) == 0x000058, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_11' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_12) == 0x000060, "Member 'fort_inventory_collection__InitCDO::_ExprResult_12' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_13) == 0x000068, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_13' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_14) == 0x000070, "Member 'fort_inventory_collection__InitCDO::_ExprResult_14' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_15) == 0x000078, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_15' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_16) == 0x000080, "Member 'fort_inventory_collection__InitCDO::_ExprResult_16' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_17) == 0x000088, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_17' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _ExprResult_18) == 0x000090, "Member 'fort_inventory_collection__InitCDO::_ExprResult_18' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__InitCDO, _InstancingGraph_19) == 0x000098, "Member 'fort_inventory_collection__InitCDO::_InstancingGraph_19' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList
// 0x0018 (0x0018 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class Ufort_equippable_inventory*>     RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList) == 0x000018, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippableInventoryList::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList
// 0x0018 (0x0018 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class Ufort_item*>                     RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList) == 0x000018, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetEquippedItemList::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList
// 0x0018 (0x0018 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class Ufort_inventory*>                RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList) == 0x000018, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetInventoryList::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList
// 0x0018 (0x0018 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class Ufort_item*>                     RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList) == 0x000018, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_RGetItemList::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded
// 0x0010 (0x0010 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded) == 0x000010, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryAdded::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved
// 0x0010 (0x0010 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved) == 0x000010, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnInventoryRemoved::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded
// 0x0010 (0x0010 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded) == 0x000010, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsAdded::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged
// 0x0010 (0x0010 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged) == 0x000010, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemSlotsChanged::RetVal' has a wrong offset!");

// Function ItemizationVerse.fort_inventory_collection._L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved
// 0x0010 (0x0010 - 0x0000)
struct fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved) == 0x000008, "Wrong alignment on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved");
static_assert(sizeof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved) == 0x000010, "Wrong size on fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved, RetVal) == 0x000008, "Member 'fort_inventory_collection__L_2fFortnite_2ecom_2fItemization_2ffort__inventory__collection_N_ROnItemsRemoved::RetVal' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_float._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat
// 0x0010 (0x0010 - 0x0000)
struct item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat) == 0x000008, "Wrong alignment on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat");
static_assert(sizeof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat) == 0x000010, "Wrong size on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, RetVal) == 0x000008, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::RetVal' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_float._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt
// 0x0050 (0x0050 - 0x0000)
struct item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_0;                                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_1;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_2;                                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_3;                                         // 0x0040(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt) == 0x000008, "Wrong alignment on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt");
static_assert(sizeof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt) == 0x000050, "Wrong size on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, RetVal) == 0x000008, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::RetVal' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, _ExprResultStack_0) == 0x000010, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, _Callee_1) == 0x000020, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::_Callee_1' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, _ExprResultStack_2) == 0x000030, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, _Callee_3) == 0x000040, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::_Callee_3' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_float._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic
// 0x0098 (0x0098 - 0x0000)
struct item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        InvokeResultDummy_0;                               // 0x0008(0x0010)(HasGetValueTypeHash)
	TOptional<FVerseDynamicProperty_>             _ExprResultStack_1;                                // 0x0018(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_2;                                     // 0x0030(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_3;                                     // 0x0040(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_4;                               // 0x0050(0x0010)(HasGetValueTypeHash)
	TOptional<FVerseDynamicProperty_>             _ExprResultStack_5;                                // 0x0060(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_6;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_7;                                     // 0x0088(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic) == 0x000008, "Wrong alignment on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic");
static_assert(sizeof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic) == 0x000098, "Wrong size on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, InvokeResultDummy_0) == 0x000008, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::InvokeResultDummy_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResultStack_1) == 0x000018, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_2) == 0x000030, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_3) == 0x000040, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, InvokeResultDummy_4) == 0x000050, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::InvokeResultDummy_4' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResultStack_5) == 0x000060, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_6) == 0x000078, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_7) == 0x000088, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_7' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_float._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString
// 0x0038 (0x0038 - 0x0000)
struct item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0018(0x0010)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_1;                                         // 0x0028(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000008, "Wrong alignment on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(sizeof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000038, "Wrong size on item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, RetVal) == 0x000008, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::RetVal' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, _Callee_0) == 0x000018, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::_Callee_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, _Callee_1) == 0x000028, "Member 'item_attribute_value_float__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::_Callee_1' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_int._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat
// 0x0010 (0x0010 - 0x0000)
struct item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat) == 0x000008, "Wrong alignment on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat");
static_assert(sizeof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat) == 0x000010, "Wrong size on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, RetVal) == 0x000008, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::RetVal' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_int._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt
// 0x0010 (0x0010 - 0x0000)
struct item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt) == 0x000008, "Wrong alignment on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt");
static_assert(sizeof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt) == 0x000010, "Wrong size on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, RetVal) == 0x000008, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::RetVal' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_int._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic
// 0x0098 (0x0098 - 0x0000)
struct item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        InvokeResultDummy_0;                               // 0x0008(0x0010)(HasGetValueTypeHash)
	TOptional<FVerseDynamicProperty_>             _ExprResultStack_1;                                // 0x0018(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_2;                                     // 0x0030(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_3;                                     // 0x0040(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_4;                               // 0x0050(0x0010)(HasGetValueTypeHash)
	TOptional<FVerseDynamicProperty_>             _ExprResultStack_5;                                // 0x0060(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_6;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_7;                                     // 0x0088(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic) == 0x000008, "Wrong alignment on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic");
static_assert(sizeof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic) == 0x000098, "Wrong size on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, InvokeResultDummy_0) == 0x000008, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::InvokeResultDummy_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResultStack_1) == 0x000018, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_2) == 0x000030, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_3) == 0x000040, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, InvokeResultDummy_4) == 0x000050, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::InvokeResultDummy_4' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResultStack_5) == 0x000060, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_6) == 0x000078, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, _ExprResult_7) == 0x000088, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::_ExprResult_7' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_int._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString
// 0x0038 (0x0038 - 0x0000)
struct item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0018(0x0010)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_1;                                         // 0x0028(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000008, "Wrong alignment on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(sizeof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000038, "Wrong size on item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, RetVal) == 0x000008, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::RetVal' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, _Callee_0) == 0x000018, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::_Callee_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, _Callee_1) == 0x000028, "Member 'item_attribute_value_int__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::_Callee_1' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_logic._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat
// 0x0018 (0x0018 - 0x0000)
struct item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResultStack_0;                                // 0x0010(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResultStack_1;                                // 0x0012(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat) == 0x000008, "Wrong alignment on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat");
static_assert(sizeof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat) == 0x000018, "Wrong size on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, RetVal) == 0x000008, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::RetVal' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, _ExprResultStack_0) == 0x000010, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat, _ExprResultStack_1) == 0x000012, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsFloat::_ExprResultStack_1' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_logic._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt
// 0x0018 (0x0018 - 0x0000)
struct item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResultStack_0;                                // 0x0010(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResultStack_1;                                // 0x0012(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt) == 0x000008, "Wrong alignment on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt");
static_assert(sizeof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt) == 0x000018, "Wrong size on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, RetVal) == 0x000008, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::RetVal' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, _ExprResultStack_0) == 0x000010, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt, _ExprResultStack_1) == 0x000012, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsInt::_ExprResultStack_1' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_logic._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic
// 0x0002 (0x0002 - 0x0000)
struct item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic) == 0x000001, "Wrong alignment on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic");
static_assert(sizeof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic) == 0x000002, "Wrong size on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsLogic::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_logic._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResultStack_0;                                // 0x0018(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResultStack_1;                                // 0x001A(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000008, "Wrong alignment on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(sizeof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000020, "Wrong size on item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, RetVal) == 0x000008, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::RetVal' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, _ExprResultStack_0) == 0x000018, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, _ExprResultStack_1) == 0x00001A, "Member 'item_attribute_value_logic__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::_ExprResultStack_1' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_string.$InitCDO
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) item_attribute_value_string__InitCDO final
{
public:
	FVerseStringProperty_                         _ExprResult_0;                                     // 0x0000(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_1;                                     // 0x0010(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_string__InitCDO) == 0x000008, "Wrong alignment on item_attribute_value_string__InitCDO");
static_assert(sizeof(item_attribute_value_string__InitCDO) == 0x000020, "Wrong size on item_attribute_value_string__InitCDO");
static_assert(offsetof(item_attribute_value_string__InitCDO, _ExprResult_0) == 0x000000, "Member 'item_attribute_value_string__InitCDO::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(item_attribute_value_string__InitCDO, _ExprResult_1) == 0x000010, "Member 'item_attribute_value_string__InitCDO::_ExprResult_1' has a wrong offset!");

// Function ItemizationVerse.item_attribute_value_string._L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString final
{
public:
	struct ItemizationVerse_0::Ftuple_L_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000008, "Wrong alignment on item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(sizeof(item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString) == 0x000018, "Wrong size on item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString");
static_assert(offsetof(item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString, RetVal) == 0x000008, "Member 'item_attribute_value_string__L_2fFortnite_2ecom_2fItemization_2fitem__attribute__value__base_N_RGetAsString::RetVal' has a wrong offset!");

}

