#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena

#include "Basic.hpp"

#include "PawnHighlight_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ActivateInvincibleVisuals
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_ActivateInvincibleVisuals final
{
public:
	double                                        duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ActivateInvincibleVisuals) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ActivateInvincibleVisuals");
static_assert(sizeof(PlayerPawn_Athena_C_ActivateInvincibleVisuals) == 0x000008, "Wrong size on PlayerPawn_Athena_C_ActivateInvincibleVisuals");
static_assert(offsetof(PlayerPawn_Athena_C_ActivateInvincibleVisuals, duration) == 0x000000, "Member 'PlayerPawn_Athena_C_ActivateInvincibleVisuals::duration' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.AddHighlightFromSource
// 0x0040 (0x0040 - 0x0000)
struct PlayerPawn_Athena_C_AddHighlightFromSource final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Highlight;                                         // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyUpdateIfCurrent;                               // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_AddHighlightFromSource) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_AddHighlightFromSource");
static_assert(sizeof(PlayerPawn_Athena_C_AddHighlightFromSource) == 0x000040, "Wrong size on PlayerPawn_Athena_C_AddHighlightFromSource");
static_assert(offsetof(PlayerPawn_Athena_C_AddHighlightFromSource, Source) == 0x000000, "Member 'PlayerPawn_Athena_C_AddHighlightFromSource::Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddHighlightFromSource, Highlight) == 0x000008, "Member 'PlayerPawn_Athena_C_AddHighlightFromSource::Highlight' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddHighlightFromSource, OnlyUpdateIfCurrent) == 0x000038, "Member 'PlayerPawn_Athena_C_AddHighlightFromSource::OnlyUpdateIfCurrent' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.AddSkeletalMeshComponentsFromWeaponObject
// 0x0078 (0x0078 - 0x0000)
struct PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject final
{
public:
	class AFortWeapon*                            WeaponObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponentBudgeted*> CallFunc_GetWeaponMeshes_WeaponMeshes;             // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponentBudgeted*         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_PawnIsNPC_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupDissolveFx_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject");
static_assert(sizeof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject) == 0x000078, "Wrong size on PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, WeaponObject) == 0x000000, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::WeaponObject' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, Temp_object_Variable) == 0x000008, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_GetWeaponMeshes_WeaponMeshes) == 0x000018, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_GetWeaponMeshes_WeaponMeshes' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, Temp_bool_Variable) == 0x000030, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_Get_Item) == 0x000038, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_GetMaterials_ReturnValue) == 0x000040, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_PawnIsNPC_ReturnValue) == 0x000050, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_PawnIsNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, K2Node_Select_Default) == 0x000058, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_SetupDissolveFx_ReturnValue) == 0x000060, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_SetupDissolveFx_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'PlayerPawn_Athena_C_AddSkeletalMeshComponentsFromWeaponObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ApplyColdTag_Retry
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_ApplyColdTag_Retry final
{
public:
	class UFortAbilitySystemComponent*            AbilitySystemComponent_0;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        AffectedPawn;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ApplyColdTag_Retry) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ApplyColdTag_Retry");
static_assert(sizeof(PlayerPawn_Athena_C_ApplyColdTag_Retry) == 0x000010, "Wrong size on PlayerPawn_Athena_C_ApplyColdTag_Retry");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyColdTag_Retry, AbilitySystemComponent_0) == 0x000000, "Member 'PlayerPawn_Athena_C_ApplyColdTag_Retry::AbilitySystemComponent_0' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyColdTag_Retry, AffectedPawn) == 0x000008, "Member 'PlayerPawn_Athena_C_ApplyColdTag_Retry::AffectedPawn' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ApplyPawnHighlight
// 0x0078 (0x0078 - 0x0000)
struct PlayerPawn_Athena_C_ApplyPawnHighlight final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         HitGlow;                                           // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Current_Highlight_Priority_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ApplyPawnHighlight) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ApplyPawnHighlight");
static_assert(sizeof(PlayerPawn_Athena_C_ApplyPawnHighlight) == 0x000078, "Wrong size on PlayerPawn_Athena_C_ApplyPawnHighlight");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, Source) == 0x000000, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, HitGlow) == 0x000008, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::HitGlow' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, Temp_int_Array_Index_Variable) == 0x000044, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_Array_Get_Item) == 0x000050, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, K2Node_VariableSet_Current_Highlight_Priority_ImplicitCast) == 0x000060, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::K2Node_VariableSet_Current_Highlight_Priority_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ApplyPawnHighlight, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000070, "Member 'PlayerPawn_Athena_C_ApplyPawnHighlight::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.AttemptToSetRimLight
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_AttemptToSetRimLight final
{
public:
	class UDataDrivenCVarEngineSubsystem*         CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& CVarName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_AttemptToSetRimLight) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_AttemptToSetRimLight");
static_assert(sizeof(PlayerPawn_Athena_C_AttemptToSetRimLight) == 0x000018, "Wrong size on PlayerPawn_Athena_C_AttemptToSetRimLight");
static_assert(offsetof(PlayerPawn_Athena_C_AttemptToSetRimLight, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_AttemptToSetRimLight::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AttemptToSetRimLight, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PlayerPawn_Athena_C_AttemptToSetRimLight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AttemptToSetRimLight, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PlayerPawn_Athena_C_AttemptToSetRimLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_AttemptToSetRimLight, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000015, "Member 'PlayerPawn_Athena_C_AttemptToSetRimLight::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.CleanupDissolveFX
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_CleanupDissolveFX final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PawnIsNPC_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_CleanupDissolveFX) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_CleanupDissolveFX");
static_assert(sizeof(PlayerPawn_Athena_C_CleanupDissolveFX) == 0x000020, "Wrong size on PlayerPawn_Athena_C_CleanupDissolveFX");
static_assert(offsetof(PlayerPawn_Athena_C_CleanupDissolveFX, Temp_bool_Variable) == 0x000000, "Member 'PlayerPawn_Athena_C_CleanupDissolveFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_CleanupDissolveFX, Temp_object_Variable) == 0x000008, "Member 'PlayerPawn_Athena_C_CleanupDissolveFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_CleanupDissolveFX, CallFunc_PawnIsNPC_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_CleanupDissolveFX::CallFunc_PawnIsNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_CleanupDissolveFX, K2Node_Select_Default) == 0x000018, "Member 'PlayerPawn_Athena_C_CleanupDissolveFX::K2Node_Select_Default' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.CleanUpTeleportationFXLight
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_CleanUpTeleportationFXLight final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_CleanUpTeleportationFXLight) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_CleanUpTeleportationFXLight");
static_assert(sizeof(PlayerPawn_Athena_C_CleanUpTeleportationFXLight) == 0x000001, "Wrong size on PlayerPawn_Athena_C_CleanUpTeleportationFXLight");
static_assert(offsetof(PlayerPawn_Athena_C_CleanUpTeleportationFXLight, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_CleanUpTeleportationFXLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ClientRunSnowGC
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_ClientRunSnowGC final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ClientRunSnowGC) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_ClientRunSnowGC");
static_assert(sizeof(PlayerPawn_Athena_C_ClientRunSnowGC) == 0x000001, "Wrong size on PlayerPawn_Athena_C_ClientRunSnowGC");
static_assert(offsetof(PlayerPawn_Athena_C_ClientRunSnowGC, Instant) == 0x000000, "Member 'PlayerPawn_Athena_C_ClientRunSnowGC::Instant' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.EnableWaterAudio
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_EnableWaterAudio final
{
public:
	bool                                          Is_Entering_Water;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue_1;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput;         // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_EnableWaterAudio) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_EnableWaterAudio");
static_assert(sizeof(PlayerPawn_Athena_C_EnableWaterAudio) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_EnableWaterAudio");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, Is_Entering_Water) == 0x000000, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::Is_Entering_Water' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, Temp_bool_Variable) == 0x000001, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_IsLocallyViewed_ReturnValue) == 0x000002, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_IsLocallyViewed_ReturnValue_1) == 0x000010, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_IsLocallyViewed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, K2Node_Select_Default) == 0x000018, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, Temp_bool_Variable_1) == 0x000020, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, K2Node_Select_Default_1) == 0x000048, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0000B8, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_SetFloatParameter_self_CastInput) == 0x0000C0, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x0000D0, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_EnableWaterAudio, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x0000D4, "Member 'PlayerPawn_Athena_C_EnableWaterAudio::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ExecuteUbergraph_PlayerPawn_Athena
// 0x20A0 (0x20A0 - 0x0000)
struct PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0008(0x0020)()
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue;             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_8;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_8;              // 0x0030(0x00D0)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_CustomEvent_Pawn_1;                         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortPlayerPawn* Pawn)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0158(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_7;               // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_7;              // 0x0168(0x00D0)(ConstParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InSafeZonePhase;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSpawnGameplayCue_1;            // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0268(0x00D0)(ContainsInstancedReference)
	int32                                         K2Node_CustomEvent_NewWhichSafeZoneTag;            // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_GameplayTag;                    // 0x033C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSpawnGameplayCue;              // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SafeZonePhase;                        // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue_1;           // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B[0x5];                                      // 0x034B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_First_Left;                           // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_First_Right;                          // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_6;               // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363[0x5];                                      // 0x0363(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_6;              // 0x0368(0x00D0)(ConstParm, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0454(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0460(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Duration;                       // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x0478(0x00D0)(ContainsInstancedReference)
	struct FVector                                K2Node_Event_WaterSurfaceLocation;                 // 0x0548(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfaceLocation_1;               // 0x0560(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating; // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue_1; // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating_1; // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_9;               // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_9;              // 0x05A8(0x00D0)(ConstParm, ContainsInstancedReference)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0678(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x3];                                      // 0x0689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0698(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x06B0(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x06B4(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x06B8(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x06D8(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0750(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_5;               // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x6];                                      // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_5;              // 0x0760(0x00D0)(ConstParm, ContainsInstancedReference)
	double                                        K2Node_CustomEvent_SecondsTillTeleport;            // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DestLocation_1;                 // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_DestRotation_1;                 // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Instant_1;                      // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DestLocation;                   // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_DestRotation;                   // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Instant;                        // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Gravity;                        // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_2;  // 0x08B8(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x098A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x098B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98C[0x4];                                      // 0x098C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue_2; // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating_2; // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_10;              // 0x09A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A2[0x6];                                      // 0x09A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_10;             // 0x09A8(0x00D0)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_4;               // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7A[0x6];                                      // 0x0A7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_4;              // 0x0A80(0x00D0)(ConstParm, ContainsInstancedReference)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0B50(0x00B0)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0C00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0C08(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0C10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_3;  // 0x0C20(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0CF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0D14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D15[0x3];                                      // 0x0D15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue_3; // 0x0D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating_3; // 0x0D20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D29[0x7];                                      // 0x0D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue;         // 0x0D30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetDriver_ReturnValue;                    // 0x0D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetVehicleActorPtrConst_ReturnValue;      // 0x0D50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D59[0x7];                                      // 0x0D59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortCharacterVehicle*                  K2Node_DynamicCast_AsFort_Character_Vehicle;       // 0x0D60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_5;        // 0x0D69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0D6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6B[0x5];                                      // 0x0D6B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage_1;                             // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7C[0x4];                                      // 0x0D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0D80(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x0DA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x0DB8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy_1;                       // 0x0EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x0EA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x0EB0(0x0018)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC9[0x7];                                      // 0x0EC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    K2Node_Event_WaterBody_1;                          // 0x0ED0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFirstBody;                         // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED9[0x7];                                      // 0x0ED9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    K2Node_Event_WaterBody;                            // 0x0EE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLastBody;                          // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_PrevMovementMode;                     // 0x0EE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_NewMovementMode;                      // 0x0EEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x0EEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x0EEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0EED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurfaceSwimming_ReturnValue;            // 0x0EEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EEF[0x1];                                      // 0x0EEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNumericCVar_OutValue;                  // 0x0EF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNumericCVar_ReturnValue;               // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0EFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInAthena_ReturnValue;                   // 0x0EFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFC[0x4];                                      // 0x0EFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0F08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F0C[0x4];                                      // 0x0F0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0F10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLastManStandingCN_ReturnValue;          // 0x0F19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1A[0x2];                                      // 0x0F1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfacePosition; // 0x0F20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfaceNormal; // 0x0F38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWaterImmersionDepth_ReturnValue;       // 0x0F50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F54[0x4];                                      // 0x0F54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWaterBodyActor*                    CallFunc_GetCurrentWaterBody_ReturnValue;          // 0x0F60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0F68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0F71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0F72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0F73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F74[0x4];                                      // 0x0F74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWaterSurfaceLocation_ReturnValue;      // 0x0F78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_11;              // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F91[0x7];                                      // 0x0F91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_11;             // 0x0F98(0x00D0)(ConstParm, ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_4;  // 0x1068(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_6;        // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isHidden_1;                     // 0x1139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x113A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113B[0x5];                                     // 0x113B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x1140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x1148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x1150(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x1158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x1170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_LastTetherPawn_1;                     // 0x1188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_LastTetherPawn;                       // 0x1190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x1198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x11A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x11A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x11B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x11B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x11B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B6[0x2];                                     // 0x11B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetTetherPawn_ReturnValue;                // 0x11B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x11C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x11D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D1[0x7];                                     // 0x11D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x11D8(0x0020)()
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData_1;             // 0x11F8(0x00B0)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x12A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A9[0x7];                                     // 0x12A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x12B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x12C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C9[0x7];                                     // 0x12C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_PlayerAimRotation;              // 0x12D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x12E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x12F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F1[0x3];                                     // 0x12F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x12F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_5;  // 0x12F8(0x00D0)(ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x13C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_6;  // 0x13D0(0x00D0)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_7;  // 0x14A0(0x00D0)(ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x1570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_3;               // 0x1571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1572[0x6];                                     // 0x1572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_3;              // 0x1578(0x00D0)(ConstParm, ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_2;               // 0x1648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1649[0x7];                                     // 0x1649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_2;              // 0x1650(0x00D0)(ConstParm, ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType_1;               // 0x1720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1721[0x7];                                     // 0x1721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters_1;              // 0x1728(0x00D0)(ConstParm, ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x17F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F9[0x7];                                     // 0x17F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x1800(0x00D0)(ConstParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x18D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x18D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x18E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2; // 0x18E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3; // 0x18F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x18F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18F9[0x7];                                     // 0x18F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            K2Node_CustomEvent_AbilitySystemComponent;         // 0x1900(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_AffectedPawn;                   // 0x1908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x1910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x1911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x1912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x1913(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1914[0xC];                                     // 0x1914(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x1920(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x1980(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1989[0x7];                                     // 0x1989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_8;  // 0x1990(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x1A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A61[0x7];                                     // 0x1A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_9;  // 0x1A68(0x00D0)(ContainsInstancedReference)
	class UDataDrivenCVarEngineSubsystem*         CallFunc_GetEngineSubsystem_ReturnValue;           // 0x1B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x1B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B41[0x7];                                     // 0x1B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAnimInputEvent*                    CallFunc_CreateAnimInputEvent_ReturnValue;         // 0x1B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAnimInputEvent*                    CallFunc_CreateAnimInputEvent_ReturnValue_1;       // 0x1B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAnimInputEvent*                    CallFunc_CreateAnimInputEvent_ReturnValue_2;       // 0x1B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAnimInputEvent*                    CallFunc_CreateAnimInputEvent_ReturnValue_3;       // 0x1B60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x1B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B69[0x7];                                     // 0x1B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Source_1;                             // 0x1B70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         K2Node_Event_Highlight;                            // 0x1B78(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_OnlyUpdateIfCurrent;                  // 0x1BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA9[0x7];                                     // 0x1BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Source;                               // 0x1BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x1BB8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x1BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x1BC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x1BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD1[0x7];                                     // 0x1BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation_1;                        // 0x1BD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x1BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x1C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x1C20(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetPawnIsInLocalSquad_IsInLocalSquad;     // 0x1D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D09[0x3];                                     // 0x1D09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DamageDealt;                          // 0x1D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCriticalHit;                         // 0x1D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFatalHit;                            // 0x1D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShieldHit;                           // 0x1D12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D13[0x5];                                     // 0x1D13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x1D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_HitTags;                              // 0x1D20(0x0020)()
	struct FVector                                K2Node_Event_HitLocation;                          // 0x1D40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isHidden;                       // 0x1D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D59[0x3];                                     // 0x1D59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortPlayerPawn* Pawn, class UCustomCharacterPart* Part, class USkeletalMeshComponent* MeshPart, EFortCustomPartType PartType)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x1D5C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x1D68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDelegateHandleController              CallFunc_WhenCosmeticPartApplied_DelegateHandleController_Out; // 0x1D70(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x1D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D81[0x7];                                     // 0x1D81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   Temp_object_Variable;                              // 0x1D88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortPlaylist*                          Temp_object_Variable_1;                            // 0x1D90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable_2;                            // 0x1D98(0x0020)()
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x1DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB9[0x7];                                     // 0x1DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x1DC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x1DC8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x1DD0(0x0020)(ConstParm)
	class AFortPlayerPawn*                        K2Node_CustomEvent_Pawn;                           // 0x1DF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomCharacterPart*                   K2Node_CustomEvent_Part;                           // 0x1DF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_MeshPart;                       // 0x1E00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EFortCustomPartType                           K2Node_CustomEvent_PartType;                       // 0x1E08(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E09[0x3];                                     // 0x1E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x1E0C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x1E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E19[0x7];                                     // 0x1E19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x1E20(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x1E30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x1E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x1E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x1E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E42[0x2];                                     // 0x1E42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E49[0x3];                                     // 0x1E49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x1E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x1E50(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x1E70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x1E88(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1F70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1F78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x1F80(0x0018)()
	class AFortPawn*                              K2Node_CustomEvent_FortPawn;                       // 0x1F98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInIsDBNO;                      // 0x1FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA1[0x3];                                     // 0x1FA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortPawn* FortPawn, bool bInIsDBNO)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x1FA4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x1FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x1FB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliationToLocalPlayer_ReturnValue; // 0x1FB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x1FB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEntered;                       // 0x1FB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB5[0x3];                                     // 0x1FB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_WaterSurfaceLocation_1;         // 0x1FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x1FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD1[0x7];                                     // 0x1FD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_WaterSurfaceLocation;           // 0x1FD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x1FF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDownedDBNOInvulnerableTime_ReturnValue; // 0x1FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FFC[0x4];                                     // 0x1FFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortSafeZoneIndicator*                 CallFunc_Get_ReturnValue;                          // 0x2000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortAbilitySystemComponent* AbilitySystemComponent, class AFortPlayerPawn* AffectedPawn)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x2008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x2014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2015[0x3];                                     // 0x2015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentPhaseIndex_ReturnValue;         // 0x2018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMovementStyle                            K2Node_Event_PreviousMovementStyle;                // 0x201C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMovementStyle                            K2Node_Event_NewMovementStyle;                     // 0x201D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x201E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue; // 0x201F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue_1; // 0x2020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2021[0x3];                                     // 0x2021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x2024(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& CVarName)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x2028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x2034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2035[0x3];                                     // 0x2035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x2038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x2040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2044[0x4];                                     // 0x2044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast; // 0x2048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_1; // 0x2050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast; // 0x2054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast_1; // 0x2058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x2060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x2068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InvokeWaterJumpSplash_SplashScale_ImplicitCast; // 0x2070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x2074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_Level_ImplicitCast;       // 0x2078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207C[0x4];                                     // 0x207C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x2080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x2088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_Damage_ImplicitCast;           // 0x2090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast_2; // 0x2098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena) == 0x000010, "Wrong alignment on PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena");
static_assert(sizeof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena) == 0x0020A0, "Wrong size on PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, EntryPoint) == 0x000000, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_struct_Variable) == 0x000008, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue) == 0x000028, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000029, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsMobilePlatform_ReturnValue) == 0x00002A, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsMobilePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_8) == 0x00002B, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_8' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_8) == 0x000030, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_8' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_SwitchEnum_CmpSuccess) == 0x000101, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_EndPlayReason) == 0x000102, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000108, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000120, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000128, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000140, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000148, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Pawn_1) == 0x000150, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Pawn_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate) == 0x000158, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_7) == 0x000164, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_7) == 0x000168, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_SwitchEnum_CmpSuccess_1) == 0x000238, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000240, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000258, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_InSafeZonePhase) == 0x000260, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_InSafeZonePhase' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_bSpawnGameplayCue_1) == 0x000264, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_bSpawnGameplayCue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000268, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_NewWhichSafeZoneTag) == 0x000338, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_NewWhichSafeZoneTag' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_GameplayTag) == 0x00033C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_GameplayTag' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_bSpawnGameplayCue) == 0x000340, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_bSpawnGameplayCue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_SafeZonePhase) == 0x000344, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_SafeZonePhase' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000348, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsMobilePlatform_ReturnValue_1) == 0x000349, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsMobilePlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BooleanAND_ReturnValue_1) == 0x00034A, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000350, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000358, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_First_Left) == 0x000360, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_First_Left' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_First_Right) == 0x000361, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_First_Right' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_6) == 0x000362, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_6) == 0x000368, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000438, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_SwitchEnum_CmpSuccess_2) == 0x000450, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate_1) == 0x000454, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000460, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Duration) == 0x000468, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000470, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x000478, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_WaterSurfaceLocation) == 0x000548, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_WaterSurfaceLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_WaterSurfaceLocation_1) == 0x000560, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_WaterSurfaceLocation_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000578, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Player_Controller_Spectating) == 0x000580, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Player_Controller_Spectating' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess) == 0x000588, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000589, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetLocalViewingPlayerController_ReturnValue_1) == 0x000590, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetLocalViewingPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Player_Controller_Spectating_1) == 0x000598, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Player_Controller_Spectating_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_1) == 0x0005A0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_9) == 0x0005A1, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_9' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_9) == 0x0005A8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_9' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000678, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000688, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x00068C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x000690, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000698, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x0006B0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x0006B4, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x0006B8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x0006D8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_Location) == 0x0006F8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_Normal) == 0x000710, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000728, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000730, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000738, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000740, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000748, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x00074C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000750, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x000758, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_5) == 0x000759, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_5) == 0x000760, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_SecondsTillTeleport) == 0x000830, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_SecondsTillTeleport' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_DestLocation_1) == 0x000838, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_DestLocation_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_DestRotation_1) == 0x000850, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_DestRotation_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Instant_1) == 0x000868, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Instant_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000870, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_DestLocation) == 0x000878, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_DestLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_DestRotation) == 0x000890, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_DestRotation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Instant) == 0x0008A8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Instant' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Gravity) == 0x0008B0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Gravity' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_2) == 0x0008B8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000988, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000989, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_TeleportTo_ReturnValue) == 0x00098A, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x00098B, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetLocalViewingPlayerController_ReturnValue_2) == 0x000990, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetLocalViewingPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Player_Controller_Spectating_2) == 0x000998, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Player_Controller_Spectating_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_2) == 0x0009A0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_10) == 0x0009A1, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_10' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_10) == 0x0009A8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_10' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x000A78, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_4) == 0x000A79, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_4) == 0x000A80, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_MakeStruct_GameplayEventData) == 0x000B50, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000C00, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000C08, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_NewController) == 0x000C10, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_real_Variable) == 0x000C18, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_3) == 0x000C20, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_HasAuthority_ReturnValue) == 0x000CF0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000CF8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Array_Length_ReturnValue) == 0x000D10, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Greater_IntInt_ReturnValue) == 0x000D14, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetLocalViewingPlayerController_ReturnValue_3) == 0x000D18, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetLocalViewingPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Player_Controller_Spectating_3) == 0x000D20, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Player_Controller_Spectating_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_3) == 0x000D28, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetVehicleUInterface_ReturnValue) == 0x000D30, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetVehicleUInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetDriver_ReturnValue) == 0x000D40, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000D48, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetVehicleActorPtrConst_ReturnValue) == 0x000D50, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetVehicleActorPtrConst_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue) == 0x000D58, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Character_Vehicle) == 0x000D60, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Character_Vehicle' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_4) == 0x000D68, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue_5) == 0x000D69, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000D6A, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_real_Variable_1) == 0x000D70, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Damage_1) == 0x000D78, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_DamageTags_1) == 0x000D80, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Momentum_1) == 0x000DA0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitInfo_1) == 0x000DB8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_InstigatedBy_1) == 0x000EA0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_DamageCauser_1) == 0x000EA8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_EffectContext_1) == 0x000EB0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsDedicatedServer_ReturnValue) == 0x000EC8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_WaterBody_1) == 0x000ED0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_WaterBody_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_bIsFirstBody) == 0x000ED8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_WaterBody) == 0x000EE0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_WaterBody' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_bIsLastBody) == 0x000EE8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_bIsLastBody' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_PrevMovementMode) == 0x000EE9, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_NewMovementMode) == 0x000EEA, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_PrevCustomMode) == 0x000EEB, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_NewCustomMode) == 0x000EEC, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000EED, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsSurfaceSwimming_ReturnValue) == 0x000EEE, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsSurfaceSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_int_Array_Index_Variable) == 0x000EF0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetNumericCVar_OutValue) == 0x000EF4, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetNumericCVar_OutValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetNumericCVar_ReturnValue) == 0x000EF8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetNumericCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000EF9, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsInVehicle_ReturnValue) == 0x000EFA, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsInAthena_ReturnValue) == 0x000EFB, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsInAthena_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetGameState_ReturnValue) == 0x000F00, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_int_Loop_Counter_Variable) == 0x000F08, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000F10, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_5) == 0x000F18, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLastManStandingCN_ReturnValue) == 0x000F19, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLastManStandingCN_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Add_IntInt_ReturnValue) == 0x000F1C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfacePosition) == 0x000F20, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfacePosition' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfaceNormal) == 0x000F38, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfaceNormal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetWaterImmersionDepth_ReturnValue) == 0x000F50, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetWaterImmersionDepth_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MapRangeClamped_ReturnValue) == 0x000F58, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetCurrentWaterBody_ReturnValue) == 0x000F60, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetCurrentWaterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000F68, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_6) == 0x000F70, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_1) == 0x000F71, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsMovingOnGround_ReturnValue) == 0x000F72, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BooleanAND_ReturnValue_2) == 0x000F73, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetWaterSurfaceLocation_ReturnValue) == 0x000F78, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetWaterSurfaceLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_11) == 0x000F90, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_11' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_11) == 0x000F98, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_11' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_4) == 0x001068, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsLocallyControlled_ReturnValue_6) == 0x001138, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsLocallyControlled_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_isHidden_1) == 0x001139, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_isHidden_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_Variable) == 0x00113A, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Select_Default) == 0x001140, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x001148, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x001150, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x001158, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Divide_VectorFloat_ReturnValue) == 0x001170, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_LastTetherPawn_1) == 0x001188, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_LastTetherPawn_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_LastTetherPawn) == 0x001190, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_LastTetherPawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x001198, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0011A0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetQuestManager_ReturnValue) == 0x0011A8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetValueAtLevel_ReturnValue) == 0x0011B0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0011B4, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0011B5, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetTetherPawn_ReturnValue) == 0x0011B8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetTetherPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0011C0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_DynamicCast_bSuccess_7) == 0x0011D0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0011D8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_MakeStruct_GameplayEventData_1) == 0x0011F8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_MakeStruct_GameplayEventData_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0012A8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetControlRotation_ReturnValue) == 0x0012B0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_2) == 0x0012C8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_PlayerAimRotation) == 0x0012D0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_PlayerAimRotation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_SetTimer_ReturnValue) == 0x0012E8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_IsClosed_Variable) == 0x0012F0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0012F4, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_5) == 0x0012F8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0013C8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_6) == 0x0013D0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_7) == 0x0014A0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_Has_Been_Initd_Variable) == 0x001570, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_3) == 0x001571, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_3) == 0x001578, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_2) == 0x001648, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_2) == 0x001650, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType_1) == 0x001720, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters_1) == 0x001728, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_EventType) == 0x0017F8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_GameplayCueEvent_Parameters) == 0x001800, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0018D0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x0018D8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x0018E0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2) == 0x0018E8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3) == 0x0018F0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_3) == 0x0018F8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_AbilitySystemComponent) == 0x001900, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_AffectedPawn) == 0x001908, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_AffectedPawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_4) == 0x001910, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_Has_Been_Initd_Variable_1) == 0x001911, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x001912, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_IsClosed_Variable_1) == 0x001913, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_struct_Variable_1) == 0x001920, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_AddComponent_ReturnValue) == 0x001980, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001988, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_8) == 0x001990, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_5) == 0x001A60, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_ReturnValue_9) == 0x001A68, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetEngineSubsystem_ReturnValue) == 0x001B38, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_Variable_1) == 0x001B40, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_CreateAnimInputEvent_ReturnValue) == 0x001B48, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_CreateAnimInputEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_CreateAnimInputEvent_ReturnValue_1) == 0x001B50, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_CreateAnimInputEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_CreateAnimInputEvent_ReturnValue_2) == 0x001B58, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_CreateAnimInputEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_CreateAnimInputEvent_ReturnValue_3) == 0x001B60, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_CreateAnimInputEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x001B68, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Source_1) == 0x001B70, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Highlight) == 0x001B78, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Highlight' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_OnlyUpdateIfCurrent) == 0x001BA8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_OnlyUpdateIfCurrent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Source) == 0x001BB0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_MyComp) == 0x001BB8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Other) == 0x001BC0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_OtherComp) == 0x001BC8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_bSelfMoved) == 0x001BD0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitLocation_1) == 0x001BD8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitLocation_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitNormal) == 0x001BF0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_NormalImpulse) == 0x001C08, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Hit) == 0x001C20, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetPawnIsInLocalSquad_IsInLocalSquad) == 0x001D08, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetPawnIsInLocalSquad_IsInLocalSquad' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_DamageDealt) == 0x001D0C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_DamageDealt' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_bCriticalHit) == 0x001D10, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_bCriticalHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_bFatalHit) == 0x001D11, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_bFatalHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_bShieldHit) == 0x001D12, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_bShieldHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitActor) == 0x001D18, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitTags) == 0x001D20, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitLocation) == 0x001D40, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_isHidden) == 0x001D58, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_isHidden' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate_2) == 0x001D5C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x001D68, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_WhenCosmeticPartApplied_DelegateHandleController_Out) == 0x001D70, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_WhenCosmeticPartApplied_DelegateHandleController_Out' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_6) == 0x001D80, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_object_Variable) == 0x001D88, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_object_Variable_1) == 0x001D90, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_struct_Variable_2) == 0x001D98, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_Has_Been_Initd_Variable_2) == 0x001DB8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_GameState) == 0x001DC0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Playlist) == 0x001DC8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_PlaylistContextTags) == 0x001DD0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Pawn) == 0x001DF0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_Part) == 0x001DF8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_Part' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_MeshPart) == 0x001E00, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_MeshPart' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_PartType) == 0x001E08, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_PartType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate_3) == 0x001E0C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_7) == 0x001E18, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetChildrenComponents_Children) == 0x001E20, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Array_Get_Item) == 0x001E30, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetOwner_ReturnValue) == 0x001E38, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_ComponentHasTag_ReturnValue) == 0x001E40, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_8) == 0x001E41, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Array_Length_ReturnValue_1) == 0x001E44, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Less_IntInt_ReturnValue) == 0x001E48, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Damage) == 0x001E4C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_DamageTags) == 0x001E50, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_Momentum) == 0x001E70, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_HitInfo) == 0x001E88, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_InstigatedBy) == 0x001F70, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_DamageCauser) == 0x001F78, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_EffectContext) == 0x001F80, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_FortPawn) == 0x001F98, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_FortPawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_bInIsDBNO) == 0x001FA0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_bInIsDBNO' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate_4) == 0x001FA4, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetActorTeam_ReturnValue) == 0x001FB0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_IsClosed_Variable_2) == 0x001FB1, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetTeamAffiliationToLocalPlayer_ReturnValue) == 0x001FB2, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetTeamAffiliationToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_SwitchEnum_CmpSuccess_3) == 0x001FB3, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_bEntered) == 0x001FB4, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_bEntered' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_WaterSurfaceLocation_1) == 0x001FB8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_WaterSurfaceLocation_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsInVehicle_ReturnValue_1) == 0x001FD0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CustomEvent_WaterSurfaceLocation) == 0x001FD8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CustomEvent_WaterSurfaceLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x001FF0, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetDownedDBNOInvulnerableTime_ReturnValue) == 0x001FF8, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetDownedDBNOInvulnerableTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Get_ReturnValue) == 0x002000, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate_5) == 0x002008, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_9) == 0x002014, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetCurrentPhaseIndex_ReturnValue) == 0x002018, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetCurrentPhaseIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_PreviousMovementStyle) == 0x00201C, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_PreviousMovementStyle' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_NewMovementStyle) == 0x00201D, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_NewMovementStyle' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsValid_ReturnValue_10) == 0x00201E, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue) == 0x00201F, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue_1) == 0x002020, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Select_Default_1) == 0x002024, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CreateDelegate_OutputDelegate_6) == 0x002028, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x002034, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_Event_OldController) == 0x002038, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x002040, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast) == 0x002048, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_RetriggerableDelay_Duration_ImplicitCast_1) == 0x002050, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_RetriggerableDelay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast) == 0x002054, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast_1) == 0x002058, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x002060, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x002068, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_InvokeWaterJumpSplash_SplashScale_ImplicitCast) == 0x002070, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_InvokeWaterJumpSplash_SplashScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Delay_Duration_ImplicitCast) == 0x002074, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_GetValueAtLevel_Level_ImplicitCast) == 0x002078, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_GetValueAtLevel_Level_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x002080, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x002088, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, K2Node_CallDelegate_Damage_ImplicitCast) == 0x002090, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::K2Node_CallDelegate_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena, CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast_2) == 0x002098, "Member 'PlayerPawn_Athena_C_ExecuteUbergraph_PlayerPawn_Athena::CallFunc_ActivateInvincibleVisuals_Duration_ImplicitCast_2' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.FindBounds
// 0x01E0 (0x01E0 - 0x0000)
struct PlayerPawn_Athena_C_FindBounds final
{
public:
	bool                                          bGunTrue;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_FindBounds) == 0x000010, "Wrong alignment on PlayerPawn_Athena_C_FindBounds");
static_assert(sizeof(PlayerPawn_Athena_C_FindBounds) == 0x0001E0, "Wrong size on PlayerPawn_Athena_C_FindBounds");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, bGunTrue) == 0x000000, "Member 'PlayerPawn_Athena_C_FindBounds::bGunTrue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_GetActorBounds_Origin) == 0x000008, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_GetActorBounds_BoxExtent) == 0x000020, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakTransform_Location) == 0x000038, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakVector_X) == 0x000098, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_MakeTransform_ReturnValue_1) == 0x000130, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakTransform_Location_1) == 0x000190, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakTransform_Rotation_1) == 0x0001A8, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_BreakTransform_Scale_1) == 0x0001C0, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_FindBounds, CallFunc_VSize_ReturnValue) == 0x0001D8, "Member 'PlayerPawn_Athena_C_FindBounds::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GalileoMaterialSetup
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_GalileoMaterialSetup final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_GalileoMaterialSetup) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GalileoMaterialSetup");
static_assert(sizeof(PlayerPawn_Athena_C_GalileoMaterialSetup) == 0x000020, "Wrong size on PlayerPawn_Athena_C_GalileoMaterialSetup");
static_assert(offsetof(PlayerPawn_Athena_C_GalileoMaterialSetup, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PlayerPawn_Athena_C_GalileoMaterialSetup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GalileoMaterialSetup, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PlayerPawn_Athena_C_GalileoMaterialSetup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GalileoMaterialSetup, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_GalileoMaterialSetup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GalileoMaterialSetup, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'PlayerPawn_Athena_C_GalileoMaterialSetup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GalileoMaterialSetup, CallFunc_Array_Get_Item) == 0x000010, "Member 'PlayerPawn_Athena_C_GalileoMaterialSetup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GalileoMaterialSetup, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_GalileoMaterialSetup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Abilities.Activation.DBNOEnter
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOEnter::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Abilities.Activation.DBNOResurrect
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_DBNOResurrect::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier1
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1 final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier2
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2 final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Athena.Boost
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Athena_Boost final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Athena_Boost) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Athena_Boost");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Athena_Boost) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Athena_Boost");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Boost, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Boost::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Boost, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Boost::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Athena.Equipping
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Athena_Equipping final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Athena_Equipping) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Athena_Equipping");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Athena_Equipping) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Athena_Equipping");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Equipping, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Equipping::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Equipping, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Equipping::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Athena.Player.BeingRevivedFromDBNO
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Player_BeingRevivedFromDBNO::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Athena.Reloading
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Athena_Reloading final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Athena_Reloading) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Athena_Reloading");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Athena_Reloading) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Athena_Reloading");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Reloading, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Reloading::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Athena_Reloading, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Athena_Reloading::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Damage
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Damage final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Damage) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Damage");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Damage) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Damage");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Damage, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Damage::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Damage, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Damage::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Damage.Shielded
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Damage_Shielded final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Damage_Shielded) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Damage_Shielded");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Damage_Shielded) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Damage_Shielded");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Damage_Shielded, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Damage_Shielded::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Damage_Shielded, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Damage_Shielded::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Healing
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Healing final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Healing) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Healing");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Healing) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Healing");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Healing, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Healing::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Healing, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Healing::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GameplayCue.Shield.PotionConsumed
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed");
static_assert(sizeof(PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed) == 0x0000D8, "Wrong size on PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed, EventType) == 0x000000, "Member 'PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed::EventType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed, Parameters) == 0x000008, "Member 'PlayerPawn_Athena_C_GameplayCue_Shield_PotionConsumed::Parameters' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Get Highest Priority Highlight
// 0x0118 (0x0118 - 0x0000)
struct PlayerPawn_Athena_C_Get_Highest_Priority_Highlight final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Top_Priority;                                      // 0x0008(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Best_Source;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         CallFunc_Map_Find_Value;                           // 0x004C(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         CallFunc_Map_Find_Value_1;                         // 0x0098(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnHighlight                         CallFunc_Map_Find_Value_2;                         // 0x00CC(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Get_Highest_Priority_Highlight");
static_assert(sizeof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight) == 0x000118, "Wrong size on PlayerPawn_Athena_C_Get_Highest_Priority_Highlight");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, Source) == 0x000000, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, Top_Priority) == 0x000008, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::Top_Priority' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, Best_Source) == 0x000038, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::Best_Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, Temp_int_Array_Index_Variable) == 0x000040, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Find_Value) == 0x00004C, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Find_ReturnValue) == 0x00007C, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Array_Get_Item) == 0x000090, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Find_Value_1) == 0x000098, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Find_ReturnValue_1) == 0x0000C8, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Find_Value_2) == 0x0000CC, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Map_Find_ReturnValue_2) == 0x0000FC, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000105, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000108, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Get_Highest_Priority_Highlight, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'PlayerPawn_Athena_C_Get_Highest_Priority_Highlight::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GetAimPoint
// 0x0030 (0x0030 - 0x0000)
struct PlayerPawn_Athena_C_GetAimPoint final
{
public:
	struct FRotator                               ControlRotation;                                   // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerPawn_Athena_C_GetAimPoint) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GetAimPoint");
static_assert(sizeof(PlayerPawn_Athena_C_GetAimPoint) == 0x000030, "Wrong size on PlayerPawn_Athena_C_GetAimPoint");
static_assert(offsetof(PlayerPawn_Athena_C_GetAimPoint, ControlRotation) == 0x000000, "Member 'PlayerPawn_Athena_C_GetAimPoint::ControlRotation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetAimPoint, CallFunc_GetControlRotation_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_GetAimPoint::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GetForwardAxis
// 0x0028 (0x0028 - 0x0000)
struct PlayerPawn_Athena_C_GetForwardAxis final
{
public:
	double                                        Return_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_GetForwardAxis) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GetForwardAxis");
static_assert(sizeof(PlayerPawn_Athena_C_GetForwardAxis) == 0x000028, "Wrong size on PlayerPawn_Athena_C_GetForwardAxis");
static_assert(offsetof(PlayerPawn_Athena_C_GetForwardAxis, Return_Value) == 0x000000, "Member 'PlayerPawn_Athena_C_GetForwardAxis::Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetForwardAxis, CallFunc_GetInputAxisValue_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_GetForwardAxis::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetForwardAxis, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x00000C, "Member 'PlayerPawn_Athena_C_GetForwardAxis::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetForwardAxis, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_GetForwardAxis::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetForwardAxis, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'PlayerPawn_Athena_C_GetForwardAxis::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetForwardAxis, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'PlayerPawn_Athena_C_GetForwardAxis::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GetLocationInCircle_XY
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerPawn_Athena_C_GetLocationInCircle_XY final
{
public:
	struct FVector                                LocationLocalSpace;                                // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPI_ReturnValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cos_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_GetLocationInCircle_XY) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GetLocationInCircle_XY");
static_assert(sizeof(PlayerPawn_Athena_C_GetLocationInCircle_XY) == 0x0000B0, "Wrong size on PlayerPawn_Athena_C_GetLocationInCircle_XY");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, LocationLocalSpace) == 0x000000, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::LocationLocalSpace' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_RandomFloat_ReturnValue) == 0x000030, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_GetPI_ReturnValue) == 0x000038, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_Cos_ReturnValue) == 0x000058, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_Sin_ReturnValue) == 0x000060, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_VLerp_ReturnValue) == 0x000090, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetLocationInCircle_XY, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0000A8, "Member 'PlayerPawn_Athena_C_GetLocationInCircle_XY::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GetPawnIsInLocalSquad
// 0x0058 (0x0058 - 0x0000)
struct PlayerPawn_Athena_C_GetPawnIsInLocalSquad final
{
public:
	bool                                          IsInLocalSquad;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ThisPawnSquadID;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       CallFunc_AttemptGetPlayerStateForPawn_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       CallFunc_AttemptGetPlayerStateForPawn_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSquadId_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena_1;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSquadId_ReturnValue_1;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GetPawnIsInLocalSquad");
static_assert(sizeof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad) == 0x000058, "Wrong size on PlayerPawn_Athena_C_GetPawnIsInLocalSquad");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, IsInLocalSquad) == 0x000000, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::IsInLocalSquad' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, ThisPawnSquadID) == 0x000001, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::ThisPawnSquadID' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, CallFunc_AttemptGetPlayerStateForPawn_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::CallFunc_AttemptGetPlayerStateForPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000018, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, K2Node_DynamicCast_AsFort_Player_State_Athena) == 0x000028, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::K2Node_DynamicCast_AsFort_Player_State_Athena' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, CallFunc_AttemptGetPlayerStateForPawn_ReturnValue_1) == 0x000038, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::CallFunc_AttemptGetPlayerStateForPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, CallFunc_GetSquadId_ReturnValue) == 0x000040, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::CallFunc_GetSquadId_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, K2Node_DynamicCast_AsFort_Player_State_Athena_1) == 0x000048, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::K2Node_DynamicCast_AsFort_Player_State_Athena_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, CallFunc_GetSquadId_ReturnValue_1) == 0x000051, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::CallFunc_GetSquadId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetPawnIsInLocalSquad, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000052, "Member 'PlayerPawn_Athena_C_GetPawnIsInLocalSquad::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.GetRightAxis
// 0x0028 (0x0028 - 0x0000)
struct PlayerPawn_Athena_C_GetRightAxis final
{
public:
	double                                        Return_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_GetRightAxis) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_GetRightAxis");
static_assert(sizeof(PlayerPawn_Athena_C_GetRightAxis) == 0x000028, "Wrong size on PlayerPawn_Athena_C_GetRightAxis");
static_assert(offsetof(PlayerPawn_Athena_C_GetRightAxis, Return_Value) == 0x000000, "Member 'PlayerPawn_Athena_C_GetRightAxis::Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetRightAxis, CallFunc_GetInputAxisValue_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_GetRightAxis::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetRightAxis, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x00000C, "Member 'PlayerPawn_Athena_C_GetRightAxis::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetRightAxis, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_GetRightAxis::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetRightAxis, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'PlayerPawn_Athena_C_GetRightAxis::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_GetRightAxis, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'PlayerPawn_Athena_C_GetRightAxis::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.handleCvarsUpdated
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_handleCvarsUpdated final
{
public:
	class FString                                 CVarName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 l_cvarName;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_handleCvarsUpdated) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_handleCvarsUpdated");
static_assert(sizeof(PlayerPawn_Athena_C_handleCvarsUpdated) == 0x000020, "Wrong size on PlayerPawn_Athena_C_handleCvarsUpdated");
static_assert(offsetof(PlayerPawn_Athena_C_handleCvarsUpdated, CVarName) == 0x000000, "Member 'PlayerPawn_Athena_C_handleCvarsUpdated::CVarName' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_handleCvarsUpdated, l_cvarName) == 0x000010, "Member 'PlayerPawn_Athena_C_handleCvarsUpdated::l_cvarName' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Hide Character Parts
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_Hide_Character_Parts final
{
public:
	bool                                          IsHidden;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Hide_Character_Parts) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_Hide_Character_Parts");
static_assert(sizeof(PlayerPawn_Athena_C_Hide_Character_Parts) == 0x000001, "Wrong size on PlayerPawn_Athena_C_Hide_Character_Parts");
static_assert(offsetof(PlayerPawn_Athena_C_Hide_Character_Parts, IsHidden) == 0x000000, "Member 'PlayerPawn_Athena_C_Hide_Character_Parts::IsHidden' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Highlight Pawn from Source
// 0x0078 (0x0078 - 0x0000)
struct PlayerPawn_Athena_C_Highlight_Pawn_from_Source final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Highlight;                                         // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Only_Update_If_Current;                            // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         CallFunc_Map_Find_Value;                           // 0x003C(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Highlight_Pawn_from_Source");
static_assert(sizeof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source) == 0x000078, "Wrong size on PlayerPawn_Athena_C_Highlight_Pawn_from_Source");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, Source) == 0x000000, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, Highlight) == 0x000008, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::Highlight' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, Only_Update_If_Current) == 0x000038, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::Only_Update_If_Current' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003A, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00003B, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, CallFunc_Map_Find_Value) == 0x00003C, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, CallFunc_Map_Find_ReturnValue) == 0x00006C, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Highlight_Pawn_from_Source, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'PlayerPawn_Athena_C_Highlight_Pawn_from_Source::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.InWarmup
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_InWarmup final
{
public:
	bool                                          bInWarmup;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameStateComponent_BattleRoyaleGamePhaseLogic* CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaGamePhase                              CallFunc_GetGamePhase_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_InWarmup) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_InWarmup");
static_assert(sizeof(PlayerPawn_Athena_C_InWarmup) == 0x000018, "Wrong size on PlayerPawn_Athena_C_InWarmup");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, bInWarmup) == 0x000000, "Member 'PlayerPawn_Athena_C_InWarmup::bInWarmup' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, CallFunc_Get_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_InWarmup::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_InWarmup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, CallFunc_GetGamePhase_ReturnValue) == 0x000011, "Member 'PlayerPawn_Athena_C_InWarmup::CallFunc_GetGamePhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'PlayerPawn_Athena_C_InWarmup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'PlayerPawn_Athena_C_InWarmup::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_InWarmup, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'PlayerPawn_Athena_C_InWarmup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.isHiddingInProp
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_isHiddingInProp final
{
public:
	bool                                          IsHidden;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_isHiddingInProp) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_isHiddingInProp");
static_assert(sizeof(PlayerPawn_Athena_C_isHiddingInProp) == 0x000001, "Wrong size on PlayerPawn_Athena_C_isHiddingInProp");
static_assert(offsetof(PlayerPawn_Athena_C_isHiddingInProp, IsHidden) == 0x000000, "Member 'PlayerPawn_Athena_C_isHiddingInProp::IsHidden' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.IsSwingAttached
// 0x0028 (0x0028 - 0x0000)
struct PlayerPawn_Athena_C_IsSwingAttached final
{
public:
	bool                                          IsSwingAttached_0;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortControllerComponent_Swinging*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwingAttached_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_IsSwingAttached) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_IsSwingAttached");
static_assert(sizeof(PlayerPawn_Athena_C_IsSwingAttached) == 0x000028, "Wrong size on PlayerPawn_Athena_C_IsSwingAttached");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, IsSwingAttached_0) == 0x000000, "Member 'PlayerPawn_Athena_C_IsSwingAttached::IsSwingAttached_0' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_IsSwingAttached::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_IsSwingAttached::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'PlayerPawn_Athena_C_IsSwingAttached::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_IsSwingAttached::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, CallFunc_IsSwingAttached_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_IsSwingAttached::CallFunc_IsSwingAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingAttached, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'PlayerPawn_Athena_C_IsSwingAttached::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.IsSwingGrounded
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_IsSwingGrounded final
{
public:
	bool                                          IsSwingingGrounded;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortControllerComponent_Swinging*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwingingGrounded_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_IsSwingGrounded) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_IsSwingGrounded");
static_assert(sizeof(PlayerPawn_Athena_C_IsSwingGrounded) == 0x000020, "Wrong size on PlayerPawn_Athena_C_IsSwingGrounded");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingGrounded, IsSwingingGrounded) == 0x000000, "Member 'PlayerPawn_Athena_C_IsSwingGrounded::IsSwingingGrounded' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingGrounded, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_IsSwingGrounded::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingGrounded, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_IsSwingGrounded::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingGrounded, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_IsSwingGrounded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwingGrounded, CallFunc_IsSwingingGrounded_ReturnValue) == 0x000019, "Member 'PlayerPawn_Athena_C_IsSwingGrounded::CallFunc_IsSwingingGrounded_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.IsSwinging
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_IsSwinging final
{
public:
	bool                                          IsSwinging_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortControllerComponent_Swinging*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSwingingMovement_ReturnValue;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_IsSwinging) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_IsSwinging");
static_assert(sizeof(PlayerPawn_Athena_C_IsSwinging) == 0x000020, "Wrong size on PlayerPawn_Athena_C_IsSwinging");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwinging, IsSwinging_0) == 0x000000, "Member 'PlayerPawn_Athena_C_IsSwinging::IsSwinging_0' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwinging, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_IsSwinging::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwinging, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_IsSwinging::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwinging, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_IsSwinging::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwinging, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'PlayerPawn_Athena_C_IsSwinging::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_IsSwinging, CallFunc_IsInSwingingMovement_ReturnValue) == 0x00001A, "Member 'PlayerPawn_Athena_C_IsSwinging::CallFunc_IsInSwingingMovement_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.K2_OnMovementModeChanged
// 0x0004 (0x0004 - 0x0000)
struct PlayerPawn_Athena_C_K2_OnMovementModeChanged final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_K2_OnMovementModeChanged) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_K2_OnMovementModeChanged");
static_assert(sizeof(PlayerPawn_Athena_C_K2_OnMovementModeChanged) == 0x000004, "Wrong size on PlayerPawn_Athena_C_K2_OnMovementModeChanged");
static_assert(offsetof(PlayerPawn_Athena_C_K2_OnMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'PlayerPawn_Athena_C_K2_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_OnMovementModeChanged, NewMovementMode) == 0x000001, "Member 'PlayerPawn_Athena_C_K2_OnMovementModeChanged::NewMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_OnMovementModeChanged, PrevCustomMode) == 0x000002, "Member 'PlayerPawn_Athena_C_K2_OnMovementModeChanged::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_OnMovementModeChanged, NewCustomMode) == 0x000003, "Member 'PlayerPawn_Athena_C_K2_OnMovementModeChanged::NewCustomMode' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.K2_UpdateCustomMovement
// 0x0930 (0x0930 - 0x0000)
struct PlayerPawn_Athena_C_K2_UpdateCustomMovement final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            MovementComponent;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DT;                                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDesiredRotation_ReturnValue;           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetDesiredRotation_ReturnValue_1;         // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDesiredRotation_ReturnValue_2;         // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_NormalizeAxis_ReturnValue_2;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_2;       // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDesiredRotation_ReturnValue_3;         // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_DegCos_ReturnValue_1;                     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue_1;     // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_7;                     // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_8;                     // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_6;        // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_3;              // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue_2;                 // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_7;        // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_3;       // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_MoveUpdatedComponent_OutHit;           // 0x0768(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_MoveUpdatedComponent_ReturnValue;      // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B3[0x5];                                      // 0x08B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast;         // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast_1;       // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast_2;       // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1;   // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_2;         // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast_2;   // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_3;         // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_K2_UpdateCustomMovement) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_K2_UpdateCustomMovement");
static_assert(sizeof(PlayerPawn_Athena_C_K2_UpdateCustomMovement) == 0x000930, "Wrong size on PlayerPawn_Athena_C_K2_UpdateCustomMovement");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, DeltaTime) == 0x000000, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::DeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, MovementComponent) == 0x000008, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::MovementComponent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, DT) == 0x000010, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::DT' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_X) == 0x000018, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_Y_1) == 0x000030, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_X_2) == 0x000048, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_Y_2) == 0x000050, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_X_3) == 0x000058, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector2D_Y_3) == 0x000060, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetController_ReturnValue_1) == 0x000080, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetDesiredRotation_ReturnValue) == 0x000088, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetDesiredRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetDesiredRotation_ReturnValue_1) == 0x0000A0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetDesiredRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Roll) == 0x0000B8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Pitch) == 0x0000BC, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Yaw) == 0x0000C0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Roll_1) == 0x0000C4, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Pitch_1) == 0x0000C8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Yaw_1) == 0x0000CC, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_ReturnValue) == 0x0000E0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_ReturnValue_1) == 0x0000E4, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_ClampAngle_ReturnValue) == 0x0000E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_ReturnValue) == 0x0000F8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000110, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000118, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000130, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000138, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue) == 0x000150, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000158, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_SelectFloat_ReturnValue) == 0x000160, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_1) == 0x000170, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_2) == 0x000178, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_SelectFloat_ReturnValue_1) == 0x000180, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_SelectFloat_ReturnValue_2) == 0x000188, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000190, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_3) == 0x000198, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_SelectFloat_ReturnValue_3) == 0x0001A8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetController_ReturnValue_2) == 0x0001B0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetDesiredRotation_ReturnValue_2) == 0x0001C0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetDesiredRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0001D8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Roll_2) == 0x0001E0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Pitch_2) == 0x0001E4, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Yaw_2) == 0x0001E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_SelectFloat_ReturnValue_4) == 0x0001F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0001F8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_ReturnValue_1) == 0x000200, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_ReturnValue_2) == 0x000218, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000220, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_ClampAngle_ReturnValue_1) == 0x000238, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetActorForwardVector_ReturnValue) == 0x000240, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_ReturnValue_2) == 0x000258, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetActorRightVector_ReturnValue) == 0x000270, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_RotatorToVector_ReturnValue_2) == 0x000288, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_RotatorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetController_ReturnValue_3) == 0x0002A0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002A8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetDesiredRotation_ReturnValue_3) == 0x0002C0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetDesiredRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetActorRightVector_ReturnValue_1) == 0x0002D8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Roll_3) == 0x0002F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Pitch_3) == 0x0002F4, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Yaw_3) == 0x0002F8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_DegCos_ReturnValue) == 0x000300, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_ReturnValue_3) == 0x000308, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_DegCos_ReturnValue_1) == 0x000320, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000328, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000330, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000348, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_X) == 0x000360, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Y) == 0x000368, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Z) == 0x000370, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_VSize_ReturnValue) == 0x000378, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Normal_ReturnValue) == 0x000380, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000398, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_4) == 0x0003A0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0003A8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0003B0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0003C8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0003D0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_5) == 0x0003E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0003F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000408, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_VectorVector_ReturnValue) == 0x000410, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000428, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Normal_ReturnValue_1) == 0x000440, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000458, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000459, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Not_PreBool_ReturnValue) == 0x00045A, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x00045B, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_SelectFloat_ReturnValue_5) == 0x000460, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000468, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000480, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000498, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GetCurrentAcceleration_ReturnValue_1) == 0x0004B0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GetCurrentAcceleration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0004C8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_VSize_ReturnValue_1) == 0x0004E0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0004E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000500, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_X_1) == 0x000508, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Y_1) == 0x000510, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Z_1) == 0x000518, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_6) == 0x000520, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeVector_ReturnValue) == 0x000528, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x000540, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Normal_ReturnValue_2) == 0x000558, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000570, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000588, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_X_2) == 0x0005A0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Y_2) == 0x0005A8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Z_2) == 0x0005B0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Dot_VectorVector_ReturnValue) == 0x0005B8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0005C0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_7) == 0x0005C8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x0005D0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0005E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x0005F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000608, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000620, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_X_3) == 0x000628, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Y_3) == 0x000630, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Z_3) == 0x000638, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000640, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeVector_ReturnValue_1) == 0x000648, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FClamp_ReturnValue_8) == 0x000660, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000668, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000680, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000688, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_6) == 0x0006A0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Roll_4) == 0x0006B8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Pitch_4) == 0x0006BC, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakRotator_Yaw_4) == 0x0006C0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0006C8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_ReturnValue_3) == 0x0006E0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_ClampAngle_ReturnValue_2) == 0x0006E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_ClampAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_ReturnValue_7) == 0x0006F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_ReturnValue_4) == 0x000708, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x000720, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_RotatorToVector_ReturnValue_3) == 0x000738, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_RotatorToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x000750, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_K2_MoveUpdatedComponent_OutHit) == 0x000768, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_K2_MoveUpdatedComponent_OutHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_K2_MoveUpdatedComponent_ReturnValue) == 0x000850, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_K2_MoveUpdatedComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_X_4) == 0x000858, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Y_4) == 0x000860, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BreakVector_Z_4) == 0x000868, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_FMin_ReturnValue) == 0x000870, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeVector_ReturnValue_2) == 0x000878, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000890, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000898, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0008B0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BooleanAND_ReturnValue) == 0x0008B1, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_BooleanAND_ReturnValue_1) == 0x0008B2, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0008B8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0008C0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_Angle_ImplicitCast) == 0x0008C8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_Angle_ImplicitCast_1) == 0x0008CC, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_Angle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x0008D0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0008D8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0008E0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x0008E8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0008F0, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x0008F8, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000900, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_NormalizeAxis_Angle_ImplicitCast_2) == 0x000904, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_NormalizeAxis_Angle_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1) == 0x000908, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_Pitch_ImplicitCast_2) == 0x000910, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_Pitch_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_ClampAngle_AngleDegrees_ImplicitCast_2) == 0x000918, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_ClampAngle_AngleDegrees_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000920, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_K2_UpdateCustomMovement, CallFunc_MakeRotator_Pitch_ImplicitCast_3) == 0x000928, "Member 'PlayerPawn_Athena_C_K2_UpdateCustomMovement::CallFunc_MakeRotator_Pitch_ImplicitCast_3' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.MeleeSwingLeft
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_MeleeSwingLeft final
{
public:
	bool                                          First_Left;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_MeleeSwingLeft) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_MeleeSwingLeft");
static_assert(sizeof(PlayerPawn_Athena_C_MeleeSwingLeft) == 0x000001, "Wrong size on PlayerPawn_Athena_C_MeleeSwingLeft");
static_assert(offsetof(PlayerPawn_Athena_C_MeleeSwingLeft, First_Left) == 0x000000, "Member 'PlayerPawn_Athena_C_MeleeSwingLeft::First_Left' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.MeleeSwingRight
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_MeleeSwingRight final
{
public:
	bool                                          First_Right;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_MeleeSwingRight) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_MeleeSwingRight");
static_assert(sizeof(PlayerPawn_Athena_C_MeleeSwingRight) == 0x000001, "Wrong size on PlayerPawn_Athena_C_MeleeSwingRight");
static_assert(offsetof(PlayerPawn_Athena_C_MeleeSwingRight, First_Right) == 0x000000, "Member 'PlayerPawn_Athena_C_MeleeSwingRight::First_Right' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnCharacterCustomizationCompleted
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_OnCharacterCustomizationCompleted final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnCharacterCustomizationCompleted) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnCharacterCustomizationCompleted");
static_assert(sizeof(PlayerPawn_Athena_C_OnCharacterCustomizationCompleted) == 0x000008, "Wrong size on PlayerPawn_Athena_C_OnCharacterCustomizationCompleted");
static_assert(offsetof(PlayerPawn_Athena_C_OnCharacterCustomizationCompleted, Pawn) == 0x000000, "Member 'PlayerPawn_Athena_C_OnCharacterCustomizationCompleted::Pawn' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnDBNOStateChanged_Event
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_OnDBNOStateChanged_Event final
{
public:
	class AFortPawn*                              FortPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bInIsDBNO;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnDBNOStateChanged_Event) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnDBNOStateChanged_Event");
static_assert(sizeof(PlayerPawn_Athena_C_OnDBNOStateChanged_Event) == 0x000010, "Wrong size on PlayerPawn_Athena_C_OnDBNOStateChanged_Event");
static_assert(offsetof(PlayerPawn_Athena_C_OnDBNOStateChanged_Event, FortPawn) == 0x000000, "Member 'PlayerPawn_Athena_C_OnDBNOStateChanged_Event::FortPawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDBNOStateChanged_Event, bInIsDBNO) == 0x000008, "Member 'PlayerPawn_Athena_C_OnDBNOStateChanged_Event::bInIsDBNO' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnDeathPlayEffects
// 0x0150 (0x0150 - 0x0000)
struct PlayerPawn_Athena_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0138(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerPawn_Athena_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnDeathPlayEffects");
static_assert(sizeof(PlayerPawn_Athena_C_OnDeathPlayEffects) == 0x000150, "Wrong size on PlayerPawn_Athena_C_OnDeathPlayEffects");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, InstigatedBy) == 0x000128, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, DamageCauser) == 0x000130, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathPlayEffects, EffectContext) == 0x000138, "Member 'PlayerPawn_Athena_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnDeathServer
// 0x0150 (0x0150 - 0x0000)
struct PlayerPawn_Athena_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0138(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerPawn_Athena_C_OnDeathServer) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnDeathServer");
static_assert(sizeof(PlayerPawn_Athena_C_OnDeathServer) == 0x000150, "Wrong size on PlayerPawn_Athena_C_OnDeathServer");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, Damage) == 0x000000, "Member 'PlayerPawn_Athena_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, DamageTags) == 0x000008, "Member 'PlayerPawn_Athena_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, Momentum) == 0x000028, "Member 'PlayerPawn_Athena_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, HitInfo) == 0x000040, "Member 'PlayerPawn_Athena_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, InstigatedBy) == 0x000128, "Member 'PlayerPawn_Athena_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, DamageCauser) == 0x000130, "Member 'PlayerPawn_Athena_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDeathServer, EffectContext) == 0x000138, "Member 'PlayerPawn_Athena_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnDisplayHitNotify
// 0x0048 (0x0048 - 0x0000)
struct PlayerPawn_Athena_C_OnDisplayHitNotify final
{
public:
	float                                         DamageDealt;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCriticalHit;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFatalHit;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShieldHit;                                        // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  HitTags;                                           // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector                                HitLocation;                                       // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnDisplayHitNotify) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnDisplayHitNotify");
static_assert(sizeof(PlayerPawn_Athena_C_OnDisplayHitNotify) == 0x000048, "Wrong size on PlayerPawn_Athena_C_OnDisplayHitNotify");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, DamageDealt) == 0x000000, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::DamageDealt' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, bCriticalHit) == 0x000004, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::bCriticalHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, bFatalHit) == 0x000005, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::bFatalHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, bShieldHit) == 0x000006, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::bShieldHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, HitActor) == 0x000008, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::HitActor' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, HitTags) == 0x000010, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::HitTags' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnDisplayHitNotify, HitLocation) == 0x000030, "Member 'PlayerPawn_Athena_C_OnDisplayHitNotify::HitLocation' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnEnteredOrExitedWaterVolume
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume final
{
public:
	bool                                          bEntered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WaterSurfaceLocation;                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume");
static_assert(sizeof(PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume) == 0x000020, "Wrong size on PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume");
static_assert(offsetof(PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume, bEntered) == 0x000000, "Member 'PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume::bEntered' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume, WaterSurfaceLocation) == 0x000008, "Member 'PlayerPawn_Athena_C_OnEnteredOrExitedWaterVolume::WaterSurfaceLocation' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnEnteredWaterBody
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_OnEnteredWaterBody final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnEnteredWaterBody) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnEnteredWaterBody");
static_assert(sizeof(PlayerPawn_Athena_C_OnEnteredWaterBody) == 0x000010, "Wrong size on PlayerPawn_Athena_C_OnEnteredWaterBody");
static_assert(offsetof(PlayerPawn_Athena_C_OnEnteredWaterBody, WaterBody) == 0x000000, "Member 'PlayerPawn_Athena_C_OnEnteredWaterBody::WaterBody' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnEnteredWaterBody, bIsFirstBody) == 0x000008, "Member 'PlayerPawn_Athena_C_OnEnteredWaterBody::bIsFirstBody' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnEnteredWaterVolume
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_OnEnteredWaterVolume final
{
public:
	struct FVector                                WaterSurfaceLocation;                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnEnteredWaterVolume) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnEnteredWaterVolume");
static_assert(sizeof(PlayerPawn_Athena_C_OnEnteredWaterVolume) == 0x000018, "Wrong size on PlayerPawn_Athena_C_OnEnteredWaterVolume");
static_assert(offsetof(PlayerPawn_Athena_C_OnEnteredWaterVolume, WaterSurfaceLocation) == 0x000000, "Member 'PlayerPawn_Athena_C_OnEnteredWaterVolume::WaterSurfaceLocation' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnExitedWaterBody
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_OnExitedWaterBody final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastBody;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnExitedWaterBody) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnExitedWaterBody");
static_assert(sizeof(PlayerPawn_Athena_C_OnExitedWaterBody) == 0x000010, "Wrong size on PlayerPawn_Athena_C_OnExitedWaterBody");
static_assert(offsetof(PlayerPawn_Athena_C_OnExitedWaterBody, WaterBody) == 0x000000, "Member 'PlayerPawn_Athena_C_OnExitedWaterBody::WaterBody' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnExitedWaterBody, bIsLastBody) == 0x000008, "Member 'PlayerPawn_Athena_C_OnExitedWaterBody::bIsLastBody' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnExitedWaterVolume
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_OnExitedWaterVolume final
{
public:
	struct FVector                                WaterSurfaceLocation;                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnExitedWaterVolume) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnExitedWaterVolume");
static_assert(sizeof(PlayerPawn_Athena_C_OnExitedWaterVolume) == 0x000018, "Wrong size on PlayerPawn_Athena_C_OnExitedWaterVolume");
static_assert(offsetof(PlayerPawn_Athena_C_OnExitedWaterVolume, WaterSurfaceLocation) == 0x000000, "Member 'PlayerPawn_Athena_C_OnExitedWaterVolume::WaterSurfaceLocation' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnLockOnSearchCompleted
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_OnLockOnSearchCompleted final
{
public:
	bool                                          bConsumeEvent;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnLockOnSearchCompleted) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnLockOnSearchCompleted");
static_assert(sizeof(PlayerPawn_Athena_C_OnLockOnSearchCompleted) == 0x000010, "Wrong size on PlayerPawn_Athena_C_OnLockOnSearchCompleted");
static_assert(offsetof(PlayerPawn_Athena_C_OnLockOnSearchCompleted, bConsumeEvent) == 0x000000, "Member 'PlayerPawn_Athena_C_OnLockOnSearchCompleted::bConsumeEvent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnLockOnSearchCompleted, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_OnLockOnSearchCompleted::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnMovementStyleChanged
// 0x0002 (0x0002 - 0x0000)
struct PlayerPawn_Athena_C_OnMovementStyleChanged final
{
public:
	EFortMovementStyle                            PreviousMovementStyle;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMovementStyle                            NewMovementStyle;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnMovementStyleChanged) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_OnMovementStyleChanged");
static_assert(sizeof(PlayerPawn_Athena_C_OnMovementStyleChanged) == 0x000002, "Wrong size on PlayerPawn_Athena_C_OnMovementStyleChanged");
static_assert(offsetof(PlayerPawn_Athena_C_OnMovementStyleChanged, PreviousMovementStyle) == 0x000000, "Member 'PlayerPawn_Athena_C_OnMovementStyleChanged::PreviousMovementStyle' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnMovementStyleChanged, NewMovementStyle) == 0x000001, "Member 'PlayerPawn_Athena_C_OnMovementStyleChanged::NewMovementStyle' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnOutsideSafeZonePhaseChanged
// 0x0004 (0x0004 - 0x0000)
struct PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged final
{
public:
	int32                                         SafeZonePhase_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged) == 0x000004, "Wrong alignment on PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged");
static_assert(sizeof(PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged) == 0x000004, "Wrong size on PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged");
static_assert(offsetof(PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged, SafeZonePhase_0) == 0x000000, "Member 'PlayerPawn_Athena_C_OnOutsideSafeZonePhaseChanged::SafeZonePhase_0' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnPart
// 0x0020 (0x0020 - 0x0000)
struct PlayerPawn_Athena_C_OnPart final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomCharacterPart*                   Part;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MeshPart;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EFortCustomPartType                           PartType;                                          // 0x0018(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnPart) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnPart");
static_assert(sizeof(PlayerPawn_Athena_C_OnPart) == 0x000020, "Wrong size on PlayerPawn_Athena_C_OnPart");
static_assert(offsetof(PlayerPawn_Athena_C_OnPart, Pawn) == 0x000000, "Member 'PlayerPawn_Athena_C_OnPart::Pawn' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnPart, Part) == 0x000008, "Member 'PlayerPawn_Athena_C_OnPart::Part' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnPart, MeshPart) == 0x000010, "Member 'PlayerPawn_Athena_C_OnPart::MeshPart' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnPart, PartType) == 0x000018, "Member 'PlayerPawn_Athena_C_OnPart::PartType' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnReady_978607004CDEB137CACF38831BECEF40
// 0x0030 (0x0030 - 0x0000)
struct PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40 final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40");
static_assert(sizeof(PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40) == 0x000030, "Wrong size on PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40");
static_assert(offsetof(PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40, GameState) == 0x000000, "Member 'PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40::GameState' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40, Playlist) == 0x000008, "Member 'PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40::Playlist' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40, PlaylistContextTags) == 0x000010, "Member 'PlayerPawn_Athena_C_OnReady_978607004CDEB137CACF38831BECEF40::PlaylistContextTags' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnStartLongInteract
// 0x0048 (0x0048 - 0x0000)
struct PlayerPawn_Athena_C_OnStartLongInteract final
{
public:
	class AActor*                                 ReceivingActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_bConsumeEvent;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_bSkipSetInteractDuration;                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_bSkipStartAnimation;                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemInteractionType                          Out_ItemInteractionType;                           // 0x000B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x001C(0x0004)(NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnStartLongInteract) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnStartLongInteract");
static_assert(sizeof(PlayerPawn_Athena_C_OnStartLongInteract) == 0x000048, "Wrong size on PlayerPawn_Athena_C_OnStartLongInteract");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, ReceivingActor) == 0x000000, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::ReceivingActor' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, Out_bConsumeEvent) == 0x000008, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::Out_bConsumeEvent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, Out_bSkipSetInteractDuration) == 0x000009, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::Out_bSkipSetInteractDuration' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, Out_bSkipStartAnimation) == 0x00000A, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::Out_bSkipStartAnimation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, Out_ItemInteractionType) == 0x00000B, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::Out_ItemInteractionType' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_ActorHasTag_ReturnValue) == 0x00000C, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_ActorHasTag_ReturnValue_1) == 0x00000D, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000010, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00001C, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_OnStartLongInteract, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'PlayerPawn_Athena_C_OnStartLongInteract::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnTetherEnded
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_OnTetherEnded final
{
public:
	class APawn*                                  LastTetherPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnTetherEnded) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnTetherEnded");
static_assert(sizeof(PlayerPawn_Athena_C_OnTetherEnded) == 0x000008, "Wrong size on PlayerPawn_Athena_C_OnTetherEnded");
static_assert(offsetof(PlayerPawn_Athena_C_OnTetherEnded, LastTetherPawn) == 0x000000, "Member 'PlayerPawn_Athena_C_OnTetherEnded::LastTetherPawn' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.OnTetherStarted
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_OnTetherStarted final
{
public:
	class APawn*                                  LastTetherPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_OnTetherStarted) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_OnTetherStarted");
static_assert(sizeof(PlayerPawn_Athena_C_OnTetherStarted) == 0x000008, "Wrong size on PlayerPawn_Athena_C_OnTetherStarted");
static_assert(offsetof(PlayerPawn_Athena_C_OnTetherStarted, LastTetherPawn) == 0x000000, "Member 'PlayerPawn_Athena_C_OnTetherStarted::LastTetherPawn' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.PawnIsDecoy
// 0x0002 (0x0002 - 0x0000)
struct PlayerPawn_Athena_C_PawnIsDecoy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_PawnIsDecoy) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_PawnIsDecoy");
static_assert(sizeof(PlayerPawn_Athena_C_PawnIsDecoy) == 0x000002, "Wrong size on PlayerPawn_Athena_C_PawnIsDecoy");
static_assert(offsetof(PlayerPawn_Athena_C_PawnIsDecoy, ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_PawnIsDecoy::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_PawnIsDecoy, CallFunc_HasTag_ReturnValue) == 0x000001, "Member 'PlayerPawn_Athena_C_PawnIsDecoy::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.PawnIsNPC
// 0x0002 (0x0002 - 0x0000)
struct PlayerPawn_Athena_C_PawnIsNPC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_PawnIsNPC) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_PawnIsNPC");
static_assert(sizeof(PlayerPawn_Athena_C_PawnIsNPC) == 0x000002, "Wrong size on PlayerPawn_Athena_C_PawnIsNPC");
static_assert(offsetof(PlayerPawn_Athena_C_PawnIsNPC, ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_PawnIsNPC::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_PawnIsNPC, CallFunc_HasTag_ReturnValue) == 0x000001, "Member 'PlayerPawn_Athena_C_PawnIsNPC::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.PlayDeathEffects
// 0x00D0 (0x00D0 - 0x0000)
struct PlayerPawn_Athena_C_PlayDeathEffects final
{
public:
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0000(0x00D0)(ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_PlayDeathEffects) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_PlayDeathEffects");
static_assert(sizeof(PlayerPawn_Athena_C_PlayDeathEffects) == 0x0000D0, "Wrong size on PlayerPawn_Athena_C_PlayDeathEffects");
static_assert(offsetof(PlayerPawn_Athena_C_PlayDeathEffects, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_PlayDeathEffects::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.PlayWaterEnterExitAudioAndFX
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX final
{
public:
	struct FVector                                WaterSurfaceLocation;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX");
static_assert(sizeof(PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX) == 0x000018, "Wrong size on PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX");
static_assert(offsetof(PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX, WaterSurfaceLocation) == 0x000000, "Member 'PlayerPawn_Athena_C_PlayWaterEnterExitAudioAndFX::WaterSurfaceLocation' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_ReceiveEndPlay");
static_assert(sizeof(PlayerPawn_Athena_C_ReceiveEndPlay) == 0x000001, "Wrong size on PlayerPawn_Athena_C_ReceiveEndPlay");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PlayerPawn_Athena_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct PlayerPawn_Athena_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerPawn_Athena_C_ReceiveHit) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ReceiveHit");
static_assert(sizeof(PlayerPawn_Athena_C_ReceiveHit) == 0x000150, "Wrong size on PlayerPawn_Athena_C_ReceiveHit");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, MyComp) == 0x000000, "Member 'PlayerPawn_Athena_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, Other) == 0x000008, "Member 'PlayerPawn_Athena_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, OtherComp) == 0x000010, "Member 'PlayerPawn_Athena_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'PlayerPawn_Athena_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, HitLocation) == 0x000020, "Member 'PlayerPawn_Athena_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, HitNormal) == 0x000038, "Member 'PlayerPawn_Athena_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'PlayerPawn_Athena_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveHit, Hit) == 0x000068, "Member 'PlayerPawn_Athena_C_ReceiveHit::Hit' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ReceivePossessed) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ReceivePossessed");
static_assert(sizeof(PlayerPawn_Athena_C_ReceivePossessed) == 0x000008, "Wrong size on PlayerPawn_Athena_C_ReceivePossessed");
static_assert(offsetof(PlayerPawn_Athena_C_ReceivePossessed, NewController) == 0x000000, "Member 'PlayerPawn_Athena_C_ReceivePossessed::NewController' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ReceiveUnpossessed");
static_assert(sizeof(PlayerPawn_Athena_C_ReceiveUnpossessed) == 0x000008, "Wrong size on PlayerPawn_Athena_C_ReceiveUnpossessed");
static_assert(offsetof(PlayerPawn_Athena_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'PlayerPawn_Athena_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Remove Pawn Highlight from Source
// 0x0048 (0x0048 - 0x0000)
struct PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Get_Highest_Priority_Highlight_Source;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         CallFunc_Get_Highest_Priority_Highlight_Top_Priority; // 0x0010(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source");
static_assert(sizeof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source) == 0x000048, "Wrong size on PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source");
static_assert(offsetof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source, Source) == 0x000000, "Member 'PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source::Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source, CallFunc_Get_Highest_Priority_Highlight_Source) == 0x000008, "Member 'PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source::CallFunc_Get_Highest_Priority_Highlight_Source' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source, CallFunc_Get_Highest_Priority_Highlight_Top_Priority) == 0x000010, "Member 'PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source::CallFunc_Get_Highest_Priority_Highlight_Top_Priority' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source, CallFunc_Map_Remove_ReturnValue) == 0x000041, "Member 'PlayerPawn_Athena_C_Remove_Pawn_Highlight_from_Source::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.RemoveHighlightFromSource
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_RemoveHighlightFromSource final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_RemoveHighlightFromSource) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_RemoveHighlightFromSource");
static_assert(sizeof(PlayerPawn_Athena_C_RemoveHighlightFromSource) == 0x000008, "Wrong size on PlayerPawn_Athena_C_RemoveHighlightFromSource");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveHighlightFromSource, Source) == 0x000000, "Member 'PlayerPawn_Athena_C_RemoveHighlightFromSource::Source' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.RemoveSkeletalMeshComponentsFromWeaponObject
// 0x0080 (0x0080 - 0x0000)
struct PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject final
{
public:
	class AFortWeapon*                            WeaponObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ComponentIndexOffset;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponentBudgeted*> CallFunc_GetWeaponMeshes_WeaponMeshes;             // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_wildcard_Variable;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject");
static_assert(sizeof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject) == 0x000080, "Wrong size on PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, WeaponObject) == 0x000000, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::WeaponObject' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, ComponentIndexOffset) == 0x000008, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::ComponentIndexOffset' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, Temp_int_Variable) == 0x00000C, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_GetWeaponMeshes_WeaponMeshes) == 0x000018, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_GetWeaponMeshes_WeaponMeshes' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, Temp_int_Array_Index_Variable) == 0x000038, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, Temp_wildcard_Variable) == 0x000040, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_Get_Item) == 0x000048, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_GetNumMaterials_ReturnValue) == 0x000050, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Conv_IntToBool_ReturnValue) == 0x000060, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Add_IntInt_ReturnValue_3) == 0x000068, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject, CallFunc_Array_RemoveItem_ReturnValue) == 0x000079, "Member 'PlayerPawn_Athena_C_RemoveSkeletalMeshComponentsFromWeaponObject::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.ReplicateAimRotation
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_ReplicateAimRotation final
{
public:
	struct FRotator                               PlayerAimRotation_0;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerPawn_Athena_C_ReplicateAimRotation) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_ReplicateAimRotation");
static_assert(sizeof(PlayerPawn_Athena_C_ReplicateAimRotation) == 0x000018, "Wrong size on PlayerPawn_Athena_C_ReplicateAimRotation");
static_assert(offsetof(PlayerPawn_Athena_C_ReplicateAimRotation, PlayerAimRotation_0) == 0x000000, "Member 'PlayerPawn_Athena_C_ReplicateAimRotation::PlayerAimRotation_0' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.RestoreCharacterMats
// 0x0070 (0x0070 - 0x0000)
struct PlayerPawn_Athena_C_RestoreCharacterMats final
{
public:
	bool                                          bFullyCompleted;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentReplacementIndex;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Itr;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Temp_wildcard_Variable;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_RestoreCharacterMats) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_RestoreCharacterMats");
static_assert(sizeof(PlayerPawn_Athena_C_RestoreCharacterMats) == 0x000070, "Wrong size on PlayerPawn_Athena_C_RestoreCharacterMats");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, bFullyCompleted) == 0x000000, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::bFullyCompleted' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CurrentReplacementIndex) == 0x000004, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CurrentReplacementIndex' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, Itr) == 0x000008, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::Itr' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, Temp_wildcard_Variable) == 0x000010, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, Temp_int_Array_Index_Variable) == 0x000024, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Array_Get_Item) == 0x000030, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_GetMaterials_ReturnValue) == 0x000048, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Less_IntInt_ReturnValue_1) == 0x000061, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Array_Length_ReturnValue_2) == 0x000064, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_RestoreCharacterMats, CallFunc_Add_IntInt_ReturnValue_3) == 0x000068, "Member 'PlayerPawn_Athena_C_RestoreCharacterMats::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Rimlight Setup
// 0x00A0 (0x00A0 - 0x0000)
struct PlayerPawn_Athena_C_Rimlight_Setup final
{
public:
	class FString                                 CVarName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNumericCVar_OutValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNumericCVar_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_2; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APhysicalRimlight_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Rim_Light_Intensity_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Rimlight_Setup) == 0x000010, "Wrong alignment on PlayerPawn_Athena_C_Rimlight_Setup");
static_assert(sizeof(PlayerPawn_Athena_C_Rimlight_Setup) == 0x0000A0, "Wrong size on PlayerPawn_Athena_C_Rimlight_Setup");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CVarName) == 0x000000, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CVarName' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue) == 0x000011, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_IsCosmeticObjectDisplayedInFrontendContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_GetNumericCVar_OutValue) == 0x000014, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_GetNumericCVar_OutValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_GetNumericCVar_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_GetNumericCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00001A, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x00001B, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_GetConsoleVariableBoolValue_ReturnValue_2) == 0x00001C, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_GetConsoleVariableBoolValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00001D, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00001E, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_IsValid_ReturnValue_1) == 0x00001F, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Rimlight_Setup, K2Node_VariableSet_Rim_Light_Intensity_ImplicitCast) == 0x000090, "Member 'PlayerPawn_Athena_C_Rimlight_Setup::K2Node_VariableSet_Rim_Light_Intensity_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SetMaterialRimlightIntensity
// 0x0040 (0x0040 - 0x0000)
struct PlayerPawn_Athena_C_SetMaterialRimlightIntensity final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshForPartType_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_SetMaterialRimlightIntensity");
static_assert(sizeof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity) == 0x000040, "Wrong size on PlayerPawn_Athena_C_SetMaterialRimlightIntensity");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, Multiplier) == 0x000000, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::Multiplier' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, Temp_int_Variable) == 0x000008, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, Temp_int_Variable_1) == 0x00000C, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_GetSkeletalMeshForPartType_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_GetSkeletalMeshForPartType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000028, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_MakeLiteralInt_ReturnValue) == 0x000030, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetMaterialRimlightIntensity, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000038, "Member 'PlayerPawn_Athena_C_SetMaterialRimlightIntensity::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SetPartyInProgress
// 0x0001 (0x0001 - 0x0000)
struct PlayerPawn_Athena_C_SetPartyInProgress final
{
public:
	bool                                          bIsPartyInProgress;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SetPartyInProgress) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_SetPartyInProgress");
static_assert(sizeof(PlayerPawn_Athena_C_SetPartyInProgress) == 0x000001, "Wrong size on PlayerPawn_Athena_C_SetPartyInProgress");
static_assert(offsetof(PlayerPawn_Athena_C_SetPartyInProgress, bIsPartyInProgress) == 0x000000, "Member 'PlayerPawn_Athena_C_SetPartyInProgress::bIsPartyInProgress' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SetPetHidden
// 0x0002 (0x0002 - 0x0000)
struct PlayerPawn_Athena_C_SetPetHidden final
{
public:
	bool                                          NewHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SetPetHidden) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_SetPetHidden");
static_assert(sizeof(PlayerPawn_Athena_C_SetPetHidden) == 0x000002, "Wrong size on PlayerPawn_Athena_C_SetPetHidden");
static_assert(offsetof(PlayerPawn_Athena_C_SetPetHidden, NewHidden) == 0x000000, "Member 'PlayerPawn_Athena_C_SetPetHidden::NewHidden' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetPetHidden, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PlayerPawn_Athena_C_SetPetHidden::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SetSafeZonePhaseAndGameplayCueTag
// 0x0008 (0x0008 - 0x0000)
struct PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag final
{
public:
	int32                                         InSafeZonePhase;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpawnGameplayCue;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag) == 0x000004, "Wrong alignment on PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag");
static_assert(sizeof(PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag) == 0x000008, "Wrong size on PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag");
static_assert(offsetof(PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag, InSafeZonePhase) == 0x000000, "Member 'PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag::InSafeZonePhase' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag, bSpawnGameplayCue) == 0x000004, "Member 'PlayerPawn_Athena_C_SetSafeZonePhaseAndGameplayCueTag::bSpawnGameplayCue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SetSafeZoneTagWhenChanged
// 0x000C (0x000C - 0x0000)
struct PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged final
{
public:
	int32                                         NewWhichSafeZoneTag;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GameplayTag;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpawnGameplayCue;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged) == 0x000004, "Wrong alignment on PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged");
static_assert(sizeof(PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged) == 0x00000C, "Wrong size on PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged");
static_assert(offsetof(PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged, NewWhichSafeZoneTag) == 0x000000, "Member 'PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged::NewWhichSafeZoneTag' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged, GameplayTag) == 0x000004, "Member 'PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged::GameplayTag' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged, bSpawnGameplayCue) == 0x000008, "Member 'PlayerPawn_Athena_C_SetSafeZoneTagWhenChanged::bSpawnGameplayCue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SetupDissolveFx
// 0x0028 (0x0028 - 0x0000)
struct PlayerPawn_Athena_C_SetupDissolveFx final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PawnIsNPC_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupDissolveFx_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SetupDissolveFx) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_SetupDissolveFx");
static_assert(sizeof(PlayerPawn_Athena_C_SetupDissolveFx) == 0x000028, "Wrong size on PlayerPawn_Athena_C_SetupDissolveFx");
static_assert(offsetof(PlayerPawn_Athena_C_SetupDissolveFx, Temp_bool_Variable) == 0x000000, "Member 'PlayerPawn_Athena_C_SetupDissolveFx::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetupDissolveFx, Temp_object_Variable) == 0x000008, "Member 'PlayerPawn_Athena_C_SetupDissolveFx::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetupDissolveFx, CallFunc_PawnIsNPC_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_SetupDissolveFx::CallFunc_PawnIsNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetupDissolveFx, K2Node_Select_Default) == 0x000018, "Member 'PlayerPawn_Athena_C_SetupDissolveFx::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SetupDissolveFx, CallFunc_SetupDissolveFx_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_SetupDissolveFx::CallFunc_SetupDissolveFx_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SpawnTeleportationLight
// 0x0090 (0x0090 - 0x0000)
struct PlayerPawn_Athena_C_SpawnTeleportationLight final
{
public:
	bool                                          CallFunc_PawnIsNPC_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SpawnTeleportationLight) == 0x000010, "Wrong alignment on PlayerPawn_Athena_C_SpawnTeleportationLight");
static_assert(sizeof(PlayerPawn_Athena_C_SpawnTeleportationLight) == 0x000090, "Wrong size on PlayerPawn_Athena_C_SpawnTeleportationLight");
static_assert(offsetof(PlayerPawn_Athena_C_SpawnTeleportationLight, CallFunc_PawnIsNPC_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_SpawnTeleportationLight::CallFunc_PawnIsNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SpawnTeleportationLight, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_SpawnTeleportationLight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SpawnTeleportationLight, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'PlayerPawn_Athena_C_SpawnTeleportationLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SpawnTeleportationLight, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'PlayerPawn_Athena_C_SpawnTeleportationLight::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SpawnTeleportationLight, CallFunc_IsMobilePlatform_ReturnValue) == 0x000080, "Member 'PlayerPawn_Athena_C_SpawnTeleportationLight::CallFunc_IsMobilePlatform_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.StopLoopingAudio
// 0x0002 (0x0002 - 0x0000)
struct PlayerPawn_Athena_C_StopLoopingAudio final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_StopLoopingAudio) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_StopLoopingAudio");
static_assert(sizeof(PlayerPawn_Athena_C_StopLoopingAudio) == 0x000002, "Wrong size on PlayerPawn_Athena_C_StopLoopingAudio");
static_assert(offsetof(PlayerPawn_Athena_C_StopLoopingAudio, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_StopLoopingAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_StopLoopingAudio, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'PlayerPawn_Athena_C_StopLoopingAudio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Swing_GetStartPoint
// 0x0088 (0x0088 - 0x0000)
struct PlayerPawn_Athena_C_Swing_GetStartPoint final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Swing_GetStartPoint) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Swing_GetStartPoint");
static_assert(sizeof(PlayerPawn_Athena_C_Swing_GetStartPoint) == 0x000088, "Wrong size on PlayerPawn_Athena_C_Swing_GetStartPoint");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, CallFunc_GetComponentBounds_Origin) == 0x000038, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, CallFunc_GetComponentBounds_BoxExtent) == 0x000050, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, CallFunc_GetComponentBounds_SphereRadius) == 0x000068, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swing_GetStartPoint, CallFunc_SelectVector_ReturnValue) == 0x000070, "Member 'PlayerPawn_Athena_C_Swing_GetStartPoint::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SwingAttached
// 0x0038 (0x0038 - 0x0000)
struct PlayerPawn_Athena_C_SwingAttached final
{
public:
	struct FVector                                AttachLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AttachedActor;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortControllerComponent_Swinging*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SwingAttached) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_SwingAttached");
static_assert(sizeof(PlayerPawn_Athena_C_SwingAttached) == 0x000038, "Wrong size on PlayerPawn_Athena_C_SwingAttached");
static_assert(offsetof(PlayerPawn_Athena_C_SwingAttached, AttachLocation) == 0x000000, "Member 'PlayerPawn_Athena_C_SwingAttached::AttachLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingAttached, AttachedActor) == 0x000018, "Member 'PlayerPawn_Athena_C_SwingAttached::AttachedActor' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingAttached, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_SwingAttached::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingAttached, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'PlayerPawn_Athena_C_SwingAttached::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingAttached, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PlayerPawn_Athena_C_SwingAttached::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SwingDetached
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_SwingDetached final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortControllerComponent_Swinging*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SwingDetached) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_SwingDetached");
static_assert(sizeof(PlayerPawn_Athena_C_SwingDetached) == 0x000018, "Wrong size on PlayerPawn_Athena_C_SwingDetached");
static_assert(offsetof(PlayerPawn_Athena_C_SwingDetached, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_SwingDetached::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingDetached, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_SwingDetached::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingDetached, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_SwingDetached::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Swinging_AttachLocation
// 0x0058 (0x0058 - 0x0000)
struct PlayerPawn_Athena_C_Swinging_AttachLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttachPointExists;                                 // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Swinging_AttachLocation) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Swinging_AttachLocation");
static_assert(sizeof(PlayerPawn_Athena_C_Swinging_AttachLocation) == 0x000058, "Wrong size on PlayerPawn_Athena_C_Swinging_AttachLocation");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_AttachLocation, Location) == 0x000000, "Member 'PlayerPawn_Athena_C_Swinging_AttachLocation::Location' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_AttachLocation, AttachPointExists) == 0x000018, "Member 'PlayerPawn_Athena_C_Swinging_AttachLocation::AttachPointExists' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_AttachLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'PlayerPawn_Athena_C_Swinging_AttachLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_AttachLocation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'PlayerPawn_Athena_C_Swinging_AttachLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_AttachLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'PlayerPawn_Athena_C_Swinging_AttachLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Swinging_CheckGrounded
// 0x0270 (0x0270 - 0x0000)
struct PlayerPawn_Athena_C_Swinging_CheckGrounded final
{
public:
	bool                                          Grounded_;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitNormal;                                         // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit;        // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue;   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Distance_ImplicitCast;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Swinging_CheckGrounded) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Swinging_CheckGrounded");
static_assert(sizeof(PlayerPawn_Athena_C_Swinging_CheckGrounded) == 0x000270, "Wrong size on PlayerPawn_Athena_C_Swinging_CheckGrounded");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, Grounded_) == 0x000000, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::Grounded_' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, HitNormal) == 0x000008, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::HitNormal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, Distance) == 0x000020, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::Distance' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, Temp_object_Variable) == 0x000028, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000050, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000054, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_SphereTraceSingleByProfile_OutHit) == 0x000090, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_SphereTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_SphereTraceSingleByProfile_ReturnValue) == 0x000178, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_SphereTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_bBlockingHit) == 0x000179, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017A, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D0, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_BoneName) == 0x000204, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_ElementIndex) == 0x00020C, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_FaceIndex) == 0x000210, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_TraceStart) == 0x000218, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_BreakHitResult_TraceEnd) == 0x000230, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_SelectVector_ReturnValue) == 0x000248, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, K2Node_FunctionResult_Distance_ImplicitCast) == 0x000260, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::K2Node_FunctionResult_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_CheckGrounded, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000268, "Member 'PlayerPawn_Athena_C_Swinging_CheckGrounded::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Swinging_SetJumpHeight
// 0x0018 (0x0018 - 0x0000)
struct PlayerPawn_Athena_C_Swinging_SetJumpHeight final
{
public:
	double                                        Jump_ZVelocity;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Swinging_SetJumpHeight) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Swinging_SetJumpHeight");
static_assert(sizeof(PlayerPawn_Athena_C_Swinging_SetJumpHeight) == 0x000018, "Wrong size on PlayerPawn_Athena_C_Swinging_SetJumpHeight");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_SetJumpHeight, Jump_ZVelocity) == 0x000000, "Member 'PlayerPawn_Athena_C_Swinging_SetJumpHeight::Jump_ZVelocity' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_SetJumpHeight, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000008, "Member 'PlayerPawn_Athena_C_Swinging_SetJumpHeight::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_SetJumpHeight, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PlayerPawn_Athena_C_Swinging_SetJumpHeight::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Swinging_StartReelingIn
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_Swinging_StartReelingIn final
{
public:
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Swinging_StartReelingIn) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Swinging_StartReelingIn");
static_assert(sizeof(PlayerPawn_Athena_C_Swinging_StartReelingIn) == 0x000010, "Wrong size on PlayerPawn_Athena_C_Swinging_StartReelingIn");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_StartReelingIn, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000000, "Member 'PlayerPawn_Athena_C_Swinging_StartReelingIn::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_StartReelingIn, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'PlayerPawn_Athena_C_Swinging_StartReelingIn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.Swinging_StopReelingIn
// 0x0010 (0x0010 - 0x0000)
struct PlayerPawn_Athena_C_Swinging_StopReelingIn final
{
public:
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_Swinging_StopReelingIn) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_Swinging_StopReelingIn");
static_assert(sizeof(PlayerPawn_Athena_C_Swinging_StopReelingIn) == 0x000010, "Wrong size on PlayerPawn_Athena_C_Swinging_StopReelingIn");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_StopReelingIn, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000000, "Member 'PlayerPawn_Athena_C_Swinging_StopReelingIn::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_Swinging_StopReelingIn, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'PlayerPawn_Athena_C_Swinging_StopReelingIn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.SwingingVectorToAttachPoint
// 0x0098 (0x0098 - 0x0000)
struct PlayerPawn_Athena_C_SwingingVectorToAttachPoint final
{
public:
	class FString                                 caller_ID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_SwingingVectorToAttachPoint");
static_assert(sizeof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint) == 0x000098, "Wrong size on PlayerPawn_Athena_C_SwingingVectorToAttachPoint");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, caller_ID) == 0x000000, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::caller_ID' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, CallFunc_GetComponentBounds_Origin) == 0x000028, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, CallFunc_GetComponentBounds_BoxExtent) == 0x000040, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, CallFunc_GetComponentBounds_SphereRadius) == 0x000058, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_SwingingVectorToAttachPoint, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'PlayerPawn_Athena_C_SwingingVectorToAttachPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.TeleportInNSeconds
// 0x0038 (0x0038 - 0x0000)
struct PlayerPawn_Athena_C_TeleportInNSeconds final
{
public:
	double                                        SecondsTillTeleport;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestLocation;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DestRotation;                                      // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerPawn_Athena_C_TeleportInNSeconds) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_TeleportInNSeconds");
static_assert(sizeof(PlayerPawn_Athena_C_TeleportInNSeconds) == 0x000038, "Wrong size on PlayerPawn_Athena_C_TeleportInNSeconds");
static_assert(offsetof(PlayerPawn_Athena_C_TeleportInNSeconds, SecondsTillTeleport) == 0x000000, "Member 'PlayerPawn_Athena_C_TeleportInNSeconds::SecondsTillTeleport' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_TeleportInNSeconds, DestLocation) == 0x000008, "Member 'PlayerPawn_Athena_C_TeleportInNSeconds::DestLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_TeleportInNSeconds, DestRotation) == 0x000020, "Member 'PlayerPawn_Athena_C_TeleportInNSeconds::DestRotation' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.UGC BindRimLightIntensityChange
// 0x0030 (0x0030 - 0x0000)
struct PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       CallFunc_AttemptGetPlayerStateForPawn_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpatialGameplayExperience_ReturnValue;  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange");
static_assert(sizeof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange) == 0x000030, "Wrong size on PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange, CallFunc_AttemptGetPlayerStateForPawn_ReturnValue) == 0x000010, "Member 'PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange::CallFunc_AttemptGetPlayerStateForPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000020, "Member 'PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange, CallFunc_IsSpatialGameplayExperience_ReturnValue) == 0x000029, "Member 'PlayerPawn_Athena_C_UGC_BindRimLightIntensityChange::CallFunc_IsSpatialGameplayExperience_ReturnValue' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.UGC InitRimlightIntensity
// 0x0028 (0x0028 - 0x0000)
struct PlayerPawn_Athena_C_UGC_InitRimlightIntensity final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevelWithContext_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpatialGameplayExperience_ReturnValue;  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Rim_Light_Intensity_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_UGC_InitRimlightIntensity");
static_assert(sizeof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity) == 0x000028, "Wrong size on PlayerPawn_Athena_C_UGC_InitRimlightIntensity");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_UGC_InitRimlightIntensity::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity, CallFunc_GetValueAtLevelWithContext_ReturnValue) == 0x000008, "Member 'PlayerPawn_Athena_C_UGC_InitRimlightIntensity::CallFunc_GetValueAtLevelWithContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000010, "Member 'PlayerPawn_Athena_C_UGC_InitRimlightIntensity::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerPawn_Athena_C_UGC_InitRimlightIntensity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity, CallFunc_IsSpatialGameplayExperience_ReturnValue) == 0x000019, "Member 'PlayerPawn_Athena_C_UGC_InitRimlightIntensity::CallFunc_IsSpatialGameplayExperience_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UGC_InitRimlightIntensity, K2Node_VariableSet_Rim_Light_Intensity_ImplicitCast) == 0x000020, "Member 'PlayerPawn_Athena_C_UGC_InitRimlightIntensity::K2Node_VariableSet_Rim_Light_Intensity_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.UpdateDissolveFx
// 0x0030 (0x0030 - 0x0000)
struct PlayerPawn_Athena_C_UpdateDissolveFx final
{
public:
	double                                        Scalar_Transition;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scalar_ZHeight;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scalar_LightIntensity;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDissolveFx_Transition_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDissolveFx_Transition_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDissolveFx_ZHeight_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDissolveFx_ZHeight_ImplicitCast_1;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDissolveFx_LightIntensity_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDissolveFx_LightIntensity_ImplicitCast_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_UpdateDissolveFx) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_UpdateDissolveFx");
static_assert(sizeof(PlayerPawn_Athena_C_UpdateDissolveFx) == 0x000030, "Wrong size on PlayerPawn_Athena_C_UpdateDissolveFx");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, Scalar_Transition) == 0x000000, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::Scalar_Transition' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, Scalar_ZHeight) == 0x000008, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::Scalar_ZHeight' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, Scalar_LightIntensity) == 0x000010, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::Scalar_LightIntensity' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, CallFunc_UpdateDissolveFx_Transition_ImplicitCast) == 0x000018, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::CallFunc_UpdateDissolveFx_Transition_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, CallFunc_UpdateDissolveFx_Transition_ImplicitCast_1) == 0x00001C, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::CallFunc_UpdateDissolveFx_Transition_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, CallFunc_UpdateDissolveFx_ZHeight_ImplicitCast) == 0x000020, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::CallFunc_UpdateDissolveFx_ZHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, CallFunc_UpdateDissolveFx_ZHeight_ImplicitCast_1) == 0x000024, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::CallFunc_UpdateDissolveFx_ZHeight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, CallFunc_UpdateDissolveFx_LightIntensity_ImplicitCast) == 0x000028, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::CallFunc_UpdateDissolveFx_LightIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateDissolveFx, CallFunc_UpdateDissolveFx_LightIntensity_ImplicitCast_1) == 0x00002C, "Member 'PlayerPawn_Athena_C_UpdateDissolveFx::CallFunc_UpdateDissolveFx_LightIntensity_ImplicitCast_1' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.UpdateRimlightIntensity
// 0x0006 (0x0006 - 0x0000)
struct PlayerPawn_Athena_C_UpdateRimlightIntensity final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_2; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_UpdateRimlightIntensity) == 0x000001, "Wrong alignment on PlayerPawn_Athena_C_UpdateRimlightIntensity");
static_assert(sizeof(PlayerPawn_Athena_C_UpdateRimlightIntensity) == 0x000006, "Wrong size on PlayerPawn_Athena_C_UpdateRimlightIntensity");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateRimlightIntensity, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PlayerPawn_Athena_C_UpdateRimlightIntensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateRimlightIntensity, CallFunc_IsLocallyControlled_ReturnValue) == 0x000001, "Member 'PlayerPawn_Athena_C_UpdateRimlightIntensity::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateRimlightIntensity, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000002, "Member 'PlayerPawn_Athena_C_UpdateRimlightIntensity::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateRimlightIntensity, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000003, "Member 'PlayerPawn_Athena_C_UpdateRimlightIntensity::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateRimlightIntensity, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000004, "Member 'PlayerPawn_Athena_C_UpdateRimlightIntensity::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UpdateRimlightIntensity, CallFunc_GetConsoleVariableBoolValue_ReturnValue_2) == 0x000005, "Member 'PlayerPawn_Athena_C_UpdateRimlightIntensity::CallFunc_GetConsoleVariableBoolValue_ReturnValue_2' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.UserConstructionScript
// 0x0100 (0x0100 - 0x0000)
struct PlayerPawn_Athena_C_UserConstructionScript final
{
public:
	struct FFortPlayerPawnStats                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x00E0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_PlayerAttributes_Speed_Walk_ImplicitCast; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_PlayerAttributes_Speed_Run_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_PlayerAttributes_Speed_Sprint_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_UserConstructionScript) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_UserConstructionScript");
static_assert(sizeof(PlayerPawn_Athena_C_UserConstructionScript) == 0x000100, "Wrong size on PlayerPawn_Athena_C_UserConstructionScript");
static_assert(offsetof(PlayerPawn_Athena_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'PlayerPawn_Athena_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'PlayerPawn_Athena_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UserConstructionScript, K2Node_VariableSet_PlayerAttributes_Speed_Walk_ImplicitCast) == 0x0000E8, "Member 'PlayerPawn_Athena_C_UserConstructionScript::K2Node_VariableSet_PlayerAttributes_Speed_Walk_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UserConstructionScript, K2Node_VariableSet_PlayerAttributes_Speed_Run_ImplicitCast) == 0x0000F0, "Member 'PlayerPawn_Athena_C_UserConstructionScript::K2Node_VariableSet_PlayerAttributes_Speed_Run_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_UserConstructionScript, K2Node_VariableSet_PlayerAttributes_Speed_Sprint_ImplicitCast) == 0x0000F8, "Member 'PlayerPawn_Athena_C_UserConstructionScript::K2Node_VariableSet_PlayerAttributes_Speed_Sprint_ImplicitCast' has a wrong offset!");

// Function PlayerPawn_Athena.PlayerPawn_Athena_C.WhiteoutAndTeleport
// 0x0040 (0x0040 - 0x0000)
struct PlayerPawn_Athena_C_WhiteoutAndTeleport final
{
public:
	struct FVector                                DestLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DestRotation;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Instant;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Gravity;                                           // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPawn_Athena_C_WhiteoutAndTeleport) == 0x000008, "Wrong alignment on PlayerPawn_Athena_C_WhiteoutAndTeleport");
static_assert(sizeof(PlayerPawn_Athena_C_WhiteoutAndTeleport) == 0x000040, "Wrong size on PlayerPawn_Athena_C_WhiteoutAndTeleport");
static_assert(offsetof(PlayerPawn_Athena_C_WhiteoutAndTeleport, DestLocation) == 0x000000, "Member 'PlayerPawn_Athena_C_WhiteoutAndTeleport::DestLocation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_WhiteoutAndTeleport, DestRotation) == 0x000018, "Member 'PlayerPawn_Athena_C_WhiteoutAndTeleport::DestRotation' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_WhiteoutAndTeleport, Instant) == 0x000030, "Member 'PlayerPawn_Athena_C_WhiteoutAndTeleport::Instant' has a wrong offset!");
static_assert(offsetof(PlayerPawn_Athena_C_WhiteoutAndTeleport, Gravity) == 0x000038, "Member 'PlayerPawn_Athena_C_WhiteoutAndTeleport::Gravity' has a wrong offset!");

}

