#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Throbber_Base

#include "Basic.hpp"

#include "E_UI_ThrobberType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_UI_ThrobberSize_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Throbber_Base.WBP_UIKit_Throbber_Base_C.ExecuteUbergraph_WBP_UIKit_Throbber_Base
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base) == 0x000004, "Wrong alignment on WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base");
static_assert(sizeof(WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base) == 0x000008, "Wrong size on WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_Throbber_Base_C_ExecuteUbergraph_WBP_UIKit_Throbber_Base::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Throbber_Base.WBP_UIKit_Throbber_Base_C.InitializeStyle
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_Throbber_Base_C_InitializeStyle final
{
public:
	E_UI_ThrobberType                             StyleType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_ThrobberType                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Throbber_Base_C_InitializeStyle) == 0x000008, "Wrong alignment on WBP_UIKit_Throbber_Base_C_InitializeStyle");
static_assert(sizeof(WBP_UIKit_Throbber_Base_C_InitializeStyle) == 0x000018, "Wrong size on WBP_UIKit_Throbber_Base_C_InitializeStyle");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_InitializeStyle, StyleType) == 0x000000, "Member 'WBP_UIKit_Throbber_Base_C_InitializeStyle::StyleType' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_InitializeStyle, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_Throbber_Base_C_InitializeStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_InitializeStyle, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Throbber_Base_C_InitializeStyle::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_InitializeStyle, K2Node_Select_Default) == 0x000010, "Member 'WBP_UIKit_Throbber_Base_C_InitializeStyle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_Throbber_Base.WBP_UIKit_Throbber_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Throbber_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Throbber_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_Throbber_Base_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_Throbber_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_Throbber_Base_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_Throbber_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Throbber_Base.WBP_UIKit_Throbber_Base_C.SetBackgroundVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility final
{
public:
	bool                                          ShowBackground;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility) == 0x000004, "Wrong alignment on WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility");
static_assert(sizeof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility) == 0x000010, "Wrong size on WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility, ShowBackground) == 0x000000, "Member 'WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility::ShowBackground' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility, Temp_real_Variable) == 0x000004, "Member 'WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility, Temp_real_Variable_1) == 0x000008, "Member 'WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility, K2Node_Select_Default) == 0x00000C, "Member 'WBP_UIKit_Throbber_Base_C_SetBackgroundVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_Throbber_Base.WBP_UIKit_Throbber_Base_C.SetThrobberSize
// 0x0160 (0x0160 - 0x0000)
struct WBP_UIKit_Throbber_Base_C_SetThrobberSize final
{
public:
	E_UI_ThrobberSize                             Size;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_ThrobberSize                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_ThrobberSize                             Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_ThrobberSize                             Temp_byte_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_Select_Default_2;                           // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0080(0x00C0)()
	struct FDeprecateSlateVector2D                K2Node_Select_NewEnumerator2_ImplicitCast;         // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Throbber_Base_C_SetThrobberSize) == 0x000010, "Wrong alignment on WBP_UIKit_Throbber_Base_C_SetThrobberSize");
static_assert(sizeof(WBP_UIKit_Throbber_Base_C_SetThrobberSize) == 0x000160, "Wrong size on WBP_UIKit_Throbber_Base_C_SetThrobberSize");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Size) == 0x000000, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_real_Variable) == 0x000004, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_real_Variable_1) == 0x000008, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_real_Variable_2) == 0x00000C, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_byte_Variable_1) == 0x000010, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_real_Variable_3) == 0x000014, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_real_Variable_4) == 0x000018, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_real_Variable_5) == 0x00001C, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, Temp_byte_Variable_2) == 0x000020, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_Select_Default) == 0x000024, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_Select_Default_1) == 0x000028, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000050, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x000058, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, CallFunc_MakeVector2D_ReturnValue_2) == 0x000068, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_Select_Default_2) == 0x000078, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_MakeStruct_SlateBrush) == 0x000080, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_Select_NewEnumerator2_ImplicitCast) == 0x000140, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_Select_NewEnumerator2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x000148, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Throbber_Base_C_SetThrobberSize, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x000150, "Member 'WBP_UIKit_Throbber_Base_C_SetThrobberSize::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");

}

