#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksMusicPlayspaceRuntime

#include "Basic.hpp"

#include "SparksMusicPlayspaceRuntime_classes.hpp"
#include "SparksMusicPlayspaceRuntime_parameters.hpp"


namespace SDK
{

// Function SparksMusicPlayspaceRuntime.PlayspaceComponent_LipSyncAssetManager.TryGetLipSyncAnimAssetForPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UAnimSequence>     ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UAnimSequence> UPlayspaceComponent_LipSyncAssetManager::TryGetLipSyncAnimAssetForPlayer(const class APlayerState* PlayerState) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetLipSyncAnimAssetForPlayer");

	Params::PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.PlayspaceComponent_SparksPerfMem.StartTrackingServerPerf
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSparksServerPerfMemSettings     Settings                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayspaceComponent_SparksPerfMem::StartTrackingServerPerf(const struct FSparksServerPerfMemSettings& Settings)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartTrackingServerPerf");

	Params::PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.PlayspaceComponent_SparksPerfMem.StopTrackingServerPerf
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPlayspaceComponent_SparksPerfMem::StopTrackingServerPerf()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopTrackingServerPerf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.EnteredSparksMusicPlayspace
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISparksMusicPlayspaceInteractorInterface::EnteredSparksMusicPlayspace(class ASparksMusicPlayspace* Playspace)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnteredSparksMusicPlayspace");

	Params::SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace Parms{};

	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.ExitedSparksMusicPlayspace
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISparksMusicPlayspaceInteractorInterface::ExitedSparksMusicPlayspace(class ASparksMusicPlayspace* Playspace)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExitedSparksMusicPlayspace");

	Params::SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace Parms{};

	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.AllowedToEnterMusicPlayspace
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISparksMusicPlayspaceInteractorInterface::AllowedToEnterMusicPlayspace(class ASparksMusicPlayspace* Playspace) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AllowedToEnterMusicPlayspace");

	Params::SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace Parms{};

	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.DoesSparksMusicPlayspaceInteratorHaveTag
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISparksMusicPlayspaceInteractorInterface::DoesSparksMusicPlayspaceInteratorHaveTag(const struct FGameplayTag& tag) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoesSparksMusicPlayspaceInteratorHaveTag");

	Params::SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag Parms{};

	Parms.tag = std::move(tag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.IsSparksMusicPlayerPlaying
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISparksMusicPlayerInterface::IsSparksMusicPlayerPlaying() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSparksMusicPlayerPlaying");

	Params::SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.IsSparksMusicPlayerPlayingWithKey
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISparksMusicPlayerInterface::IsSparksMusicPlayerPlayingWithKey() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSparksMusicPlayerPlayingWithKey");

	Params::SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.ShouldAutoRegister
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISparksMusicPlayerInterface::ShouldAutoRegister() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldAutoRegister");

	Params::SparksMusicPlayerInterface_ShouldAutoRegister Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.SparksMusicPlayerAddedToMusicPlayspace
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISparksMusicPlayerInterface::SparksMusicPlayerAddedToMusicPlayspace(class ASparksMusicPlayspace* Playspace) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SparksMusicPlayerAddedToMusicPlayspace");

	Params::SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace Parms{};

	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.SparksMusicPlayerRemovedFromMusicPlayspace
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISparksMusicPlayerInterface::SparksMusicPlayerRemovedFromMusicPlayspace(class ASparksMusicPlayspace* Playspace) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SparksMusicPlayerRemovedFromMusicPlayspace");

	Params::SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace Parms{};

	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetSparksMusicPlayspaceOfClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class ASparksMusicPlayspace>PlayspaceType                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchChildTypes                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASparksMusicPlayspace*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASparksMusicPlayspace* ASparksMusicPlayspace::GetSparksMusicPlayspaceOfClass(TSubclassOf<class ASparksMusicPlayspace> PlayspaceType, const class UObject* WorldContextObject, class AActor* Actor, bool bMatchChildTypes)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetSparksMusicPlayspaceOfClass");

	Params::SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass Parms{};

	Parms.PlayspaceType = PlayspaceType;
	Parms.WorldContextObject = WorldContextObject;
	Parms.Actor = Actor;
	Parms.bMatchChildTypes = bMatchChildTypes;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetSparksMusicPlayspaceOfClassByLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class ASparksMusicPlayspace>PlayspaceType                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchChildTypes                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASparksMusicPlayspace*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASparksMusicPlayspace* ASparksMusicPlayspace::GetSparksMusicPlayspaceOfClassByLocation(TSubclassOf<class ASparksMusicPlayspace> PlayspaceType, const class UObject* WorldContextObject, struct FVector* Location, bool bMatchChildTypes)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetSparksMusicPlayspaceOfClassByLocation");

	Params::SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation Parms{};

	Parms.PlayspaceType = PlayspaceType;
	Parms.WorldContextObject = WorldContextObject;
	Parms.bMatchChildTypes = bMatchChildTypes;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.AddInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ForActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::AddInteractor(class UObject* Interactor, class AActor* ForActor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddInteractor");

	Params::SparksMusicPlayspace_AddInteractor Parms{};

	Parms.Interactor = Interactor;
	Parms.ForActor = ForActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.AddMusicPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ForActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::AddMusicPlayer(class UObject* Interactor, class AActor* ForActor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMusicPlayer");

	Params::SparksMusicPlayspace_AddMusicPlayer Parms{};

	Parms.Interactor = Interactor;
	Parms.ForActor = ForActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BPEvent_OnIntialized
// (Event, Public, BlueprintEvent)

void ASparksMusicPlayspace::BPEvent_OnIntialized()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BPEvent_OnIntialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BPEvent_OnUserAdded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPlayspaceUser                   User                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class APlayerState*                     PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASparksMusicPlayspace::BPEvent_OnUserAdded(const struct FPlayspaceUser& User, const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BPEvent_OnUserAdded");

	Params::SparksMusicPlayspace_BPEvent_OnUserAdded Parms{};

	Parms.User = std::move(User);
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BPEvent_OnUserRemoved
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPlayspaceUser                   User                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class APlayerState*                     PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASparksMusicPlayspace::BPEvent_OnUserRemoved(const struct FPlayspaceUser& User, const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BPEvent_OnUserRemoved");

	Params::SparksMusicPlayspace_BPEvent_OnUserRemoved Parms{};

	Parms.User = std::move(User);
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.OnBeatEvent
// (Native, Protected)
// Parameters:
// int32                                   BeatNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BeatInBar                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASparksMusicPlayspace::OnBeatEvent(int32 BeatNumber, int32 BeatInBar)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBeatEvent");

	Params::SparksMusicPlayspace_OnBeatEvent Parms{};

	Parms.BeatNumber = BeatNumber;
	Parms.BeatInBar = BeatInBar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.OnMeasureEvent
// (Native, Protected)
// Parameters:
// int32                                   MeasureNumber                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASparksMusicPlayspace::OnMeasureEvent(int32 MeasureNumber)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMeasureEvent");

	Params::SparksMusicPlayspace_OnMeasureEvent Parms{};

	Parms.MeasureNumber = MeasureNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.RemoveInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ForActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::RemoveInteractor(class UObject* Interactor, class AActor* ForActor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveInteractor");

	Params::SparksMusicPlayspace_RemoveInteractor Parms{};

	Parms.Interactor = Interactor;
	Parms.ForActor = ForActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.RemoveMusicPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          MusicPlayer                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ForActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::RemoveMusicPlayer(class UObject* MusicPlayer, class AActor* ForActor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveMusicPlayer");

	Params::SparksMusicPlayspace_RemoveMusicPlayer Parms{};

	Parms.MusicPlayer = MusicPlayer;
	Parms.ForActor = ForActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BP_GetAllPlayerStates
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APlayerState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerState*> ASparksMusicPlayspace::BP_GetAllPlayerStates() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_GetAllPlayerStates");

	Params::SparksMusicPlayspace_BP_GetAllPlayerStates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BP_GetOwnedEventRouter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* ASparksMusicPlayspace::BP_GetOwnedEventRouter() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_GetOwnedEventRouter");

	Params::SparksMusicPlayspace_BP_GetOwnedEventRouter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.DoesPlayerHaveInstrument
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESparksInstrumentType                   InstrumentType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::DoesPlayerHaveInstrument(const class APlayerState* PlayerState, const ESparksInstrumentType InstrumentType) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoesPlayerHaveInstrument");

	Params::SparksMusicPlayspace_DoesPlayerHaveInstrument Parms{};

	Parms.PlayerState = PlayerState;
	Parms.InstrumentType = InstrumentType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetAllPlayerControllers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AController*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AController*> ASparksMusicPlayspace::GetAllPlayerControllers() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAllPlayerControllers");

	Params::SparksMusicPlayspace_GetAllPlayerControllers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetAllPlayerPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APawn*>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APawn*> ASparksMusicPlayspace::GetAllPlayerPawns() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAllPlayerPawns");

	Params::SparksMusicPlayspace_GetAllPlayerPawns Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetMusicPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> ASparksMusicPlayspace::GetMusicPlayers() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicPlayers");

	Params::SparksMusicPlayspace_GetMusicPlayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.IsAnyMusicPlaying
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::IsAnyMusicPlaying() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsAnyMusicPlaying");

	Params::SparksMusicPlayspace_IsAnyMusicPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.IsAnyMusicPlayingWithKey
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::IsAnyMusicPlayingWithKey() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsAnyMusicPlayingWithKey");

	Params::SparksMusicPlayspace_IsAnyMusicPlayingWithKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.TryGetMidiEventDriverForPlayerState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IMidiEventDriverInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IMidiEventDriverInterface> ASparksMusicPlayspace::TryGetMidiEventDriverForPlayerState(const class APlayerState* PlayerState) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetMidiEventDriverForPlayerState");

	Params::SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.TryGetMidiEventDrivers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TScriptInterface<class IMidiEventDriverInterface>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TScriptInterface<class IMidiEventDriverInterface>> ASparksMusicPlayspace::TryGetMidiEventDrivers() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetMidiEventDrivers");

	Params::SparksMusicPlayspace_TryGetMidiEventDrivers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.TryGetMusicKeyAndMode
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicKey                               OutMusicKey                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMusicKeyMode                           OutMusicKeyMode                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASparksMusicPlayspace::TryGetMusicKeyAndMode(EMusicKey* OutMusicKey, EMusicKeyMode* OutMusicKeyMode) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TryGetMusicKeyAndMode");

	Params::SparksMusicPlayspace_TryGetMusicKeyAndMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMusicKey != nullptr)
		*OutMusicKey = Parms.OutMusicKey;

	if (OutMusicKeyMode != nullptr)
		*OutMusicKeyMode = Parms.OutMusicKeyMode;

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.OnRep_OnKeyChanged
// (Final, Native, Protected)

void USparksMusicPlayspaceAudioState::OnRep_OnKeyChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_OnKeyChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.OnRep_OnModeChanged
// (Final, Native, Protected)

void USparksMusicPlayspaceAudioState::OnRep_OnModeChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_OnModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.OnRep_OnTempoChanged
// (Final, Native, Protected)

void USparksMusicPlayspaceAudioState::OnRep_OnTempoChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_OnTempoChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.TriggerKeyChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMusicKey                               InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMusicPlayspaceAudioState::TriggerKeyChange(EMusicKey InKey)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TriggerKeyChange");

	Params::SparksMusicPlayspaceAudioState_TriggerKeyChange Parms{};

	Parms.InKey = InKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.TriggerModeChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMusicKeyMode                           InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMusicPlayspaceAudioState::TriggerModeChange(EMusicKeyMode InMode)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TriggerModeChange");

	Params::SparksMusicPlayspaceAudioState_TriggerModeChange Parms{};

	Parms.InMode = InMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.TriggerTempoChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   BPM                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMusicPlayspaceAudioState::TriggerTempoChange(int32 BPM)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TriggerTempoChange");

	Params::SparksMusicPlayspaceAudioState_TriggerTempoChange Parms{};

	Parms.BPM = BPM;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentAudioState
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicKey                               OutKey                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMusicKeyMode                           OutKeyMode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTempo                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMusicPlayspaceAudioState::GetCurrentAudioState(EMusicKey* OutKey, EMusicKeyMode* OutKeyMode, int32* OutTempo) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentAudioState");

	Params::SparksMusicPlayspaceAudioState_GetCurrentAudioState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutKey != nullptr)
		*OutKey = Parms.OutKey;

	if (OutKeyMode != nullptr)
		*OutKeyMode = Parms.OutKeyMode;

	if (OutTempo != nullptr)
		*OutTempo = Parms.OutTempo;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicKey                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMusicKey USparksMusicPlayspaceAudioState::GetCurrentKey() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentKey");

	Params::SparksMusicPlayspaceAudioState_GetCurrentKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentKeyMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicKeyMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMusicKeyMode USparksMusicPlayspaceAudioState::GetCurrentKeyMode() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentKeyMode");

	Params::SparksMusicPlayspaceAudioState_GetCurrentKeyMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentTempo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USparksMusicPlayspaceAudioState::GetCurrentTempo() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentTempo");

	Params::SparksMusicPlayspaceAudioState_GetCurrentTempo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

