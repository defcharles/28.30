#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoiceRep

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "VoiceRep_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class VoiceRep.FortVoiceReportIntroModal
// 0x0010 (0x0410 - 0x0400)
class UFortVoiceReportIntroModal : public UCommonActivatableWidget
{
public:
	class UCommonTextBlock*                       Text_VoiceReportingTitle;                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleLearnMore();
	void HandleTurnOffClicked();
	void HandleTurnOnClicked();
	void UpdateVisuals(const EUFortVoiceReportIntroModalType DescriptionType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortVoiceReportIntroModal">();
	}
	static class UFortVoiceReportIntroModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortVoiceReportIntroModal>();
	}
};
static_assert(alignof(UFortVoiceReportIntroModal) == 0x000008, "Wrong alignment on UFortVoiceReportIntroModal");
static_assert(sizeof(UFortVoiceReportIntroModal) == 0x000410, "Wrong size on UFortVoiceReportIntroModal");
static_assert(offsetof(UFortVoiceReportIntroModal, Text_VoiceReportingTitle) == 0x000400, "Member 'UFortVoiceReportIntroModal::Text_VoiceReportingTitle' has a wrong offset!");

// Class VoiceRep.VoiceRepTooltipBase
// 0x0008 (0x0468 - 0x0460)
class UVoiceRepTooltipBase final : public UFortSidebarOnboardTooltipWidget
{
public:
	int32                                         AutoDismissTimerInterval;                          // 0x0460(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoiceRepTooltipBase">();
	}
	static class UVoiceRepTooltipBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceRepTooltipBase>();
	}
};
static_assert(alignof(UVoiceRepTooltipBase) == 0x000008, "Wrong alignment on UVoiceRepTooltipBase");
static_assert(sizeof(UVoiceRepTooltipBase) == 0x000468, "Wrong size on UVoiceRepTooltipBase");
static_assert(offsetof(UVoiceRepTooltipBase, AutoDismissTimerInterval) == 0x000460, "Member 'UVoiceRepTooltipBase::AutoDismissTimerInterval' has a wrong offset!");

// Class VoiceRep.VoiceRepDataAsset
// 0x0020 (0x0050 - 0x0030)
class UVoiceRepDataAsset final : public UDataAsset
{
public:
	TSubclassOf<class UWidget>                    VoiceChatTooltipWidgetClass;                       // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWidget>                    FirstOnboardingWidgetClass;                        // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWidget>                    SecondOnboardingWidgetClass;                       // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWidget>                    ReportVoiceWidgetClass;                            // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoiceRepDataAsset">();
	}
	static class UVoiceRepDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceRepDataAsset>();
	}
};
static_assert(alignof(UVoiceRepDataAsset) == 0x000008, "Wrong alignment on UVoiceRepDataAsset");
static_assert(sizeof(UVoiceRepDataAsset) == 0x000050, "Wrong size on UVoiceRepDataAsset");
static_assert(offsetof(UVoiceRepDataAsset, VoiceChatTooltipWidgetClass) == 0x000030, "Member 'UVoiceRepDataAsset::VoiceChatTooltipWidgetClass' has a wrong offset!");
static_assert(offsetof(UVoiceRepDataAsset, FirstOnboardingWidgetClass) == 0x000038, "Member 'UVoiceRepDataAsset::FirstOnboardingWidgetClass' has a wrong offset!");
static_assert(offsetof(UVoiceRepDataAsset, SecondOnboardingWidgetClass) == 0x000040, "Member 'UVoiceRepDataAsset::SecondOnboardingWidgetClass' has a wrong offset!");
static_assert(offsetof(UVoiceRepDataAsset, ReportVoiceWidgetClass) == 0x000048, "Member 'UVoiceRepDataAsset::ReportVoiceWidgetClass' has a wrong offset!");

}

