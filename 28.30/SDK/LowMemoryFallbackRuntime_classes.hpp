#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LowMemoryFallbackRuntime

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "LowMemoryFallbackRuntime_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class LowMemoryFallbackRuntime.LowMemoryFallbackStrategy
// 0x0010 (0x0038 - 0x0028)
class ULowMemoryFallbackStrategy : public UObject
{
public:
	class FString                                 FriendlyNameForAnalytics;                          // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowMemoryFallbackStrategy">();
	}
	static class ULowMemoryFallbackStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowMemoryFallbackStrategy>();
	}
};
static_assert(alignof(ULowMemoryFallbackStrategy) == 0x000008, "Wrong alignment on ULowMemoryFallbackStrategy");
static_assert(sizeof(ULowMemoryFallbackStrategy) == 0x000038, "Wrong size on ULowMemoryFallbackStrategy");
static_assert(offsetof(ULowMemoryFallbackStrategy, FriendlyNameForAnalytics) == 0x000028, "Member 'ULowMemoryFallbackStrategy::FriendlyNameForAnalytics' has a wrong offset!");

// Class LowMemoryFallbackRuntime.BootToFrontend_LowMemoryFallbackStrategy
// 0x0018 (0x0050 - 0x0038)
class UBootToFrontend_LowMemoryFallbackStrategy final : public ULowMemoryFallbackStrategy
{
public:
	class FText                                   Message;                                           // 0x0038(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BootToFrontend_LowMemoryFallbackStrategy">();
	}
	static class UBootToFrontend_LowMemoryFallbackStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBootToFrontend_LowMemoryFallbackStrategy>();
	}
};
static_assert(alignof(UBootToFrontend_LowMemoryFallbackStrategy) == 0x000008, "Wrong alignment on UBootToFrontend_LowMemoryFallbackStrategy");
static_assert(sizeof(UBootToFrontend_LowMemoryFallbackStrategy) == 0x000050, "Wrong size on UBootToFrontend_LowMemoryFallbackStrategy");
static_assert(offsetof(UBootToFrontend_LowMemoryFallbackStrategy, Message) == 0x000038, "Member 'UBootToFrontend_LowMemoryFallbackStrategy::Message' has a wrong offset!");

// Class LowMemoryFallbackRuntime.LowMemoryFallbackWorldSubsystem
// 0x00E0 (0x0110 - 0x0030)
class ULowMemoryFallbackWorldSubsystem : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x90];                                      // 0x0030(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PluginName;                                        // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FLowMemoryFallbackThreshold>    Thresholds;                                        // 0x00D0(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FLowMemoryFallbackThresholdState> ThresholdStates;                                   // 0x00E0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0x20];                                      // 0x00F0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowMemoryFallbackWorldSubsystem">();
	}
	static class ULowMemoryFallbackWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowMemoryFallbackWorldSubsystem>();
	}
};
static_assert(alignof(ULowMemoryFallbackWorldSubsystem) == 0x000008, "Wrong alignment on ULowMemoryFallbackWorldSubsystem");
static_assert(sizeof(ULowMemoryFallbackWorldSubsystem) == 0x000110, "Wrong size on ULowMemoryFallbackWorldSubsystem");
static_assert(offsetof(ULowMemoryFallbackWorldSubsystem, PluginName) == 0x0000C0, "Member 'ULowMemoryFallbackWorldSubsystem::PluginName' has a wrong offset!");
static_assert(offsetof(ULowMemoryFallbackWorldSubsystem, Thresholds) == 0x0000D0, "Member 'ULowMemoryFallbackWorldSubsystem::Thresholds' has a wrong offset!");
static_assert(offsetof(ULowMemoryFallbackWorldSubsystem, ThresholdStates) == 0x0000E0, "Member 'ULowMemoryFallbackWorldSubsystem::ThresholdStates' has a wrong offset!");

// Class LowMemoryFallbackRuntime.Toast_LowMemoryFallbackStrategy
// 0x0050 (0x0088 - 0x0038)
class UToast_LowMemoryFallbackStrategy final : public ULowMemoryFallbackStrategy
{
public:
	class FText                                   ToastTitle;                                        // 0x0038(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   ToastDescription;                                  // 0x0050(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 ToastIcon;                                         // 0x0068(0x0020)(Edit, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Toast_LowMemoryFallbackStrategy">();
	}
	static class UToast_LowMemoryFallbackStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToast_LowMemoryFallbackStrategy>();
	}
};
static_assert(alignof(UToast_LowMemoryFallbackStrategy) == 0x000008, "Wrong alignment on UToast_LowMemoryFallbackStrategy");
static_assert(sizeof(UToast_LowMemoryFallbackStrategy) == 0x000088, "Wrong size on UToast_LowMemoryFallbackStrategy");
static_assert(offsetof(UToast_LowMemoryFallbackStrategy, ToastTitle) == 0x000038, "Member 'UToast_LowMemoryFallbackStrategy::ToastTitle' has a wrong offset!");
static_assert(offsetof(UToast_LowMemoryFallbackStrategy, ToastDescription) == 0x000050, "Member 'UToast_LowMemoryFallbackStrategy::ToastDescription' has a wrong offset!");
static_assert(offsetof(UToast_LowMemoryFallbackStrategy, ToastIcon) == 0x000068, "Member 'UToast_LowMemoryFallbackStrategy::ToastIcon' has a wrong offset!");

}

