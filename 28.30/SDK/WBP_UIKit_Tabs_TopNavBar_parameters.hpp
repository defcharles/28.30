#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Tabs_TopNavBar

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Tabs_TopNavBar.WBP_UIKit_Tabs_TopNavBar_C.DetermineDividerPositionThenSetTabsData
// 0x0048 (0x0048 - 0x0000)
struct WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData final
{
public:
	TArray<class UUIKitTabGroupButtonViewModel*>  InTabsData;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIKitSelectableButtonViewModel*        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortTabViewModel*                      K2Node_DynamicCast_AsFort_Tab_Viewmodel;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortTopBarTabButtonGroup                     CallFunc_GetButtonGroup_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeature                                CallFunc_GetLinkedUIFeature_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData) == 0x000008, "Wrong alignment on WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData");
static_assert(sizeof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData) == 0x000048, "Wrong size on WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, InTabsData) == 0x000000, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::InTabsData' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, K2Node_DynamicCast_AsFort_Tab_Viewmodel) == 0x000020, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::K2Node_DynamicCast_AsFort_Tab_Viewmodel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_GetButtonGroup_ReturnValue) == 0x000030, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_GetButtonGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_GetLinkedUIFeature_ReturnValue) == 0x000031, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_GetLinkedUIFeature_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_GetEnumeratorName_ReturnValue) == 0x000034, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x000038, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_UIKit_Tabs_TopNavBar_C_DetermineDividerPositionThenSetTabsData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Tabs_TopNavBar.WBP_UIKit_Tabs_TopNavBar_C.ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar) == 0x000004, "Wrong alignment on WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar");
static_assert(sizeof(WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar) == 0x000008, "Wrong size on WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_Tabs_TopNavBar_C_ExecuteUbergraph_WBP_UIKit_Tabs_TopNavBar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Tabs_TopNavBar.WBP_UIKit_Tabs_TopNavBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Tabs_TopNavBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Tabs_TopNavBar_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_Tabs_TopNavBar_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_Tabs_TopNavBar_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_Tabs_TopNavBar_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_Tabs_TopNavBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_Tabs_TopNavBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

