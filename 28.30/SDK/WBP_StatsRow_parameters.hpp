#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatsRow

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_StatsRow.WBP_StatsRow_C.ApplyBlocksTemplates
// 0x0040 (0x0040 - 0x0000)
struct WBP_StatsRow_C_ApplyBlocksTemplates final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item_2;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatsRow_C_ApplyBlocksTemplates) == 0x000008, "Wrong alignment on WBP_StatsRow_C_ApplyBlocksTemplates");
static_assert(sizeof(WBP_StatsRow_C_ApplyBlocksTemplates) == 0x000040, "Wrong size on WBP_StatsRow_C_ApplyBlocksTemplates");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_Array_Length_ReturnValue_1) == 0x000004, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_Array_Length_ReturnValue_2) == 0x00000C, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000018, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_Array_Get_Item_2) == 0x000030, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ApplyBlocksTemplates, CallFunc_BooleanAND_ReturnValue_1) == 0x000038, "Member 'WBP_StatsRow_C_ApplyBlocksTemplates::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_StatsRow.WBP_StatsRow_C.ExecuteUbergraph_WBP_StatsRow
// 0x0008 (0x0008 - 0x0000)
struct WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow) == 0x000004, "Wrong alignment on WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow");
static_assert(sizeof(WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow) == 0x000008, "Wrong size on WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow");
static_assert(offsetof(WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow, EntryPoint) == 0x000000, "Member 'WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_StatsRow_C_ExecuteUbergraph_WBP_StatsRow::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_StatsRow.WBP_StatsRow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_StatsRow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatsRow_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_StatsRow_C_PreConstruct");
static_assert(sizeof(WBP_StatsRow_C_PreConstruct) == 0x000001, "Wrong size on WBP_StatsRow_C_PreConstruct");
static_assert(offsetof(WBP_StatsRow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_StatsRow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_StatsRow.WBP_StatsRow_C.SetBlocksData
// 0x0048 (0x0048 - 0x0000)
struct WBP_StatsRow_C_SetBlocksData final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ValueText;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   RatioText;                                         // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatsBlock_C*                      K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatsRow_C_SetBlocksData) == 0x000008, "Wrong alignment on WBP_StatsRow_C_SetBlocksData");
static_assert(sizeof(WBP_StatsRow_C_SetBlocksData) == 0x000048, "Wrong size on WBP_StatsRow_C_SetBlocksData");
static_assert(offsetof(WBP_StatsRow_C_SetBlocksData, Index_0) == 0x000000, "Member 'WBP_StatsRow_C_SetBlocksData::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlocksData, ValueText) == 0x000008, "Member 'WBP_StatsRow_C_SetBlocksData::ValueText' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlocksData, RatioText) == 0x000020, "Member 'WBP_StatsRow_C_SetBlocksData::RatioText' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlocksData, Temp_int_Variable) == 0x000038, "Member 'WBP_StatsRow_C_SetBlocksData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlocksData, K2Node_Select_Default) == 0x000040, "Member 'WBP_StatsRow_C_SetBlocksData::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StatsRow.WBP_StatsRow_C.SetBlockTemplate
// 0x0050 (0x0050 - 0x0000)
struct WBP_StatsRow_C_SetBlockTemplate final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label_0;                                           // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   RatioTextFormat_0;                                 // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             IconTexture;                                       // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatsBlock_C*                      K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatsRow_C_SetBlockTemplate) == 0x000008, "Wrong alignment on WBP_StatsRow_C_SetBlockTemplate");
static_assert(sizeof(WBP_StatsRow_C_SetBlockTemplate) == 0x000050, "Wrong size on WBP_StatsRow_C_SetBlockTemplate");
static_assert(offsetof(WBP_StatsRow_C_SetBlockTemplate, Index_0) == 0x000000, "Member 'WBP_StatsRow_C_SetBlockTemplate::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlockTemplate, Label_0) == 0x000008, "Member 'WBP_StatsRow_C_SetBlockTemplate::Label_0' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlockTemplate, RatioTextFormat_0) == 0x000020, "Member 'WBP_StatsRow_C_SetBlockTemplate::RatioTextFormat_0' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlockTemplate, IconTexture) == 0x000038, "Member 'WBP_StatsRow_C_SetBlockTemplate::IconTexture' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlockTemplate, Temp_int_Variable) == 0x000040, "Member 'WBP_StatsRow_C_SetBlockTemplate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetBlockTemplate, K2Node_Select_Default) == 0x000048, "Member 'WBP_StatsRow_C_SetBlockTemplate::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StatsRow.WBP_StatsRow_C.SetEmptyDataState
// 0x0009 (0x0009 - 0x0000)
struct WBP_StatsRow_C_SetEmptyDataState final
{
public:
	bool                                          IsEmpty;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatsRow_C_SetEmptyDataState) == 0x000001, "Wrong alignment on WBP_StatsRow_C_SetEmptyDataState");
static_assert(sizeof(WBP_StatsRow_C_SetEmptyDataState) == 0x000009, "Wrong size on WBP_StatsRow_C_SetEmptyDataState");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, IsEmpty) == 0x000000, "Member 'WBP_StatsRow_C_SetEmptyDataState::IsEmpty' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, Temp_byte_Variable) == 0x000001, "Member 'WBP_StatsRow_C_SetEmptyDataState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_StatsRow_C_SetEmptyDataState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, Temp_bool_Variable) == 0x000003, "Member 'WBP_StatsRow_C_SetEmptyDataState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_StatsRow_C_SetEmptyDataState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_StatsRow_C_SetEmptyDataState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, K2Node_Select_Default) == 0x000006, "Member 'WBP_StatsRow_C_SetEmptyDataState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_StatsRow_C_SetEmptyDataState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatsRow_C_SetEmptyDataState, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_StatsRow_C_SetEmptyDataState::K2Node_Select_Default_1' has a wrong offset!");

}

