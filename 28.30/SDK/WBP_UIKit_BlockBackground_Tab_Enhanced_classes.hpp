#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_BlockBackground_Tab_Enhanced

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_UIKit_BlockBackground_Base_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UIKit_BlockBackground_Tab_Enhanced.WBP_UIKit_BlockBackground_Tab_Enhanced_C
// 0x0060 (0x0380 - 0x0320)
class UWBP_UIKit_BlockBackground_Tab_Enhanced_C final : public UWBP_UIKit_BlockBackground_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_UIKit_BlockBackground_Tab_Enhanced_C; // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Outline_Glow;                                 // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Outline;                                      // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Disabled_Transition;                          // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Pressed_Transition;                           // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Focused_Transition;                           // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Backing;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusOutline;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusOutline_Glow;                                 // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Glow;                                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          AdditiveBorder;                                    // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectionIsAvailable;                              // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Corner_Radius;                                     // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Radius_in_Pixels;                                  // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UIKit_BlockBackground_Tab_Enhanced(int32 EntryPoint);
	void OnInstantTransitionToDisabled();
	void OnInstantTransitionToEnabled();
	void OnTransitionDeselectedFocusedRequested();
	void OnTransitionDeselectedIdleRequested();
	void OnTransitionDisabledRequested();
	void OnTransitionEnabledRequested();
	void OnTransitionFocusedRequested();
	void OnTransitionPressedRequested();
	void OnTransitionReleasedRequested();
	void OnTransitionSelectedRequested();
	void OnTransitionUnfocusedRequested();
	void PreConstruct(bool IsDesignTime);
	void SetBackgroundBrush(const struct FSlateBrush& InBrush);
	void SetBackgroundMaterial(const class UMaterialInstance*& Material_Instance);
	void SetCornerRadiuses(float CornerRadius, bool RadiusInPixels);
	void SetOutlineMaterial(const class UMaterialInstance*& Material_Instance);
	void UnhoverBackgroundReset();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UIKit_BlockBackground_Tab_Enhanced_C">();
	}
	static class UWBP_UIKit_BlockBackground_Tab_Enhanced_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UIKit_BlockBackground_Tab_Enhanced_C>();
	}
};
static_assert(alignof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C) == 0x000008, "Wrong alignment on UWBP_UIKit_BlockBackground_Tab_Enhanced_C");
static_assert(sizeof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C) == 0x000380, "Wrong size on UWBP_UIKit_BlockBackground_Tab_Enhanced_C");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, UberGraphFrame_WBP_UIKit_BlockBackground_Tab_Enhanced_C) == 0x000320, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::UberGraphFrame_WBP_UIKit_BlockBackground_Tab_Enhanced_C' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Anim_Outline_Glow) == 0x000328, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Anim_Outline_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Anim_Outline) == 0x000330, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Anim_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Anim_Disabled_Transition) == 0x000338, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Anim_Disabled_Transition' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Anim_Pressed_Transition) == 0x000340, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Anim_Pressed_Transition' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Anim_Focused_Transition) == 0x000348, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Anim_Focused_Transition' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Backing) == 0x000350, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Backing' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, FocusOutline) == 0x000358, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::FocusOutline' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, FocusOutline_Glow) == 0x000360, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::FocusOutline_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Glow) == 0x000368, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Glow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, AdditiveBorder) == 0x000370, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::AdditiveBorder' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, SelectionIsAvailable) == 0x000371, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::SelectionIsAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Corner_Radius) == 0x000374, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Corner_Radius' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_BlockBackground_Tab_Enhanced_C, Radius_in_Pixels) == 0x000378, "Member 'UWBP_UIKit_BlockBackground_Tab_Enhanced_C::Radius_in_Pixels' has a wrong offset!");

}

