#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AugmentSelector_Augment

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.ActivateAugment
// 0x0030 (0x0030 - 0x0000)
struct WBP_AugmentSelector_Augment_C_ActivateAugment final
{
public:
	double                                        AnimationEndTime;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TriggerActivationAnimation_AnimationEndTime; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_ActivateAugment) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Augment_C_ActivateAugment");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_ActivateAugment) == 0x000030, "Wrong size on WBP_AugmentSelector_Augment_C_ActivateAugment");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ActivateAugment, AnimationEndTime) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_ActivateAugment::AnimationEndTime' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ActivateAugment, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_Augment_C_ActivateAugment::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ActivateAugment, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_AugmentSelector_Augment_C_ActivateAugment::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ActivateAugment, CallFunc_TriggerActivationAnimation_AnimationEndTime) == 0x000018, "Member 'WBP_AugmentSelector_Augment_C_ActivateAugment::CallFunc_TriggerActivationAnimation_AnimationEndTime' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ActivateAugment, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'WBP_AugmentSelector_Augment_C_ActivateAugment::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ActivateAugment, CallFunc_FMax_B_ImplicitCast) == 0x000028, "Member 'WBP_AugmentSelector_Augment_C_ActivateAugment::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.ExecuteUbergraph_WBP_AugmentSelector_Augment
// 0x0030 (0x0030 - 0x0000)
struct WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment) == 0x000030, "Wrong size on WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, EntryPoint) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, Temp_bool_Variable) == 0x000004, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, Temp_byte_Variable) == 0x000005, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, Temp_byte_Variable_1) == 0x000010, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, Temp_bool_Variable_1) == 0x000011, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, Temp_byte_Variable_2) == 0x000012, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, Temp_byte_Variable_3) == 0x000013, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, K2Node_Select_Default) == 0x000014, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, K2Node_Select_Default_1) == 0x000015, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000024, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000028, "Member 'WBP_AugmentSelector_Augment_C_ExecuteUbergraph_WBP_AugmentSelector_Augment::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.FocusAugment
// 0x0018 (0x0018 - 0x0000)
struct WBP_AugmentSelector_Augment_C_FocusAugment final
{
public:
	bool                                          InFocusAugment;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_FocusAugment) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Augment_C_FocusAugment");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_FocusAugment) == 0x000018, "Wrong size on WBP_AugmentSelector_Augment_C_FocusAugment");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_FocusAugment, InFocusAugment) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_FocusAugment::InFocusAugment' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_FocusAugment, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_Augment_C_FocusAugment::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_FocusAugment, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_AugmentSelector_Augment_C_FocusAugment::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.Highlight
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_Augment_C_Highlight final
{
public:
	bool                                          PlayAnimation_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_Highlight) == 0x000001, "Wrong alignment on WBP_AugmentSelector_Augment_C_Highlight");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_Highlight) == 0x000001, "Wrong size on WBP_AugmentSelector_Augment_C_Highlight");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_Highlight, PlayAnimation_0) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_Highlight::PlayAnimation_0' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.RerollAugment
// 0x0008 (0x0008 - 0x0000)
struct WBP_AugmentSelector_Augment_C_RerollAugment final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_RerollAugment) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Augment_C_RerollAugment");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_RerollAugment) == 0x000008, "Wrong size on WBP_AugmentSelector_Augment_C_RerollAugment");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_RerollAugment, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_RerollAugment::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.ResetState
// 0x0038 (0x0038 - 0x0000)
struct WBP_AugmentSelector_Augment_C_ResetState final
{
public:
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0000(0x0038)(NoDestructor)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_ResetState) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Augment_C_ResetState");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_ResetState) == 0x000038, "Wrong size on WBP_AugmentSelector_Augment_C_ResetState");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_ResetState, K2Node_MakeStruct_WidgetTransform) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_ResetState::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.Set Augment Index
// 0x0004 (0x0004 - 0x0000)
struct WBP_AugmentSelector_Augment_C_Set_Augment_Index final
{
public:
	int32                                         New_Index;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_Set_Augment_Index) == 0x000004, "Wrong alignment on WBP_AugmentSelector_Augment_C_Set_Augment_Index");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_Set_Augment_Index) == 0x000004, "Wrong size on WBP_AugmentSelector_Augment_C_Set_Augment_Index");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_Set_Augment_Index, New_Index) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_Set_Augment_Index::New_Index' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.SetAugmentInfo
// 0x0008 (0x0008 - 0x0000)
struct WBP_AugmentSelector_Augment_C_SetAugmentInfo final
{
public:
	class UFortPlayerAugmentItemDefinition*       InAugmentItemDefinition;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_SetAugmentInfo) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Augment_C_SetAugmentInfo");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_SetAugmentInfo) == 0x000008, "Wrong size on WBP_AugmentSelector_Augment_C_SetAugmentInfo");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_SetAugmentInfo, InAugmentItemDefinition) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_SetAugmentInfo::InAugmentItemDefinition' has a wrong offset!");

// Function WBP_AugmentSelector_Augment.WBP_AugmentSelector_Augment_C.Unhighlight
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_Augment_C_Unhighlight final
{
public:
	bool                                          PlayAnimation_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Augment_C_Unhighlight) == 0x000001, "Wrong alignment on WBP_AugmentSelector_Augment_C_Unhighlight");
static_assert(sizeof(WBP_AugmentSelector_Augment_C_Unhighlight) == 0x000001, "Wrong size on WBP_AugmentSelector_Augment_C_Unhighlight");
static_assert(offsetof(WBP_AugmentSelector_Augment_C_Unhighlight, PlayAnimation_0) == 0x000000, "Member 'WBP_AugmentSelector_Augment_C_Unhighlight::PlayAnimation_0' has a wrong offset!");

}

