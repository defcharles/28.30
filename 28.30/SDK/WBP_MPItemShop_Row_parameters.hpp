#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_Row

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.CalculateTileSize
// 0x0200 (0x0200 - 0x0000)
struct WBP_MPItemShop_Row_C_CalculateTileSize final
{
public:
	class UWBP_MPItemShop_Tile_C*                 LoopTile;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopTileSize                             Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0198(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_CalculateTileSize) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_CalculateTileSize");
static_assert(sizeof(WBP_MPItemShop_Row_C_CalculateTileSize) == 0x000200, "Wrong size on WBP_MPItemShop_Row_C_CalculateTileSize");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, LoopTile) == 0x000000, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::LoopTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Height) == 0x000008, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Height' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Width) == 0x000010, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Width' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_IsMobileGame_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Temp_struct_Variable) == 0x000078, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Temp_byte_Variable) == 0x000098, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_X_2) == 0x0000A0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_Y_2) == 0x0000A8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, Temp_bool_IsClosed_Variable) == 0x0000B0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_X_3) == 0x0000D8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_Y_3) == 0x0000E0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_X_4) == 0x000108, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_Y_4) == 0x000110, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_MakeVector2D_ReturnValue) == 0x000120, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000130, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x000138, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000148, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_MakeVector2D_ReturnValue_2) == 0x000150, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_MakeVector2D_ReturnValue_3) == 0x000160, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, K2Node_Select_Default) == 0x000170, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Subtract_IntInt_ReturnValue) == 0x000180, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000188, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000190, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_GetAllEntries_ReturnValue) == 0x000198, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x0001B0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_X_5) == 0x0001C0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_BreakVector2D_Y_5) == 0x0001C8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0001D0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001E8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast) == 0x0001F0, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_CalculateTileSize, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001F8, "Member 'WBP_MPItemShop_Row_C_CalculateTileSize::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.ExecuteUbergraph_WBP_MPItemShop_Row
// 0x0098 (0x0098 - 0x0000)
struct WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0018(0x0008)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0024(0x0008)(NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_1;              // 0x0040(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemShopTile_Base_C*               K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemShopTile_Base_C*               K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base_1;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_2;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_FocusedTile;                    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row");
static_assert(sizeof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row) == 0x000098, "Wrong size on WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, EntryPoint) == 0x000000, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_Event_InFocusEvent_1) == 0x000018, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_Event_InFocusEvent) == 0x000024, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_GetAllEntries_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_GetAllEntries_ReturnValue_1) == 0x000040, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_GetAllEntries_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base) == 0x000060, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base_1) == 0x000070, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_Less_IntInt_ReturnValue_1) == 0x000085, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_IsUsingTouch_ReturnValue) == 0x000086, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_IsUsingTouch_ReturnValue_1) == 0x000087, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, CallFunc_IsUsingTouch_ReturnValue_2) == 0x000088, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::CallFunc_IsUsingTouch_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row, K2Node_CustomEvent_FocusedTile) == 0x000090, "Member 'WBP_MPItemShop_Row_C_ExecuteUbergraph_WBP_MPItemShop_Row::K2Node_CustomEvent_FocusedTile' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.GetClosestTile
// 0x0140 (0x0140 - 0x0000)
struct WBP_MPItemShop_Row_C_GetClosestTile final
{
public:
	struct FVector2D                              TargetLocation;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 Tile;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClosestTileInSameColumn;                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrentTileInSameColumn;                         // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToClosestTile;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToCurrentTile;                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 ClosestTile;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 Current_Tile;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0050(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbsolutePosition_ReturnValue;          // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTileAnchor_PixelPosition;              // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0108(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_GetClosestTile) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_GetClosestTile");
static_assert(sizeof(WBP_MPItemShop_Row_C_GetClosestTile) == 0x000140, "Wrong size on WBP_MPItemShop_Row_C_GetClosestTile");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, TargetLocation) == 0x000000, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::TargetLocation' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, Tile) == 0x000010, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, IsClosestTileInSameColumn) == 0x000018, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::IsClosestTileInSameColumn' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, IsCurrentTileInSameColumn) == 0x000019, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::IsCurrentTileInSameColumn' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, DistanceToClosestTile) == 0x000020, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::DistanceToClosestTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, DistanceToCurrentTile) == 0x000028, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::DistanceToCurrentTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, ClosestTile) == 0x000030, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::ClosestTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, Current_Tile) == 0x000038, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::Current_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BooleanAND_ReturnValue) == 0x00004D, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00004E, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, Temp_bool_Has_Been_Initd_Variable) == 0x00004F, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_GetCachedGeometry_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000088, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_GetAbsolutePosition_ReturnValue) == 0x000098, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_GetAbsolutePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BreakVector2D_X) == 0x0000A8, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BreakVector2D_Y) == 0x0000B0, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BreakVector2D_X_1) == 0x0000B8, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BreakVector2D_Y_1) == 0x0000C0, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_GetTileAnchor_PixelPosition) == 0x0000D0, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_GetTileAnchor_PixelPosition' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BreakVector2D_X_2) == 0x0000E0, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BreakVector2D_Y_2) == 0x0000E8, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0000F0, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F1, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, Temp_bool_IsClosed_Variable) == 0x0000F2, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F3, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_BooleanOR_ReturnValue) == 0x0000F4, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000F8, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_GetAllEntries_ReturnValue) == 0x000108, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_VSize2D_ReturnValue) == 0x000118, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Array_Get_Item) == 0x000120, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000128, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetClosestTile, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'WBP_MPItemShop_Row_C_GetClosestTile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.GetDesiredFocusTile
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Row_C_GetDesiredFocusTile final
{
public:
	class UUserWidget*                            TileWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetFirstTile_TileWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetTileByOfferId_TileWidget;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_GetDesiredFocusTile) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_GetDesiredFocusTile");
static_assert(sizeof(WBP_MPItemShop_Row_C_GetDesiredFocusTile) == 0x000020, "Wrong size on WBP_MPItemShop_Row_C_GetDesiredFocusTile");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetDesiredFocusTile, TileWidget) == 0x000000, "Member 'WBP_MPItemShop_Row_C_GetDesiredFocusTile::TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetDesiredFocusTile, CallFunc_GetFirstTile_TileWidget) == 0x000008, "Member 'WBP_MPItemShop_Row_C_GetDesiredFocusTile::CallFunc_GetFirstTile_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetDesiredFocusTile, CallFunc_GetTileByOfferId_TileWidget) == 0x000010, "Member 'WBP_MPItemShop_Row_C_GetDesiredFocusTile::CallFunc_GetTileByOfferId_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetDesiredFocusTile, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_GetDesiredFocusTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.GetFirstTile
// 0x0038 (0x0038 - 0x0000)
struct WBP_MPItemShop_Row_C_GetFirstTile final
{
public:
	class UUserWidget*                            TileWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_GetFirstTile) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_GetFirstTile");
static_assert(sizeof(WBP_MPItemShop_Row_C_GetFirstTile) == 0x000038, "Wrong size on WBP_MPItemShop_Row_C_GetFirstTile");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetFirstTile, TileWidget) == 0x000000, "Member 'WBP_MPItemShop_Row_C_GetFirstTile::TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetFirstTile, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_GetFirstTile::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetFirstTile, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_GetFirstTile::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetFirstTile, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MPItemShop_Row_C_GetFirstTile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetFirstTile, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000028, "Member 'WBP_MPItemShop_Row_C_GetFirstTile::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetFirstTile, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_MPItemShop_Row_C_GetFirstTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.GetLastTileWidget
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Row_C_GetLastTileWidget final
{
public:
	class UUserWidget*                            LastTileWidget;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_GetLastTileWidget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_GetLastTileWidget");
static_assert(sizeof(WBP_MPItemShop_Row_C_GetLastTileWidget) == 0x000028, "Wrong size on WBP_MPItemShop_Row_C_GetLastTileWidget");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetLastTileWidget, LastTileWidget) == 0x000000, "Member 'WBP_MPItemShop_Row_C_GetLastTileWidget::LastTileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetLastTileWidget, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_GetLastTileWidget::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetLastTileWidget, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_GetLastTileWidget::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetLastTileWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'WBP_MPItemShop_Row_C_GetLastTileWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetLastTileWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MPItemShop_Row_C_GetLastTileWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.GetTileAtIndex
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Row_C_GetTileAtIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            TileWidget;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_GetTileAtIndex) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_GetTileAtIndex");
static_assert(sizeof(WBP_MPItemShop_Row_C_GetTileAtIndex) == 0x000030, "Wrong size on WBP_MPItemShop_Row_C_GetTileAtIndex");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileAtIndex, Index_0) == 0x000000, "Member 'WBP_MPItemShop_Row_C_GetTileAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileAtIndex, TileWidget) == 0x000008, "Member 'WBP_MPItemShop_Row_C_GetTileAtIndex::TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileAtIndex, CallFunc_GetAllEntries_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Row_C_GetTileAtIndex::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileAtIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_GetTileAtIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileAtIndex, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPItemShop_Row_C_GetTileAtIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.GetTileByOfferId
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPItemShop_Row_C_GetTileByOfferId final
{
public:
	class FString                                 OfferId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            TileWidget;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_GetTileByOfferId) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_GetTileByOfferId");
static_assert(sizeof(WBP_MPItemShop_Row_C_GetTileByOfferId) == 0x000060, "Wrong size on WBP_MPItemShop_Row_C_GetTileByOfferId");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, OfferId) == 0x000000, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::OfferId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, TileWidget) == 0x000010, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, CallFunc_GetAllEntries_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000050, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_GetTileByOfferId, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000059, "Member 'WBP_MPItemShop_Row_C_GetTileByOfferId::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.InitializeHeaders
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Row_C_InitializeHeaders final
{
public:
	class UFortItemShopSectionVM*                 LoopSection;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowHeader_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopSectionVM*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_InitializeHeaders) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_InitializeHeaders");
static_assert(sizeof(WBP_MPItemShop_Row_C_InitializeHeaders) == 0x000030, "Wrong size on WBP_MPItemShop_Row_C_InitializeHeaders");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, LoopSection) == 0x000000, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::LoopSection' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, CallFunc_ShouldShowHeader_ReturnValue) == 0x000014, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::CallFunc_ShouldShowHeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeHeaders, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Row_C_InitializeHeaders::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.InitializeSubheader
// 0x0040 (0x0040 - 0x0000)
struct WBP_MPItemShop_Row_C_InitializeSubheader final
{
public:
	class UFortItemShopSectionVM*                 SectionVM;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowSubheader;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopSectionVM*                 LoopSubsection;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopSectionVM*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFirstRowInSection_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowHeader_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_InitializeSubheader) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_InitializeSubheader");
static_assert(sizeof(WBP_MPItemShop_Row_C_InitializeSubheader) == 0x000040, "Wrong size on WBP_MPItemShop_Row_C_InitializeSubheader");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, SectionVM) == 0x000000, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::SectionVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, ShouldShowSubheader) == 0x000008, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::ShouldShowSubheader' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, LoopSubsection) == 0x000010, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::LoopSubsection' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_IsFirstRowInSection_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_IsFirstRowInSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_ShouldShowHeader_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_ShouldShowHeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_InitializeSubheader, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000039, "Member 'WBP_MPItemShop_Row_C_InitializeSubheader::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.IsFirstRowInSection
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Row_C_IsFirstRowInSection final
{
public:
	class UFortItemShopSectionVM*                 SectionVM;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_IsFirstRowInSection) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_IsFirstRowInSection");
static_assert(sizeof(WBP_MPItemShop_Row_C_IsFirstRowInSection) == 0x000020, "Wrong size on WBP_MPItemShop_Row_C_IsFirstRowInSection");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsFirstRowInSection, SectionVM) == 0x000000, "Member 'WBP_MPItemShop_Row_C_IsFirstRowInSection::SectionVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsFirstRowInSection, ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_IsFirstRowInSection::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsFirstRowInSection, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MPItemShop_Row_C_IsFirstRowInSection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsFirstRowInSection, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_IsFirstRowInSection::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.IsLastRowInSection
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Row_C_IsLastRowInSection final
{
public:
	class UFortItemShopSectionVM*                 SectionVM;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_IsLastRowInSection) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_IsLastRowInSection");
static_assert(sizeof(WBP_MPItemShop_Row_C_IsLastRowInSection) == 0x000028, "Wrong size on WBP_MPItemShop_Row_C_IsLastRowInSection");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsLastRowInSection, SectionVM) == 0x000000, "Member 'WBP_MPItemShop_Row_C_IsLastRowInSection::SectionVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsLastRowInSection, ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_IsLastRowInSection::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsLastRowInSection, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Row_C_IsLastRowInSection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsLastRowInSection, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Row_C_IsLastRowInSection::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsLastRowInSection, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MPItemShop_Row_C_IsLastRowInSection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsLastRowInSection, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_IsLastRowInSection::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.IsSongRow
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Row_C_IsSongRow final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferVM*                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemVM*                            CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetItemType_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_IsSongRow) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_IsSongRow");
static_assert(sizeof(WBP_MPItemShop_Row_C_IsSongRow) == 0x000028, "Wrong size on WBP_MPItemShop_Row_C_IsSongRow");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, Result) == 0x000000, "Member 'WBP_MPItemShop_Row_C_IsSongRow::Result' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000012, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_GetItemType_ReturnValue) == 0x000022, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_GetItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_IsSongRow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'WBP_MPItemShop_Row_C_IsSongRow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.MarkOfferGroupAsVisited
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited) == 0x000001, "Wrong alignment on WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited");
static_assert(sizeof(WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited) == 0x000001, "Wrong size on WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited");
static_assert(offsetof(WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Row_C_MarkOfferGroupAsVisited::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Row_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MPItemShop_Row_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_MPItemShop_Row_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_MPItemShop_Row_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_MPItemShop_Row_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_MPItemShop_Row_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.OnNavigatedFrom
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Row_C_OnNavigatedFrom final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemShopTile_Base_C*               K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTileAnchor_PixelPosition;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_OnNavigatedFrom) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_OnNavigatedFrom");
static_assert(sizeof(WBP_MPItemShop_Row_C_OnNavigatedFrom) == 0x000030, "Wrong size on WBP_MPItemShop_Row_C_OnNavigatedFrom");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnNavigatedFrom, Navigation_0) == 0x000000, "Member 'WBP_MPItemShop_Row_C_OnNavigatedFrom::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnNavigatedFrom, ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_OnNavigatedFrom::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnNavigatedFrom, K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base) == 0x000010, "Member 'WBP_MPItemShop_Row_C_OnNavigatedFrom::K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnNavigatedFrom, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MPItemShop_Row_C_OnNavigatedFrom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnNavigatedFrom, CallFunc_GetTileAnchor_PixelPosition) == 0x000020, "Member 'WBP_MPItemShop_Row_C_OnNavigatedFrom::CallFunc_GetTileAnchor_PixelPosition' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Row_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MPItemShop_Row_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_MPItemShop_Row_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_MPItemShop_Row_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_MPItemShop_Row_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_MPItemShop_Row_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.OnTileFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Row_C_OnTileFocused final
{
public:
	class UUserWidget*                            FocusedTile_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_OnTileFocused) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_OnTileFocused");
static_assert(sizeof(WBP_MPItemShop_Row_C_OnTileFocused) == 0x000008, "Wrong size on WBP_MPItemShop_Row_C_OnTileFocused");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnTileFocused, FocusedTile_0) == 0x000000, "Member 'WBP_MPItemShop_Row_C_OnTileFocused::FocusedTile_0' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.OnUpdateOffers
// 0x0090 (0x0090 - 0x0000)
struct WBP_MPItemShop_Row_C_OnUpdateOffers final
{
public:
	TArray<class UFortItemShopOfferVM*>           OffersVM;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 TileWidgetClass;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   NextName;                                          // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   PrevName;                                          // 0x0030(0x0018)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* FocusedTile)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopOfferVM*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCommonButtonBase*                CallFunc_CreateEntryTile_ReturnValue;              // 0x0070(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_OnUpdateOffers) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_OnUpdateOffers");
static_assert(sizeof(WBP_MPItemShop_Row_C_OnUpdateOffers) == 0x000090, "Wrong size on WBP_MPItemShop_Row_C_OnUpdateOffers");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, OffersVM) == 0x000000, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::OffersVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, TileWidgetClass) == 0x000010, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::TileWidgetClass' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, NextName) == 0x000018, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::NextName' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, PrevName) == 0x000030, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::PrevName' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, CallFunc_CreateEntryTile_ReturnValue) == 0x000070, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::CallFunc_CreateEntryTile_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000080, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_OnUpdateOffers, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_MPItemShop_Row_C_OnUpdateOffers::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.RequestMarkOfferGroupAsVisited
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited");
static_assert(sizeof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited) == 0x000028, "Wrong size on WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000003, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_Less_ByteByte_ReturnValue) == 0x000004, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'WBP_MPItemShop_Row_C_RequestMarkOfferGroupAsVisited::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.ResetAllTiles
// 0x0048 (0x0048 - 0x0000)
struct WBP_MPItemShop_Row_C_ResetAllTiles final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_ResetAllTiles) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_ResetAllTiles");
static_assert(sizeof(WBP_MPItemShop_Row_C_ResetAllTiles) == 0x000048, "Wrong size on WBP_MPItemShop_Row_C_ResetAllTiles");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, CallFunc_GetAllEntries_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000038, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ResetAllTiles, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MPItemShop_Row_C_ResetAllTiles::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetFortItemShopOfferGroupVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM final
{
public:
	class UFortItemShopOfferGroupVM*              ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM) == 0x000028, "Wrong size on WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM, ViewModel) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_SetFortItemShopOfferGroupVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetHeaderText
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Row_C_SetHeaderText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetHeaderText) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetHeaderText");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetHeaderText) == 0x000018, "Wrong size on WBP_MPItemShop_Row_C_SetHeaderText");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetHeaderText, Text) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetHeaderText::Text' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetParentHasFocusState
// 0x0040 (0x0040 - 0x0000)
struct WBP_MPItemShop_Row_C_SetParentHasFocusState final
{
public:
	bool                                          HasFocus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemShopTile_Base_C*               K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetParentHasFocusState) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetParentHasFocusState");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetParentHasFocusState) == 0x000040, "Wrong size on WBP_MPItemShop_Row_C_SetParentHasFocusState");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, HasFocus) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::HasFocus' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base) == 0x000028, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetParentHasFocusState, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_MPItemShop_Row_C_SetParentHasFocusState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetRowActiveState
// 0x0098 (0x0098 - 0x0000)
struct WBP_MPItemShop_Row_C_SetRowActiveState final
{
public:
	bool                                          IsActiveState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActiveStateHasChanged;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFirstTile_TileWidget;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0060(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemShopTile_Base_C*               K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base;      // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetRowActiveState) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetRowActiveState");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetRowActiveState) == 0x000098, "Wrong size on WBP_MPItemShop_Row_C_SetRowActiveState");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, IsActiveState) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::IsActiveState' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, ActiveStateHasChanged) == 0x000001, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::ActiveStateHasChanged' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_GetCurrentInputType_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_IsEmpty_ReturnValue) == 0x000032, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_GetFirstTile_TileWidget) == 0x000038, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_GetFirstTile_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000048, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_BooleanAND_ReturnValue_1) == 0x000051, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_GetAllEntries_ReturnValue) == 0x000060, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base) == 0x000088, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowActiveState, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000094, "Member 'WBP_MPItemShop_Row_C_SetRowActiveState::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetRowHitboxVisibility
// 0x0004 (0x0004 - 0x0000)
struct WBP_MPItemShop_Row_C_SetRowHitboxVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetRowHitboxVisibility) == 0x000001, "Wrong alignment on WBP_MPItemShop_Row_C_SetRowHitboxVisibility");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetRowHitboxVisibility) == 0x000004, "Wrong size on WBP_MPItemShop_Row_C_SetRowHitboxVisibility");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowHitboxVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetRowHitboxVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowHitboxVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_MPItemShop_Row_C_SetRowHitboxVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowHitboxVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MPItemShop_Row_C_SetRowHitboxVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowHitboxVisibility, K2Node_Select_Default) == 0x000003, "Member 'WBP_MPItemShop_Row_C_SetRowHitboxVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetRowPeekState
// 0x0048 (0x0048 - 0x0000)
struct WBP_MPItemShop_Row_C_SetRowPeekState final
{
public:
	bool                                          IsInPeekState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemShopTile_Base_C*               K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetRowPeekState) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetRowPeekState");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetRowPeekState) == 0x000048, "Wrong size on WBP_MPItemShop_Row_C_SetRowPeekState");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, IsInPeekState) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::IsInPeekState' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, CallFunc_GetAllEntries_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base) == 0x000038, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::K2Node_DynamicCast_AsWBP_Item_Shop_Tile_Base' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowPeekState, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MPItemShop_Row_C_SetRowPeekState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetRowWidth
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Row_C_SetRowWidth final
{
public:
	double                                        Width;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetRowWidth) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetRowWidth");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetRowWidth) == 0x000010, "Wrong size on WBP_MPItemShop_Row_C_SetRowWidth");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowWidth, Width) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetRowWidth::Width' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetRowWidth, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000008, "Member 'WBP_MPItemShop_Row_C_SetRowWidth::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetSubheaderText
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Row_C_SetSubheaderText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetSubheaderText) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetSubheaderText");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetSubheaderText) == 0x000018, "Wrong size on WBP_MPItemShop_Row_C_SetSubheaderText");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetSubheaderText, Text) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetSubheaderText::Text' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.SetTileNavigation
// 0x0078 (0x0078 - 0x0000)
struct WBP_MPItemShop_Row_C_SetTileNavigation final
{
public:
	class UWBP_MPItemShop_Tile_C*                 PrevPrevTile;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 PrevTile;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Tile_C*                 CurrentTile;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetTileAtIndex_TileWidget;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0048(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile_1;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_SetTileNavigation) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_SetTileNavigation");
static_assert(sizeof(WBP_MPItemShop_Row_C_SetTileNavigation) == 0x000078, "Wrong size on WBP_MPItemShop_Row_C_SetTileNavigation");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, PrevPrevTile) == 0x000000, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::PrevPrevTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, PrevTile) == 0x000008, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::PrevTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, Index_0) == 0x000010, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CurrentTile) == 0x000018, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CurrentTile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_GetTileAtIndex_TileWidget) == 0x000028, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_GetTileAtIndex_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000030, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_SwitchEnum_CmpSuccess_1) == 0x00003B, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_GetAllEntries_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile_1) == 0x000068, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_SetTileNavigation, K2Node_SwitchEnum_CmpSuccess_2) == 0x000072, "Member 'WBP_MPItemShop_Row_C_SetTileNavigation::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.ShouldShowHeader
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Row_C_ShouldShowHeader final
{
public:
	class UFortItemShopSectionVM*                 SectionVM;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_ShouldShowHeader) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_ShouldShowHeader");
static_assert(sizeof(WBP_MPItemShop_Row_C_ShouldShowHeader) == 0x000020, "Wrong size on WBP_MPItemShop_Row_C_ShouldShowHeader");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, SectionVM) == 0x000000, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::SectionVM' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShouldShowHeader, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'WBP_MPItemShop_Row_C_ShouldShowHeader::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.ShowSectionHeader
// 0x0005 (0x0005 - 0x0000)
struct WBP_MPItemShop_Row_C_ShowSectionHeader final
{
public:
	bool                                          ShouldShowHeader_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_ShowSectionHeader) == 0x000001, "Wrong alignment on WBP_MPItemShop_Row_C_ShowSectionHeader");
static_assert(sizeof(WBP_MPItemShop_Row_C_ShowSectionHeader) == 0x000005, "Wrong size on WBP_MPItemShop_Row_C_ShowSectionHeader");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSectionHeader, ShouldShowHeader_0) == 0x000000, "Member 'WBP_MPItemShop_Row_C_ShowSectionHeader::ShouldShowHeader_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSectionHeader, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_Row_C_ShowSectionHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSectionHeader, Temp_byte_Variable) == 0x000002, "Member 'WBP_MPItemShop_Row_C_ShowSectionHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSectionHeader, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MPItemShop_Row_C_ShowSectionHeader::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSectionHeader, K2Node_Select_Default) == 0x000004, "Member 'WBP_MPItemShop_Row_C_ShowSectionHeader::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.ShowSubsectionHeader
// 0x0005 (0x0005 - 0x0000)
struct WBP_MPItemShop_Row_C_ShowSubsectionHeader final
{
public:
	bool                                          ShouldShowHeader_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_ShowSubsectionHeader) == 0x000001, "Wrong alignment on WBP_MPItemShop_Row_C_ShowSubsectionHeader");
static_assert(sizeof(WBP_MPItemShop_Row_C_ShowSubsectionHeader) == 0x000005, "Wrong size on WBP_MPItemShop_Row_C_ShowSubsectionHeader");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeader, ShouldShowHeader_0) == 0x000000, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeader::ShouldShowHeader_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeader, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeader, Temp_byte_Variable) == 0x000002, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeader, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeader::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeader, K2Node_Select_Default) == 0x000004, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeader::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.ShowSubsectionHeaderSpacer
// 0x0005 (0x0005 - 0x0000)
struct WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer) == 0x000001, "Wrong alignment on WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer");
static_assert(sizeof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer) == 0x000005, "Wrong size on WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer, Show) == 0x000000, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer::Show' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer, Temp_byte_Variable) == 0x000002, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer, K2Node_Select_Default) == 0x000004, "Member 'WBP_MPItemShop_Row_C_ShowSubsectionHeaderSpacer::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.UpdateTileSizes
// 0x0068 (0x0068 - 0x0000)
struct WBP_MPItemShop_Row_C_UpdateTileSizes final
{
public:
	TArray<class UFortItemShopOfferVM*>           Offers;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumColumns;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPreviousColumnFull;                              // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopTileSize                             Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopOfferVM*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Row_C_UpdateTileSizes) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C_UpdateTileSizes");
static_assert(sizeof(WBP_MPItemShop_Row_C_UpdateTileSizes) == 0x000068, "Wrong size on WBP_MPItemShop_Row_C_UpdateTileSizes");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Offers) == 0x000000, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Offers' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Index_0) == 0x000010, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, NumColumns) == 0x000014, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::NumColumns' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, IsPreviousColumnFull) == 0x000018, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::IsPreviousColumnFull' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Variable) == 0x00001C, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_byte_Variable) == 0x000020, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Variable_1) == 0x000030, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Variable_2) == 0x000034, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000045, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Variable_3) == 0x000048, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Clamp_ReturnValue) == 0x00004C, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Variable_4) == 0x000050, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, Temp_int_Variable_5) == 0x000054, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, K2Node_Select_Default) == 0x000058, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C_UpdateTileSizes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'WBP_MPItemShop_Row_C_UpdateTileSizes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_MPItemShop_Row.WBP_MPItemShop_Row_C.__1c01b1a9-45ab-9040-3eb9-9dab19ca9413_SourceToDest
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest) == 0x000008, "Wrong alignment on WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest");
static_assert(sizeof(WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest) == 0x000030, "Wrong size on WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest");
static_assert(offsetof(WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Row_C___1c01b1a9_45ab_9040_3eb9_9dab19ca9413_SourceToDest::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

