#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeEmporiumUI

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "CreativeEmporiumUI_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class CreativeEmporiumUI.EmporiumBrowserFilterEntry
// 0x0060 (0x14F0 - 0x1490)
class UEmporiumBrowserFilterEntry final : public UCommonButtonBase
{
public:
	TMulticastInlineDelegate<void(bool bIsEnabled, class UObject* ListItemObject)> OnFilterEnabled;                                   // 0x1490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsSelected, class UEmporiumBrowserFilterEntry* Entry)> OnFilterSelected;                                  // 0x14A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UObject* ListItemObject)> OnWidgetDestroyed;                                 // 0x14B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCommonTextBlock*                       TextBlock_FilterName;                              // 0x14C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFilterActive;                                     // 0x14C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14C9[0x7];                                     // 0x14C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmporiumBrowserTag*                    tag;                                               // 0x14D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ButtonText;                                        // 0x14D8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void SetIsFilterActive(bool bInFilterActive);
	void UpdateButtonText();
	void UpdateCheckMarkState(bool bIsChecked);
	void UpdateItemCount(int32 ItemCount);

	bool IsFilterActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumBrowserFilterEntry">();
	}
	static class UEmporiumBrowserFilterEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumBrowserFilterEntry>();
	}
};
static_assert(alignof(UEmporiumBrowserFilterEntry) == 0x000010, "Wrong alignment on UEmporiumBrowserFilterEntry");
static_assert(sizeof(UEmporiumBrowserFilterEntry) == 0x0014F0, "Wrong size on UEmporiumBrowserFilterEntry");
static_assert(offsetof(UEmporiumBrowserFilterEntry, OnFilterEnabled) == 0x001490, "Member 'UEmporiumBrowserFilterEntry::OnFilterEnabled' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFilterEntry, OnFilterSelected) == 0x0014A0, "Member 'UEmporiumBrowserFilterEntry::OnFilterSelected' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFilterEntry, OnWidgetDestroyed) == 0x0014B0, "Member 'UEmporiumBrowserFilterEntry::OnWidgetDestroyed' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFilterEntry, TextBlock_FilterName) == 0x0014C0, "Member 'UEmporiumBrowserFilterEntry::TextBlock_FilterName' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFilterEntry, bFilterActive) == 0x0014C8, "Member 'UEmporiumBrowserFilterEntry::bFilterActive' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFilterEntry, tag) == 0x0014D0, "Member 'UEmporiumBrowserFilterEntry::tag' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFilterEntry, ButtonText) == 0x0014D8, "Member 'UEmporiumBrowserFilterEntry::ButtonText' has a wrong offset!");

// Class CreativeEmporiumUI.EmporiumBrowserTag
// 0x0008 (0x0030 - 0x0028)
class UEmporiumBrowserTag final : public UObject
{
public:
	class FName                                   TagID;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumBrowserTag">();
	}
	static class UEmporiumBrowserTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumBrowserTag>();
	}
};
static_assert(alignof(UEmporiumBrowserTag) == 0x000008, "Wrong alignment on UEmporiumBrowserTag");
static_assert(sizeof(UEmporiumBrowserTag) == 0x000030, "Wrong size on UEmporiumBrowserTag");
static_assert(offsetof(UEmporiumBrowserTag, TagID) == 0x000028, "Member 'UEmporiumBrowserTag::TagID' has a wrong offset!");

// Class CreativeEmporiumUI.EmporiumBrowserFiltersPanel
// 0x0220 (0x0508 - 0x02E8)
class UEmporiumBrowserFiltersPanel final : public UCommonUserWidget
{
public:
	TMulticastInlineDelegate<void()>              OnFilterChanged;                                   // 0x02E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSortChanged;                                     // 0x02F8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSubFilterToggled;                                // 0x0308(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsFocused)> OnFocusChanged;                                    // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FName CategoryID)> OnCategoryActivated;                               // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FName CategoryID)> OnCategoryFocused;                                 // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnUpdateCategoryCounts;                            // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortEmporiumFilterCategoryHeader> FilterSectionHeaderWidgetClass;                    // 0x0358(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortEmporiumFilterCategoryHeader> FilterCategoryHeaderWidgetClass;                   // 0x0360(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortEmporiumFilterCategoryHeader> FilterHomeHeaderWidgetClass;                       // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UEmporiumBrowserFilterEntry> FilterEntryWidgetClass;                            // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortEmporiumSortEntry>         SortEntries;                                       // 0x0378(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEmporiumFilterEntry>       FilterEntries;                                     // 0x0388(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEmporiumPriceFilterEntry>  PriceFilterEntries;                                // 0x0398(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           LicenseFilterEntries;                              // 0x03A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                   DefaultCategoryFilter;                             // 0x03B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3BC[0x54];                                     // 0x03BC(0x0054)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             ScrollBox_FilterScroll;                            // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEmporiumBrowserFilterEntry*            Button_All;                                        // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_SortAndFilter;                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_428[0xB8];                                     // 0x0428(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    FocusSearchInputActionRow;                         // 0x04E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    ClearSearchInputActionRow;                         // 0x04F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_500[0x8];                                      // 0x0500(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExcludeItemDetailTag(const class FName& TagID);
	void HandleCategoryActivated(bool bIsExpanded, class UObject* ListItemObject);
	void HandleCategoryExpansion(class UObject* ListItemObject);
	void HandleCategoryWidgetDestroyed(class UObject* ListItemObject);
	void HandleFilterEnabled(bool bIsFilterEnabled, class UObject* ListItemObject);
	void HandleFilterSelected(bool bIsFilterEnabled, class UEmporiumBrowserFilterEntry* Entry);
	void HandleSearchTextChanged(const class FText& Text);
	void HandleShowAllEnabled(bool bShowAllItems, class UObject* ListItemObject);
	void HandleSortAndFilterClicked();
	void IncludeItemDetailTag(const class FName& TagID);
	class UWidget* NavigateToNextSection(bool bReverse);
	void OnSetSearchFocused();
	void OnSetSearchText(const class FText& NewSearchText);
	void OnSetSearchVisible(bool bVisible);
	void SetItemDetailTags(const TArray<class FName>& TagIDs);

	int32 GetFilterCount() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumBrowserFiltersPanel">();
	}
	static class UEmporiumBrowserFiltersPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumBrowserFiltersPanel>();
	}
};
static_assert(alignof(UEmporiumBrowserFiltersPanel) == 0x000008, "Wrong alignment on UEmporiumBrowserFiltersPanel");
static_assert(sizeof(UEmporiumBrowserFiltersPanel) == 0x000508, "Wrong size on UEmporiumBrowserFiltersPanel");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnFilterChanged) == 0x0002E8, "Member 'UEmporiumBrowserFiltersPanel::OnFilterChanged' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnSortChanged) == 0x0002F8, "Member 'UEmporiumBrowserFiltersPanel::OnSortChanged' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnSubFilterToggled) == 0x000308, "Member 'UEmporiumBrowserFiltersPanel::OnSubFilterToggled' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnFocusChanged) == 0x000318, "Member 'UEmporiumBrowserFiltersPanel::OnFocusChanged' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnCategoryActivated) == 0x000328, "Member 'UEmporiumBrowserFiltersPanel::OnCategoryActivated' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnCategoryFocused) == 0x000338, "Member 'UEmporiumBrowserFiltersPanel::OnCategoryFocused' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, OnUpdateCategoryCounts) == 0x000348, "Member 'UEmporiumBrowserFiltersPanel::OnUpdateCategoryCounts' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, FilterSectionHeaderWidgetClass) == 0x000358, "Member 'UEmporiumBrowserFiltersPanel::FilterSectionHeaderWidgetClass' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, FilterCategoryHeaderWidgetClass) == 0x000360, "Member 'UEmporiumBrowserFiltersPanel::FilterCategoryHeaderWidgetClass' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, FilterHomeHeaderWidgetClass) == 0x000368, "Member 'UEmporiumBrowserFiltersPanel::FilterHomeHeaderWidgetClass' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, FilterEntryWidgetClass) == 0x000370, "Member 'UEmporiumBrowserFiltersPanel::FilterEntryWidgetClass' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, SortEntries) == 0x000378, "Member 'UEmporiumBrowserFiltersPanel::SortEntries' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, FilterEntries) == 0x000388, "Member 'UEmporiumBrowserFiltersPanel::FilterEntries' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, PriceFilterEntries) == 0x000398, "Member 'UEmporiumBrowserFiltersPanel::PriceFilterEntries' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, LicenseFilterEntries) == 0x0003A8, "Member 'UEmporiumBrowserFiltersPanel::LicenseFilterEntries' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, DefaultCategoryFilter) == 0x0003B8, "Member 'UEmporiumBrowserFiltersPanel::DefaultCategoryFilter' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, ScrollBox_FilterScroll) == 0x000410, "Member 'UEmporiumBrowserFiltersPanel::ScrollBox_FilterScroll' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, Button_All) == 0x000418, "Member 'UEmporiumBrowserFiltersPanel::Button_All' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, Button_SortAndFilter) == 0x000420, "Member 'UEmporiumBrowserFiltersPanel::Button_SortAndFilter' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, FocusSearchInputActionRow) == 0x0004E0, "Member 'UEmporiumBrowserFiltersPanel::FocusSearchInputActionRow' has a wrong offset!");
static_assert(offsetof(UEmporiumBrowserFiltersPanel, ClearSearchInputActionRow) == 0x0004F0, "Member 'UEmporiumBrowserFiltersPanel::ClearSearchInputActionRow' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumFilterCategoryHeader
// 0x0038 (0x02F8 - 0x02C0)
class UFortEmporiumFilterCategoryHeader final : public UUserWidget
{
public:
	TMulticastInlineDelegate<void(bool bIsExpanded, class UObject* ListItemObject)> OnCategoryActivated;                               // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UObject* ListItemObject)> OnWidgetDestroyed;                                 // 0x02D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UObject* ListItemObject)> OnExpandCategory;                                  // 0x02E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UEmporiumBrowserTag*                    tag;                                               // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ActivateCategory(bool bExpanded);
	void AddSubcategoryWidget(class UWidget* SubcategoryWidget);
	void ClearSubcategoryWidgets();
	void EnableCategoryExpansion(bool bShow);
	void ExpandCategory(bool bExpanded);
	void ExpandSection();
	void SetCategoryText(const class FText& NewButtonText);
	void SetSubcategoryCount(int32 NewCount);
	void ShowCategoryActive(bool bIsActive);
	void UpdateCategoryCount(int32 NewCount, bool bHideIfEmpty);

	class UCommonButtonBase* GetCategoryButton() const;
	TArray<class UWidget*> GetSubcategoryWidgets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumFilterCategoryHeader">();
	}
	static class UFortEmporiumFilterCategoryHeader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumFilterCategoryHeader>();
	}
};
static_assert(alignof(UFortEmporiumFilterCategoryHeader) == 0x000008, "Wrong alignment on UFortEmporiumFilterCategoryHeader");
static_assert(sizeof(UFortEmporiumFilterCategoryHeader) == 0x0002F8, "Wrong size on UFortEmporiumFilterCategoryHeader");
static_assert(offsetof(UFortEmporiumFilterCategoryHeader, OnCategoryActivated) == 0x0002C0, "Member 'UFortEmporiumFilterCategoryHeader::OnCategoryActivated' has a wrong offset!");
static_assert(offsetof(UFortEmporiumFilterCategoryHeader, OnWidgetDestroyed) == 0x0002D0, "Member 'UFortEmporiumFilterCategoryHeader::OnWidgetDestroyed' has a wrong offset!");
static_assert(offsetof(UFortEmporiumFilterCategoryHeader, OnExpandCategory) == 0x0002E0, "Member 'UFortEmporiumFilterCategoryHeader::OnExpandCategory' has a wrong offset!");
static_assert(offsetof(UFortEmporiumFilterCategoryHeader, tag) == 0x0002F0, "Member 'UFortEmporiumFilterCategoryHeader::tag' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumFiltersSubPanel
// 0x0000 (0x02C0 - 0x02C0)
class UFortEmporiumFiltersSubPanel final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumFiltersSubPanel">();
	}
	static class UFortEmporiumFiltersSubPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumFiltersSubPanel>();
	}
};
static_assert(alignof(UFortEmporiumFiltersSubPanel) == 0x000008, "Wrong alignment on UFortEmporiumFiltersSubPanel");
static_assert(sizeof(UFortEmporiumFiltersSubPanel) == 0x0002C0, "Wrong size on UFortEmporiumFiltersSubPanel");

// Class CreativeEmporiumUI.FortEmporiumHomeEntryObjectWrapper
// 0x0008 (0x0030 - 0x0028)
class UFortEmporiumHomeEntryObjectWrapper final : public UObject
{
public:
	class UFortEmporiumItemListTabPanel*          TabPanel;                                          // 0x0028(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumHomeEntryObjectWrapper">();
	}
	static class UFortEmporiumHomeEntryObjectWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumHomeEntryObjectWrapper>();
	}
};
static_assert(alignof(UFortEmporiumHomeEntryObjectWrapper) == 0x000008, "Wrong alignment on UFortEmporiumHomeEntryObjectWrapper");
static_assert(sizeof(UFortEmporiumHomeEntryObjectWrapper) == 0x000030, "Wrong size on UFortEmporiumHomeEntryObjectWrapper");
static_assert(offsetof(UFortEmporiumHomeEntryObjectWrapper, TabPanel) == 0x000028, "Member 'UFortEmporiumHomeEntryObjectWrapper::TabPanel' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumHomeListEntry
// 0x0200 (0x04C0 - 0x02C0)
class UFortEmporiumHomeListEntry final : public UUserWidget
{
public:
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortEmporiumHomeListView*              ParentView;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0x30];                                     // 0x02D0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxItemsToShow;                                    // 0x0300(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortEmporiumItemListTabPanel*          TabPanel;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_CategoryLabel;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaCreativeItemTileView*            HomeListView_ItemOptions;                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x1A0];                                    // 0x0320(0x01A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateWarningMessage(bool bShowMessage);

	EFortItemCardSize GetCardSizeForCategory() const;
	bool GetCollapseBorderPadFlagForCategory() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumHomeListEntry">();
	}
	static class UFortEmporiumHomeListEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumHomeListEntry>();
	}
};
static_assert(alignof(UFortEmporiumHomeListEntry) == 0x000008, "Wrong alignment on UFortEmporiumHomeListEntry");
static_assert(sizeof(UFortEmporiumHomeListEntry) == 0x0004C0, "Wrong size on UFortEmporiumHomeListEntry");
static_assert(offsetof(UFortEmporiumHomeListEntry, ParentView) == 0x0002C8, "Member 'UFortEmporiumHomeListEntry::ParentView' has a wrong offset!");
static_assert(offsetof(UFortEmporiumHomeListEntry, MaxItemsToShow) == 0x000300, "Member 'UFortEmporiumHomeListEntry::MaxItemsToShow' has a wrong offset!");
static_assert(offsetof(UFortEmporiumHomeListEntry, TabPanel) == 0x000308, "Member 'UFortEmporiumHomeListEntry::TabPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumHomeListEntry, Text_CategoryLabel) == 0x000310, "Member 'UFortEmporiumHomeListEntry::Text_CategoryLabel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumHomeListEntry, HomeListView_ItemOptions) == 0x000318, "Member 'UFortEmporiumHomeListEntry::HomeListView_ItemOptions' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumHomeListView
// 0x0260 (0x0E30 - 0x0BD0)
class UFortEmporiumHomeListView final : public UCommonListView
{
public:
	uint8                                         Pad_BD0[0xA0];                                     // 0x0BD0(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortEmporiumItemListTabPanel*>  TabPanelList;                                      // 0x0C70(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C80[0x1B0];                                    // 0x0C80(0x01B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* GetFocusWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumHomeListView">();
	}
	static class UFortEmporiumHomeListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumHomeListView>();
	}
};
static_assert(alignof(UFortEmporiumHomeListView) == 0x000010, "Wrong alignment on UFortEmporiumHomeListView");
static_assert(sizeof(UFortEmporiumHomeListView) == 0x000E30, "Wrong size on UFortEmporiumHomeListView");
static_assert(offsetof(UFortEmporiumHomeListView, TabPanelList) == 0x000C70, "Member 'UFortEmporiumHomeListView::TabPanelList' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumHomeTabPanel
// 0x0040 (0x0488 - 0x0448)
class UFortEmporiumHomeTabPanel final : public UFortCreativeContentBrowserTabPanelBase
{
public:
	uint8                                         Pad_448[0x30];                                     // 0x0448(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FeaturedItemTag;                                   // 0x0478(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortEmporiumHomeListView*              FortEmporiumHomeListView_Options;                  // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumHomeTabPanel">();
	}
	static class UFortEmporiumHomeTabPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumHomeTabPanel>();
	}
};
static_assert(alignof(UFortEmporiumHomeTabPanel) == 0x000008, "Wrong alignment on UFortEmporiumHomeTabPanel");
static_assert(sizeof(UFortEmporiumHomeTabPanel) == 0x000488, "Wrong size on UFortEmporiumHomeTabPanel");
static_assert(offsetof(UFortEmporiumHomeTabPanel, FeaturedItemTag) == 0x000478, "Member 'UFortEmporiumHomeTabPanel::FeaturedItemTag' has a wrong offset!");
static_assert(offsetof(UFortEmporiumHomeTabPanel, FortEmporiumHomeListView_Options) == 0x000480, "Member 'UFortEmporiumHomeTabPanel::FortEmporiumHomeListView_Options' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumItem
// 0x0008 (0x0090 - 0x0088)
class UFortEmporiumItem final : public UFortItem
{
public:
	class UFortEmporiumItemDefinition*            ItemDefinition;                                    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumItem">();
	}
	static class UFortEmporiumItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumItem>();
	}
};
static_assert(alignof(UFortEmporiumItem) == 0x000008, "Wrong alignment on UFortEmporiumItem");
static_assert(sizeof(UFortEmporiumItem) == 0x000090, "Wrong size on UFortEmporiumItem");
static_assert(offsetof(UFortEmporiumItem, ItemDefinition) == 0x000088, "Member 'UFortEmporiumItem::ItemDefinition' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumItemDefinition
// 0x0110 (0x0438 - 0x0328)
class UFortEmporiumItemDefinition final : public UFortItemDefinition
{
public:
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UFortEmporiumItemDefinition* ItemDefinition)> OnItemThumbnailDownloaded;                         // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_340[0xE8];                                     // 0x0340(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ThumbnailTexture;                                  // 0x0428(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_430[0x8];                                      // 0x0430(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const struct FFortEmporiumItemData GetEmporiumItemData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumItemDefinition">();
	}
	static class UFortEmporiumItemDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumItemDefinition>();
	}
};
static_assert(alignof(UFortEmporiumItemDefinition) == 0x000008, "Wrong alignment on UFortEmporiumItemDefinition");
static_assert(sizeof(UFortEmporiumItemDefinition) == 0x000438, "Wrong size on UFortEmporiumItemDefinition");
static_assert(offsetof(UFortEmporiumItemDefinition, OnItemThumbnailDownloaded) == 0x000330, "Member 'UFortEmporiumItemDefinition::OnItemThumbnailDownloaded' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemDefinition, ThumbnailTexture) == 0x000428, "Member 'UFortEmporiumItemDefinition::ThumbnailTexture' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumItemDetailsPanel
// 0x0068 (0x0350 - 0x02E8)
class UFortEmporiumItemDetailsPanel final : public UCommonUserWidget
{
public:
	uint8                                         Pad_2E8[0x30];                                     // 0x02E8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ItemDetailTagsInputRowHandle;                      // 0x0318(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    CachedItemDefinition;                              // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              Switcher_Details;                                  // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortEmporiumItemInfo*                  ItemDetails;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDetailsHostPanel*              LegacyItemDetails;                                 // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleItemTagSelected(class FName TagID, bool bSelected);
	void HideAdditionalButtons();
	void HideExtendedDataPanel();
	bool IsShowingAdditionalButtons();
	void SetActiveItemDetailTags(const TArray<class FName>& ActiveTags);
	void SetItemDetails(const class UFortItem* FortItem, const bool bUseLargeThumbnail, const bool bAllowInteractiveTags);
	void SetItemToDetail(const class UFortItem* InItemToDetail, const bool bUseLargeThumbnail, const bool bAllowInteractiveTags);
	void SetSpecialItemTagVisibility(const class FName& SpecialItemTag);
	void ShowExtendedDataPanel();
	void ToggleItemDetailsPanel();
	void UpdateItemDetailsDisplay(bool bShowItemDetails);

	TArray<class FName> BP_GetSpecialItemTags() const;
	bool HasLegacyItemDetailsPanel() const;
	bool IsShowingExtendedDataPanel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumItemDetailsPanel">();
	}
	static class UFortEmporiumItemDetailsPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumItemDetailsPanel>();
	}
};
static_assert(alignof(UFortEmporiumItemDetailsPanel) == 0x000008, "Wrong alignment on UFortEmporiumItemDetailsPanel");
static_assert(sizeof(UFortEmporiumItemDetailsPanel) == 0x000350, "Wrong size on UFortEmporiumItemDetailsPanel");
static_assert(offsetof(UFortEmporiumItemDetailsPanel, ItemDetailTagsInputRowHandle) == 0x000318, "Member 'UFortEmporiumItemDetailsPanel::ItemDetailTagsInputRowHandle' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemDetailsPanel, CachedItemDefinition) == 0x000330, "Member 'UFortEmporiumItemDetailsPanel::CachedItemDefinition' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemDetailsPanel, Switcher_Details) == 0x000338, "Member 'UFortEmporiumItemDetailsPanel::Switcher_Details' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemDetailsPanel, ItemDetails) == 0x000340, "Member 'UFortEmporiumItemDetailsPanel::ItemDetails' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemDetailsPanel, LegacyItemDetails) == 0x000348, "Member 'UFortEmporiumItemDetailsPanel::LegacyItemDetails' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumItemInfo
// 0x0010 (0x02F8 - 0x02E8)
class UFortEmporiumItemInfo final : public UCommonUserWidget
{
public:
	TArray<class FName>                           HiddenTags;                                        // 0x02E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	void SetSelectItemTagsIcon(const struct FSlateBrush& SelectItemTagsIcon);
	void SetSelectItemTagsPrompt(const class FText& Prompt);
	void SetTagFocus();
	void ShowSelectItemTagsPrompt(bool bShowPrompt);
	void UpdateWithFortItem(const class UFortItem* Item, const bool bAllowInteractiveTags);

	bool HasFocusableTags() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumItemInfo">();
	}
	static class UFortEmporiumItemInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumItemInfo>();
	}
};
static_assert(alignof(UFortEmporiumItemInfo) == 0x000008, "Wrong alignment on UFortEmporiumItemInfo");
static_assert(sizeof(UFortEmporiumItemInfo) == 0x0002F8, "Wrong size on UFortEmporiumItemInfo");
static_assert(offsetof(UFortEmporiumItemInfo, HiddenTags) == 0x0002E8, "Member 'UFortEmporiumItemInfo::HiddenTags' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumCategoryEntry
// 0x0020 (0x0048 - 0x0028)
class UFortEmporiumCategoryEntry final : public UObject
{
public:
	class FString                                 Path;                                              // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Hash;                                              // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumCategoryEntry">();
	}
	static class UFortEmporiumCategoryEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumCategoryEntry>();
	}
};
static_assert(alignof(UFortEmporiumCategoryEntry) == 0x000008, "Wrong alignment on UFortEmporiumCategoryEntry");
static_assert(sizeof(UFortEmporiumCategoryEntry) == 0x000048, "Wrong size on UFortEmporiumCategoryEntry");
static_assert(offsetof(UFortEmporiumCategoryEntry, Path) == 0x000028, "Member 'UFortEmporiumCategoryEntry::Path' has a wrong offset!");
static_assert(offsetof(UFortEmporiumCategoryEntry, Hash) == 0x000038, "Member 'UFortEmporiumCategoryEntry::Hash' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumItemListMenu
// 0x0590 (0x0990 - 0x0400)
class UFortEmporiumItemListMenu final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x30];                                     // 0x0400(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UFortCreativeItemListPanelData> PanelDataClass;                                    // 0x0430(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             ItemListCategorySource;                            // 0x0438(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCreativeItemListPanelData*         ItemListPanelData;                                 // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortEmporiumItemListTabPanel> InventoryTabClass;                                 // 0x0448(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCreativeLevelManagementTabPanel> LevelManagementTabClass;                           // 0x0450(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortEmporiumHomeTabPanel>  HomeTabClass;                                      // 0x0458(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonButtonBase>          InventoryTabButton;                                // 0x0460(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class FText>                Map_CreativeBetaTagNames;                          // 0x0468(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortEmporiumItemListTabPanel*          ChestTabPanel;                                     // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortCreativeLevelManagementTabPanel*   LevelManagementTabPanel;                           // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortEmporiumHomeTabPanel*              HomeTabPanel;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortEmporiumItemListTabPanel*          FabTabPanel;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortEmporiumItemListTabPanel*          SubItemsTabPanel;                                  // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   FabTabNameId;                                      // 0x04E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E4[0xC];                                      // 0x04E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                TabButtonLabelInfo;                                // 0x04F0(0x0110)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAthenaMapScreenContainerTabInfo       MapScreenContainerTabInfo;                         // 0x0600(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          bIsDefaultActiveTab;                               // 0x0648(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAddItemToInventoryOnEquip;                        // 0x0649(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLoadItemsOnInitialized;                           // 0x064A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_64B[0x1];                                      // 0x064B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastUsedSlot;                                      // 0x064C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_650[0x8];                                      // 0x0650(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UFortCreativeContentBrowserTabPanelBase*> TabMap;                                            // 0x0658(0x0050)(ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6A8[0x1C0];                                    // 0x06A8(0x01C0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortEmporiumItemDefinition*>    EmporiumItemDefinitionList;                        // 0x0868(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_878[0x8];                                      // 0x0878(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonAnimatedSwitcher*                Switcher_Categories;                               // 0x0880(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        Switcher_ItemTabWarnings;                          // 0x0888(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_ChestEmpty;                                // 0x0890(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_TabEmpty;                                  // 0x0898(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_DownloadingFabCategories;                  // 0x08A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_FabCategoriesNotLoaded;                    // 0x08A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        Switcher_CommandBar;                               // 0x08B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_ChestCommands;                             // 0x08B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_VendCommands;                              // 0x08C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortCreativeMenuQuickbar*              MenuQuickbar_QuickBars;                            // 0x08C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ResetChest;                                 // 0x08D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_CreateChest;                                // 0x08D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_AddToQuickBar;                              // 0x08E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_OpenItem;                                   // 0x08E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_PlaceNow;                                   // 0x08F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Equip;                                      // 0x08F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_AddToChest;                                 // 0x0900(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Drop;                                       // 0x0908(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_CreateLlama;                                // 0x0910(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_RemoveFromChest;                            // 0x0918(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_SearchFilters;                             // 0x0920(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonAnimatedSwitcher*                Switcher_LeftPanel;                                // 0x0928(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEmporiumBrowserFiltersPanel*           FiltersPanel;                                      // 0x0930(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortEmporiumItemDetailsPanel*          SubTabItemDetailsPanel;                            // 0x0938(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaCustomizationPickerSortAndFilterBlade* Blade_SortAndFilter;                               // 0x0940(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              Switcher_SidePanels;                               // 0x0948(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortEmporiumItemDetailsPanel*          ItemDetailsSidePanel_DefaultSidePanel;             // 0x0950(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              Switcher_ProductPage;                              // 0x0958(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_ItemBrowser;                               // 0x0960(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortEmporiumItemDetailsPanel*          ItemProductPagePanel;                              // 0x0968(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        Switcher_InventoryPermission;                      // 0x0970(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_EmporiumPanel;                             // 0x0978(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_InventoryNotAllowed;                       // 0x0980(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_EditorDisconnected;                        // 0x0988(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	bool AddSelectionToQuickBar();
	bool DropItem(const struct FFortItemEntry& SelectedItem);
	bool EquipItem(const struct FFortItemEntry& ItemEntry);
	bool EquipSelection();
	void HandleAddSelectionToMoveToolComplete();
	void HandleCategoryActivated(class FName CategoryID);
	void HandleCategoryFocused(class FName CategoryID);
	void HandleChestItemCountChanged(int32 Count);
	void HandleEquipItem(const struct FFortItemEntry& ItemEntry);
	void HandleFilterButtonClicked(class FName FilterNameId, class UCommonButtonBase* NewButton);
	void HandleFilterChanged();
	void HandleFilterPanelIsFocused(bool bIsFocused);
	void HandleGlobalSortPanelToggle();
	void HandleItemClicked(const struct FFortItemEntry& ItemEntry);
	void HandleItemDoubleClicked(const struct FFortItemEntry& ItemEntry);
	void HandleItemTagSelected(const class FName& TagID, bool bSelected);
	void HandleItemThumbnailDownloaded(class UFortEmporiumItemDefinition* ItemDefinition);
	void HandleModalHitBlockerClicked();
	void HandleQuickbarPanelIsFocused(bool bIsFocused);
	void HandleQuickbarStateChanged(const EFortContentBrowserQuickbarState State);
	void HandleSelectionChanged(class UFortCreativeContentBrowserTabPanelBase* Tab);
	void HandleSortButtonClicked(class FName SortNameId, class UCommonButtonBase* NewButton);
	void HandleSortChanged();
	void HandleTabItemDetailClicked(const class FName& TagID);
	void HandleTabSelected(class FName TabID, bool bCaptureFocus);
	void HandleTabSortButtonClicked();
	void HandleUpdateCategoryCounts();
	void InitializeFabTab();
	void InitializeTabs();
	void LoadFabItems();
	void NativeOnBuiltInItemsLoaded();
	void NativeOnItemsLoaded();
	void NativeOnItemsRefreshed();
	void OnBuiltInItemsLoaded();
	void OnContentRatingFilterChanged();
	void OnCreativeQuickbarComponentLoaded();
	void OnCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget);
	void OnExitSubTab();
	void OnFabCategoryListLoaded(bool bSuccess, const class FString& JsonString);
	void OnFabItemQueryComplete(bool bSuccess, const class FString& JsonString);
	void OnItemEquipped(const struct FFortItemEntry& EquippedItemEntry);
	void OnItemsLoaded();
	void OnQuickbarStateChanged(const EFortContentBrowserQuickbarState State);
	void OnSearchFiltersVisibilityChanged(bool bIsVisible);
	void OnSelectionOpened(const class UItemDefinitionBase* SelectedItemDefinition);
	void OnShowCategoryModal(bool bShowModal);
	void OnUpdateCommandBarVisibility(bool bShowBar);
	bool OpenSelection();
	bool PlaceSelectionInMoveTool();
	void RefreshTabWarningState();
	void SetIsItemCommandsEnabled(bool bInIsItemCommandEnabled);
	void SetSubTabOpened(class UItemDefinitionBase* ItemDefinition);
	void SpawnContainer(TSubclassOf<class AActor> SupplyDropClass);
	void SwitchItemDetailsPanel(bool bUseLegacy);
	void UpdateBackButtonText(bool bFilterFocus);
	void UpdateDetailsPanel();
	void UpdatePermissionsDisplay();

	bool CanAddToChest(const struct FFortItemEntry& SelectedItem) const;
	bool CanDropItem(const struct FFortItemEntry& SelectedItem) const;
	bool CanEquip(const struct FFortItemEntry& SelectedItem) const;
	struct FFortItemEntry GetCurrentSelection() const;
	class UFortCreativeContentBrowserTabPanelBase* GetCurrentTab() const;
	class FName GetLastSelectedTabName() const;
	class UItemDefinitionBase* GetSubTabSelectedItemDefinition() const;
	bool IsSubTabOpened() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumItemListMenu">();
	}
	static class UFortEmporiumItemListMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumItemListMenu>();
	}
};
static_assert(alignof(UFortEmporiumItemListMenu) == 0x000010, "Wrong alignment on UFortEmporiumItemListMenu");
static_assert(sizeof(UFortEmporiumItemListMenu) == 0x000990, "Wrong size on UFortEmporiumItemListMenu");
static_assert(offsetof(UFortEmporiumItemListMenu, PanelDataClass) == 0x000430, "Member 'UFortEmporiumItemListMenu::PanelDataClass' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, ItemListCategorySource) == 0x000438, "Member 'UFortEmporiumItemListMenu::ItemListCategorySource' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, ItemListPanelData) == 0x000440, "Member 'UFortEmporiumItemListMenu::ItemListPanelData' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, InventoryTabClass) == 0x000448, "Member 'UFortEmporiumItemListMenu::InventoryTabClass' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, LevelManagementTabClass) == 0x000450, "Member 'UFortEmporiumItemListMenu::LevelManagementTabClass' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, HomeTabClass) == 0x000458, "Member 'UFortEmporiumItemListMenu::HomeTabClass' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, InventoryTabButton) == 0x000460, "Member 'UFortEmporiumItemListMenu::InventoryTabButton' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Map_CreativeBetaTagNames) == 0x000468, "Member 'UFortEmporiumItemListMenu::Map_CreativeBetaTagNames' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, ChestTabPanel) == 0x0004B8, "Member 'UFortEmporiumItemListMenu::ChestTabPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, LevelManagementTabPanel) == 0x0004C0, "Member 'UFortEmporiumItemListMenu::LevelManagementTabPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, HomeTabPanel) == 0x0004C8, "Member 'UFortEmporiumItemListMenu::HomeTabPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, FabTabPanel) == 0x0004D0, "Member 'UFortEmporiumItemListMenu::FabTabPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, SubItemsTabPanel) == 0x0004D8, "Member 'UFortEmporiumItemListMenu::SubItemsTabPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, FabTabNameId) == 0x0004E0, "Member 'UFortEmporiumItemListMenu::FabTabNameId' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, TabButtonLabelInfo) == 0x0004F0, "Member 'UFortEmporiumItemListMenu::TabButtonLabelInfo' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, MapScreenContainerTabInfo) == 0x000600, "Member 'UFortEmporiumItemListMenu::MapScreenContainerTabInfo' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, bIsDefaultActiveTab) == 0x000648, "Member 'UFortEmporiumItemListMenu::bIsDefaultActiveTab' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, bAddItemToInventoryOnEquip) == 0x000649, "Member 'UFortEmporiumItemListMenu::bAddItemToInventoryOnEquip' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, bLoadItemsOnInitialized) == 0x00064A, "Member 'UFortEmporiumItemListMenu::bLoadItemsOnInitialized' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, LastUsedSlot) == 0x00064C, "Member 'UFortEmporiumItemListMenu::LastUsedSlot' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, TabMap) == 0x000658, "Member 'UFortEmporiumItemListMenu::TabMap' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, EmporiumItemDefinitionList) == 0x000868, "Member 'UFortEmporiumItemListMenu::EmporiumItemDefinitionList' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_Categories) == 0x000880, "Member 'UFortEmporiumItemListMenu::Switcher_Categories' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_ItemTabWarnings) == 0x000888, "Member 'UFortEmporiumItemListMenu::Switcher_ItemTabWarnings' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_ChestEmpty) == 0x000890, "Member 'UFortEmporiumItemListMenu::Overlay_ChestEmpty' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_TabEmpty) == 0x000898, "Member 'UFortEmporiumItemListMenu::Overlay_TabEmpty' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_DownloadingFabCategories) == 0x0008A0, "Member 'UFortEmporiumItemListMenu::Overlay_DownloadingFabCategories' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_FabCategoriesNotLoaded) == 0x0008A8, "Member 'UFortEmporiumItemListMenu::Overlay_FabCategoriesNotLoaded' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_CommandBar) == 0x0008B0, "Member 'UFortEmporiumItemListMenu::Switcher_CommandBar' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_ChestCommands) == 0x0008B8, "Member 'UFortEmporiumItemListMenu::Overlay_ChestCommands' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_VendCommands) == 0x0008C0, "Member 'UFortEmporiumItemListMenu::Overlay_VendCommands' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, MenuQuickbar_QuickBars) == 0x0008C8, "Member 'UFortEmporiumItemListMenu::MenuQuickbar_QuickBars' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_ResetChest) == 0x0008D0, "Member 'UFortEmporiumItemListMenu::Button_ResetChest' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_CreateChest) == 0x0008D8, "Member 'UFortEmporiumItemListMenu::Button_CreateChest' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_AddToQuickBar) == 0x0008E0, "Member 'UFortEmporiumItemListMenu::Button_AddToQuickBar' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_OpenItem) == 0x0008E8, "Member 'UFortEmporiumItemListMenu::Button_OpenItem' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_PlaceNow) == 0x0008F0, "Member 'UFortEmporiumItemListMenu::Button_PlaceNow' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_Equip) == 0x0008F8, "Member 'UFortEmporiumItemListMenu::Button_Equip' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_AddToChest) == 0x000900, "Member 'UFortEmporiumItemListMenu::Button_AddToChest' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_Drop) == 0x000908, "Member 'UFortEmporiumItemListMenu::Button_Drop' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_CreateLlama) == 0x000910, "Member 'UFortEmporiumItemListMenu::Button_CreateLlama' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Button_RemoveFromChest) == 0x000918, "Member 'UFortEmporiumItemListMenu::Button_RemoveFromChest' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_SearchFilters) == 0x000920, "Member 'UFortEmporiumItemListMenu::Overlay_SearchFilters' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_LeftPanel) == 0x000928, "Member 'UFortEmporiumItemListMenu::Switcher_LeftPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, FiltersPanel) == 0x000930, "Member 'UFortEmporiumItemListMenu::FiltersPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, SubTabItemDetailsPanel) == 0x000938, "Member 'UFortEmporiumItemListMenu::SubTabItemDetailsPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Blade_SortAndFilter) == 0x000940, "Member 'UFortEmporiumItemListMenu::Blade_SortAndFilter' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_SidePanels) == 0x000948, "Member 'UFortEmporiumItemListMenu::Switcher_SidePanels' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, ItemDetailsSidePanel_DefaultSidePanel) == 0x000950, "Member 'UFortEmporiumItemListMenu::ItemDetailsSidePanel_DefaultSidePanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_ProductPage) == 0x000958, "Member 'UFortEmporiumItemListMenu::Switcher_ProductPage' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_ItemBrowser) == 0x000960, "Member 'UFortEmporiumItemListMenu::Overlay_ItemBrowser' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, ItemProductPagePanel) == 0x000968, "Member 'UFortEmporiumItemListMenu::ItemProductPagePanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Switcher_InventoryPermission) == 0x000970, "Member 'UFortEmporiumItemListMenu::Switcher_InventoryPermission' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_EmporiumPanel) == 0x000978, "Member 'UFortEmporiumItemListMenu::Overlay_EmporiumPanel' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_InventoryNotAllowed) == 0x000980, "Member 'UFortEmporiumItemListMenu::Overlay_InventoryNotAllowed' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListMenu, Overlay_EditorDisconnected) == 0x000988, "Member 'UFortEmporiumItemListMenu::Overlay_EditorDisconnected' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumItemListTabPanel
// 0x0408 (0x0850 - 0x0448)
class UFortEmporiumItemListTabPanel final : public UFortCreativeContentBrowserTabPanelBase
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Count)>   OnSourceItemCountChanged;                          // 0x0450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(struct FFortItemEntry& ItemClicked)> OnItemClickedDelegate;                             // 0x0460(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(struct FFortItemEntry& ItemClicked)> OnItemDoubleClickedDelegate;                       // 0x0470(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_480[0x30];                                     // 0x0480(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaCreativeItemTileView*            CreativeTileView_ItemOptions;                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_Sort;                                       // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortItemEntry                         CurrentItemEntry;                                  // 0x04C0(0x01A0)(BlueprintVisible, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(int32 Count)>   OnItemCountChanged;                                // 0x0660(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemEntry>                 Items;                                             // 0x0670(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemEntry>                 SourceItems;                                       // 0x0680(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_690[0x1A8];                                    // 0x0690(0x01A8)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortEmporiumItemListMenu*              EmporiumItemListMenuParent;                        // 0x0838(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_840[0x10];                                     // 0x0840(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddItem(struct FFortItemEntry& ItemToAdd);
	void AddItemToSource(struct FFortItemEntry& ItemToAdd);
	void ClearAllItems();
	void ClearFilteredItems();
	void FocusCurrentSelection();
	void HandleItemDetailTagSelected(const class FName& TagID);
	bool IsEmpty();
	void ItemEquipped(const struct FFortItemEntry& Item);
	void RemoveSelectedItem();
	void RestoreLastSelection();
	void SetActiveItemDetailTags(const TArray<class FName>& TagIDs);
	void ShowTopButtonBar(bool bShow);
	void UpdateSortButton(const class FText& SortType);
	void UpdateTabHeader();

	bool CanPlayerCreateInVolume() const;
	EFortItemCardSize GetCardSizeForCategory() const;
	bool GetCollapseBorderPadFlagForCategory() const;
	class UItemDefinitionBase* GetSubTabSelectedItemDefinition() const;
	bool IsSubTabOpened() const;
	bool ShowLegacyItemDetailsPanel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumItemListTabPanel">();
	}
	static class UFortEmporiumItemListTabPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumItemListTabPanel>();
	}
};
static_assert(alignof(UFortEmporiumItemListTabPanel) == 0x000008, "Wrong alignment on UFortEmporiumItemListTabPanel");
static_assert(sizeof(UFortEmporiumItemListTabPanel) == 0x000850, "Wrong size on UFortEmporiumItemListTabPanel");
static_assert(offsetof(UFortEmporiumItemListTabPanel, OnSourceItemCountChanged) == 0x000450, "Member 'UFortEmporiumItemListTabPanel::OnSourceItemCountChanged' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, OnItemClickedDelegate) == 0x000460, "Member 'UFortEmporiumItemListTabPanel::OnItemClickedDelegate' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, OnItemDoubleClickedDelegate) == 0x000470, "Member 'UFortEmporiumItemListTabPanel::OnItemDoubleClickedDelegate' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, CreativeTileView_ItemOptions) == 0x0004B0, "Member 'UFortEmporiumItemListTabPanel::CreativeTileView_ItemOptions' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, Button_Sort) == 0x0004B8, "Member 'UFortEmporiumItemListTabPanel::Button_Sort' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, CurrentItemEntry) == 0x0004C0, "Member 'UFortEmporiumItemListTabPanel::CurrentItemEntry' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, OnItemCountChanged) == 0x000660, "Member 'UFortEmporiumItemListTabPanel::OnItemCountChanged' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, Items) == 0x000670, "Member 'UFortEmporiumItemListTabPanel::Items' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, SourceItems) == 0x000680, "Member 'UFortEmporiumItemListTabPanel::SourceItems' has a wrong offset!");
static_assert(offsetof(UFortEmporiumItemListTabPanel, EmporiumItemListMenuParent) == 0x000838, "Member 'UFortEmporiumItemListTabPanel::EmporiumItemListMenuParent' has a wrong offset!");

// Class CreativeEmporiumUI.FortEmporiumUtilities
// 0x0000 (0x0028 - 0x0028)
class UFortEmporiumUtilities final : public UBlueprintFunctionLibrary
{
public:
	static const class FText GetCategoryDisplayName(const class FName& CategoryID);
	static TArray<class FName> GetCreativeTagIDs(const class UItemDefinitionBase* ItemDefinition);
	static class FText GetCreativeTagLabel(const class FName& TagID, bool* bOutIsBeta);
	static const class FText GetTextFromEmporiumLicense(const EFortEmporiumItemLicense License);
	static void RequestJSON(const class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueNetId, const class FString& JSONURL, const TDelegate<void(bool bSuccess, const class FString& JsonString)>& Callback);
	static void RequestLicenseText(const EFortEmporiumItemLicense License, const TDelegate<void(bool bSuccess, const class FString& LicenseText)>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortEmporiumUtilities">();
	}
	static class UFortEmporiumUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortEmporiumUtilities>();
	}
};
static_assert(alignof(UFortEmporiumUtilities) == 0x000008, "Wrong alignment on UFortEmporiumUtilities");
static_assert(sizeof(UFortEmporiumUtilities) == 0x000028, "Wrong size on UFortEmporiumUtilities");

}

