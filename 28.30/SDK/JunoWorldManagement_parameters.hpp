#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoWorldManagement

#include "Basic.hpp"

#include "JsonUtilities_structs.hpp"
#include "McpProfileSys_structs.hpp"


namespace SDK::Params
{

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_CreateWorld
// 0x00A0 (0x00A0 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld final
{
public:
	struct FJsonObjectWrapper                     world_metadata;                                    // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FClientUrlContext                      Context;                                           // 0x0020(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld) == 0x0000A0, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld, world_metadata) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld::world_metadata' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld, Context) == 0x000020, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_CreateWorld::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_DeleteAllWorlds
// 0x0080 (0x0080 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds final
{
public:
	struct FClientUrlContext                      Context;                                           // 0x0000(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds) == 0x000080, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds, Context) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_DeleteAllWorlds::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_DeleteWorld
// 0x0090 (0x0090 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld final
{
public:
	class FString                                 WorldId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUrlContext                      Context;                                           // 0x0010(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld) == 0x000090, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld, WorldId) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld::WorldId' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld, Context) == 0x000010, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_DeleteWorld::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_MarkWorldDeleted
// 0x0090 (0x0090 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted final
{
public:
	class FString                                 WorldId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUrlContext                      Context;                                           // 0x0010(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted) == 0x000090, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted, WorldId) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted::WorldId' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted, Context) == 0x000010, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_MarkWorldDeleted::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_SetWorldName
// 0x00A0 (0x00A0 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName final
{
public:
	class FString                                 WorldId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUrlContext                      Context;                                           // 0x0020(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName) == 0x0000A0, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName, WorldId) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName::WorldId' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName, Name_0) == 0x000010, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName::Name_0' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName, Context) == 0x000020, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_SetWorldName::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_UpdateWorldLastAccessTime
// 0x0090 (0x0090 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime final
{
public:
	class FString                                 WorldId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUrlContext                      Context;                                           // 0x0010(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime) == 0x000090, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime, WorldId) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime::WorldId' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime, Context) == 0x000010, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldLastAccessTime::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_UpdateWorldMetadata
// 0x00B0 (0x00B0 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata final
{
public:
	class FString                                 WorldId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonObjectWrapper                     WorldMetadata;                                     // 0x0010(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FClientUrlContext                      Context;                                           // 0x0030(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata) == 0x0000B0, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata, WorldId) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata::WorldId' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata, WorldMetadata) == 0x000010, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata::WorldMetadata' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata, Context) == 0x000030, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldMetadata::Context' has a wrong offset!");

// Function JunoWorldManagement.JunoWorldMCPProto_Profile.ProtoJuno_UpdateWorldSysMetadata
// 0x00B0 (0x00B0 - 0x0000)
struct JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata final
{
public:
	class FString                                 WorldId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonObjectWrapper                     SysMetadata;                                       // 0x0010(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDedicatedServerUrlContext             Context;                                           // 0x0030(0x0080)(Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata) == 0x000010, "Wrong alignment on JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata");
static_assert(sizeof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata) == 0x0000B0, "Wrong size on JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata, WorldId) == 0x000000, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata::WorldId' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata, SysMetadata) == 0x000010, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata::SysMetadata' has a wrong offset!");
static_assert(offsetof(JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata, Context) == 0x000030, "Member 'JunoWorldMCPProto_Profile_ProtoJuno_UpdateWorldSysMetadata::Context' has a wrong offset!");

}

