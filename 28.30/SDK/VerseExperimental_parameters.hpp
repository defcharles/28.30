#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseExperimental

#include "Basic.hpp"

#include "VerseExperimental_structs.hpp"
#include "VerseNative_structs.hpp"


namespace SDK::Params
{

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0048 (0x0048 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_date_time> RetVal;                                            // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000048, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, RetVal) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_R      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, RetVal) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax
// 0x00D0 (0x00D0 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax final
{
public:
	struct VerseExperimental::Ftuple_L_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_0;                                // 0x0010(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_1;                                     // 0x0060(0x0010)(HasGetValueTypeHash)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_2;                                // 0x0070(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_3;                                     // 0x00C0(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax) == 0x0000D0, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, _ExprResultStack_0) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, _ExprResult_1) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, _ExprResultStack_2) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, _ExprResult_3) == 0x0000C0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin
// 0x00D0 (0x00D0 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin final
{
public:
	struct VerseExperimental::Ftuple_L_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_0;                                // 0x0010(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_1;                                     // 0x0060(0x0010)(HasGetValueTypeHash)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_2;                                // 0x0070(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_3;                                     // 0x00C0(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin) == 0x0000D0, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, _ExprResultStack_0) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, _ExprResult_1) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, _ExprResultStack_2) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, _ExprResult_3) == 0x0000C0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R final
{
public:
	struct VerseExperimental::Ftuple_Lint_Mint_R  __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVerseExperimental_date_parts          RetVal;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerseExperimental_day_of_week                RetVal;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerseExperimental_month_of_year              RetVal;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVerseExperimental_time_of_day_parts   RetVal;                                            // 0x0008(0x0030)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R
// 0x0110 (0x0110 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_date_time> RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVerseExperimental_date_time           _ExprResult_0;                                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0028(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResult_4;                                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00A0(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x00F0(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R) == 0x000110, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResult_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResult_2) == 0x000078, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_3) == 0x000088, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResult_4) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_5) == 0x0000A0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResult_6) == 0x0000F0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_7) == 0x000100, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R
// 0x0138 (0x0138 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_time_span> RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor)
	struct FVerseExperimental_time_span           _ExprResult_0;                                     // 0x0038(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0048(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0098(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           _ExprResult_4;                                     // 0x00B8(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00C8(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x0118(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R) == 0x000138, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResult_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResult_2) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_3) == 0x0000A8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResult_4) == 0x0000B8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_5) == 0x0000C8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResult_6) == 0x000118, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_7) == 0x000128, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R
// 0x0110 (0x0110 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_date_time> RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVerseExperimental_date_time           _ExprResult_0;                                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0028(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResult_4;                                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00A0(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x00F0(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R) == 0x000110, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_2) == 0x000078, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_3) == 0x000088, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_4) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_5) == 0x0000A0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_6) == 0x0000F0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_7) == 0x000100, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R
// 0x0138 (0x0138 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_time_span> RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor)
	struct FVerseExperimental_time_span           _ExprResult_0;                                     // 0x0038(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0048(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0098(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           _ExprResult_4;                                     // 0x00B8(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00C8(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x0118(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R) == 0x000138, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_2) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_3) == 0x0000A8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_4) == 0x0000B8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_5) == 0x0000C8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_6) == 0x000118, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_7) == 0x000128, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R
// 0x0110 (0x0110 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_date_time> RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVerseExperimental_date_time           _ExprResult_0;                                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0028(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResult_4;                                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00A0(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x00F0(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R) == 0x000110, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResult_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResult_2) == 0x000078, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_3) == 0x000088, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResult_4) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_5) == 0x0000A0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResult_6) == 0x0000F0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_7) == 0x000100, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R
// 0x0138 (0x0138 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_time_span> RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor)
	struct FVerseExperimental_time_span           _ExprResult_0;                                     // 0x0038(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0048(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0098(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           _ExprResult_4;                                     // 0x00B8(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00C8(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x0118(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R) == 0x000138, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResult_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResult_2) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_3) == 0x0000A8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResult_4) == 0x0000B8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_5) == 0x0000C8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResult_6) == 0x000118, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_7) == 0x000128, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R
// 0x0110 (0x0110 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_date_time> RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVerseExperimental_date_time           _ExprResult_0;                                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0028(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResult_4;                                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00A0(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x00F0(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R) == 0x000110, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_2) == 0x000078, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_3) == 0x000088, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_4) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_5) == 0x0000A0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResult_6) == 0x0000F0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _ExprResultStack_7) == 0x000100, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R
// 0x0138 (0x0138 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	TOptional<struct FVerseExperimental_time_span> RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor)
	struct FVerseExperimental_time_span           _ExprResult_0;                                     // 0x0038(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_1;                                // 0x0048(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0098(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_3;                                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           _ExprResult_4;                                     // 0x00B8(0x0010)(NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_5;                                // 0x00C8(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_6;                                     // 0x0118(0x0010)(HasGetValueTypeHash)
	TOptional<int64>                              _ExprResultStack_7;                                // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R) == 0x000138, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_2) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_3) == 0x0000A8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_4) == 0x0000B8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_5) == 0x0000C8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResult_6) == 0x000118, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _ExprResultStack_7) == 0x000128, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_ExprResultStack_7' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R
// 0x0078 (0x0078 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R final
{
public:
	struct Ftuple_Lfloat_Mtime__span_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0028(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mfloat_R            _ExprResult_1;                                     // 0x0038(0x0018)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0050(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mfloat_R            _ExprResult_3;                                     // 0x0060(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R) == 0x000078, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R, _Callee_0) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R, _ExprResult_1) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R, _Callee_2) == 0x000050, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R, _ExprResult_3) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Nfloat_M_Ntime__span_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R
// 0x0078 (0x0078 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0028(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mfloat_R            _ExprResult_1;                                     // 0x0038(0x0018)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0050(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mfloat_R            _ExprResult_3;                                     // 0x0060(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R) == 0x000078, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R, _Callee_0) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R, _ExprResult_1) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R, _Callee_2) == 0x000050, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R, _ExprResult_3) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2a_U_L_Ntime__span_M_Nfloat_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R
// 0x0070 (0x0070 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mtime__span_R       _ExprResult_1;                                     // 0x0030(0x0018)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0048(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mtime__span_R       _ExprResult_3;                                     // 0x0058(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R) == 0x000070, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R, _Callee_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R, _ExprResult_1) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R, _Callee_2) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R, _ExprResult_3) == 0x000058, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ndate__time_M_Ntime__span_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R
// 0x0090 (0x0090 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0030(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mtime__span_R       _ExprResult_1;                                     // 0x0040(0x0020)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0060(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mtime__span_R       _ExprResult_3;                                     // 0x0070(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R) == 0x000090, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R, _Callee_0) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R, _ExprResult_1) == 0x000040, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R, _Callee_2) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R, _ExprResult_3) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2b_U_L_Ntime__span_M_Ntime__span_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R
// 0x0060 (0x0060 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _ExprResult_1;                                     // 0x0030(0x0010)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0040(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _ExprResult_3;                                     // 0x0050(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R) == 0x000060, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R, _Callee_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R, _ExprResult_1) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R, _Callee_2) == 0x000040, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R, _ExprResult_3) == 0x000050, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ndate__time_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R
// 0x0070 (0x0070 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mtime__span_R       _ExprResult_1;                                     // 0x0030(0x0018)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0048(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mtime__span_R       _ExprResult_3;                                     // 0x0058(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R) == 0x000070, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R, _Callee_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R, _ExprResult_1) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R, _Callee_2) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R, _ExprResult_3) == 0x000058, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ndate__time_M_Ntime__span_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R
// 0x0090 (0x0090 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0030(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mtime__span_R       _ExprResult_1;                                     // 0x0040(0x0020)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0060(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mtime__span_R       _ExprResult_3;                                     // 0x0070(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R) == 0x000090, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R, _Callee_0) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R, _ExprResult_1) == 0x000040, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R, _Callee_2) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R, _ExprResult_3) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_M_Ntime__span_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R
// 0x00E0 (0x00E0 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_0;                                // 0x0020(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_1;                                     // 0x0070(0x0010)(HasGetValueTypeHash)
	TMap<FVerseStringProperty_, uint8>            _ExprResultStack_2;                                // 0x0080(0x0050)(ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResult_3;                                     // 0x00D0(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R) == 0x0000E0, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R, _ExprResultStack_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R, _ExprResult_1) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R, _ExprResultStack_2) == 0x000080, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R, _ExprResult_3) == 0x0000D0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2d_U_L_Ntime__span_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R
// 0x0078 (0x0078 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0028(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mfloat_R            _ExprResult_1;                                     // 0x0038(0x0018)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0050(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ltime__span_Mfloat_R            _ExprResult_3;                                     // 0x0060(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R) == 0x000078, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R, _Callee_0) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R, _ExprResult_1) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R, _Callee_2) == 0x000050, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R, _ExprResult_3) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_U_2f_U_L_Ntime__span_M_Nfloat_R::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R
// 0x0030 (0x0030 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R) == 0x000030, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R
// 0x0028 (0x0028 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R) == 0x000028, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R
// 0x0028 (0x0028 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R) == 0x000028, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R
// 0x0030 (0x0030 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R) == 0x000030, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R final
{
public:
	struct FVerseExperimental_time_span           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FVerseStringProperty_                         RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow final
{
public:
	struct VerseExperimental::Ftuple_L_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R
// 0x0150 (0x0150 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R final
{
public:
	struct FVerseExperimental_date_time           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TOptional<EVerseTrue>                         RetVal;                                            // 0x0008(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_0 : 1;                                 // 0x000A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<struct FVerseExperimental_date_time> _ExprResultStack_1;                                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _ExprResult_3;                                     // 0x0030(0x0010)(HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResultStack_4;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_5;                                         // 0x0048(0x0010)(HasGetValueTypeHash)
	struct VerseExperimental::Ftuple_L_R          _ExprResult_6;                                     // 0x0058(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<struct FVerseExperimental_date_time> _ExprResultStack_7;                                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_8;                                         // 0x0070(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _ExprResult_9;                                     // 0x0080(0x0010)(HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResultStack_10;                               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_11;                                        // 0x0098(0x0010)(HasGetValueTypeHash)
	struct VerseExperimental::Ftuple_L_R          _ExprResult_12;                                    // 0x00A8(0x0001)(HasGetValueTypeHash)
	uint8                                         _ExprResult_13 : 1;                                // 0x00A9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<struct FVerseExperimental_date_time> _ExprResultStack_14;                               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_15;                                        // 0x00C0(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _ExprResult_16;                                    // 0x00D0(0x0010)(HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResultStack_17;                               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_18;                                        // 0x00E8(0x0010)(HasGetValueTypeHash)
	struct VerseExperimental::Ftuple_L_R          _ExprResult_19;                                    // 0x00F8(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<struct FVerseExperimental_date_time> _ExprResultStack_20;                               // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_21;                                        // 0x0110(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _ExprResult_22;                                    // 0x0120(0x0010)(HasGetValueTypeHash)
	struct FVerseExperimental_date_time           _ExprResultStack_23;                               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_24;                                        // 0x0138(0x0010)(HasGetValueTypeHash)
	struct VerseExperimental::Ftuple_L_R          _ExprResult_25;                                    // 0x0148(0x0001)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R) == 0x000150, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_1) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_2) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_3) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_4) == 0x000040, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_5) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_6) == 0x000058, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_7) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_7' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_8) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_8' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_9) == 0x000080, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_10) == 0x000090, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_10' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_11) == 0x000098, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_11' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_12) == 0x0000A8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_12' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_14) == 0x0000B0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_14' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_15) == 0x0000C0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_15' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_16) == 0x0000D0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_16' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_17) == 0x0000E0, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_17' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_18) == 0x0000E8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_18' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_19) == 0x0000F8, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_19' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_20) == 0x000100, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_20' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_21) == 0x000110, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_21' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_22) == 0x000120, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_22' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResultStack_23) == 0x000130, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResultStack_23' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _Callee_24) == 0x000138, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_Callee_24' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _ExprResult_25) == 0x000148, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_ExprResult_25' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0040 (0x0040 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000040, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_date_parts$Factory
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental_VerseExperimental_date_parts_Factory final
{
public:
	struct FVerseExperimental_date_parts          RetVal;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental_VerseExperimental_date_parts_Factory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_date_parts_Factory");
static_assert(sizeof(VerseExperimental_VerseExperimental_date_parts_Factory) == 0x000018, "Wrong size on VerseExperimental_VerseExperimental_date_parts_Factory");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_parts_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_date_parts_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_date_parts$OverrideFactory
// 0x0068 (0x0068 - 0x0000)
struct VerseExperimental_VerseExperimental_date_parts_OverrideFactory final
{
public:
	struct FVerseExperimental_date_parts          RetVal;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            __verse_0xFB48ED96__InitOverrideMap;               // 0x0018(0x0050)(ConstParm, Parm, ContainsInstancedReference)
};
static_assert(alignof(VerseExperimental_VerseExperimental_date_parts_OverrideFactory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_date_parts_OverrideFactory");
static_assert(sizeof(VerseExperimental_VerseExperimental_date_parts_OverrideFactory) == 0x000068, "Wrong size on VerseExperimental_VerseExperimental_date_parts_OverrideFactory");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_parts_OverrideFactory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_date_parts_OverrideFactory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_parts_OverrideFactory, __verse_0xFB48ED96__InitOverrideMap) == 0x000018, "Member 'VerseExperimental_VerseExperimental_date_parts_OverrideFactory::__verse_0xFB48ED96__InitOverrideMap' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_date_time$Factory
// 0x0008 (0x0008 - 0x0000)
struct VerseExperimental_VerseExperimental_date_time_Factory final
{
public:
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental_VerseExperimental_date_time_Factory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_date_time_Factory");
static_assert(sizeof(VerseExperimental_VerseExperimental_date_time_Factory) == 0x000008, "Wrong size on VerseExperimental_VerseExperimental_date_time_Factory");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_date_time_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_date_time$OverrideFactory
// 0x0088 (0x0088 - 0x0000)
struct VerseExperimental_VerseExperimental_date_time_OverrideFactory final
{
public:
	struct FVerseExperimental_date_time           RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            __verse_0xFB48ED96__InitOverrideMap;               // 0x0008(0x0050)(ConstParm, Parm, ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResultStack_0;                                // 0x0058(0x0010)(HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResult_1;                                     // 0x0068(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         _ExprResultStack_2;                                // 0x0070(0x0010)(HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResult_3;                                     // 0x0080(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental_VerseExperimental_date_time_OverrideFactory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_date_time_OverrideFactory");
static_assert(sizeof(VerseExperimental_VerseExperimental_date_time_OverrideFactory) == 0x000088, "Wrong size on VerseExperimental_VerseExperimental_date_time_OverrideFactory");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_OverrideFactory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_date_time_OverrideFactory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_OverrideFactory, __verse_0xFB48ED96__InitOverrideMap) == 0x000008, "Member 'VerseExperimental_VerseExperimental_date_time_OverrideFactory::__verse_0xFB48ED96__InitOverrideMap' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_OverrideFactory, _ExprResultStack_0) == 0x000058, "Member 'VerseExperimental_VerseExperimental_date_time_OverrideFactory::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_OverrideFactory, _ExprResult_1) == 0x000068, "Member 'VerseExperimental_VerseExperimental_date_time_OverrideFactory::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_OverrideFactory, _ExprResultStack_2) == 0x000070, "Member 'VerseExperimental_VerseExperimental_date_time_OverrideFactory::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_date_time_OverrideFactory, _ExprResult_3) == 0x000080, "Member 'VerseExperimental_VerseExperimental_date_time_OverrideFactory::_ExprResult_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_time_of_day_parts$Factory
// 0x0030 (0x0030 - 0x0000)
struct VerseExperimental_VerseExperimental_time_of_day_parts_Factory final
{
public:
	struct FVerseExperimental_time_of_day_parts   RetVal;                                            // 0x0000(0x0030)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental_VerseExperimental_time_of_day_parts_Factory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_time_of_day_parts_Factory");
static_assert(sizeof(VerseExperimental_VerseExperimental_time_of_day_parts_Factory) == 0x000030, "Wrong size on VerseExperimental_VerseExperimental_time_of_day_parts_Factory");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_of_day_parts_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_time_of_day_parts_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_time_of_day_parts$OverrideFactory
// 0x0080 (0x0080 - 0x0000)
struct VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory final
{
public:
	struct FVerseExperimental_time_of_day_parts   RetVal;                                            // 0x0000(0x0030)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            __verse_0xFB48ED96__InitOverrideMap;               // 0x0030(0x0050)(ConstParm, Parm, ContainsInstancedReference)
};
static_assert(alignof(VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory");
static_assert(sizeof(VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory) == 0x000080, "Wrong size on VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory, __verse_0xFB48ED96__InitOverrideMap) == 0x000030, "Member 'VerseExperimental_VerseExperimental_time_of_day_parts_OverrideFactory::__verse_0xFB48ED96__InitOverrideMap' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_time_span$Factory
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental_VerseExperimental_time_span_Factory final
{
public:
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental_VerseExperimental_time_span_Factory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_time_span_Factory");
static_assert(sizeof(VerseExperimental_VerseExperimental_time_span_Factory) == 0x000010, "Wrong size on VerseExperimental_VerseExperimental_time_span_Factory");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_time_span_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.VerseExperimental_time_span$OverrideFactory
// 0x0090 (0x0090 - 0x0000)
struct VerseExperimental_VerseExperimental_time_span_OverrideFactory final
{
public:
	struct FVerseExperimental_time_span           RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TMap<FVerseStringProperty_, uint8>            __verse_0xFB48ED96__InitOverrideMap;               // 0x0010(0x0050)(ConstParm, Parm, ContainsInstancedReference)
	FVerseStringProperty_                         _ExprResultStack_0;                                // 0x0060(0x0010)(HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResult_1;                                     // 0x0070(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         _ExprResultStack_2;                                // 0x0078(0x0010)(HasGetValueTypeHash)
	TOptional<uint8>                              _ExprResult_3;                                     // 0x0088(0x0002)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental_VerseExperimental_time_span_OverrideFactory) == 0x000008, "Wrong alignment on VerseExperimental_VerseExperimental_time_span_OverrideFactory");
static_assert(sizeof(VerseExperimental_VerseExperimental_time_span_OverrideFactory) == 0x000090, "Wrong size on VerseExperimental_VerseExperimental_time_span_OverrideFactory");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_OverrideFactory, RetVal) == 0x000000, "Member 'VerseExperimental_VerseExperimental_time_span_OverrideFactory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_OverrideFactory, __verse_0xFB48ED96__InitOverrideMap) == 0x000010, "Member 'VerseExperimental_VerseExperimental_time_span_OverrideFactory::__verse_0xFB48ED96__InitOverrideMap' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_OverrideFactory, _ExprResultStack_0) == 0x000060, "Member 'VerseExperimental_VerseExperimental_time_span_OverrideFactory::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_OverrideFactory, _ExprResult_1) == 0x000070, "Member 'VerseExperimental_VerseExperimental_time_span_OverrideFactory::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_OverrideFactory, _ExprResultStack_2) == 0x000078, "Member 'VerseExperimental_VerseExperimental_time_span_OverrideFactory::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental_VerseExperimental_time_span_OverrideFactory, _ExprResult_3) == 0x000088, "Member 'VerseExperimental_VerseExperimental_time_span_OverrideFactory::_ExprResult_3' has a wrong offset!");

}

