#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Augments_QuickbarSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.ExecuteUbergraph_WBP_Augments_QuickbarSlot
// 0x0058 (0x0058 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_IconSoftReference;              // 0x0008(0x0020)(HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot) == 0x000008, "Wrong alignment on WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot) == 0x000058, "Wrong size on WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, EntryPoint) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, K2Node_CustomEvent_IconSoftReference) == 0x000008, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::K2Node_CustomEvent_IconSoftReference' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, K2Node_CustomEvent_Loaded) == 0x000028, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, Temp_object_Variable) == 0x000040, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, K2Node_DynamicCast_AsTexture) == 0x000048, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Augments_QuickbarSlot_C_ExecuteUbergraph_WBP_Augments_QuickbarSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.LoadAndSetIcon
// 0x0020 (0x0020 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_LoadAndSetIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              IconSoftReference;                                 // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_LoadAndSetIcon) == 0x000008, "Wrong alignment on WBP_Augments_QuickbarSlot_C_LoadAndSetIcon");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_LoadAndSetIcon) == 0x000020, "Wrong size on WBP_Augments_QuickbarSlot_C_LoadAndSetIcon");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_LoadAndSetIcon, IconSoftReference) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_LoadAndSetIcon::IconSoftReference' has a wrong offset!");

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D
// 0x0008 (0x0008 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D) == 0x000008, "Wrong alignment on WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D) == 0x000008, "Wrong size on WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D, Loaded) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_OnLoaded_C6F71B364BA9B7E72BED3AABF552FB1D::Loaded' has a wrong offset!");

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.SetAsEmptySlot
// 0x0068 (0x0068 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_SetAsEmptySlot final
{
public:
	bool                                          IsNextAugment;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Live_Spectator;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           FocusedSlotColor;                                  // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnfocusedSlotColor;                                // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortLiveSpectatorController*           K2Node_DynamicCast_AsFort_Live_Spectator_Controller; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot) == 0x000008, "Wrong alignment on WBP_Augments_QuickbarSlot_C_SetAsEmptySlot");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot) == 0x000068, "Wrong size on WBP_Augments_QuickbarSlot_C_SetAsEmptySlot");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, IsNextAugment) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::IsNextAugment' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Is_Live_Spectator) == 0x000001, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Is_Live_Spectator' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, FocusedSlotColor) == 0x000004, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::FocusedSlotColor' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, UnfocusedSlotColor) == 0x000014, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::UnfocusedSlotColor' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Temp_bool_Variable) == 0x000024, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Temp_byte_Variable) == 0x000025, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Temp_byte_Variable_1) == 0x000026, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Temp_bool_Variable_1) == 0x000027, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Temp_byte_Variable_2) == 0x000028, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, Temp_byte_Variable_3) == 0x000029, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, K2Node_DynamicCast_AsFort_Live_Spectator_Controller) == 0x000038, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::K2Node_DynamicCast_AsFort_Live_Spectator_Controller' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_GetEndTime_ReturnValue) == 0x000044, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, K2Node_Select_Default) == 0x000059, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, K2Node_Select_Default_1) == 0x00005A, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsEmptySlot, CallFunc_PlayAnimation_ReturnValue_2) == 0x000060, "Member 'WBP_Augments_QuickbarSlot_C_SetAsEmptySlot::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.SetAsNewAugment
// 0x0005 (0x0005 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_SetAsNewAugment final
{
public:
	bool                                          IsNewAugment;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment) == 0x000001, "Wrong alignment on WBP_Augments_QuickbarSlot_C_SetAsNewAugment");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment) == 0x000005, "Wrong size on WBP_Augments_QuickbarSlot_C_SetAsNewAugment");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment, IsNewAugment) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_SetAsNewAugment::IsNewAugment' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment, Temp_bool_Variable) == 0x000001, "Member 'WBP_Augments_QuickbarSlot_C_SetAsNewAugment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment, Temp_byte_Variable) == 0x000002, "Member 'WBP_Augments_QuickbarSlot_C_SetAsNewAugment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Augments_QuickbarSlot_C_SetAsNewAugment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAsNewAugment, K2Node_Select_Default) == 0x000004, "Member 'WBP_Augments_QuickbarSlot_C_SetAsNewAugment::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.SetAugmentInfo
// 0x0028 (0x0028 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_SetAugmentInfo final
{
public:
	class UFortPlayerAugmentItemDefinition*       InAugmentData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetHUDEffectImage_ReturnValue;            // 0x0008(0x0020)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_SetAugmentInfo) == 0x000008, "Wrong alignment on WBP_Augments_QuickbarSlot_C_SetAugmentInfo");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_SetAugmentInfo) == 0x000028, "Wrong size on WBP_Augments_QuickbarSlot_C_SetAugmentInfo");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAugmentInfo, InAugmentData) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_SetAugmentInfo::InAugmentData' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_SetAugmentInfo, CallFunc_GetHUDEffectImage_ReturnValue) == 0x000008, "Member 'WBP_Augments_QuickbarSlot_C_SetAugmentInfo::CallFunc_GetHUDEffectImage_ReturnValue' has a wrong offset!");

// Function WBP_Augments_QuickbarSlot.WBP_Augments_QuickbarSlot_C.UpdateAugmentIcon
// 0x0010 (0x0010 - 0x0000)
struct WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon final
{
public:
	class UTexture*                               AugmentIcon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon) == 0x000008, "Wrong alignment on WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon");
static_assert(sizeof(WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon) == 0x000010, "Wrong size on WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon, AugmentIcon) == 0x000000, "Member 'WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon::AugmentIcon' has a wrong offset!");
static_assert(offsetof(WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_Augments_QuickbarSlot_C_UpdateAugmentIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

