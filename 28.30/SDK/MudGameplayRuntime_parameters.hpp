#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MudGameplayRuntime

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function MudGameplayRuntime.FortPawnComponent_Mud.HandleASCInitialized
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_Mud_HandleASCInitialized final
{
public:
	class UFortAbilitySystemComponent*            AbilitySystemComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                        AffectedPawn;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPawnComponent_Mud_HandleASCInitialized) == 0x000008, "Wrong alignment on FortPawnComponent_Mud_HandleASCInitialized");
static_assert(sizeof(FortPawnComponent_Mud_HandleASCInitialized) == 0x000010, "Wrong size on FortPawnComponent_Mud_HandleASCInitialized");
static_assert(offsetof(FortPawnComponent_Mud_HandleASCInitialized, AbilitySystemComponent) == 0x000000, "Member 'FortPawnComponent_Mud_HandleASCInitialized::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_HandleASCInitialized, AffectedPawn) == 0x000008, "Member 'FortPawnComponent_Mud_HandleASCInitialized::AffectedPawn' has a wrong offset!");

// Function MudGameplayRuntime.FortPawnComponent_Mud.HandleSurfaceTypeChanged
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_Mud_HandleSurfaceTypeChanged final
{
public:
	class AActor*                                 SurfaceActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPhysicalSurface                              CurrentSurfaceType;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPhysicalSurface                              PrevSurfaceType;                                   // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPawnComponent_Mud_HandleSurfaceTypeChanged) == 0x000008, "Wrong alignment on FortPawnComponent_Mud_HandleSurfaceTypeChanged");
static_assert(sizeof(FortPawnComponent_Mud_HandleSurfaceTypeChanged) == 0x000010, "Wrong size on FortPawnComponent_Mud_HandleSurfaceTypeChanged");
static_assert(offsetof(FortPawnComponent_Mud_HandleSurfaceTypeChanged, SurfaceActor) == 0x000000, "Member 'FortPawnComponent_Mud_HandleSurfaceTypeChanged::SurfaceActor' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_HandleSurfaceTypeChanged, CurrentSurfaceType) == 0x000008, "Member 'FortPawnComponent_Mud_HandleSurfaceTypeChanged::CurrentSurfaceType' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_HandleSurfaceTypeChanged, PrevSurfaceType) == 0x000009, "Member 'FortPawnComponent_Mud_HandleSurfaceTypeChanged::PrevSurfaceType' has a wrong offset!");

// Function MudGameplayRuntime.FortPawnComponent_Mud.OnAttachedParentCoveredInMud
// 0x00B0 (0x00B0 - 0x0000)
struct FortPawnComponent_Mud_OnAttachedParentCoveredInMud final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPawnComponent_Mud_OnAttachedParentCoveredInMud) == 0x000008, "Wrong alignment on FortPawnComponent_Mud_OnAttachedParentCoveredInMud");
static_assert(sizeof(FortPawnComponent_Mud_OnAttachedParentCoveredInMud) == 0x0000B0, "Wrong size on FortPawnComponent_Mud_OnAttachedParentCoveredInMud");
static_assert(offsetof(FortPawnComponent_Mud_OnAttachedParentCoveredInMud, Payload) == 0x000000, "Member 'FortPawnComponent_Mud_OnAttachedParentCoveredInMud::Payload' has a wrong offset!");

// Function MudGameplayRuntime.FortPawnComponent_Mud.OnCreatureSprintingTagCountChanged
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewCount;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged) == 0x000004, "Wrong alignment on FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged");
static_assert(sizeof(FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged) == 0x000008, "Wrong size on FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged");
static_assert(offsetof(FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged, tag) == 0x000000, "Member 'FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged::tag' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged, NewCount) == 0x000004, "Member 'FortPawnComponent_Mud_OnCreatureSprintingTagCountChanged::NewCount' has a wrong offset!");

// Function MudGameplayRuntime.FortPawnComponent_Mud.OnCurieFireTagCountChanged
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_Mud_OnCurieFireTagCountChanged final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewCount;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPawnComponent_Mud_OnCurieFireTagCountChanged) == 0x000004, "Wrong alignment on FortPawnComponent_Mud_OnCurieFireTagCountChanged");
static_assert(sizeof(FortPawnComponent_Mud_OnCurieFireTagCountChanged) == 0x000008, "Wrong size on FortPawnComponent_Mud_OnCurieFireTagCountChanged");
static_assert(offsetof(FortPawnComponent_Mud_OnCurieFireTagCountChanged, tag) == 0x000000, "Member 'FortPawnComponent_Mud_OnCurieFireTagCountChanged::tag' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_OnCurieFireTagCountChanged, NewCount) == 0x000004, "Member 'FortPawnComponent_Mud_OnCurieFireTagCountChanged::NewCount' has a wrong offset!");

// Function MudGameplayRuntime.FortPawnComponent_Mud.OnSlidingTagCountChanged
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_Mud_OnSlidingTagCountChanged final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewCount;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPawnComponent_Mud_OnSlidingTagCountChanged) == 0x000004, "Wrong alignment on FortPawnComponent_Mud_OnSlidingTagCountChanged");
static_assert(sizeof(FortPawnComponent_Mud_OnSlidingTagCountChanged) == 0x000008, "Wrong size on FortPawnComponent_Mud_OnSlidingTagCountChanged");
static_assert(offsetof(FortPawnComponent_Mud_OnSlidingTagCountChanged, tag) == 0x000000, "Member 'FortPawnComponent_Mud_OnSlidingTagCountChanged::tag' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_OnSlidingTagCountChanged, NewCount) == 0x000004, "Member 'FortPawnComponent_Mud_OnSlidingTagCountChanged::NewCount' has a wrong offset!");

// Function MudGameplayRuntime.FortPawnComponent_Mud.OnSprintingTagCountChanged
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_Mud_OnSprintingTagCountChanged final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewCount;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPawnComponent_Mud_OnSprintingTagCountChanged) == 0x000004, "Wrong alignment on FortPawnComponent_Mud_OnSprintingTagCountChanged");
static_assert(sizeof(FortPawnComponent_Mud_OnSprintingTagCountChanged) == 0x000008, "Wrong size on FortPawnComponent_Mud_OnSprintingTagCountChanged");
static_assert(offsetof(FortPawnComponent_Mud_OnSprintingTagCountChanged, tag) == 0x000000, "Member 'FortPawnComponent_Mud_OnSprintingTagCountChanged::tag' has a wrong offset!");
static_assert(offsetof(FortPawnComponent_Mud_OnSprintingTagCountChanged, NewCount) == 0x000004, "Member 'FortPawnComponent_Mud_OnSprintingTagCountChanged::NewCount' has a wrong offset!");

}

