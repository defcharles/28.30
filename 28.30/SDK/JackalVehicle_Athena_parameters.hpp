#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JackalVehicle_Athena

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.CurrentBoostCharge
// 0x00E8 (0x00E8 - 0x0000)
struct JackalVehicle_Athena_C_CurrentBoostCharge final
{
public:
	double                                        Charge_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortRechargingActionTimer             CallFunc_GetCurrentBoostTimer_ReturnValue;         // 0x0008(0x00D8)()
	double                                        K2Node_FunctionResult_Charge_Value_ImplicitCast;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_CurrentBoostCharge) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_CurrentBoostCharge");
static_assert(sizeof(JackalVehicle_Athena_C_CurrentBoostCharge) == 0x0000E8, "Wrong size on JackalVehicle_Athena_C_CurrentBoostCharge");
static_assert(offsetof(JackalVehicle_Athena_C_CurrentBoostCharge, Charge_Value) == 0x000000, "Member 'JackalVehicle_Athena_C_CurrentBoostCharge::Charge_Value' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_CurrentBoostCharge, CallFunc_GetCurrentBoostTimer_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_CurrentBoostCharge::CallFunc_GetCurrentBoostTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_CurrentBoostCharge, K2Node_FunctionResult_Charge_Value_ImplicitCast) == 0x0000E0, "Member 'JackalVehicle_Athena_C_CurrentBoostCharge::K2Node_FunctionResult_Charge_Value_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.DestroyBuildingPiece
// 0x0058 (0x0058 - 0x0000)
struct JackalVehicle_Athena_C_DestroyBuildingPiece final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DestroyThreshold;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0030(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_DestroyBuildingPiece) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_DestroyBuildingPiece");
static_assert(sizeof(JackalVehicle_Athena_C_DestroyBuildingPiece) == 0x000058, "Wrong size on JackalVehicle_Athena_C_DestroyBuildingPiece");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, BuildingActor) == 0x000000, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::BuildingActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, DestroyThreshold) == 0x000008, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::DestroyThreshold' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_GetMaxHealth_ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000028, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_MakeEffectContext_ReturnValue) == 0x000030, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000048, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ExecuteUbergraph_JackalVehicle_Athena
// 0x0A30 (0x0A30 - 0x0000)
struct JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Charge_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Charge;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0028(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormalImpulse;                     // 0x0040(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitFrictionImpulse;                   // 0x0058(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0070(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_HitSurfaceType;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateSurfaceType_Output;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCollision_OutResult;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnCollision_OutMagnitude;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRenderingDetailMode_ReturnValue;       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULegacyCameraShake*                     CallFunc_Conv_LegacyCameraShake_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0100(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_3;         // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UAthenaItemWrapDefinition*        K2Node_Event_LoadedWrap;                           // 0x0198(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01D0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDestroyProp__ReturnValue;           // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x03C0(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x03F8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x04F0(0x0018)()
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0530(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_Event_ExitingPawn_1;                        // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExitDuration;                         // 0x05F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_ExitingPawn;                          // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0600(0x00B0)()
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0718(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue_1;           // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0730(0x0020)()
	bool                                          K2Node_CustomEvent_Hide;                           // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn;                           // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExitSocketName;                       // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0765(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_766[0x2];                                      // 0x0766(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn_1;                         // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SeatIdx;                              // 0x0790(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795[0x3];                                      // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVehicleVelocity_ReturnValue;           // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue; // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x07B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_Event_Pawn;                                 // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Duration;                             // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    K2Node_Event_WaterBody_1;                          // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData_1;             // 0x07D8(0x00B0)()
	class AFortWaterBodyActor*                    K2Node_Event_WaterBody;                            // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfacePoint_1;                  // 0x0890(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfacePoint;                    // 0x08D0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x08E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0900(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x0918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_3;       // 0x0920(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWaterSurfaceInfo                      CallFunc_GetWaterSurfaceInfoStruct_OutWaterSurfaceInfo; // 0x0940(0x0068)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9[0x7];                                      // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBump_Bump;                          // 0x09D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DA[0x2];                                      // 0x09DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWaterLevel_ReturnValue;                // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_HapticsOnHit_HitMagnitude_ImplicitCast;   // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CheckWater_WaterLocationZ_ImplicitCast;   // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_WaterHeight_ImplicitCast;       // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena) == 0x000010, "Wrong alignment on JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena");
static_assert(sizeof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena) == 0x000A30, "Wrong size on JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, EntryPoint) == 0x000000, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue) == 0x000019, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00001A, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue) == 0x00001B, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Charge_1) == 0x00001C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Charge_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Charge) == 0x000020, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Charge' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitLocation) == 0x000028, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitNormalImpulse) == 0x000040, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitNormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitFrictionImpulse) == 0x000058, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitFrictionImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitNormal) == 0x000070, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitActor) == 0x000088, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitSurfaceType) == 0x000090, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitSurfaceType' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_UpdateSurfaceType_Output) == 0x000094, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_UpdateSurfaceType_Output' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_OnCollision_OutResult) == 0x000098, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_OnCollision_OutResult' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_OnCollision_OutMagnitude) == 0x00009C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_OnCollision_OutMagnitude' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Pawn) == 0x0000A0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000AA, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0000C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0000CA, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetRenderingDetailMode_ReturnValue) == 0x0000CC, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetRenderingDetailMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x0000D1, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0000E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_StartCameraShake_ReturnValue) == 0x0000F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Conv_LegacyCameraShake_ReturnValue) == 0x0000F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Conv_LegacyCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000110, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000118, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_4) == 0x000119, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsSprinting_ReturnValue) == 0x00011A, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, Temp_object_Variable) == 0x000120, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_5) == 0x000128, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000129, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_6) == 0x00012A, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetActorUpVector_ReturnValue) == 0x000130, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Dot_VectorVector_ReturnValue) == 0x000148, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000150, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetActorForwardVector_ReturnValue) == 0x000158, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000170, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x000188, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue_3) == 0x000190, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_LoadedWrap) == 0x000198, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_LoadedWrap' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_HitComponent) == 0x0001A0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_OtherActor) == 0x0001A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_OtherComp) == 0x0001B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_Hit) == 0x0001D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_bBlockingHit) == 0x0002B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002B9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Time) == 0x0002BC, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Distance) == 0x0002C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Location) == 0x0002C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Normal) == 0x0002F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_ImpactNormal) == 0x000310, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_PhysMat) == 0x000328, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitActor) == 0x000330, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitComponent) == 0x000338, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitBoneName) == 0x000340, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_BoneName) == 0x000344, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitItem) == 0x000348, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_ElementIndex) == 0x00034C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_FaceIndex) == 0x000350, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_TraceStart) == 0x000358, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_TraceEnd) == 0x000370, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ShouldDestroyProp__ReturnValue) == 0x000388, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ShouldDestroyProp__ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000389, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsBuilding_Prop) == 0x000390, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess_2) == 0x000398, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003A0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0003A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0003A9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BooleanAND_ReturnValue) == 0x0003AA, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ActorHasTag_ReturnValue) == 0x0003AB, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0003B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Damage) == 0x0003B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_DamageTags) == 0x0003C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Momentum) == 0x0003E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitInfo) == 0x0003F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_InstigatedBy) == 0x0004E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_DamageCauser) == 0x0004E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_EffectContext) == 0x0004F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, Temp_object_Variable_1) == 0x000508, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000510, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetSocketTransform_ReturnValue) == 0x000530, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakTransform_Location) == 0x000590, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakTransform_Rotation) == 0x0005A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakTransform_Scale) == 0x0005C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0005D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x0005E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitingPawn_1) == 0x0005E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitingPawn_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitDuration) == 0x0005F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitDuration' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitingPawn) == 0x0005F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitingPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_MakeStruct_GameplayEventData) == 0x000600, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0006B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_7) == 0x0006C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetCurrentMontage_ReturnValue) == 0x0006D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0006D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_X) == 0x0006F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Y) == 0x0006F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Z) == 0x000700, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, Temp_bool_Variable) == 0x000708, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_8) == 0x000709, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Select_Default) == 0x000710, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000718, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_StartCameraShake_ReturnValue_1) == 0x000720, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_StartCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000728, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000730, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_CustomEvent_Hide) == 0x000750, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_PlayerPawn) == 0x000758, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitSocketName) == 0x000760, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitSocketName' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_9) == 0x000764, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000765, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetController_ReturnValue_1) == 0x000768, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_EndPlayReason) == 0x000770, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x000778, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess_3) == 0x000780, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_PlayerPawn_1) == 0x000788, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_PlayerPawn_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_SeatIdx) == 0x000790, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_SeatIdx' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsLocallyControlled_ReturnValue) == 0x000794, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetVehicleVelocity_ReturnValue) == 0x000798, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetVehicleVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue) == 0x0007B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x0007B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Pawn) == 0x0007C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Duration) == 0x0007C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_WaterBody_1) == 0x0007D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_WaterBody_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_MakeStruct_GameplayEventData_1) == 0x0007D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_MakeStruct_GameplayEventData_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_WaterBody) == 0x000888, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_WaterBody' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_WaterSurfacePoint_1) == 0x000890, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_WaterSurfacePoint_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_X_1) == 0x0008A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Y_1) == 0x0008B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Z_1) == 0x0008B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0008C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0008C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_WaterSurfacePoint) == 0x0008D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_WaterSurfacePoint' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_MakeVector_ReturnValue) == 0x0008E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_MakeVector_ReturnValue_1) == 0x000900, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x000918, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue_3) == 0x000920, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetSocketLocation_ReturnValue) == 0x000928, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetWaterSurfaceInfoStruct_OutWaterSurfaceInfo) == 0x000940, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetWaterSurfaceInfoStruct_OutWaterSurfaceInfo' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_10) == 0x0009A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_X_2) == 0x0009B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Y_2) == 0x0009B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Z_2) == 0x0009C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Array_Contains_ReturnValue) == 0x0009C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0009D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess_4) == 0x0009D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ShouldBump_Bump) == 0x0009D9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ShouldBump_Bump' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetWaterLevel_ReturnValue) == 0x0009DC, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetWaterLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue_11) == 0x0009E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_HapticsOnHit_HitMagnitude_ImplicitCast) == 0x0009E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_HapticsOnHit_HitMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0009F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0009F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000A00, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000A08, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x000A10, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_CheckWater_WaterLocationZ_ImplicitCast) == 0x000A18, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_CheckWater_WaterLocationZ_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_VariableSet_WaterHeight_ImplicitCast) == 0x000A20, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_VariableSet_WaterHeight_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetMaxAudibleDistance
// 0x0018 (0x0018 - 0x0000)
struct JackalVehicle_Athena_C_GetMaxAudibleDistance final
{
public:
	double                                        Max_Distance;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Max_Distance_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_GetMaxAudibleDistance) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_GetMaxAudibleDistance");
static_assert(sizeof(JackalVehicle_Athena_C_GetMaxAudibleDistance) == 0x000018, "Wrong size on JackalVehicle_Athena_C_GetMaxAudibleDistance");
static_assert(offsetof(JackalVehicle_Athena_C_GetMaxAudibleDistance, Max_Distance) == 0x000000, "Member 'JackalVehicle_Athena_C_GetMaxAudibleDistance::Max_Distance' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetMaxAudibleDistance, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_GetMaxAudibleDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetMaxAudibleDistance, K2Node_FunctionResult_Max_Distance_ImplicitCast) == 0x000010, "Member 'JackalVehicle_Athena_C_GetMaxAudibleDistance::K2Node_FunctionResult_Max_Distance_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.HapticsOnHit
// 0x00F0 (0x00F0 - 0x0000)
struct JackalVehicle_Athena_C_HapticsOnHit final
{
public:
	double                                        HitMagnitude;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraPushVelocityDelta;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitDelta;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraShakeMagnitude;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue;    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue_1;  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClientStartCameraShake_Scale_ImplicitCast; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClientStartCameraShake_Scale_ImplicitCast_1; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_HapticsOnHit) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_HapticsOnHit");
static_assert(sizeof(JackalVehicle_Athena_C_HapticsOnHit) == 0x0000F0, "Wrong size on JackalVehicle_Athena_C_HapticsOnHit");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, HitMagnitude) == 0x000000, "Member 'JackalVehicle_Athena_C_HapticsOnHit::HitMagnitude' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CameraPushVelocityDelta) == 0x000008, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CameraPushVelocityDelta' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, HitDelta) == 0x000010, "Member 'JackalVehicle_Athena_C_HapticsOnHit::HitDelta' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CameraShakeMagnitude) == 0x000018, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CameraShakeMagnitude' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_GetPreviousLinearVelocity_ReturnValue) == 0x000020, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_GetPreviousLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_GetPreviousLinearVelocity_ReturnValue_1) == 0x000038, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_GetPreviousLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_MakeRotFromX_ReturnValue) == 0x000050, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Dot_VectorVector_ReturnValue) == 0x000080, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Abs_ReturnValue) == 0x000088, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_GetComponentVelocity_ReturnValue) == 0x000090, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_MapRangeClamped_ReturnValue) == 0x0000C0, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000D0, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_IsValid_ReturnValue_1) == 0x0000DA, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000DB, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_ClientStartCameraShake_Scale_ImplicitCast) == 0x0000E8, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_ClientStartCameraShake_Scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_ClientStartCameraShake_Scale_ImplicitCast_1) == 0x0000EC, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_ClientStartCameraShake_Scale_ImplicitCast_1' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.HideQuickBarForSecondaryAbility
// 0x0001 (0x0001 - 0x0000)
struct JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility) == 0x000001, "Wrong alignment on JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility");
static_assert(sizeof(JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility) == 0x000001, "Wrong size on JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility");
static_assert(offsetof(JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility, Hide) == 0x000000, "Member 'JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility::Hide' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.IsBoostCharging
// 0x00E0 (0x00E0 - 0x0000)
struct JackalVehicle_Athena_C_IsBoostCharging final
{
public:
	bool                                          Is_Charging;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRechargingActionTimer             CallFunc_GetCurrentBoostTimer_ReturnValue;         // 0x0008(0x00D8)()
};
static_assert(alignof(JackalVehicle_Athena_C_IsBoostCharging) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_IsBoostCharging");
static_assert(sizeof(JackalVehicle_Athena_C_IsBoostCharging) == 0x0000E0, "Wrong size on JackalVehicle_Athena_C_IsBoostCharging");
static_assert(offsetof(JackalVehicle_Athena_C_IsBoostCharging, Is_Charging) == 0x000000, "Member 'JackalVehicle_Athena_C_IsBoostCharging::Is_Charging' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_IsBoostCharging, CallFunc_GetCurrentBoostTimer_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_IsBoostCharging::CallFunc_GetCurrentBoostTimer_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.K2_ApplyCosmeticWrap
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_K2_ApplyCosmeticWrap final
{
public:
	const class UAthenaItemWrapDefinition*        LoadedWrap;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_K2_ApplyCosmeticWrap");
static_assert(sizeof(JackalVehicle_Athena_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong size on JackalVehicle_Athena_C_K2_ApplyCosmeticWrap");
static_assert(offsetof(JackalVehicle_Athena_C_K2_ApplyCosmeticWrap, LoadedWrap) == 0x000000, "Member 'JackalVehicle_Athena_C_K2_ApplyCosmeticWrap::LoadedWrap' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnCollisionHitEffects
// 0x0070 (0x0070 - 0x0000)
struct JackalVehicle_Athena_C_OnCollisionHitEffects final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormalImpulse;                                  // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitFrictionImpulse;                                // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HitSurfaceType;                                    // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnCollisionHitEffects) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnCollisionHitEffects");
static_assert(sizeof(JackalVehicle_Athena_C_OnCollisionHitEffects) == 0x000070, "Wrong size on JackalVehicle_Athena_C_OnCollisionHitEffects");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitLocation) == 0x000000, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitLocation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitNormalImpulse) == 0x000018, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitNormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitFrictionImpulse) == 0x000030, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitFrictionImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitNormal) == 0x000048, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitActor) == 0x000060, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitSurfaceType) == 0x000068, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitSurfaceType' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnDeathPlayEffects
// 0x0150 (0x0150 - 0x0000)
struct JackalVehicle_Athena_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0138(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(JackalVehicle_Athena_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnDeathPlayEffects");
static_assert(sizeof(JackalVehicle_Athena_C_OnDeathPlayEffects) == 0x000150, "Wrong size on JackalVehicle_Athena_C_OnDeathPlayEffects");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, InstigatedBy) == 0x000128, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, DamageCauser) == 0x000130, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, EffectContext) == 0x000138, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnEnteredWaterBody
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_OnEnteredWaterBody final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnEnteredWaterBody) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnEnteredWaterBody");
static_assert(sizeof(JackalVehicle_Athena_C_OnEnteredWaterBody) == 0x000008, "Wrong size on JackalVehicle_Athena_C_OnEnteredWaterBody");
static_assert(offsetof(JackalVehicle_Athena_C_OnEnteredWaterBody, WaterBody) == 0x000000, "Member 'JackalVehicle_Athena_C_OnEnteredWaterBody::WaterBody' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnEnteredWaterVolume
// 0x0018 (0x0018 - 0x0000)
struct JackalVehicle_Athena_C_OnEnteredWaterVolume final
{
public:
	struct FVector                                WaterSurfacePoint;                                 // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnEnteredWaterVolume) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnEnteredWaterVolume");
static_assert(sizeof(JackalVehicle_Athena_C_OnEnteredWaterVolume) == 0x000018, "Wrong size on JackalVehicle_Athena_C_OnEnteredWaterVolume");
static_assert(offsetof(JackalVehicle_Athena_C_OnEnteredWaterVolume, WaterSurfacePoint) == 0x000000, "Member 'JackalVehicle_Athena_C_OnEnteredWaterVolume::WaterSurfacePoint' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnExitedWaterBody
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_OnExitedWaterBody final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnExitedWaterBody) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnExitedWaterBody");
static_assert(sizeof(JackalVehicle_Athena_C_OnExitedWaterBody) == 0x000008, "Wrong size on JackalVehicle_Athena_C_OnExitedWaterBody");
static_assert(offsetof(JackalVehicle_Athena_C_OnExitedWaterBody, WaterBody) == 0x000000, "Member 'JackalVehicle_Athena_C_OnExitedWaterBody::WaterBody' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnExitedWaterVolume
// 0x0018 (0x0018 - 0x0000)
struct JackalVehicle_Athena_C_OnExitedWaterVolume final
{
public:
	struct FVector                                WaterSurfacePoint;                                 // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnExitedWaterVolume) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnExitedWaterVolume");
static_assert(sizeof(JackalVehicle_Athena_C_OnExitedWaterVolume) == 0x000018, "Wrong size on JackalVehicle_Athena_C_OnExitedWaterVolume");
static_assert(offsetof(JackalVehicle_Athena_C_OnExitedWaterVolume, WaterSurfacePoint) == 0x000000, "Member 'JackalVehicle_Athena_C_OnExitedWaterVolume::WaterSurfacePoint' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnHoldExitStarted
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_OnHoldExitStarted final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ExitDuration;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnHoldExitStarted) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnHoldExitStarted");
static_assert(sizeof(JackalVehicle_Athena_C_OnHoldExitStarted) == 0x000010, "Wrong size on JackalVehicle_Athena_C_OnHoldExitStarted");
static_assert(offsetof(JackalVehicle_Athena_C_OnHoldExitStarted, ExitingPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnHoldExitStarted::ExitingPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnHoldExitStarted, ExitDuration) == 0x000008, "Member 'JackalVehicle_Athena_C_OnHoldExitStarted::ExitDuration' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnHoldExitStopped
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_OnHoldExitStopped final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnHoldExitStopped) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnHoldExitStopped");
static_assert(sizeof(JackalVehicle_Athena_C_OnHoldExitStopped) == 0x000008, "Wrong size on JackalVehicle_Athena_C_OnHoldExitStopped");
static_assert(offsetof(JackalVehicle_Athena_C_OnHoldExitStopped, ExitingPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnHoldExitStopped::ExitingPawn' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnJumpChargeEnd
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_OnJumpChargeEnd final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnJumpChargeEnd) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_OnJumpChargeEnd");
static_assert(sizeof(JackalVehicle_Athena_C_OnJumpChargeEnd) == 0x000004, "Wrong size on JackalVehicle_Athena_C_OnJumpChargeEnd");
static_assert(offsetof(JackalVehicle_Athena_C_OnJumpChargeEnd, Charge) == 0x000000, "Member 'JackalVehicle_Athena_C_OnJumpChargeEnd::Charge' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnJumped
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_OnJumped final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnJumped) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_OnJumped");
static_assert(sizeof(JackalVehicle_Athena_C_OnJumped) == 0x000004, "Wrong size on JackalVehicle_Athena_C_OnJumped");
static_assert(offsetof(JackalVehicle_Athena_C_OnJumped, Charge) == 0x000000, "Member 'JackalVehicle_Athena_C_OnJumped::Charge' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnPawnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_OnPawnEnterVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIdx;                                           // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnPawnEnterVehicle) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnPawnEnterVehicle");
static_assert(sizeof(JackalVehicle_Athena_C_OnPawnEnterVehicle) == 0x000010, "Wrong size on JackalVehicle_Athena_C_OnPawnEnterVehicle");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnEnterVehicle, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnPawnEnterVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnEnterVehicle, SeatIdx) == 0x000008, "Member 'JackalVehicle_Athena_C_OnPawnEnterVehicle::SeatIdx' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnPawnExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_OnPawnExitVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocketName;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnPawnExitVehicle) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnPawnExitVehicle");
static_assert(sizeof(JackalVehicle_Athena_C_OnPawnExitVehicle) == 0x000010, "Wrong size on JackalVehicle_Athena_C_OnPawnExitVehicle");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnExitVehicle, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnPawnExitVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnExitVehicle, ExitSocketName) == 0x000008, "Member 'JackalVehicle_Athena_C_OnPawnExitVehicle::ExitSocketName' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnRep_bUseAudio
// 0x0001 (0x0001 - 0x0000)
struct JackalVehicle_Athena_C_OnRep_bUseAudio final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnRep_bUseAudio) == 0x000001, "Wrong alignment on JackalVehicle_Athena_C_OnRep_bUseAudio");
static_assert(sizeof(JackalVehicle_Athena_C_OnRep_bUseAudio) == 0x000001, "Wrong size on JackalVehicle_Athena_C_OnRep_bUseAudio");
static_assert(offsetof(JackalVehicle_Athena_C_OnRep_bUseAudio, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'JackalVehicle_Athena_C_OnRep_bUseAudio::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct JackalVehicle_Athena_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on JackalVehicle_Athena_C_ReceiveEndPlay");
static_assert(sizeof(JackalVehicle_Athena_C_ReceiveEndPlay) == 0x000001, "Wrong size on JackalVehicle_Athena_C_ReceiveEndPlay");
static_assert(offsetof(JackalVehicle_Athena_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'JackalVehicle_Athena_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.RemoveCooldownCueEvent
// 0x00C8 (0x00C8 - 0x0000)
struct JackalVehicle_Athena_C_RemoveCooldownCueEvent final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNullItem_Is_Null_Item;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0018(0x00B0)()
};
static_assert(alignof(JackalVehicle_Athena_C_RemoveCooldownCueEvent) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_RemoveCooldownCueEvent");
static_assert(sizeof(JackalVehicle_Athena_C_RemoveCooldownCueEvent) == 0x0000C8, "Wrong size on JackalVehicle_Athena_C_RemoveCooldownCueEvent");
static_assert(offsetof(JackalVehicle_Athena_C_RemoveCooldownCueEvent, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_RemoveCooldownCueEvent::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_RemoveCooldownCueEvent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_RemoveCooldownCueEvent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_RemoveCooldownCueEvent, CallFunc_IsNullItem_Is_Null_Item) == 0x000010, "Member 'JackalVehicle_Athena_C_RemoveCooldownCueEvent::CallFunc_IsNullItem_Is_Null_Item' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_RemoveCooldownCueEvent, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000011, "Member 'JackalVehicle_Athena_C_RemoveCooldownCueEvent::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_RemoveCooldownCueEvent, K2Node_MakeStruct_GameplayEventData) == 0x000018, "Member 'JackalVehicle_Athena_C_RemoveCooldownCueEvent::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SendBoostTimeToMaterials
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_SendBoostTimeToMaterials final
{
public:
	double                                        ParameterValue;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SendBoostTimeToMaterials) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_SendBoostTimeToMaterials");
static_assert(sizeof(JackalVehicle_Athena_C_SendBoostTimeToMaterials) == 0x000010, "Wrong size on JackalVehicle_Athena_C_SendBoostTimeToMaterials");
static_assert(offsetof(JackalVehicle_Athena_C_SendBoostTimeToMaterials, ParameterValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SendBoostTimeToMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_SendBoostTimeToMaterials, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000008, "Member 'JackalVehicle_Athena_C_SendBoostTimeToMaterials::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SendDamageValueToMaterials
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_SendDamageValueToMaterials final
{
public:
	double                                        ParameterValue;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SendDamageValueToMaterials) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_SendDamageValueToMaterials");
static_assert(sizeof(JackalVehicle_Athena_C_SendDamageValueToMaterials) == 0x000010, "Wrong size on JackalVehicle_Athena_C_SendDamageValueToMaterials");
static_assert(offsetof(JackalVehicle_Athena_C_SendDamageValueToMaterials, ParameterValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SendDamageValueToMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_SendDamageValueToMaterials, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000008, "Member 'JackalVehicle_Athena_C_SendDamageValueToMaterials::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SendHeadlightValueToMaterials
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_SendHeadlightValueToMaterials final
{
public:
	double                                        ParameterValue;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_SendHeadlightValueToMaterials");
static_assert(sizeof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials) == 0x000010, "Wrong size on JackalVehicle_Athena_C_SendHeadlightValueToMaterials");
static_assert(offsetof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials, ParameterValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SendHeadlightValueToMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000008, "Member 'JackalVehicle_Athena_C_SendHeadlightValueToMaterials::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ShouldBump
// 0x0058 (0x0058 - 0x0000)
struct JackalVehicle_Athena_C_ShouldBump final
{
public:
	struct FVector                                Hit_Normal;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Bump;                                              // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsPlayers_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_ShouldBump) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_ShouldBump");
static_assert(sizeof(JackalVehicle_Athena_C_ShouldBump) == 0x000058, "Wrong size on JackalVehicle_Athena_C_ShouldBump");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, Hit_Normal) == 0x000000, "Member 'JackalVehicle_Athena_C_ShouldBump::Hit_Normal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, PlayerPawn) == 0x000018, "Member 'JackalVehicle_Athena_C_ShouldBump::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, Bump) == 0x000020, "Member 'JackalVehicle_Athena_C_ShouldBump::Bump' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_ContainsPlayers_ReturnValue) == 0x000021, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_ContainsPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_IsInVehicle_ReturnValue) == 0x000022, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Not_PreBool_ReturnValue_1) == 0x000024, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_GetActorUpVector_ReturnValue) == 0x000028, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ShouldDestroyProp?
// 0x0078 (0x0078 - 0x0000)
struct JackalVehicle_Athena_C_ShouldDestroyProp_ final
{
public:
	struct FVector                                HitNormal;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue;    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPreviousForwardSpeedKmh_ReturnValue;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_ShouldDestroyProp_) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_ShouldDestroyProp_");
static_assert(sizeof(JackalVehicle_Athena_C_ShouldDestroyProp_) == 0x000078, "Wrong size on JackalVehicle_Athena_C_ShouldDestroyProp_");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, HitNormal) == 0x000000, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::HitNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, ReturnValue) == 0x000018, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GetPreviousLinearVelocity_ReturnValue) == 0x000020, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GetPreviousLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GetPreviousForwardSpeedKmh_ReturnValue) == 0x000038, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GetPreviousForwardSpeedKmh_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_Normal_ReturnValue) == 0x000040, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_Dot_VectorVector_ReturnValue) == 0x000060, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_BooleanAND_ReturnValue_1) == 0x00006A, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ShowCooldownCue
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_ShowCooldownCue final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_ShowCooldownCue) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_ShowCooldownCue");
static_assert(sizeof(JackalVehicle_Athena_C_ShowCooldownCue) == 0x000010, "Wrong size on JackalVehicle_Athena_C_ShowCooldownCue");
static_assert(offsetof(JackalVehicle_Athena_C_ShowCooldownCue, Pawn) == 0x000000, "Member 'JackalVehicle_Athena_C_ShowCooldownCue::Pawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShowCooldownCue, duration) == 0x000008, "Member 'JackalVehicle_Athena_C_ShowCooldownCue::duration' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SlipStreamCheck
// 0x0038 (0x0038 - 0x0000)
struct JackalVehicle_Athena_C_SlipStreamCheck final
{
public:
	struct FVector                                CallFunc_GetVehicleForwardVector_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSkyTube_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SlipStreamCheck) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_SlipStreamCheck");
static_assert(sizeof(JackalVehicle_Athena_C_SlipStreamCheck) == 0x000038, "Wrong size on JackalVehicle_Athena_C_SlipStreamCheck");
static_assert(offsetof(JackalVehicle_Athena_C_SlipStreamCheck, CallFunc_GetVehicleForwardVector_ReturnValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SlipStreamCheck::CallFunc_GetVehicleForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_SlipStreamCheck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'JackalVehicle_Athena_C_SlipStreamCheck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_SlipStreamCheck, CallFunc_IsInSkyTube_ReturnValue) == 0x000030, "Member 'JackalVehicle_Athena_C_SlipStreamCheck::CallFunc_IsInSkyTube_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.UpdateSurfaceType
// 0x0028 (0x0028 - 0x0000)
struct JackalVehicle_Athena_C_UpdateSurfaceType final
{
public:
	EPhysicalSurface                              Surface;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Output;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_UpdateSurfaceType) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_UpdateSurfaceType");
static_assert(sizeof(JackalVehicle_Athena_C_UpdateSurfaceType) == 0x000028, "Wrong size on JackalVehicle_Athena_C_UpdateSurfaceType");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Surface) == 0x000000, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Surface' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Output) == 0x000004, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Output' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_int_Variable) == 0x000008, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000E, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_int_Variable_1) == 0x000010, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_bool_Variable) == 0x000014, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_int_Variable_2) == 0x000018, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_bool_Variable_1) == 0x00001C, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, K2Node_Select_Default) == 0x000020, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, K2Node_Select_Default_1) == 0x000024, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::K2Node_Select_Default_1' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_UserConstructionScript) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_UserConstructionScript");
static_assert(sizeof(JackalVehicle_Athena_C_UserConstructionScript) == 0x000008, "Wrong size on JackalVehicle_Athena_C_UserConstructionScript");
static_assert(offsetof(JackalVehicle_Athena_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'JackalVehicle_Athena_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetIconPlacement
// 0x0058 (0x0058 - 0x0000)
struct JackalVehicle_Athena_C_GetIconPlacement final
{
public:
	const class AActor*                           SelfActor;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           ViewingActor;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutExtents;                                        // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_GetIconPlacement) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_GetIconPlacement");
static_assert(sizeof(JackalVehicle_Athena_C_GetIconPlacement) == 0x000058, "Wrong size on JackalVehicle_Athena_C_GetIconPlacement");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, SelfActor) == 0x000000, "Member 'JackalVehicle_Athena_C_GetIconPlacement::SelfActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, ViewingActor) == 0x000008, "Member 'JackalVehicle_Athena_C_GetIconPlacement::ViewingActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, OutLocation) == 0x000010, "Member 'JackalVehicle_Athena_C_GetIconPlacement::OutLocation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, OutExtents) == 0x000028, "Member 'JackalVehicle_Athena_C_GetIconPlacement::OutExtents' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, CallFunc_GetCenterOfMass_ReturnValue) == 0x000040, "Member 'JackalVehicle_Athena_C_GetIconPlacement::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");

}

