#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Loop_GhostMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Loop_GhostMode.GCN_Loop_GhostMode_C
// 0x0070 (0x0A20 - 0x09B0)
class AGCN_Loop_GhostMode_C : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         FadeMaterialsTL_Lerp_D7B0BAAD47F48403BE23B98F38D8CA3E; // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeMaterialsTL__Direction_D7B0BAAD47F48403BE23B98F38D8CA3E; // 0x09BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD[0x3];                                      // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeMaterialsTL;                                   // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HitGlowColor;                                      // 0x09C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HotGlowOuterColor;                                 // 0x09D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitGlowFresnelBrightness;                          // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitGlowFresnelExponent;                            // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Glow_Priority;                                     // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StopSoundCue;                                      // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StartSoundCue;                                     // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPawnHighlight_Interface_C> TargetPawn;                                        // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCN_Loop_GhostMode(int32 EntryPoint);
	void FadeMaterialsIn();
	void FadeMaterialsOut();
	void FadeMaterialsTL__FinishedFunc();
	void FadeMaterialsTL__UpdateFunc();
	void Highlight_Lerp(double Alpha, struct FPawnHighlight* Highlight);
	void OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class ULegacyCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Loop_GhostMode_C">();
	}
	static class AGCN_Loop_GhostMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Loop_GhostMode_C>();
	}
};
static_assert(alignof(AGCN_Loop_GhostMode_C) == 0x000008, "Wrong alignment on AGCN_Loop_GhostMode_C");
static_assert(sizeof(AGCN_Loop_GhostMode_C) == 0x000A20, "Wrong size on AGCN_Loop_GhostMode_C");
static_assert(offsetof(AGCN_Loop_GhostMode_C, UberGraphFrame) == 0x0009B0, "Member 'AGCN_Loop_GhostMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, FadeMaterialsTL_Lerp_D7B0BAAD47F48403BE23B98F38D8CA3E) == 0x0009B8, "Member 'AGCN_Loop_GhostMode_C::FadeMaterialsTL_Lerp_D7B0BAAD47F48403BE23B98F38D8CA3E' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, FadeMaterialsTL__Direction_D7B0BAAD47F48403BE23B98F38D8CA3E) == 0x0009BC, "Member 'AGCN_Loop_GhostMode_C::FadeMaterialsTL__Direction_D7B0BAAD47F48403BE23B98F38D8CA3E' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, FadeMaterialsTL) == 0x0009C0, "Member 'AGCN_Loop_GhostMode_C::FadeMaterialsTL' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, HitGlowColor) == 0x0009C8, "Member 'AGCN_Loop_GhostMode_C::HitGlowColor' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, HotGlowOuterColor) == 0x0009D8, "Member 'AGCN_Loop_GhostMode_C::HotGlowOuterColor' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, HitGlowFresnelBrightness) == 0x0009E8, "Member 'AGCN_Loop_GhostMode_C::HitGlowFresnelBrightness' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, HitGlowFresnelExponent) == 0x0009F0, "Member 'AGCN_Loop_GhostMode_C::HitGlowFresnelExponent' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, Glow_Priority) == 0x0009F8, "Member 'AGCN_Loop_GhostMode_C::Glow_Priority' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, StopSoundCue) == 0x000A00, "Member 'AGCN_Loop_GhostMode_C::StopSoundCue' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, StartSoundCue) == 0x000A08, "Member 'AGCN_Loop_GhostMode_C::StartSoundCue' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_GhostMode_C, TargetPawn) == 0x000A10, "Member 'AGCN_Loop_GhostMode_C::TargetPawn' has a wrong offset!");

}

