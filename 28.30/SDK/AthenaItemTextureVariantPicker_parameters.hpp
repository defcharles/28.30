#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaItemTextureVariantPicker

#include "Basic.hpp"


namespace SDK::Params
{

// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.ExecuteUbergraph_AthenaItemTextureVariantPicker
// 0x0080 (0x0080 - 0x0000)
struct AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsConflicting;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ConflictReason;                 // 0x0008(0x0018)()
	float                                         Temp_real_Variable;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Item, class UUserWidget* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsConflicting, class FText ConflictReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisplay;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_Widget;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAthenaVariantTileButton_C*             K2Node_DynamicCast_AsAthena_Variant_Tile_Button;   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker) == 0x000008, "Wrong alignment on AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker");
static_assert(sizeof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker) == 0x000080, "Wrong size on AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, EntryPoint) == 0x000000, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_CustomEvent_IsConflicting) == 0x000004, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_CustomEvent_IsConflicting' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_CustomEvent_ConflictReason) == 0x000008, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_CustomEvent_ConflictReason' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, Temp_real_Variable) == 0x000020, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, Temp_real_Variable_1) == 0x000024, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, Temp_bool_Variable) == 0x000028, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, Temp_real_Variable_2) == 0x00002C, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, Temp_real_Variable_3) == 0x000030, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_Event_bDisplay) == 0x00004C, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_Event_bDisplay' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, Temp_bool_Variable_1) == 0x00004D, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, CallFunc_SelectInt_ReturnValue) == 0x000050, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, CallFunc_IsMobileGame_ReturnValue) == 0x000054, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_Select_Default) == 0x000058, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_Select_Default_1) == 0x00005C, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_CustomEvent_Item) == 0x000060, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_CustomEvent_Widget) == 0x000068, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_DynamicCast_AsAthena_Variant_Tile_Button) == 0x000070, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_DynamicCast_AsAthena_Variant_Tile_Button' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.HandleConflictStatusUpdated
// 0x0020 (0x0020 - 0x0000)
struct AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated final
{
public:
	bool                                          IsConflicting;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ConflictReason;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated) == 0x000008, "Wrong alignment on AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated");
static_assert(sizeof(AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated) == 0x000020, "Wrong size on AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated, IsConflicting) == 0x000000, "Member 'AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated::IsConflicting' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated, ConflictReason) == 0x000008, "Member 'AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated::ConflictReason' has a wrong offset!");

// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.HandleEntryInitialized
// 0x0010 (0x0010 - 0x0000)
struct AthenaItemTextureVariantPicker_C_HandleEntryInitialized final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaItemTextureVariantPicker_C_HandleEntryInitialized) == 0x000008, "Wrong alignment on AthenaItemTextureVariantPicker_C_HandleEntryInitialized");
static_assert(sizeof(AthenaItemTextureVariantPicker_C_HandleEntryInitialized) == 0x000010, "Wrong size on AthenaItemTextureVariantPicker_C_HandleEntryInitialized");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_HandleEntryInitialized, Item) == 0x000000, "Member 'AthenaItemTextureVariantPicker_C_HandleEntryInitialized::Item' has a wrong offset!");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_HandleEntryInitialized, Widget) == 0x000008, "Member 'AthenaItemTextureVariantPicker_C_HandleEntryInitialized::Widget' has a wrong offset!");

// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.OnToggleAllItemsArchivedMessage
// 0x0001 (0x0001 - 0x0000)
struct AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage) == 0x000001, "Wrong alignment on AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage");
static_assert(sizeof(AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage) == 0x000001, "Wrong size on AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage");
static_assert(offsetof(AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage, bDisplay) == 0x000000, "Member 'AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage::bDisplay' has a wrong offset!");

}

