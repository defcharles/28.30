#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContextualTraversalRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct ContextualTraversalRuntime.FortMovementMode_TraversalBaseRuntimeData
// 0x00C0 (0x00D0 - 0x0010)
#pragma pack(push, 0x1)
struct alignas(0x10) FFortMovementMode_TraversalBaseRuntimeData : public FFortMovementMode_BaseExtRuntimeData
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MontageStartSectionName;                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MontageMiddleSectionName;                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSynchedActionWarpPointInfo_Replicated SynchedActionWarpPointInfo;                        // 0x0020(0x00A0)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x8];                                       // 0x00C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)
static_assert(alignof(FFortMovementMode_TraversalBaseRuntimeData) == 0x000010, "Wrong alignment on FFortMovementMode_TraversalBaseRuntimeData");
static_assert(sizeof(FFortMovementMode_TraversalBaseRuntimeData) == 0x0000D0, "Wrong size on FFortMovementMode_TraversalBaseRuntimeData");
static_assert(offsetof(FFortMovementMode_TraversalBaseRuntimeData, AnimMontage) == 0x000010, "Member 'FFortMovementMode_TraversalBaseRuntimeData::AnimMontage' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseRuntimeData, MontageStartSectionName) == 0x000018, "Member 'FFortMovementMode_TraversalBaseRuntimeData::MontageStartSectionName' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseRuntimeData, MontageMiddleSectionName) == 0x00001C, "Member 'FFortMovementMode_TraversalBaseRuntimeData::MontageMiddleSectionName' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseRuntimeData, SynchedActionWarpPointInfo) == 0x000020, "Member 'FFortMovementMode_TraversalBaseRuntimeData::SynchedActionWarpPointInfo' has a wrong offset!");

// ScriptStruct ContextualTraversalRuntime.FortMovementMode_TraversalBaseCreationData
// 0x0128 (0x0130 - 0x0008)
#pragma pack(push, 0x1)
struct alignas(0x10) FFortMovementMode_TraversalBaseCreationData : public FFortMovementMode_BaseExtCreationData
{
public:
	struct FSynchedActionInfo                     SynchedActionInfo;                                 // 0x0008(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSynchedActionWarpPointInfo_Replicated SynchedActionWarpPointInfo;                        // 0x0040(0x00A0)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               TargetRotation;                                    // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  RefActor;                                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPrimitiveComponent>     RefActorComponent;                                 // 0x0118(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RefActorBoneName;                                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortSynchedActionEndMovementMode             EndMovementMode;                                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWindow;                                         // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)
static_assert(alignof(FFortMovementMode_TraversalBaseCreationData) == 0x000010, "Wrong alignment on FFortMovementMode_TraversalBaseCreationData");
static_assert(sizeof(FFortMovementMode_TraversalBaseCreationData) == 0x000130, "Wrong size on FFortMovementMode_TraversalBaseCreationData");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, SynchedActionInfo) == 0x000008, "Member 'FFortMovementMode_TraversalBaseCreationData::SynchedActionInfo' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, SynchedActionWarpPointInfo) == 0x000040, "Member 'FFortMovementMode_TraversalBaseCreationData::SynchedActionWarpPointInfo' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, TargetLocation) == 0x0000E0, "Member 'FFortMovementMode_TraversalBaseCreationData::TargetLocation' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, TargetRotation) == 0x0000F8, "Member 'FFortMovementMode_TraversalBaseCreationData::TargetRotation' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, RefActor) == 0x000110, "Member 'FFortMovementMode_TraversalBaseCreationData::RefActor' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, RefActorComponent) == 0x000118, "Member 'FFortMovementMode_TraversalBaseCreationData::RefActorComponent' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, RefActorBoneName) == 0x000120, "Member 'FFortMovementMode_TraversalBaseCreationData::RefActorBoneName' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, EndMovementMode) == 0x000124, "Member 'FFortMovementMode_TraversalBaseCreationData::EndMovementMode' has a wrong offset!");
static_assert(offsetof(FFortMovementMode_TraversalBaseCreationData, bIsWindow) == 0x000125, "Member 'FFortMovementMode_TraversalBaseCreationData::bIsWindow' has a wrong offset!");

}

