#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VictoryCrownsRuntime

#include "Basic.hpp"

#include "VictoryCrownsRuntime_classes.hpp"
#include "VictoryCrownsRuntime_parameters.hpp"


namespace SDK
{

// Function VictoryCrownsRuntime.FortGameplayCueNotify_CrownWear.ApplyCrownWear
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFXSystemComponent*>       ParticleComponents                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayCueNotify_CrownWear::ApplyCrownWear(const TArray<class UFXSystemComponent*>& ParticleComponents)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplyCrownWear");

	Params::FortGameplayCueNotify_CrownWear_ApplyCrownWear Parms{};

	Parms.ParticleComponents = std::move(ParticleComponents);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortGameplayCueNotify_CrownWear.OnIntroFXTimelineTick
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                          CurveValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameplayCueNotify_CrownWear::OnIntroFXTimelineTick(const struct FVector& CurveValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIntroFXTimelineTick");

	Params::FortGameplayCueNotify_CrownWear_OnIntroFXTimelineTick Parms{};

	Parms.CurveValue = std::move(CurveValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortGameplayCueNotify_CrownWear.RemoveCrownWear
// (Final, Native, Protected, BlueprintCallable)

void AFortGameplayCueNotify_CrownWear::RemoveCrownWear()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveCrownWear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortVictoryCrownViewModel.HandleOnHasWonCrownInMatch
// (Final, Native, Private)

void UFortVictoryCrownViewModel::HandleOnHasWonCrownInMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnHasWonCrownInMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortVictoryCrownViewModel.HandleOnHasWonRoyalRoyale
// (Final, Native, Private)

void UFortVictoryCrownViewModel::HandleOnHasWonRoyalRoyale()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleOnHasWonRoyalRoyale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.CacheAccountItemData
// (Final, Native, Private)

void UFortControllerComponent_VictoryCrowns::CacheAccountItemData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CacheAccountItemData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.DebugForceSetRoyalRoyaleAchievedCount
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NewRoyalRoyaleCount                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_VictoryCrowns::DebugForceSetRoyalRoyaleAchievedCount(int32 NewRoyalRoyaleCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DebugForceSetRoyalRoyaleAchievedCount");

	Params::FortControllerComponent_VictoryCrowns_DebugForceSetRoyalRoyaleAchievedCount Parms{};

	Parms.NewRoyalRoyaleCount = NewRoyalRoyaleCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.HandleEnterAircraft
// (Final, Native, Protected)

void UFortControllerComponent_VictoryCrowns::HandleEnterAircraft()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleEnterAircraft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.HandleExitAircraft
// (Final, Native, Protected)
// Parameters:
// class AController*                      ExitingController                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_VictoryCrowns::HandleExitAircraft(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleExitAircraft");

	Params::FortControllerComponent_VictoryCrowns_HandleExitAircraft Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.HandlePawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_VictoryCrowns::HandlePawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePawnChanged");

	Params::FortControllerComponent_VictoryCrowns_HandlePawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.OnAthenaProfileInitialized
// (Final, Native, Private)

void UFortControllerComponent_VictoryCrowns::OnAthenaProfileInitialized()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAthenaProfileInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.OnEnterAircraft
// (Final, Native, Protected)
// Parameters:
// class AController*                      EnteringController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_VictoryCrowns::OnEnterAircraft(class AController* EnteringController)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEnterAircraft");

	Params::FortControllerComponent_VictoryCrowns_OnEnterAircraft Parms{};

	Parms.EnteringController = EnteringController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.OnRep_VictoryCrownAccountData
// (Final, Native, Private)

void UFortControllerComponent_VictoryCrowns::OnRep_VictoryCrownAccountData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_VictoryCrownAccountData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.OnRep_WonCrownInMatch
// (Final, Native, Private)

void UFortControllerComponent_VictoryCrowns::OnRep_WonCrownInMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_WonCrownInMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.OnRep_WonRoyalRoyale
// (Final, Native, Private)

void UFortControllerComponent_VictoryCrowns::OnRep_WonRoyalRoyale()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_WonRoyalRoyale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.AuthorityHasDroppedCrownItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortItem*                        CrownItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::AuthorityHasDroppedCrownItem(const class UFortItem* CrownItem) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AuthorityHasDroppedCrownItem");

	Params::FortControllerComponent_VictoryCrowns_AuthorityHasDroppedCrownItem Parms{};

	Parms.CrownItem = CrownItem;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.AuthorityHasHeldCrownItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortItem*                        CrownItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::AuthorityHasHeldCrownItem(const class UFortItem* CrownItem) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AuthorityHasHeldCrownItem");

	Params::FortControllerComponent_VictoryCrowns_AuthorityHasHeldCrownItem Parms{};

	Parms.CrownItem = CrownItem;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.AuthorityHasSquadDroppedCrownItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortItem*                        CrownItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::AuthorityHasSquadDroppedCrownItem(const class UFortItem* CrownItem) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AuthorityHasSquadDroppedCrownItem");

	Params::FortControllerComponent_VictoryCrowns_AuthorityHasSquadDroppedCrownItem Parms{};

	Parms.CrownItem = CrownItem;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.AuthorityHasSquadHeldCrownItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortItem*                        CrownItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::AuthorityHasSquadHeldCrownItem(const class UFortItem* CrownItem) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AuthorityHasSquadHeldCrownItem");

	Params::FortControllerComponent_VictoryCrowns_AuthorityHasSquadHeldCrownItem Parms{};

	Parms.CrownItem = CrownItem;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.AuthoritySquadHasSeenCrownItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortItem*                        CrownItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDropped                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::AuthoritySquadHasSeenCrownItem(const class UFortItem* CrownItem, const bool bDropped) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AuthoritySquadHasSeenCrownItem");

	Params::FortControllerComponent_VictoryCrowns_AuthoritySquadHasSeenCrownItem Parms{};

	Parms.CrownItem = CrownItem;
	Parms.bDropped = bDropped;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.GetCrownInPlayerInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFortWorldItem*             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortWorldItem* UFortControllerComponent_VictoryCrowns::GetCrownInPlayerInventory() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCrownInPlayerInventory");

	Params::FortControllerComponent_VictoryCrowns_GetCrownInPlayerInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.GetRoyalRoyaleAchievedCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UFortControllerComponent_VictoryCrowns::GetRoyalRoyaleAchievedCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRoyalRoyaleAchievedCount");

	Params::FortControllerComponent_VictoryCrowns_GetRoyalRoyaleAchievedCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.GetVictoryCrownsBestowedCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UFortControllerComponent_VictoryCrowns::GetVictoryCrownsBestowedCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetVictoryCrownsBestowedCount");

	Params::FortControllerComponent_VictoryCrowns_GetVictoryCrownsBestowedCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.HasWonCrownInMatch
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::HasWonCrownInMatch() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasWonCrownInMatch");

	Params::FortControllerComponent_VictoryCrowns_HasWonCrownInMatch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.HasWonRoyalRoyale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::HasWonRoyalRoyale() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasWonRoyalRoyale");

	Params::FortControllerComponent_VictoryCrowns_HasWonRoyalRoyale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortControllerComponent_VictoryCrowns.IsCrownInPlayerInventory
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_VictoryCrowns::IsCrownInPlayerInventory() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsCrownInPlayerInventory");

	Params::FortControllerComponent_VictoryCrowns_IsCrownInPlayerInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortGameStateComponent_VictoryCrowns.ClientKillFeedMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AFortPlayerStateAthena*           FortPSA                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAdded                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_VictoryCrowns::ClientKillFeedMessage(const class AFortPlayerStateAthena* FortPSA, bool bAdded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClientKillFeedMessage");

	Params::FortGameStateComponent_VictoryCrowns_ClientKillFeedMessage Parms{};

	Parms.FortPSA = FortPSA;
	Parms.bAdded = bAdded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortGameStateComponent_VictoryCrowns.HandleCrownStatusChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerControllerAthena*      FortPlayerControllerAthena                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        CrownItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_VictoryCrowns::HandleCrownStatusChanged(class AFortPlayerControllerAthena* FortPlayerControllerAthena, const class UFortItem* CrownItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCrownStatusChanged");

	Params::FortGameStateComponent_VictoryCrowns_HandleCrownStatusChanged Parms{};

	Parms.FortPlayerControllerAthena = FortPlayerControllerAthena;
	Parms.CrownItem = CrownItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VictoryCrownsRuntime.FortGameStateComponent_VictoryCrowns.OnRep_CrownBearerPlayerStates
// (Final, Native, Protected)

void UFortGameStateComponent_VictoryCrowns::OnRep_CrownBearerPlayerStates()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_CrownBearerPlayerStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortGameStateComponent_VictoryCrowns.IsCrownBearer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateAthena*           FortPSA                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameStateComponent_VictoryCrowns::IsCrownBearer(const class AFortPlayerStateAthena* FortPSA) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsCrownBearer");

	Params::FortGameStateComponent_VictoryCrowns_IsCrownBearer Parms{};

	Parms.FortPSA = FortPSA;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VictoryCrownsRuntime.FortPawnComponent_VictoryCrownsFrontEnd.PlaylistChanged
// (Event, Protected, BlueprintEvent)

void UFortPawnComponent_VictoryCrownsFrontEnd::PlaylistChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlaylistChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VictoryCrownsRuntime.FortPlayerStateComponent_VictoryCrowns.GetWonRoyalRoyale
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerStateComponent_VictoryCrowns::GetWonRoyalRoyale() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetWonRoyalRoyale");

	Params::FortPlayerStateComponent_VictoryCrowns_GetWonRoyalRoyale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

