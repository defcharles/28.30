#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function ItemizationUI.GenericInventoryPanel.UpdateDropInputs
// 0x0004 (0x0004 - 0x0000)
struct GenericInventoryPanel_UpdateDropInputs final
{
public:
	int32                                         AmountOfSelectedItem;                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericInventoryPanel_UpdateDropInputs) == 0x000004, "Wrong alignment on GenericInventoryPanel_UpdateDropInputs");
static_assert(sizeof(GenericInventoryPanel_UpdateDropInputs) == 0x000004, "Wrong size on GenericInventoryPanel_UpdateDropInputs");
static_assert(offsetof(GenericInventoryPanel_UpdateDropInputs, AmountOfSelectedItem) == 0x000000, "Member 'GenericInventoryPanel_UpdateDropInputs::AmountOfSelectedItem' has a wrong offset!");

// Function ItemizationUI.GenericInventoryPanel.UpdateMakeItemActiveInput
// 0x0001 (0x0001 - 0x0000)
struct GenericInventoryPanel_UpdateMakeItemActiveInput final
{
public:
	bool                                          bCanItemBeMadeActive;                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericInventoryPanel_UpdateMakeItemActiveInput) == 0x000001, "Wrong alignment on GenericInventoryPanel_UpdateMakeItemActiveInput");
static_assert(sizeof(GenericInventoryPanel_UpdateMakeItemActiveInput) == 0x000001, "Wrong size on GenericInventoryPanel_UpdateMakeItemActiveInput");
static_assert(offsetof(GenericInventoryPanel_UpdateMakeItemActiveInput, bCanItemBeMadeActive) == 0x000000, "Member 'GenericInventoryPanel_UpdateMakeItemActiveInput::bCanItemBeMadeActive' has a wrong offset!");

// Function ItemizationUI.GenericInventoryPanel.UpdateMakeItemInactiveInput
// 0x0001 (0x0001 - 0x0000)
struct GenericInventoryPanel_UpdateMakeItemInactiveInput final
{
public:
	bool                                          bCanItemBeMadeInactive;                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericInventoryPanel_UpdateMakeItemInactiveInput) == 0x000001, "Wrong alignment on GenericInventoryPanel_UpdateMakeItemInactiveInput");
static_assert(sizeof(GenericInventoryPanel_UpdateMakeItemInactiveInput) == 0x000001, "Wrong size on GenericInventoryPanel_UpdateMakeItemInactiveInput");
static_assert(offsetof(GenericInventoryPanel_UpdateMakeItemInactiveInput, bCanItemBeMadeInactive) == 0x000000, "Member 'GenericInventoryPanel_UpdateMakeItemInactiveInput::bCanItemBeMadeInactive' has a wrong offset!");

// Function ItemizationUI.ItemizationDynamicUIDirector.HandleInventorySwitched
// 0x0008 (0x0008 - 0x0000)
struct ItemizationDynamicUIDirector_HandleInventorySwitched final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ItemizationDynamicUIDirector_HandleInventorySwitched) == 0x000008, "Wrong alignment on ItemizationDynamicUIDirector_HandleInventorySwitched");
static_assert(sizeof(ItemizationDynamicUIDirector_HandleInventorySwitched) == 0x000008, "Wrong size on ItemizationDynamicUIDirector_HandleInventorySwitched");
static_assert(offsetof(ItemizationDynamicUIDirector_HandleInventorySwitched, PlayerController) == 0x000000, "Member 'ItemizationDynamicUIDirector_HandleInventorySwitched::PlayerController' has a wrong offset!");

}

