#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Backplate_Base

#include "Basic.hpp"

#include "E_UI_BackplateCornerRadius_structs.hpp"
#include "E_UI_BackplateBrightness_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.Cleanup
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_Cleanup final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_Cleanup) == 0x000008, "Wrong alignment on WBP_UIKit_Backplate_Base_C_Cleanup");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_Cleanup) == 0x000020, "Wrong size on WBP_UIKit_Backplate_Base_C_Cleanup");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Cleanup, Widget) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_Cleanup::Widget' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Cleanup, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Backplate_Base_C_Cleanup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Cleanup, CallFunc_GetParent_ReturnValue) == 0x000010, "Member 'WBP_UIKit_Backplate_Base_C_Cleanup::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Cleanup, CallFunc_RemoveChild_ReturnValue) == 0x000018, "Member 'WBP_UIKit_Backplate_Base_C_Cleanup::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.ExecuteUbergraph_WBP_UIKit_Backplate_Base
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base) == 0x000004, "Wrong alignment on WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base) == 0x000008, "Wrong size on WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_Backplate_Base_C_ExecuteUbergraph_WBP_UIKit_Backplate_Base::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.InitBlurLayer
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_InitBlurLayer final
{
public:
	bool                                          UseSlateBlur_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UI_Block_Backplate_BlurSlate_C*    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_Block_Backplate_BlurWidget_C*   CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_InitBlurLayer) == 0x000008, "Wrong alignment on WBP_UIKit_Backplate_Base_C_InitBlurLayer");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_InitBlurLayer) == 0x000028, "Wrong size on WBP_UIKit_Backplate_Base_C_InitBlurLayer");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitBlurLayer, UseSlateBlur_0) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_InitBlurLayer::UseSlateBlur_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitBlurLayer, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Backplate_Base_C_InitBlurLayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitBlurLayer, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000010, "Member 'WBP_UIKit_Backplate_Base_C_InitBlurLayer::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitBlurLayer, CallFunc_AddChildToGrid_ReturnValue) == 0x000018, "Member 'WBP_UIKit_Backplate_Base_C_InitBlurLayer::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitBlurLayer, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'WBP_UIKit_Backplate_Base_C_InitBlurLayer::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.InitializeBackplate
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_InitializeBackplate final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_SelectMaterialInstance_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Set_Widget_Blur_Blur_Strength_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_InitializeBackplate) == 0x000008, "Wrong alignment on WBP_UIKit_Backplate_Base_C_InitializeBackplate");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_InitializeBackplate) == 0x000018, "Wrong size on WBP_UIKit_Backplate_Base_C_InitializeBackplate");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitializeBackplate, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_InitializeBackplate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitializeBackplate, CallFunc_SelectMaterialInstance_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Backplate_Base_C_InitializeBackplate::CallFunc_SelectMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_InitializeBackplate, CallFunc_Set_Widget_Blur_Blur_Strength_ImplicitCast) == 0x000010, "Member 'WBP_UIKit_Backplate_Base_C_InitializeBackplate::CallFunc_Set_Widget_Blur_Blur_Strength_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_Backplate_Base_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_Backplate_Base_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.Set Brightness
// 0x006C (0x006C - 0x0000)
struct WBP_UIKit_Backplate_Base_C_Set_Brightness final
{
public:
	E_UI_BackplateBrightness                      Brightness_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_BackplateBrightness                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_BackplateBrightness                      Temp_byte_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_Set_Brightness) == 0x000004, "Wrong alignment on WBP_UIKit_Backplate_Base_C_Set_Brightness");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_Set_Brightness) == 0x00006C, "Wrong size on WBP_UIKit_Backplate_Base_C_Set_Brightness");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Brightness_0) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Brightness_0' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_struct_Variable) == 0x000004, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_struct_Variable_3) == 0x000034, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_byte_Variable_1) == 0x000044, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_real_Variable) == 0x000048, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_real_Variable_1) == 0x00004C, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_real_Variable_2) == 0x000050, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, Temp_real_Variable_3) == 0x000054, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, K2Node_Select_Default) == 0x000058, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Brightness, K2Node_Select_Default_1) == 0x00005C, "Member 'WBP_UIKit_Backplate_Base_C_Set_Brightness::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.Set Widget Blur
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_Set_Widget_Blur final
{
public:
	float                                         Blur_Strength;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_WidgetBlurAmount_ImplicitCast;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_Set_Widget_Blur) == 0x000008, "Wrong alignment on WBP_UIKit_Backplate_Base_C_Set_Widget_Blur");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_Set_Widget_Blur) == 0x000010, "Wrong size on WBP_UIKit_Backplate_Base_C_Set_Widget_Blur");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Widget_Blur, Blur_Strength) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_Set_Widget_Blur::Blur_Strength' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_Set_Widget_Blur, K2Node_VariableSet_WidgetBlurAmount_ImplicitCast) == 0x000008, "Member 'WBP_UIKit_Backplate_Base_C_Set_Widget_Blur::K2Node_VariableSet_WidgetBlurAmount_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.SetBackplateMaterial
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_SetBackplateMaterial final
{
public:
	class UMaterialInstance*                      Material_Instance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_SetBackplateMaterial) == 0x000008, "Wrong alignment on WBP_UIKit_Backplate_Base_C_SetBackplateMaterial");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_SetBackplateMaterial) == 0x000010, "Wrong size on WBP_UIKit_Backplate_Base_C_SetBackplateMaterial");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetBackplateMaterial, Material_Instance) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_SetBackplateMaterial::Material_Instance' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetBackplateMaterial, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Backplate_Base_C_SetBackplateMaterial::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Backplate_Base.WBP_UIKit_Backplate_Base_C.SetCornerRadius
// 0x0100 (0x0100 - 0x0000)
struct WBP_UIKit_Backplate_Base_C_SetCornerRadius final
{
public:
	E_UI_BackplateCornerRadius                    Corner_Radius;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_BackplateCornerRadius                    Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_BackplateCornerRadius                    Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_3;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_BackplateCornerRadius                    Temp_byte_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_6;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_9;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_10;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_11;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0090(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast_1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast_2;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast_3;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector4_W_ImplicitCast;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Backplate_Base_C_SetCornerRadius) == 0x000010, "Wrong alignment on WBP_UIKit_Backplate_Base_C_SetCornerRadius");
static_assert(sizeof(WBP_UIKit_Backplate_Base_C_SetCornerRadius) == 0x000100, "Wrong size on WBP_UIKit_Backplate_Base_C_SetCornerRadius");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Corner_Radius) == 0x000000, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Corner_Radius' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_2) == 0x000003, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_3) == 0x000004, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_byte_Variable) == 0x000005, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_4) == 0x000006, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_5) == 0x000007, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_6) == 0x000008, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_7) == 0x000009, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_8) == 0x00000A, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_9) == 0x00000C, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_10) == 0x00000D, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_11) == 0x00000E, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_12) == 0x00000F, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_13) == 0x000010, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_14) == 0x000011, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_15) == 0x000012, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_real_Variable) == 0x000014, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_16) == 0x000018, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_real_Variable_1) == 0x00001C, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_17) == 0x000020, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_real_Variable_2) == 0x000024, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_bool_Variable_18) == 0x000028, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_real_Variable_3) == 0x00002C, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, Temp_byte_Variable_2) == 0x000030, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default) == 0x000031, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_1) == 0x000032, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000038, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_IsMobileGame_ReturnValue) == 0x000040, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_3) == 0x000050, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_4) == 0x000058, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_5) == 0x000060, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_6) == 0x000068, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_7) == 0x000070, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_8) == 0x000078, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_9) == 0x00007C, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_10) == 0x000080, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Default_11) == 0x000084, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_MakeVector4_ReturnValue) == 0x000090, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_MakeStruct_LinearColor) == 0x0000B0, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000C0, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Option_0_ImplicitCast) == 0x0000C4, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Option_0_ImplicitCast_1) == 0x0000C8, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Option_0_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Option_0_ImplicitCast_2) == 0x0000CC, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Option_0_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, K2Node_Select_Option_0_ImplicitCast_3) == 0x0000D0, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::K2Node_Select_Option_0_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_MakeVector4_W_ImplicitCast) == 0x0000D8, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_MakeVector4_W_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_MakeVector4_Z_ImplicitCast) == 0x0000E0, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_MakeVector4_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_MakeVector4_Y_ImplicitCast) == 0x0000E8, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_MakeVector4_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Backplate_Base_C_SetCornerRadius, CallFunc_MakeVector4_X_ImplicitCast) == 0x0000F0, "Member 'WBP_UIKit_Backplate_Base_C_SetCornerRadius::CallFunc_MakeVector4_X_ImplicitCast' has a wrong offset!");

}

