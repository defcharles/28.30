#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengeListEntry_GoalCard

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengeListEntry_GoalCard.AthenaChallengeListEntry_GoalCard_C.ExecuteUbergraph_AthenaChallengeListEntry_GoalCard
// 0x0004 (0x0004 - 0x0000)
struct AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard) == 0x000004, "Wrong alignment on AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard");
static_assert(sizeof(AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard) == 0x000004, "Wrong size on AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard");
static_assert(offsetof(AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard, EntryPoint) == 0x000000, "Member 'AthenaChallengeListEntry_GoalCard_C_ExecuteUbergraph_AthenaChallengeListEntry_GoalCard::EntryPoint' has a wrong offset!");

// Function AthenaChallengeListEntry_GoalCard.AthenaChallengeListEntry_GoalCard_C.IsUsingGamepad
// 0x0018 (0x0018 - 0x0000)
struct AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad");
static_assert(sizeof(AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad) == 0x000018, "Wrong size on AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad");
static_assert(offsetof(AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad, Return_Value) == 0x000000, "Member 'AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad::Return_Value' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'AthenaChallengeListEntry_GoalCard_C_IsUsingGamepad::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

