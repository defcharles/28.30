#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmbientAudio

#include "Basic.hpp"

#include "AmbientAudio_classes.hpp"
#include "AmbientAudio_parameters.hpp"


namespace SDK
{

// Function AmbientAudio.AmbientAudioComponent.SetAmbientAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAmbientAudioDataAsset*           InAmbientAsset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioComponent::SetAmbientAsset(class UAmbientAudioDataAsset* InAmbientAsset)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAmbientAsset");

	Params::AmbientAudioComponent_SetAmbientAsset Parms{};

	Parms.InAmbientAsset = InAmbientAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmbientAudio.AmbientAudioComponent.SetCrossfadeTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InCrossfadeTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioComponent::SetCrossfadeTime(float InCrossfadeTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCrossfadeTime");

	Params::AmbientAudioComponent_SetCrossfadeTime Parms{};

	Parms.InCrossfadeTime = InCrossfadeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmbientAudio.AmbientAudioComponent.SetPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioComponent::SetPriority(int32 InPriority)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPriority");

	Params::AmbientAudioComponent_SetPriority Parms{};

	Parms.InPriority = InPriority;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmbientAudio.AmbientAudioSubsystem.AddAmbientEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AmbientName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAmbientAudioDataAsset*           Asset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CrossfadeTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioSubsystem::AddAmbientEntry(class FName AmbientName, class UAmbientAudioDataAsset* Asset, int32 Priority, float CrossfadeTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddAmbientEntry");

	Params::AmbientAudioSubsystem_AddAmbientEntry Parms{};

	Parms.AmbientName = AmbientName;
	Parms.Asset = Asset;
	Parms.Priority = Priority;
	Parms.CrossfadeTime = CrossfadeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmbientAudio.AmbientAudioSubsystem.AddGameplayTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioSubsystem::AddGameplayTag(const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddGameplayTag");

	Params::AmbientAudioSubsystem_AddGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmbientAudio.AmbientAudioSubsystem.GetAudioParameterComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioParameterComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioParameterComponent* UAmbientAudioSubsystem::GetAudioParameterComponent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAudioParameterComponent");

	Params::AmbientAudioSubsystem_GetAudioParameterComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AmbientAudio.AmbientAudioSubsystem.RemoveAmbientEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AmbientName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CrossfadeOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioSubsystem::RemoveAmbientEntry(class FName AmbientName, float CrossfadeOverride)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAmbientEntry");

	Params::AmbientAudioSubsystem_RemoveAmbientEntry Parms{};

	Parms.AmbientName = AmbientName;
	Parms.CrossfadeOverride = CrossfadeOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmbientAudio.AmbientAudioSubsystem.RemoveGameplayTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAmbientAudioSubsystem::RemoveGameplayTag(const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveGameplayTag");

	Params::AmbientAudioSubsystem_RemoveGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	UObject::ProcessEvent(Func, &Parms);
}

}

