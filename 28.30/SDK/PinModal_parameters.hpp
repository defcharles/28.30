#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PinModal

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PinModal.PinModal_C.BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'PinModal_C_BndEvt__PinModal_Button_AboutRatings_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function PinModal.PinModal_C.BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'PinModal_C_BndEvt__PinModal_Button_Close_1_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function PinModal.PinModal_C.CollectPinButtons
// 0x0020 (0x0020 - 0x0000)
struct PinModal_C_CollectPinButtons final
{
public:
	TArray<class UFortPinButton*>                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UFortPinButton*>                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PinModal_C_CollectPinButtons) == 0x000008, "Wrong alignment on PinModal_C_CollectPinButtons");
static_assert(sizeof(PinModal_C_CollectPinButtons) == 0x000020, "Wrong size on PinModal_C_CollectPinButtons");
static_assert(offsetof(PinModal_C_CollectPinButtons, ReturnValue) == 0x000000, "Member 'PinModal_C_CollectPinButtons::ReturnValue' has a wrong offset!");
static_assert(offsetof(PinModal_C_CollectPinButtons, K2Node_MakeArray_Array) == 0x000010, "Member 'PinModal_C_CollectPinButtons::K2Node_MakeArray_Array' has a wrong offset!");

// Function PinModal.PinModal_C.ExecuteUbergraph_PinModal
// 0x00A8 (0x00A8 - 0x0000)
struct PinModal_C_ExecuteUbergraph_PinModal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInCabinMode;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameActivity*                      K2Node_Event_GameActivity;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	class UWBP_UIKit_Button_Quiet_C*              K2Node_DynamicCast_AsWBP_UIKit_Button_Quiet;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UIKit_Button_Quiet_C*              K2Node_DynamicCast_AsWBP_UIKit_Button_Quiet_1;     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0060(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UFortStoreFrontOfferInfo*         K2Node_Event_OfferInfo;                            // 0x0088(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPinModalValidityState                        K2Node_Event_PinModalState;                        // 0x00A1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPinModalValidityState                        Temp_byte_Variable_4;                              // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_ExecuteUbergraph_PinModal) == 0x000008, "Wrong alignment on PinModal_C_ExecuteUbergraph_PinModal");
static_assert(sizeof(PinModal_C_ExecuteUbergraph_PinModal) == 0x0000A8, "Wrong size on PinModal_C_ExecuteUbergraph_PinModal");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, EntryPoint) == 0x000000, "Member 'PinModal_C_ExecuteUbergraph_PinModal::EntryPoint' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, Temp_byte_Variable) == 0x000004, "Member 'PinModal_C_ExecuteUbergraph_PinModal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PinModal_C_ExecuteUbergraph_PinModal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Event_bIsInCabinMode) == 0x000011, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Event_bIsInCabinMode' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Event_GameActivity) == 0x000018, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Event_GameActivity' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, Temp_byte_Variable_1) == 0x000020, "Member 'PinModal_C_ExecuteUbergraph_PinModal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'PinModal_C_ExecuteUbergraph_PinModal::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_DynamicCast_AsWBP_UIKit_Button_Quiet) == 0x000040, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_DynamicCast_AsWBP_UIKit_Button_Quiet' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_DynamicCast_AsWBP_UIKit_Button_Quiet_1) == 0x000050, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_DynamicCast_AsWBP_UIKit_Button_Quiet_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000060, "Member 'PinModal_C_ExecuteUbergraph_PinModal::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, Temp_byte_Variable_2) == 0x000078, "Member 'PinModal_C_ExecuteUbergraph_PinModal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_ComponentBoundEvent_Button) == 0x000080, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Event_OfferInfo) == 0x000088, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Event_OfferInfo' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, Temp_bool_Variable) == 0x000090, "Member 'PinModal_C_ExecuteUbergraph_PinModal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Select_Default) == 0x000098, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, Temp_byte_Variable_3) == 0x0000A0, "Member 'PinModal_C_ExecuteUbergraph_PinModal::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Event_PinModalState) == 0x0000A1, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Event_PinModalState' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Event_IsDesignTime) == 0x0000A2, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, Temp_byte_Variable_4) == 0x0000A3, "Member 'PinModal_C_ExecuteUbergraph_PinModal::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(PinModal_C_ExecuteUbergraph_PinModal, K2Node_Select_Default_1) == 0x0000A4, "Member 'PinModal_C_ExecuteUbergraph_PinModal::K2Node_Select_Default_1' has a wrong offset!");

// Function PinModal.PinModal_C.OnSetPinState
// 0x0001 (0x0001 - 0x0000)
struct PinModal_C_OnSetPinState final
{
public:
	EPinModalValidityState                        PinModalState;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_OnSetPinState) == 0x000001, "Wrong alignment on PinModal_C_OnSetPinState");
static_assert(sizeof(PinModal_C_OnSetPinState) == 0x000001, "Wrong size on PinModal_C_OnSetPinState");
static_assert(offsetof(PinModal_C_OnSetPinState, PinModalState) == 0x000000, "Member 'PinModal_C_OnSetPinState::PinModalState' has a wrong offset!");

// Function PinModal.PinModal_C.OnShowCabinModeLayout
// 0x0001 (0x0001 - 0x0000)
struct PinModal_C_OnShowCabinModeLayout final
{
public:
	bool                                          bIsInCabinMode;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_OnShowCabinModeLayout) == 0x000001, "Wrong alignment on PinModal_C_OnShowCabinModeLayout");
static_assert(sizeof(PinModal_C_OnShowCabinModeLayout) == 0x000001, "Wrong size on PinModal_C_OnShowCabinModeLayout");
static_assert(offsetof(PinModal_C_OnShowCabinModeLayout, bIsInCabinMode) == 0x000000, "Member 'PinModal_C_OnShowCabinModeLayout::bIsInCabinMode' has a wrong offset!");

// Function PinModal.PinModal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PinModal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_PreConstruct) == 0x000001, "Wrong alignment on PinModal_C_PreConstruct");
static_assert(sizeof(PinModal_C_PreConstruct) == 0x000001, "Wrong size on PinModal_C_PreConstruct");
static_assert(offsetof(PinModal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PinModal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PinModal.PinModal_C.Set Visual States
// 0x0038 (0x0038 - 0x0000)
struct PinModal_C_Set_Visual_States final
{
public:
	EPinModalValidityState                        Pin_States;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPinModalValidityState                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPinModalValidityState                        Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPinModalValidityState                        Temp_byte_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default_2;                           // 0x0030(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_Set_Visual_States) == 0x000008, "Wrong alignment on PinModal_C_Set_Visual_States");
static_assert(sizeof(PinModal_C_Set_Visual_States) == 0x000038, "Wrong size on PinModal_C_Set_Visual_States");
static_assert(offsetof(PinModal_C_Set_Visual_States, Pin_States) == 0x000000, "Member 'PinModal_C_Set_Visual_States::Pin_States' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable) == 0x000001, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_struct_Variable) == 0x000004, "Member 'PinModal_C_Set_Visual_States::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable_1) == 0x000014, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable_2) == 0x000015, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable_3) == 0x000016, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable_4) == 0x000017, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable_5) == 0x000018, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, Temp_byte_Variable_6) == 0x000019, "Member 'PinModal_C_Set_Visual_States::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, K2Node_Select_Default) == 0x00001A, "Member 'PinModal_C_Set_Visual_States::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, K2Node_Select_Default_1) == 0x00001C, "Member 'PinModal_C_Set_Visual_States::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PinModal_C_Set_Visual_States, K2Node_Select_Default_2) == 0x000030, "Member 'PinModal_C_Set_Visual_States::K2Node_Select_Default_2' has a wrong offset!");

// Function PinModal.PinModal_C.SetPinButtonNumbers
// 0x0040 (0x0040 - 0x0000)
struct PinModal_C_SetPinButtonNumbers final
{
public:
	class UPinCodeButton_C*                       NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPinCodeButton_C*>               K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPinCodeButton_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_SetPinButtonNumbers) == 0x000008, "Wrong alignment on PinModal_C_SetPinButtonNumbers");
static_assert(sizeof(PinModal_C_SetPinButtonNumbers) == 0x000040, "Wrong size on PinModal_C_SetPinButtonNumbers");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, NewLocalVar_0) == 0x000000, "Member 'PinModal_C_SetPinButtonNumbers::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PinModal_C_SetPinButtonNumbers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PinModal_C_SetPinButtonNumbers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PinModal_C_SetPinButtonNumbers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, K2Node_MakeArray_Array) == 0x000018, "Member 'PinModal_C_SetPinButtonNumbers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'PinModal_C_SetPinButtonNumbers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, CallFunc_Array_Get_Item) == 0x000030, "Member 'PinModal_C_SetPinButtonNumbers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PinModal_C_SetPinButtonNumbers, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PinModal_C_SetPinButtonNumbers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PinModal.PinModal_C.SetupPurchaseRequest
// 0x0008 (0x0008 - 0x0000)
struct PinModal_C_SetupPurchaseRequest final
{
public:
	const class UFortStoreFrontOfferInfo*         OfferInfo;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_SetupPurchaseRequest) == 0x000008, "Wrong alignment on PinModal_C_SetupPurchaseRequest");
static_assert(sizeof(PinModal_C_SetupPurchaseRequest) == 0x000008, "Wrong size on PinModal_C_SetupPurchaseRequest");
static_assert(offsetof(PinModal_C_SetupPurchaseRequest, OfferInfo) == 0x000000, "Member 'PinModal_C_SetupPurchaseRequest::OfferInfo' has a wrong offset!");

// Function PinModal.PinModal_C.SetupSqueegeeWidgets
// 0x0008 (0x0008 - 0x0000)
struct PinModal_C_SetupSqueegeeWidgets final
{
public:
	class UFortGameActivity*                      GameActivity;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_SetupSqueegeeWidgets) == 0x000008, "Wrong alignment on PinModal_C_SetupSqueegeeWidgets");
static_assert(sizeof(PinModal_C_SetupSqueegeeWidgets) == 0x000008, "Wrong size on PinModal_C_SetupSqueegeeWidgets");
static_assert(offsetof(PinModal_C_SetupSqueegeeWidgets, GameActivity) == 0x000000, "Member 'PinModal_C_SetupSqueegeeWidgets::GameActivity' has a wrong offset!");

// Function PinModal.PinModal_C.UpdateAboutRatingsButtonVisibility
// 0x0010 (0x0010 - 0x0000)
struct PinModal_C_UpdateAboutRatingsButtonVisibility final
{
public:
	class UFortGameActivity*                      GameActivity;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAgeRating_ReturnValue;                 // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinModal_C_UpdateAboutRatingsButtonVisibility) == 0x000008, "Wrong alignment on PinModal_C_UpdateAboutRatingsButtonVisibility");
static_assert(sizeof(PinModal_C_UpdateAboutRatingsButtonVisibility) == 0x000010, "Wrong size on PinModal_C_UpdateAboutRatingsButtonVisibility");
static_assert(offsetof(PinModal_C_UpdateAboutRatingsButtonVisibility, GameActivity) == 0x000000, "Member 'PinModal_C_UpdateAboutRatingsButtonVisibility::GameActivity' has a wrong offset!");
static_assert(offsetof(PinModal_C_UpdateAboutRatingsButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PinModal_C_UpdateAboutRatingsButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinModal_C_UpdateAboutRatingsButtonVisibility, CallFunc_HasAgeRating_ReturnValue) == 0x000009, "Member 'PinModal_C_UpdateAboutRatingsButtonVisibility::CallFunc_HasAgeRating_ReturnValue' has a wrong offset!");

}

