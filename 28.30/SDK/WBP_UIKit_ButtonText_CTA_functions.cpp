#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ButtonText_CTA

#include "Basic.hpp"

#include "WBP_UIKit_ButtonText_CTA_classes.hpp"
#include "WBP_UIKit_ButtonText_CTA_parameters.hpp"


namespace SDK
{

// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.ExecuteUbergraph_WBP_UIKit_ButtonText_CTA
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_ButtonText_CTA_C::ExecuteUbergraph_WBP_UIKit_ButtonText_CTA(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_UIKit_ButtonText_CTA");

	Params::WBP_UIKit_ButtonText_CTA_C_ExecuteUbergraph_WBP_UIKit_ButtonText_CTA Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnInstantTransitionToDisabled
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnInstantTransitionToDisabled()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInstantTransitionToDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnInstantTransitionToEnabled
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnInstantTransitionToEnabled()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInstantTransitionToEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnTransitionDisabledRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnTransitionDisabledRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionDisabledRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnTransitionEnabledRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnTransitionEnabledRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionEnabledRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnTransitionFocusedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnTransitionFocusedRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionFocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnTransitionPressedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnTransitionPressedRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionPressedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnTransitionReleasedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnTransitionReleasedRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionReleasedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.OnTransitionUnfocusedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::OnTransitionUnfocusedRequested()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionUnfocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.RefreshDynamicFontMaterial
// (Protected, BlueprintCallable, BlueprintEvent)

void UWBP_UIKit_ButtonText_CTA_C::RefreshDynamicFontMaterial()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RefreshDynamicFontMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.SetFont
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateFontInfo                   Font_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_UIKit_ButtonText_CTA_C::SetFont(struct FSlateFontInfo& Font_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFont");

	Params::WBP_UIKit_ButtonText_CTA_C_SetFont Parms{};

	Parms.Font_0 = std::move(Font_0);

	UObject::ProcessEvent(Func, &Parms);

	Font_0 = std::move(Parms.Font_0);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.SetMobileFontSizeMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MobileFontSizeMultiplier                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_ButtonText_CTA_C::SetMobileFontSizeMultiplier(float MobileFontSizeMultiplier)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMobileFontSizeMultiplier");

	Params::WBP_UIKit_ButtonText_CTA_C_SetMobileFontSizeMultiplier Parms{};

	Parms.MobileFontSizeMultiplier = MobileFontSizeMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.SetText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Empty                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_ButtonText_CTA_C::SetText(const class FText& Text, bool* Empty)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetText");

	Params::WBP_UIKit_ButtonText_CTA_C_SetText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	if (Empty != nullptr)
		*Empty = Parms.Empty;
}


// Function WBP_UIKit_ButtonText_CTA.WBP_UIKit_ButtonText_CTA_C.SetTransformPolicy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextTransformPolicy                    Transform_Policy                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_ButtonText_CTA_C::SetTransformPolicy(ETextTransformPolicy Transform_Policy)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTransformPolicy");

	Params::WBP_UIKit_ButtonText_CTA_C_SetTransformPolicy Parms{};

	Parms.Transform_Policy = Transform_Policy;

	UObject::ProcessEvent(Func, &Parms);
}

}

