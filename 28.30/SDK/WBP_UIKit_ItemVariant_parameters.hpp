#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemVariant

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.ExecuteUbergraph_WBP_UIKit_ItemVariant
// 0x0048 (0x0048 - 0x0000)
struct WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantItemVM*                     K2Node_DynamicCast_AsFort_Variant_Item_VM;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0028(0x0020)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant) == 0x000008, "Wrong alignment on WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant) == 0x000048, "Wrong size on WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, EntryPoint) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, K2Node_Event_bIsExpanded) == 0x000004, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, K2Node_Event_bIsSelected) == 0x000005, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, K2Node_Event_ListItemObject) == 0x000008, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, K2Node_DynamicCast_AsFort_Variant_Item_VM) == 0x000018, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::K2Node_DynamicCast_AsFort_Variant_Item_VM' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000028, "Member 'WBP_UIKit_ItemVariant_C_ExecuteUbergraph_WBP_UIKit_ItemVariant::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_ItemVariant_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_UIKit_ItemVariant_C_OnListItemObjectSet");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_UIKit_ItemVariant_C_OnListItemObjectSet");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_ItemVariant_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_ItemVariant_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_ItemVariant_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.SetFortVariantItemVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_ItemVariant_C_SetFortVariantItemVM final
{
public:
	class UFortVariantItemVM*                     ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_SetFortVariantItemVM) == 0x000008, "Wrong alignment on WBP_UIKit_ItemVariant_C_SetFortVariantItemVM");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_SetFortVariantItemVM) == 0x000028, "Wrong size on WBP_UIKit_ItemVariant_C_SetFortVariantItemVM");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetFortVariantItemVM, ViewModel) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_SetFortVariantItemVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetFortVariantItemVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemVariant_C_SetFortVariantItemVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetFortVariantItemVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_UIKit_ItemVariant_C_SetFortVariantItemVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetFortVariantItemVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_UIKit_ItemVariant_C_SetFortVariantItemVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.SetItemIsDisabled
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_ItemVariant_C_SetItemIsDisabled final
{
public:
	bool                                          Disabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_SetItemIsDisabled) == 0x000008, "Wrong alignment on WBP_UIKit_ItemVariant_C_SetItemIsDisabled");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_SetItemIsDisabled) == 0x000018, "Wrong size on WBP_UIKit_ItemVariant_C_SetItemIsDisabled");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsDisabled, Disabled) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsDisabled::Disabled' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsDisabled, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsDisabled::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsDisabled, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000010, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsDisabled::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.SetItemIsOwned
// 0x0007 (0x0007 - 0x0000)
struct WBP_UIKit_ItemVariant_C_SetItemIsOwned final
{
public:
	bool                                          IsOwned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_SetItemIsOwned) == 0x000001, "Wrong alignment on WBP_UIKit_ItemVariant_C_SetItemIsOwned");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_SetItemIsOwned) == 0x000007, "Wrong size on WBP_UIKit_ItemVariant_C_SetItemIsOwned");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, IsOwned) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::IsOwned' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, Temp_bool_Variable) == 0x000003, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetItemIsOwned, K2Node_Select_Default) == 0x000006, "Member 'WBP_UIKit_ItemVariant_C_SetItemIsOwned::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.SetVariantDisplayInfo
// 0x0038 (0x0038 - 0x0000)
struct WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo final
{
public:
	struct FVariantDisplayInfo                    VariantDisplayInfo;                                // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo) == 0x000008, "Wrong alignment on WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo) == 0x000038, "Wrong size on WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo, VariantDisplayInfo) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_SetVariantDisplayInfo::VariantDisplayInfo' has a wrong offset!");

// Function WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C.OwnedVisibility
// 0x0007 (0x0007 - 0x0000)
struct WBP_UIKit_ItemVariant_C_OwnedVisibility final
{
public:
	bool                                          IsOwned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_ItemVariant_C_OwnedVisibility) == 0x000001, "Wrong alignment on WBP_UIKit_ItemVariant_C_OwnedVisibility");
static_assert(sizeof(WBP_UIKit_ItemVariant_C_OwnedVisibility) == 0x000007, "Wrong size on WBP_UIKit_ItemVariant_C_OwnedVisibility");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, IsOwned) == 0x000000, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::IsOwned' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, NewParam) == 0x000001, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, Temp_bool_Variable) == 0x000002, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, Temp_byte_Variable) == 0x000003, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_ItemVariant_C_OwnedVisibility, K2Node_Select_Default) == 0x000006, "Member 'WBP_UIKit_ItemVariant_C_OwnedVisibility::K2Node_Select_Default' has a wrong offset!");

}

