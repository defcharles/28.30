#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_FilteredInputField

#include "Basic.hpp"

#include "WBP_UIKit_FilteredInputField_classes.hpp"
#include "WBP_UIKit_FilteredInputField_parameters.hpp"


namespace SDK
{

// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_1_OnTextChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_FilteredInputField_C::BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_1_OnTextChanged__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_1_OnTextChanged__DelegateSignature");

	Params::WBP_UIKit_FilteredInputField_C_BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_1_OnTextChanged__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_3_OnTextCommited__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// ETextCommit                             Commit_method                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_FilteredInputField_C::BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_3_OnTextCommited__DelegateSignature(const class FText& Text, ETextCommit Commit_method)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_3_OnTextCommited__DelegateSignature");

	Params::WBP_UIKit_FilteredInputField_C_BndEvt__FilteredTextEntryWidget_WBP_UIKit_InputField_K2Node_ComponentBoundEvent_3_OnTextCommited__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.Commit_method = Commit_method;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_UIKit_FilteredInputField_C::Construct()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.ExecuteUbergraph_WBP_UIKit_FilteredInputField
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_FilteredInputField_C::ExecuteUbergraph_WBP_UIKit_FilteredInputField(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_WBP_UIKit_FilteredInputField");

	Params::WBP_UIKit_FilteredInputField_C_ExecuteUbergraph_WBP_UIKit_FilteredInputField Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.GetCurrentText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (Parm, OutParm)

void UWBP_UIKit_FilteredInputField_C::GetCurrentText(class FText* Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentText");

	Params::WBP_UIKit_FilteredInputField_C_GetCurrentText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.GetErrorText
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Additional_Validator_Failed                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Appropriate_Text                                       (Parm, OutParm)

void UWBP_UIKit_FilteredInputField_C::GetErrorText(bool Additional_Validator_Failed, class FText* Appropriate_Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetErrorText");

	Params::WBP_UIKit_FilteredInputField_C_GetErrorText Parms{};

	Parms.Additional_Validator_Failed = Additional_Validator_Failed;

	UObject::ProcessEvent(Func, &Parms);

	if (Appropriate_Text != nullptr)
		*Appropriate_Text = std::move(Parms.Appropriate_Text);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.HandleShowPrompt
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_UIKit_FilteredInputField_C::HandleShowPrompt()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShowPrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.OnCharCountTextChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UIKit_FilteredInputField_C::OnCharCountTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCharCountTextChanged");

	Params::WBP_UIKit_FilteredInputField_C_OnCharCountTextChanged Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.OnDirtyTextAttempted
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsBadText                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAdditionalValidationFailed                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_FilteredInputField_C::OnDirtyTextAttempted(bool bIsBadText, bool bAdditionalValidationFailed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDirtyTextAttempted");

	Params::WBP_UIKit_FilteredInputField_C_OnDirtyTextAttempted Parms{};

	Parms.bIsBadText = bIsBadText;
	Parms.bAdditionalValidationFailed = bAdditionalValidationFailed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.OnEditableTextChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UIKit_FilteredInputField_C::OnEditableTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEditableTextChanged");

	Params::WBP_UIKit_FilteredInputField_C_OnEditableTextChanged Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.OnEditableTextHintChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UIKit_FilteredInputField_C::OnEditableTextHintChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEditableTextHintChanged");

	Params::WBP_UIKit_FilteredInputField_C_OnEditableTextHintChanged Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_FilteredInputField_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreConstruct");

	Params::WBP_UIKit_FilteredInputField_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.SetInputFieldText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_FilteredInputField_C::SetInputFieldText(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetInputFieldText");

	Params::WBP_UIKit_FilteredInputField_C_SetInputFieldText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.SetMinWidth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InWidth                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_FilteredInputField_C::SetMinWidth(double InWidth)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMinWidth");

	Params::WBP_UIKit_FilteredInputField_C_SetMinWidth Parms{};

	Parms.InWidth = InWidth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.SetReadOnly
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReadOnly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_FilteredInputField_C::SetReadOnly(bool IsReadOnly)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetReadOnly");

	Params::WBP_UIKit_FilteredInputField_C_SetReadOnly Parms{};

	Parms.IsReadOnly = IsReadOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.SetTextFocus
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_UIKit_FilteredInputField_C::SetTextFocus()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTextFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.UpdateColors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_UIKit_FilteredInputField_C::UpdateColors()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.UpdateConfiguration
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHideValidation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextJustify                            TextJustification                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldShowTextPrompt                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             PromptDisplayText                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_FilteredInputField_C::UpdateConfiguration(bool bHideValidation, ETextJustify TextJustification, bool bShouldShowTextPrompt, const class FText& PromptDisplayText)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateConfiguration");

	Params::WBP_UIKit_FilteredInputField_C_UpdateConfiguration Parms{};

	Parms.bHideValidation = bHideValidation;
	Parms.TextJustification = TextJustification;
	Parms.bShouldShowTextPrompt = bShouldShowTextPrompt;
	Parms.PromptDisplayText = std::move(PromptDisplayText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.ValidatePersistentID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UIKit_FilteredInputField_C::ValidatePersistentID(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ValidatePersistentID");

	Params::WBP_UIKit_FilteredInputField_C_ValidatePersistentID Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_FilteredInputField.WBP_UIKit_FilteredInputField_C.GetEditedText
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWBP_UIKit_FilteredInputField_C::GetEditedText() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetEditedText");

	Params::WBP_UIKit_FilteredInputField_C_GetEditedText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

