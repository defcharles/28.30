#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapDevice

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MapDevice.CRDMapCustomizationComponent.SetOverrideMapMaterial
// 0x0058 (0x0058 - 0x0000)
struct CRDMapCustomizationComponent_SetOverrideMapMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      MaterialOverride;                                  // 0x0000(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0020(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0038(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Zoom;                                              // 0x0054(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CRDMapCustomizationComponent_SetOverrideMapMaterial) == 0x000008, "Wrong alignment on CRDMapCustomizationComponent_SetOverrideMapMaterial");
static_assert(sizeof(CRDMapCustomizationComponent_SetOverrideMapMaterial) == 0x000058, "Wrong size on CRDMapCustomizationComponent_SetOverrideMapMaterial");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapMaterial, MaterialOverride) == 0x000000, "Member 'CRDMapCustomizationComponent_SetOverrideMapMaterial::MaterialOverride' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapMaterial, Location) == 0x000020, "Member 'CRDMapCustomizationComponent_SetOverrideMapMaterial::Location' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapMaterial, Rotation) == 0x000038, "Member 'CRDMapCustomizationComponent_SetOverrideMapMaterial::Rotation' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapMaterial, Width) == 0x000050, "Member 'CRDMapCustomizationComponent_SetOverrideMapMaterial::Width' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapMaterial, Zoom) == 0x000054, "Member 'CRDMapCustomizationComponent_SetOverrideMapMaterial::Zoom' has a wrong offset!");

// Function MapDevice.CRDMapCustomizationComponent.SetOverrideMapTexture
// 0x0058 (0x0058 - 0x0000)
struct CRDMapCustomizationComponent_SetOverrideMapTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              TextureOverride;                                   // 0x0000(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0020(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0038(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Zoom;                                              // 0x0054(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CRDMapCustomizationComponent_SetOverrideMapTexture) == 0x000008, "Wrong alignment on CRDMapCustomizationComponent_SetOverrideMapTexture");
static_assert(sizeof(CRDMapCustomizationComponent_SetOverrideMapTexture) == 0x000058, "Wrong size on CRDMapCustomizationComponent_SetOverrideMapTexture");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapTexture, TextureOverride) == 0x000000, "Member 'CRDMapCustomizationComponent_SetOverrideMapTexture::TextureOverride' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapTexture, Location) == 0x000020, "Member 'CRDMapCustomizationComponent_SetOverrideMapTexture::Location' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapTexture, Rotation) == 0x000038, "Member 'CRDMapCustomizationComponent_SetOverrideMapTexture::Rotation' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapTexture, Width) == 0x000050, "Member 'CRDMapCustomizationComponent_SetOverrideMapTexture::Width' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideMapTexture, Zoom) == 0x000054, "Member 'CRDMapCustomizationComponent_SetOverrideMapTexture::Zoom' has a wrong offset!");

// Function MapDevice.CRDMapCustomizationComponent.SetOverrideSceneCapture
// 0x0048 (0x0048 - 0x0000)
struct CRDMapCustomizationComponent_SetOverrideSceneCapture final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Zoom;                                              // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseClippingPlanes;                                // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NearClipLength;                                    // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FarClipLength;                                     // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CRDMapCustomizationComponent_SetOverrideSceneCapture) == 0x000008, "Wrong alignment on CRDMapCustomizationComponent_SetOverrideSceneCapture");
static_assert(sizeof(CRDMapCustomizationComponent_SetOverrideSceneCapture) == 0x000048, "Wrong size on CRDMapCustomizationComponent_SetOverrideSceneCapture");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, Location) == 0x000000, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::Location' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, Rotation) == 0x000018, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::Rotation' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, Width) == 0x000030, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::Width' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, Zoom) == 0x000034, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::Zoom' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, bUseClippingPlanes) == 0x000038, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::bUseClippingPlanes' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, NearClipLength) == 0x00003C, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::NearClipLength' has a wrong offset!");
static_assert(offsetof(CRDMapCustomizationComponent_SetOverrideSceneCapture, FarClipLength) == 0x000040, "Member 'CRDMapCustomizationComponent_SetOverrideSceneCapture::FarClipLength' has a wrong offset!");

}

