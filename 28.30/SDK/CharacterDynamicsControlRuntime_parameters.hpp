#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterDynamicsControlRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PhysicsControl_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetCharacterState
// 0x0010 (0x0010 - 0x0000)
struct CharacterDynamicsControlBPLibrary_GetCharacterState final
{
public:
	const class UFortAnimInstance*                InAnimInstance;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterDynamicsControlBPLibrary_GetCharacterState) == 0x000008, "Wrong alignment on CharacterDynamicsControlBPLibrary_GetCharacterState");
static_assert(sizeof(CharacterDynamicsControlBPLibrary_GetCharacterState) == 0x000010, "Wrong size on CharacterDynamicsControlBPLibrary_GetCharacterState");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_GetCharacterState, InAnimInstance) == 0x000000, "Member 'CharacterDynamicsControlBPLibrary_GetCharacterState::InAnimInstance' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_GetCharacterState, ReturnValue) == 0x000008, "Member 'CharacterDynamicsControlBPLibrary_GetCharacterState::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetProperty
// 0x0010 (0x0010 - 0x0000)
struct CharacterDynamicsControlBPLibrary_GetProperty final
{
public:
	const class UFortAnimInstance*                InAnimInstance;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPropertyName;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterDynamicsControlBPLibrary_GetProperty) == 0x000008, "Wrong alignment on CharacterDynamicsControlBPLibrary_GetProperty");
static_assert(sizeof(CharacterDynamicsControlBPLibrary_GetProperty) == 0x000010, "Wrong size on CharacterDynamicsControlBPLibrary_GetProperty");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_GetProperty, InAnimInstance) == 0x000000, "Member 'CharacterDynamicsControlBPLibrary_GetProperty::InAnimInstance' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_GetProperty, InPropertyName) == 0x000008, "Member 'CharacterDynamicsControlBPLibrary_GetProperty::InPropertyName' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_GetProperty, ReturnValue) == 0x00000C, "Member 'CharacterDynamicsControlBPLibrary_GetProperty::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.SetProperty
// 0x0010 (0x0010 - 0x0000)
struct CharacterDynamicsControlBPLibrary_SetProperty final
{
public:
	const class UFortAnimInstance*                InAnimInstance;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPropertyName;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterDynamicsControlBPLibrary_SetProperty) == 0x000008, "Wrong alignment on CharacterDynamicsControlBPLibrary_SetProperty");
static_assert(sizeof(CharacterDynamicsControlBPLibrary_SetProperty) == 0x000010, "Wrong size on CharacterDynamicsControlBPLibrary_SetProperty");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_SetProperty, InAnimInstance) == 0x000000, "Member 'CharacterDynamicsControlBPLibrary_SetProperty::InAnimInstance' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_SetProperty, InPropertyName) == 0x000008, "Member 'CharacterDynamicsControlBPLibrary_SetProperty::InPropertyName' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_SetProperty, InValue) == 0x00000C, "Member 'CharacterDynamicsControlBPLibrary_SetProperty::InValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.UpdateRigidBodyWithControlNodeParameters
// 0x0030 (0x0030 - 0x0000)
struct CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters final
{
public:
	struct FAnimUpdateContext                     UpdateContext;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FRigidBodyWithControlReference         RigidBodyWithControl;                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FRigidBodyWithControlReference         ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters) == 0x000008, "Wrong alignment on CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters");
static_assert(sizeof(CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters) == 0x000030, "Wrong size on CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters, UpdateContext) == 0x000000, "Member 'CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters::UpdateContext' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters, RigidBodyWithControl) == 0x000010, "Member 'CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters::RigidBodyWithControl' has a wrong offset!");
static_assert(offsetof(CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters, ReturnValue) == 0x000020, "Member 'CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetGravityOverrideVector
// 0x0018 (0x0018 - 0x0000)
struct FortCharacterDynamicsComponent_GetGravityOverrideVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_GetGravityOverrideVector) == 0x000008, "Wrong alignment on FortCharacterDynamicsComponent_GetGravityOverrideVector");
static_assert(sizeof(FortCharacterDynamicsComponent_GetGravityOverrideVector) == 0x000018, "Wrong size on FortCharacterDynamicsComponent_GetGravityOverrideVector");
static_assert(offsetof(FortCharacterDynamicsComponent_GetGravityOverrideVector, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_GetGravityOverrideVector::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetTransitionParameters
// 0x0020 (0x0020 - 0x0000)
struct FortCharacterDynamicsComponent_GetTransitionParameters final
{
public:
	struct FPhysicsControlControlAndModifierParameters ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_GetTransitionParameters) == 0x000008, "Wrong alignment on FortCharacterDynamicsComponent_GetTransitionParameters");
static_assert(sizeof(FortCharacterDynamicsComponent_GetTransitionParameters) == 0x000020, "Wrong size on FortCharacterDynamicsComponent_GetTransitionParameters");
static_assert(offsetof(FortCharacterDynamicsComponent_GetTransitionParameters, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_GetTransitionParameters::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.ParameterIndex
// 0x0004 (0x0004 - 0x0000)
struct FortCharacterDynamicsComponent_ParameterIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_ParameterIndex) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_ParameterIndex");
static_assert(sizeof(FortCharacterDynamicsComponent_ParameterIndex) == 0x000004, "Wrong size on FortCharacterDynamicsComponent_ParameterIndex");
static_assert(offsetof(FortCharacterDynamicsComponent_ParameterIndex, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_ParameterIndex::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.PreviousStateName
// 0x0004 (0x0004 - 0x0000)
struct FortCharacterDynamicsComponent_PreviousStateName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_PreviousStateName) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_PreviousStateName");
static_assert(sizeof(FortCharacterDynamicsComponent_PreviousStateName) == 0x000004, "Wrong size on FortCharacterDynamicsComponent_PreviousStateName");
static_assert(offsetof(FortCharacterDynamicsComponent_PreviousStateName, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_PreviousStateName::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.SetProperty
// 0x0008 (0x0008 - 0x0000)
struct FortCharacterDynamicsComponent_SetProperty final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PropertyValue;                                     // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCharacterDynamicsComponent_SetProperty) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_SetProperty");
static_assert(sizeof(FortCharacterDynamicsComponent_SetProperty) == 0x000008, "Wrong size on FortCharacterDynamicsComponent_SetProperty");
static_assert(offsetof(FortCharacterDynamicsComponent_SetProperty, PropertyName) == 0x000000, "Member 'FortCharacterDynamicsComponent_SetProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(FortCharacterDynamicsComponent_SetProperty, PropertyValue) == 0x000004, "Member 'FortCharacterDynamicsComponent_SetProperty::PropertyValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.StateIndex
// 0x0004 (0x0004 - 0x0000)
struct FortCharacterDynamicsComponent_StateIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_StateIndex) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_StateIndex");
static_assert(sizeof(FortCharacterDynamicsComponent_StateIndex) == 0x000004, "Wrong size on FortCharacterDynamicsComponent_StateIndex");
static_assert(offsetof(FortCharacterDynamicsComponent_StateIndex, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_StateIndex::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.StateName
// 0x0004 (0x0004 - 0x0000)
struct FortCharacterDynamicsComponent_StateName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_StateName) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_StateName");
static_assert(sizeof(FortCharacterDynamicsComponent_StateName) == 0x000004, "Wrong size on FortCharacterDynamicsComponent_StateName");
static_assert(offsetof(FortCharacterDynamicsComponent_StateName, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_StateName::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetProperty
// 0x0008 (0x0008 - 0x0000)
struct FortCharacterDynamicsComponent_GetProperty final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCharacterDynamicsComponent_GetProperty) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_GetProperty");
static_assert(sizeof(FortCharacterDynamicsComponent_GetProperty) == 0x000008, "Wrong size on FortCharacterDynamicsComponent_GetProperty");
static_assert(offsetof(FortCharacterDynamicsComponent_GetProperty, PropertyName) == 0x000000, "Member 'FortCharacterDynamicsComponent_GetProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(FortCharacterDynamicsComponent_GetProperty, ReturnValue) == 0x000004, "Member 'FortCharacterDynamicsComponent_GetProperty::ReturnValue' has a wrong offset!");

// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetTimeInCurrentStateSeconds
// 0x0004 (0x0004 - 0x0000)
struct FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds) == 0x000004, "Wrong alignment on FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds");
static_assert(sizeof(FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds) == 0x000004, "Wrong size on FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds");
static_assert(offsetof(FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds, ReturnValue) == 0x000000, "Member 'FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds::ReturnValue' has a wrong offset!");

}

