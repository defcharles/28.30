#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS28UI

#include "Basic.hpp"

#include "BattlePassS28UI_classes.hpp"
#include "BattlePassS28UI_parameters.hpp"


namespace SDK
{

// Function BattlePassS28UI.BattlePassLandingPageS28.OnBattlePassSubscriptionAllowed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSubscriptionAllowed                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassLandingPageS28::OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBattlePassSubscriptionAllowed");

	Params::BattlePassLandingPageS28_OnBattlePassSubscriptionAllowed Parms{};

	Parms.bSubscriptionAllowed = bSubscriptionAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassRewardPageS28.HandleRewardTracksBoundaryNavigation
// (Final, Native, Private)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UBattlePassRewardPageS28::HandleRewardTracksBoundaryNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleRewardTracksBoundaryNavigation");

	Params::BattlePassRewardPageS28_HandleRewardTracksBoundaryNavigation Parms{};

	Parms.InNavigation = InNavigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattlePassS28UI.BattlePassRewardPageS28.OnInitForPageType
// (Event, Public, BlueprintEvent)
// Parameters:
// ERewardPageType                         InRewardPageType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS28::OnInitForPageType(const ERewardPageType InRewardPageType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInitForPageType");

	Params::BattlePassRewardPageS28_OnInitForPageType Parms{};

	Parms.InRewardPageType = InRewardPageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassRewardPageS28.OnInputMethodChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS28::OnInputMethodChanged(const ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInputMethodChanged");

	Params::BattlePassRewardPageS28_OnInputMethodChanged Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassRewardPageS28.OnLoadingScreenSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS28::OnLoadingScreenSelectedChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLoadingScreenSelectedChanged");

	Params::BattlePassRewardPageS28_OnLoadingScreenSelectedChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassRewardPageS28.OnPageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PageNumber                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RewardPageTotal                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS28::OnPageChanged(const int32 PageNumber, const int32 RewardPageTotal)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPageChanged");

	Params::BattlePassRewardPageS28_OnPageChanged Parms{};

	Parms.PageNumber = PageNumber;
	Parms.RewardPageTotal = RewardPageTotal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassRewardPageS28.GetRewardPageBackgroundData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVaultWorldBackgroundData        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FVaultWorldBackgroundData UBattlePassRewardPageS28::GetRewardPageBackgroundData() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRewardPageBackgroundData");

	Params::BattlePassRewardPageS28_GetRewardPageBackgroundData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattlePassS28UI.BattlePassScreenS28.GoBackOneScreen
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS28::GoBackOneScreen()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GoBackOneScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS28UI.BattlePassScreenS28.HandleClaimRewardComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OfferTemplateIdList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleClaimRewardComplete");

	Params::BattlePassScreenS28_HandleClaimRewardComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.OfferTemplateIdList = std::move(OfferTemplateIdList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.HandleFullScreenMapToggled
// (Final, Native, Private)
// Parameters:
// bool                                    bMapVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::HandleFullScreenMapToggled(bool bMapVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleFullScreenMapToggled");

	Params::BattlePassScreenS28_HandleFullScreenMapToggled Parms{};

	Parms.bMapVisible = bMapVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.HandleItemVMCardClicked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemVM*                      ItemVM                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaSeasonItemEntryBase*       EntrySelected                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::HandleItemVMCardClicked(const class UFortItemVM* ItemVM, const class UAthenaSeasonItemEntryBase* EntrySelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleItemVMCardClicked");

	Params::BattlePassScreenS28_HandleItemVMCardClicked Parms{};

	Parms.ItemVM = ItemVM;
	Parms.EntrySelected = EntrySelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.HandleSwitcherVisibilityShown
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS28::HandleSwitcherVisibilityShown()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSwitcherVisibilityShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnBattlePassGiftingAllowed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bGiftingAllowed                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnBattlePassGiftingAllowed(const bool bGiftingAllowed)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBattlePassGiftingAllowed");

	Params::BattlePassScreenS28_OnBattlePassGiftingAllowed Parms{};

	Parms.bGiftingAllowed = bGiftingAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnBattlePassOwned
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS28::OnBattlePassOwned()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBattlePassOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnGameModeCompatibilityTagUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItemVM*                      FortItem                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnGameModeCompatibilityTagUpdate(const class UFortItemVM* FortItem)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGameModeCompatibilityTagUpdate");

	Params::BattlePassScreenS28_OnGameModeCompatibilityTagUpdate Parms{};

	Parms.FortItem = FortItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnInsufficientFunds
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassCurrencyType                 CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInsufficientFunds");

	Params::BattlePassScreenS28_OnInsufficientFunds Parms{};

	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnInsufficientResource
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnInsufficientResource(const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnInsufficientResource");

	Params::BattlePassScreenS28_OnInsufficientResource Parms{};

	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnItemDelayed
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        Delay                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnItemDelayed(const struct FTimespan& Delay)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemDelayed");

	Params::BattlePassScreenS28_OnItemDelayed Parms{};

	Parms.Delay = std::move(Delay);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnItemVmCardUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FExpandedItemVM                  ItemVMs                                                (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UAthenaSeasonItemEntryBase*       EntrySelected                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnItemVmCardUpdate(const struct FExpandedItemVM& ItemVMs, const class UAthenaSeasonItemEntryBase* EntrySelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnItemVmCardUpdate");

	Params::BattlePassScreenS28_OnItemVmCardUpdate Parms{};

	Parms.ItemVMs = std::move(ItemVMs);
	Parms.EntrySelected = EntrySelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetBaseRewardsInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetBaseRewardsInfo(const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetBaseRewardsInfo");

	Params::BattlePassScreenS28_OnSetBaseRewardsInfo Parms{};

	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetBonusInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBonusInfoMiniTagData            BonusInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetBonusInfo(const struct FBonusInfoMiniTagData& BonusInfo)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetBonusInfo");

	Params::BattlePassScreenS28_OnSetBonusInfo Parms{};

	Parms.BonusInfo = std::move(BonusInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetBonusRewardsInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsUnlocked                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClaimedOutfits                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalOutfits                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetBonusRewardsInfo(const bool bIsUnlocked, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages, const int32 ClaimedOutfits, const int32 TotalOutfits)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetBonusRewardsInfo");

	Params::BattlePassScreenS28_OnSetBonusRewardsInfo Parms{};

	Parms.bIsUnlocked = bIsUnlocked;
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;
	Parms.ClaimedOutfits = ClaimedOutfits;
	Parms.TotalOutfits = TotalOutfits;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetCoverPageData
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bPageComplete                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetCoverPageData(const class FText& Title, const class FText& Description, const bool bPageComplete)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetCoverPageData");

	Params::BattlePassScreenS28_OnSetCoverPageData Parms{};

	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);
	Parms.bPageComplete = bPageComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetCrewInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bIsNextMonthRewards                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MonthText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTimespan                        NextMonthlyRewardTimespan                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CharacterDisplayName                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             CharacterDescription                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetCrewInfo(bool bIsNextMonthRewards, const class FText& MonthText, const struct FTimespan& NextMonthlyRewardTimespan, const class FText& CharacterDisplayName, const class FText& CharacterDescription)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetCrewInfo");

	Params::BattlePassScreenS28_OnSetCrewInfo Parms{};

	Parms.bIsNextMonthRewards = bIsNextMonthRewards;
	Parms.MonthText = std::move(MonthText);
	Parms.NextMonthlyRewardTimespan = std::move(NextMonthlyRewardTimespan);
	Parms.CharacterDisplayName = std::move(CharacterDisplayName);
	Parms.CharacterDescription = std::move(CharacterDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetEquipButtonEnable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetEquipButtonEnable(bool bIsEnable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetEquipButtonEnable");

	Params::BattlePassScreenS28_OnSetEquipButtonEnable Parms{};

	Parms.bIsEnable = bIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetItemPrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattlePassCurrencyType                 CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetItemPrice");

	Params::BattlePassScreenS28_OnSetItemPrice Parms{};

	Parms.Cost = Cost;
	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetPrerequisiteInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   CurrentAmount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NeededAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattlePassRewardPrerequisiteType       PrerequisiteType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowPrerequisiteLock                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetPrerequisiteInfo(const class FText& Description, const int32 CurrentAmount, const int32 NeededAmount, EBattlePassRewardPrerequisiteType PrerequisiteType, const bool bShowPrerequisiteLock)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetPrerequisiteInfo");

	Params::BattlePassScreenS28_OnSetPrerequisiteInfo Parms{};

	Parms.Description = std::move(Description);
	Parms.CurrentAmount = CurrentAmount;
	Parms.NeededAmount = NeededAmount;
	Parms.PrerequisiteType = PrerequisiteType;
	Parms.bShowPrerequisiteLock = bShowPrerequisiteLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetQuestRewardsInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        DelayTimespan                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetQuestRewardsInfo(const struct FTimespan& DelayTimespan, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetQuestRewardsInfo");

	Params::BattlePassScreenS28_OnSetQuestRewardsInfo Parms{};

	Parms.DelayTimespan = std::move(DelayTimespan);
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetResourcePrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetResourcePrice(const int32 Cost, const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetResourcePrice");

	Params::BattlePassScreenS28_OnSetResourcePrice Parms{};

	Parms.Cost = Cost;
	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetWarningToolTip
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// ERewardWarningTooltipType28             WarningTooltipType                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetWarningToolTip(const ERewardWarningTooltipType28& WarningTooltipType, const class FText& Description)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetWarningToolTip");

	Params::BattlePassScreenS28_OnSetWarningToolTip Parms{};

	Parms.WarningTooltipType = WarningTooltipType;
	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnSetWeeklyRewardsInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        DelayTimespan                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AvailableRewards                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AvailablePages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnSetWeeklyRewardsInfo(const struct FTimespan& DelayTimespan, const int32 AvailableRewards, const int32 OwnedRewards, const int32 TotalRewards, const int32 AvailablePages, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSetWeeklyRewardsInfo");

	Params::BattlePassScreenS28_OnSetWeeklyRewardsInfo Parms{};

	Parms.DelayTimespan = std::move(DelayTimespan);
	Parms.AvailableRewards = AvailableRewards;
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.AvailablePages = AvailablePages;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnTransitionItemDetails
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTransitionForward                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnTransitionItemDetails(const bool bTransitionForward)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTransitionItemDetails");

	Params::BattlePassScreenS28_OnTransitionItemDetails Parms{};

	Parms.bTransitionForward = bTransitionForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnUpdateBattlePassRequiredBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPassRequiredVisible                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnUpdateBattlePassRequiredBar(const bool bPassRequiredVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateBattlePassRequiredBar");

	Params::BattlePassScreenS28_OnUpdateBattlePassRequiredBar Parms{};

	Parms.bPassRequiredVisible = bPassRequiredVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnUpdateOwnedOrEquippedTag
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StatusText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnUpdateOwnedOrEquippedTag(const class FText& StatusText)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateOwnedOrEquippedTag");

	Params::BattlePassScreenS28_OnUpdateOwnedOrEquippedTag Parms{};

	Parms.StatusText = std::move(StatusText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OnUpdateStatusBar
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StatusText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBattlePassStatusBarTypeS28             BarType                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS28::OnUpdateStatusBar(const class FText& StatusText, const EBattlePassStatusBarTypeS28& BarType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateStatusBar");

	Params::BattlePassScreenS28_OnUpdateStatusBar Parms{};

	Parms.StatusText = std::move(StatusText);
	Parms.BarType = BarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.BattlePassScreenS28.OverviewShowAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS28::OverviewShowAnimationFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OverviewShowAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS28UI.BattlePassScreenS28.GetEquipButtonEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS28::GetEquipButtonEnable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetEquipButtonEnable");

	Params::BattlePassScreenS28_GetEquipButtonEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattlePassS28UI.BattlePassScreenS28.GetQuestPageDelay
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UBattlePassScreenS28::GetQuestPageDelay() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetQuestPageDelay");

	Params::BattlePassScreenS28_GetQuestPageDelay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattlePassS28UI.BattlePassScreenS28.IsSeasonalCustomizationItemOwned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS28::IsSeasonalCustomizationItemOwned() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsSeasonalCustomizationItemOwned");

	Params::BattlePassScreenS28_IsSeasonalCustomizationItemOwned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattlePassS28UI.FortBattlePassResourcesWidgetS28.OnBattleStarRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS28::OnBattleStarRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBattleStarRewardsSet");

	Params::FortBattlePassResourcesWidgetS28_OnBattleStarRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.FortBattlePassResourcesWidgetS28.OnStylePointsRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS28::OnStylePointsRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnStylePointsRewardsSet");

	Params::FortBattlePassResourcesWidgetS28_OnStylePointsRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.FortBattlePassTutorialTooltipS28.HideTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS28::HideTooltip()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HideTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS28UI.FortBattlePassTutorialTooltipS28.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortBattlePassTutorialTooltipS28::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetText");

	Params::FortBattlePassTutorialTooltipS28_SetText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS28UI.FortBattlePassTutorialTooltipS28.ShowTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS28::ShowTooltip()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}

}

