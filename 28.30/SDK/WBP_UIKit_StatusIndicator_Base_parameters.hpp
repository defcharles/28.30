#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_StatusIndicator_Base

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_UI_StatusIndicator_Configuration_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "E_UI_StatusIndicator_Size_structs.hpp"
#include "E_UI_StatusIndicator_Type_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base
// 0x0028 (0x0028 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Configuration            Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_TutorialObjectiveName;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialType                                 K2Node_Event_TutorialType;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Count;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Count;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base) == 0x000004, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base) == 0x000028, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, EntryPoint) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_byte_Variable) == 0x000004, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_bool_Variable) == 0x000005, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_bool_Variable_2) == 0x000007, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_bool_Variable_3) == 0x000008, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_byte_Variable_2) == 0x00000A, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Event_TutorialObjectiveName) == 0x00000C, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Event_TutorialObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Event_TutorialType) == 0x000010, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Event_TutorialType' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Event_IsDesignTime) == 0x000011, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_byte_Variable_3) == 0x000012, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Event_bEnabled) == 0x000013, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Event_Count) == 0x000014, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Event_Count' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_byte_Variable_4) == 0x000018, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Select_Default) == 0x000019, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_CustomEvent_Count) == 0x00001C, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, Temp_bool_Variable_4) == 0x000020, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, CallFunc_HasAnyChildren_ReturnValue) == 0x000021, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Select_Default_1) == 0x000023, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base, K2Node_Select_Default_2) == 0x000025, "Member 'WBP_UIKit_StatusIndicator_Base_C_ExecuteUbergraph_WBP_UIKit_StatusIndicator_Base::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.InitialReset
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_InitialReset final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_InitialReset) == 0x000008, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_InitialReset");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_InitialReset) == 0x000010, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_InitialReset");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_InitialReset, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_InitialReset::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_InitialReset, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_UIKit_StatusIndicator_Base_C_InitialReset::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.OnBangStateChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged) == 0x000004, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged) == 0x000008, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged, bEnabled) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged::bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged, Count_0) == 0x000004, "Member 'WBP_UIKit_StatusIndicator_Base_C_OnBangStateChanged::Count_0' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.OnStartCallout
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_OnStartCallout final
{
public:
	class FName                                   TutorialObjectiveName;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialType                                 TutorialType;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_OnStartCallout) == 0x000004, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_OnStartCallout");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_OnStartCallout) == 0x000008, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_OnStartCallout");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_OnStartCallout, TutorialObjectiveName) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_OnStartCallout::TutorialObjectiveName' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_OnStartCallout, TutorialType) == 0x000004, "Member 'WBP_UIKit_StatusIndicator_Base_C_OnStartCallout::TutorialType' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.OverrideCount
// 0x0004 (0x0004 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_OverrideCount final
{
public:
	int32                                         Count_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_OverrideCount) == 0x000004, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_OverrideCount");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_OverrideCount) == 0x000004, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_OverrideCount");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_OverrideCount, Count_0) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_OverrideCount::Count_0' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.PassBangTypeFromBP
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP final
{
public:
	EFortBangType                                 EBangType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP) == 0x000001, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP) == 0x000001, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP, EBangType) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_PassBangTypeFromBP::EBangType' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.SetBangSlot
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_SetBangSlot final
{
public:
	class UGridSlot*                              GridSlot;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_SetBangSlot) == 0x000008, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_SetBangSlot");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_SetBangSlot) == 0x000018, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_SetBangSlot");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetBangSlot, GridSlot) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetBangSlot::GridSlot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetBangSlot, K2Node_DynamicCast_AsGrid_Slot) == 0x000008, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetBangSlot::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetBangSlot, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetBangSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.SetIcon
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_SetIcon final
{
public:
	class UObject*                                IconAsset;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x00C0)()
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_SetIcon) == 0x000010, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_SetIcon");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_SetIcon) == 0x0000D0, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_SetIcon");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIcon, IconAsset) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIcon::IconAsset' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIcon, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.SetIndicatorConfiguration
// 0x0078 (0x0078 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Configuration            IndicatorConfig;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	E_UI_StatusIndicator_Configuration            Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Configuration            Temp_byte_Variable_4;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Configuration            Temp_byte_Variable_5;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0048(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_3;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_4;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration) == 0x000008, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration) == 0x000078, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, InCount) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::InCount' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, IndicatorConfig) == 0x000004, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::IndicatorConfig' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_text_Variable) == 0x000008, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_byte_Variable) == 0x000020, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_byte_Variable_2) == 0x000022, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_byte_Variable_3) == 0x000023, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_byte_Variable_4) == 0x000024, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_bool_Variable) == 0x000025, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_bool_Variable_1) == 0x000026, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_bool_Variable_2) == 0x000027, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_bool_Variable_3) == 0x000028, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_byte_Variable_5) == 0x000029, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, Temp_bool_Variable_4) == 0x00002A, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, K2Node_Select_Default) == 0x00002B, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, K2Node_Select_Default_1) == 0x00002C, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000060, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, K2Node_Select_Default_3) == 0x000068, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration, K2Node_Select_Default_4) == 0x000070, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorConfiguration::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.SetIndicatorType
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType final
{
public:
	E_UI_StatusIndicator_Type                     IndicatorType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Type                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Type                     Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0090(0x0014)()
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType) == 0x000008, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType) == 0x0000B0, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, IndicatorType) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::IndicatorType' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_byte_Variable) == 0x000001, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_struct_Variable) == 0x000004, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_byte_Variable_1) == 0x000034, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_struct_Variable_3) == 0x000038, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_struct_Variable_4) == 0x000048, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, Temp_struct_Variable_5) == 0x000058, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, K2Node_Select_Default) == 0x000068, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, K2Node_Select_Default_1) == 0x000078, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000088, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, K2Node_MakeStruct_SlateColor) == 0x000090, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000A8, "Member 'WBP_UIKit_StatusIndicator_Base_C_SetIndicatorType::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.TriggerIntro
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_TriggerIntro final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_TriggerIntro) == 0x000008, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_TriggerIntro");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_TriggerIntro) == 0x000008, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_TriggerIntro");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_TriggerIntro, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_TriggerIntro::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_StatusIndicator_Base.WBP_UIKit_StatusIndicator_Base_C.UpdateSize
// 0x0050 (0x0050 - 0x0000)
struct WBP_UIKit_StatusIndicator_Base_C_UpdateSize final
{
public:
	E_UI_StatusIndicator_Size                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Size                     Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_StatusIndicator_Configuration            Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcherSlot*                    CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize) == 0x000008, "Wrong alignment on WBP_UIKit_StatusIndicator_Base_C_UpdateSize");
static_assert(sizeof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize) == 0x000050, "Wrong size on WBP_UIKit_StatusIndicator_Base_C_UpdateSize");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_byte_Variable) == 0x000000, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_real_Variable) == 0x000004, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_real_Variable_1) == 0x000008, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_byte_Variable_1) == 0x00000C, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_real_Variable_2) == 0x000010, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_real_Variable_3) == 0x000014, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_byte_Variable_2) == 0x000018, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_real_Variable_4) == 0x00001C, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, Temp_real_Variable_5) == 0x000020, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, K2Node_Select_Default) == 0x000024, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, K2Node_Select_Default_1) == 0x000028, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, K2Node_MakeStruct_Margin) == 0x00002C, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue) == 0x000040, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_StatusIndicator_Base_C_UpdateSize, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_UIKit_StatusIndicator_Base_C_UpdateSize::K2Node_Select_Default_2' has a wrong offset!");

}

