#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AugmentSelector_Reroll

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "PlayerAugmentsCodeRuntime_structs.hpp"


namespace SDK::Params
{

// Function WBP_AugmentSelector_Reroll.WBP_AugmentSelector_Reroll_C.DisplayAlert
// 0x0040 (0x0040 - 0x0000)
struct WBP_AugmentSelector_Reroll_C_DisplayAlert final
{
public:
	bool                                          InDisplayAlert;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x001C(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default_2;                           // 0x0038(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Reroll_C_DisplayAlert) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Reroll_C_DisplayAlert");
static_assert(sizeof(WBP_AugmentSelector_Reroll_C_DisplayAlert) == 0x000040, "Wrong size on WBP_AugmentSelector_Reroll_C_DisplayAlert");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, InDisplayAlert) == 0x000000, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::InDisplayAlert' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_bool_Variable) == 0x000001, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_byte_Variable) == 0x000002, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_byte_Variable_2) == 0x000005, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_byte_Variable_3) == 0x000006, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, Temp_bool_Variable_2) == 0x000007, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, CallFunc_SelectColor_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, K2Node_Select_Default) == 0x000018, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, K2Node_MakeStruct_SlateColor) == 0x00001C, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_DisplayAlert, K2Node_Select_Default_2) == 0x000038, "Member 'WBP_AugmentSelector_Reroll_C_DisplayAlert::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_AugmentSelector_Reroll.WBP_AugmentSelector_Reroll_C.ExecuteUbergraph_WBP_AugmentSelector_Reroll
// 0x0068 (0x0068 - 0x0000)
struct WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OwnedCurrency;                        // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RerollCost;                           // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAugmentHoldInputRerollState                  K2Node_CustomEvent_HoldState;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_HoldDurationSeconds;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortControllerComponent_AugmentUIEvents* CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayspaceComponent_GlobalCurrencyOverride* CallFunc_GetPlayspaceGlobalCurrencyOverrideForActor_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAugmentHoldInputRerollState HoldState, float HoldDurationSeconds)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll) == 0x000008, "Wrong alignment on WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll");
static_assert(sizeof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll) == 0x000068, "Wrong size on WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, EntryPoint) == 0x000000, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_Event_OwnedCurrency) == 0x000008, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_Event_OwnedCurrency' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_Event_RerollCost) == 0x00000C, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_Event_RerollCost' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_CustomEvent_HoldState) == 0x000020, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_CustomEvent_HoldState' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_CustomEvent_HoldDurationSeconds) == 0x000024, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_CustomEvent_HoldDurationSeconds' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000040, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_GetPlayspaceGlobalCurrencyOverrideForActor_ReturnValue) == 0x000048, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_GetPlayspaceGlobalCurrencyOverrideForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_IsValid_ReturnValue_3) == 0x000051, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000060, "Member 'WBP_AugmentSelector_Reroll_C_ExecuteUbergraph_WBP_AugmentSelector_Reroll::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function WBP_AugmentSelector_Reroll.WBP_AugmentSelector_Reroll_C.OnAugmentHoldRerollChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged final
{
public:
	EAugmentHoldInputRerollState                  HoldState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldDurationSeconds;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged) == 0x000004, "Wrong alignment on WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged");
static_assert(sizeof(WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged) == 0x000008, "Wrong size on WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged, HoldState) == 0x000000, "Member 'WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged::HoldState' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged, HoldDurationSeconds) == 0x000004, "Member 'WBP_AugmentSelector_Reroll_C_OnAugmentHoldRerollChanged::HoldDurationSeconds' has a wrong offset!");

// Function WBP_AugmentSelector_Reroll.WBP_AugmentSelector_Reroll_C.OnUpdateCurrency
// 0x0008 (0x0008 - 0x0000)
struct WBP_AugmentSelector_Reroll_C_OnUpdateCurrency final
{
public:
	int32                                         OwnedCurrency;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RerollCost;                                        // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Reroll_C_OnUpdateCurrency) == 0x000004, "Wrong alignment on WBP_AugmentSelector_Reroll_C_OnUpdateCurrency");
static_assert(sizeof(WBP_AugmentSelector_Reroll_C_OnUpdateCurrency) == 0x000008, "Wrong size on WBP_AugmentSelector_Reroll_C_OnUpdateCurrency");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_OnUpdateCurrency, OwnedCurrency) == 0x000000, "Member 'WBP_AugmentSelector_Reroll_C_OnUpdateCurrency::OwnedCurrency' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_OnUpdateCurrency, RerollCost) == 0x000004, "Member 'WBP_AugmentSelector_Reroll_C_OnUpdateCurrency::RerollCost' has a wrong offset!");

// Function WBP_AugmentSelector_Reroll.WBP_AugmentSelector_Reroll_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AugmentSelector_Reroll_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Reroll_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AugmentSelector_Reroll_C_PreConstruct");
static_assert(sizeof(WBP_AugmentSelector_Reroll_C_PreConstruct) == 0x000001, "Wrong size on WBP_AugmentSelector_Reroll_C_PreConstruct");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AugmentSelector_Reroll_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AugmentSelector_Reroll.WBP_AugmentSelector_Reroll_C.UpdateRerollInfo
// 0x0014 (0x0014 - 0x0000)
struct WBP_AugmentSelector_Reroll_C_UpdateRerollInfo final
{
public:
	int32                                         OwnedCurrency;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AugmentCost;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo) == 0x000004, "Wrong alignment on WBP_AugmentSelector_Reroll_C_UpdateRerollInfo");
static_assert(sizeof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo) == 0x000014, "Wrong size on WBP_AugmentSelector_Reroll_C_UpdateRerollInfo");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo, OwnedCurrency) == 0x000000, "Member 'WBP_AugmentSelector_Reroll_C_UpdateRerollInfo::OwnedCurrency' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo, AugmentCost) == 0x000004, "Member 'WBP_AugmentSelector_Reroll_C_UpdateRerollInfo::AugmentCost' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_AugmentSelector_Reroll_C_UpdateRerollInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00000C, "Member 'WBP_AugmentSelector_Reroll_C_UpdateRerollInfo::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AugmentSelector_Reroll_C_UpdateRerollInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WBP_AugmentSelector_Reroll_C_UpdateRerollInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

