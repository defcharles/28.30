#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Block_Text

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.ExecuteUbergraph_WBP_UIKit_Block_Text
// 0x0014 (0x0014 - 0x0000)
struct WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue_1;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_2;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_3;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_4;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_5;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_6;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_7;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_8;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected_9;               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue_2;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text) == 0x000004, "Wrong alignment on WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text");
static_assert(sizeof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text) == 0x000014, "Wrong size on WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_IsAnyAnimationPlaying_ReturnValue) == 0x000004, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_IsAnyAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_IsAnyAnimationPlaying_ReturnValue_1) == 0x000005, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_IsAnyAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected) == 0x000006, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_1) == 0x000007, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_2) == 0x000008, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_3) == 0x000009, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_4) == 0x00000A, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_4' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_5) == 0x00000B, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_5' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_6) == 0x00000C, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_6' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_7) == 0x00000D, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_7' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_8) == 0x00000E, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_8' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_GetIsSelected_IsSelected_9) == 0x00000F, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_GetIsSelected_IsSelected_9' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text, CallFunc_IsAnyAnimationPlaying_ReturnValue_2) == 0x000010, "Member 'WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text::CallFunc_IsAnyAnimationPlaying_ReturnValue_2' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.RefreshFontMID
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_Text_C_RefreshFontMID final
{
public:
	class UMaterialInstanceDynamic*               NewMID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_RefreshFontMID) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_RefreshFontMID");
static_assert(sizeof(WBP_UIKit_Block_Text_C_RefreshFontMID) == 0x000010, "Wrong size on WBP_UIKit_Block_Text_C_RefreshFontMID");
static_assert(offsetof(WBP_UIKit_Block_Text_C_RefreshFontMID, NewMID) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_RefreshFontMID::NewMID' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_RefreshFontMID, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Block_Text_C_RefreshFontMID::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.RefreshOutlineMID
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_Text_C_RefreshOutlineMID final
{
public:
	class UMaterialInstanceDynamic*               NewMID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicOutlineMaterial_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_RefreshOutlineMID) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_RefreshOutlineMID");
static_assert(sizeof(WBP_UIKit_Block_Text_C_RefreshOutlineMID) == 0x000010, "Wrong size on WBP_UIKit_Block_Text_C_RefreshOutlineMID");
static_assert(offsetof(WBP_UIKit_Block_Text_C_RefreshOutlineMID, NewMID) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_RefreshOutlineMID::NewMID' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_RefreshOutlineMID, CallFunc_GetDynamicOutlineMaterial_ReturnValue) == 0x000008, "Member 'WBP_UIKit_Block_Text_C_RefreshOutlineMID::CallFunc_GetDynamicOutlineMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetFont
// 0x0058 (0x0058 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetFont final
{
public:
	struct FSlateFontInfo                         Font;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetFont) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_SetFont");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetFont) == 0x000058, "Wrong size on WBP_UIKit_Block_Text_C_SetFont");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetFont, Font) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetFont::Font' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetFontMaterial
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetFontMaterial final
{
public:
	class UMaterialInstance*                      In_Material;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetFontMaterial) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_SetFontMaterial");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetFontMaterial) == 0x000008, "Wrong size on WBP_UIKit_Block_Text_C_SetFontMaterial");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetFontMaterial, In_Material) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetFontMaterial::In_Material' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetJustification
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetJustification final
{
public:
	ETextJustify                                  Justification;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetJustification) == 0x000001, "Wrong alignment on WBP_UIKit_Block_Text_C_SetJustification");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetJustification) == 0x000001, "Wrong size on WBP_UIKit_Block_Text_C_SetJustification");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetJustification, Justification) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetJustification::Justification' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetMobileFontSizeMultiplier
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier final
{
public:
	double                                        MobileFontSizeMultiplier;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMobileFontSizeMultiplier_InMobileFontSizeMultiplier_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier) == 0x000010, "Wrong size on WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier, MobileFontSizeMultiplier) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier::MobileFontSizeMultiplier' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier, CallFunc_SetMobileFontSizeMultiplier_InMobileFontSizeMultiplier_ImplicitCast) == 0x000008, "Member 'WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier::CallFunc_SetMobileFontSizeMultiplier_InMobileFontSizeMultiplier_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetOutlineMaterial
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetOutlineMaterial final
{
public:
	class UMaterialInstance*                      In_Material;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetOutlineMaterial) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_SetOutlineMaterial");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetOutlineMaterial) == 0x000008, "Wrong size on WBP_UIKit_Block_Text_C_SetOutlineMaterial");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetOutlineMaterial, In_Material) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetOutlineMaterial::In_Material' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetOutlineSize
// 0x0080 (0x0080 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetOutlineSize final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0008(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0028(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetOutlineSize) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_SetOutlineSize");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetOutlineSize) == 0x000080, "Wrong size on WBP_UIKit_Block_Text_C_SetOutlineSize");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetOutlineSize, Size) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetOutlineSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetOutlineSize, K2Node_MakeStruct_FontOutlineSettings) == 0x000008, "Member 'WBP_UIKit_Block_Text_C_SetOutlineSize::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetOutlineSize, K2Node_MakeStruct_SlateFontInfo) == 0x000028, "Member 'WBP_UIKit_Block_Text_C_SetOutlineSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetText
// 0x0038 (0x0038 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetText) == 0x000008, "Wrong alignment on WBP_UIKit_Block_Text_C_SetText");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetText) == 0x000038, "Wrong size on WBP_UIKit_Block_Text_C_SetText");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetText, Text) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetText::Text' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'WBP_UIKit_Block_Text_C_SetText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetText, CallFunc_TextIsEmpty_ReturnValue) == 0x000030, "Member 'WBP_UIKit_Block_Text_C_SetText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetText, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WBP_UIKit_Block_Text_C_SetText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetTransformPolicy
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetTransformPolicy final
{
public:
	ETextTransformPolicy                          Transform_Policy;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetTransformPolicy) == 0x000001, "Wrong alignment on WBP_UIKit_Block_Text_C_SetTransformPolicy");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetTransformPolicy) == 0x000001, "Wrong size on WBP_UIKit_Block_Text_C_SetTransformPolicy");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetTransformPolicy, Transform_Policy) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetTransformPolicy::Transform_Policy' has a wrong offset!");

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetWrapping
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Block_Text_C_SetWrapping final
{
public:
	bool                                          IsAutoWrap;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WrapTextAt;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Block_Text_C_SetWrapping) == 0x000004, "Wrong alignment on WBP_UIKit_Block_Text_C_SetWrapping");
static_assert(sizeof(WBP_UIKit_Block_Text_C_SetWrapping) == 0x000008, "Wrong size on WBP_UIKit_Block_Text_C_SetWrapping");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetWrapping, IsAutoWrap) == 0x000000, "Member 'WBP_UIKit_Block_Text_C_SetWrapping::IsAutoWrap' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Block_Text_C_SetWrapping, WrapTextAt) == 0x000004, "Member 'WBP_UIKit_Block_Text_C_SetWrapping::WrapTextAt' has a wrong offset!");

}

