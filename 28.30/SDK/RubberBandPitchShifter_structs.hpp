#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RubberBandPitchShifter

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct RubberBandPitchShifter.PlatformStretcherCounts
// 0x0018 (0x0018 - 0x0000)
struct FPlatformStretcherCounts final
{
public:
	uint32                                        NumProStretchers;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumEffStretchers;                                  // 0x0004(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumEffWithSpectralStretchers;                      // 0x0008(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumMobileStretchers;                               // 0x000C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumMobileWithSpectralStretchers;                   // 0x0010(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceMonoProcessing;                              // 0x0014(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPlatformStretcherCounts) == 0x000004, "Wrong alignment on FPlatformStretcherCounts");
static_assert(sizeof(FPlatformStretcherCounts) == 0x000018, "Wrong size on FPlatformStretcherCounts");
static_assert(offsetof(FPlatformStretcherCounts, NumProStretchers) == 0x000000, "Member 'FPlatformStretcherCounts::NumProStretchers' has a wrong offset!");
static_assert(offsetof(FPlatformStretcherCounts, NumEffStretchers) == 0x000004, "Member 'FPlatformStretcherCounts::NumEffStretchers' has a wrong offset!");
static_assert(offsetof(FPlatformStretcherCounts, NumEffWithSpectralStretchers) == 0x000008, "Member 'FPlatformStretcherCounts::NumEffWithSpectralStretchers' has a wrong offset!");
static_assert(offsetof(FPlatformStretcherCounts, NumMobileStretchers) == 0x00000C, "Member 'FPlatformStretcherCounts::NumMobileStretchers' has a wrong offset!");
static_assert(offsetof(FPlatformStretcherCounts, NumMobileWithSpectralStretchers) == 0x000010, "Member 'FPlatformStretcherCounts::NumMobileWithSpectralStretchers' has a wrong offset!");
static_assert(offsetof(FPlatformStretcherCounts, bForceMonoProcessing) == 0x000014, "Member 'FPlatformStretcherCounts::bForceMonoProcessing' has a wrong offset!");

}

