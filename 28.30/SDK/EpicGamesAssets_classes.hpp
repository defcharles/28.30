#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicGamesAssets

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class EpicGamesAssets.SpawnedParticleSystemReplication
// 0x0038 (0x02C8 - 0x0290)
class ASpawnedParticleSystemReplication final : public AActor
{
public:
	double                                        StartTime;                                         // 0x0290(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerseAssetPtr*                         VFXAsset;                                          // 0x0298(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNiagaraComponent*                      VFXComponent;                                      // 0x02A0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A8[0x20];                                     // 0x02A8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_StartTime();
	void OnRep_VFXAsset();
	void OnSystemFinished(class UNiagaraComponent* FinishedComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpawnedParticleSystemReplication">();
	}
	static class ASpawnedParticleSystemReplication* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpawnedParticleSystemReplication>();
	}
};
static_assert(alignof(ASpawnedParticleSystemReplication) == 0x000008, "Wrong alignment on ASpawnedParticleSystemReplication");
static_assert(sizeof(ASpawnedParticleSystemReplication) == 0x0002C8, "Wrong size on ASpawnedParticleSystemReplication");
static_assert(offsetof(ASpawnedParticleSystemReplication, StartTime) == 0x000290, "Member 'ASpawnedParticleSystemReplication::StartTime' has a wrong offset!");
static_assert(offsetof(ASpawnedParticleSystemReplication, VFXAsset) == 0x000298, "Member 'ASpawnedParticleSystemReplication::VFXAsset' has a wrong offset!");
static_assert(offsetof(ASpawnedParticleSystemReplication, VFXComponent) == 0x0002A0, "Member 'ASpawnedParticleSystemReplication::VFXComponent' has a wrong offset!");

}

