#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoLowMemoryFallbackRuntime

#include "Basic.hpp"


namespace SDK
{

// Enum JunoLowMemoryFallbackRuntime.EJunoLowMemoryState
// NumValues: 0x0005
enum class EJunoLowMemoryState : uint8
{
	Unset                                    = 18446744073709551615,
	Good                                     = 0,
	Low                                      = 1,
	VeryLow                                  = 2,
	Critical                                 = 3,
};

// ScriptStruct JunoLowMemoryFallbackRuntime.JunoLowMemoryFallbackTriggeredStrategy
// 0x0018 (0x0018 - 0x0000)
struct FJunoLowMemoryFallbackTriggeredStrategy final
{
public:
	TSubclassOf<class ULowMemoryFallbackStrategy> StrategyClass;                                     // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APlayerState*>                   TriggeringPlayers;                                 // 0x0008(0x0010)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLowMemoryFallbackTriggeredStrategy) == 0x000008, "Wrong alignment on FJunoLowMemoryFallbackTriggeredStrategy");
static_assert(sizeof(FJunoLowMemoryFallbackTriggeredStrategy) == 0x000018, "Wrong size on FJunoLowMemoryFallbackTriggeredStrategy");
static_assert(offsetof(FJunoLowMemoryFallbackTriggeredStrategy, StrategyClass) == 0x000000, "Member 'FJunoLowMemoryFallbackTriggeredStrategy::StrategyClass' has a wrong offset!");
static_assert(offsetof(FJunoLowMemoryFallbackTriggeredStrategy, TriggeringPlayers) == 0x000008, "Member 'FJunoLowMemoryFallbackTriggeredStrategy::TriggeringPlayers' has a wrong offset!");

// ScriptStruct JunoLowMemoryFallbackRuntime.JunoLowMemoryMessage
// 0x0001 (0x0001 - 0x0000)
struct FJunoLowMemoryMessage final
{
public:
	EJunoLowMemoryState                           MemoryState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLowMemoryMessage) == 0x000001, "Wrong alignment on FJunoLowMemoryMessage");
static_assert(sizeof(FJunoLowMemoryMessage) == 0x000001, "Wrong size on FJunoLowMemoryMessage");
static_assert(offsetof(FJunoLowMemoryMessage, MemoryState) == 0x000000, "Member 'FJunoLowMemoryMessage::MemoryState' has a wrong offset!");

}

