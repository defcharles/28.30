#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicRollTablesRuntime

#include "Basic.hpp"

#include "DynamicRollTablesRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function DynamicRollTablesRuntime.FortControllerComponent_DynamicRollPlayerComponent.AuthorityRollChoices
// 0x0028 (0x0028 - 0x0000)
struct FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices final
{
public:
	int32                                         NumChoices;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItemDefinition*>            IgnoreItems;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FFortDynamicRollResult>         ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices) == 0x000008, "Wrong alignment on FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices");
static_assert(sizeof(FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices) == 0x000028, "Wrong size on FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices");
static_assert(offsetof(FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices, NumChoices) == 0x000000, "Member 'FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices::NumChoices' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices, IgnoreItems) == 0x000008, "Member 'FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices::IgnoreItems' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices, ReturnValue) == 0x000018, "Member 'FortControllerComponent_DynamicRollPlayerComponent_AuthorityRollChoices::ReturnValue' has a wrong offset!");

// Function DynamicRollTablesRuntime.FortGamestateComponent_DynamicRollTableManager.HandlePlaylistDataReady
// 0x0030 (0x0030 - 0x0000)
struct FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady) == 0x000008, "Wrong alignment on FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady");
static_assert(sizeof(FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady) == 0x000030, "Wrong size on FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady");
static_assert(offsetof(FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady, GameState) == 0x000000, "Member 'FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady::GameState' has a wrong offset!");
static_assert(offsetof(FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady, Playlist) == 0x000008, "Member 'FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady::Playlist' has a wrong offset!");
static_assert(offsetof(FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady, PlaylistContextTags) == 0x000010, "Member 'FortGamestateComponent_DynamicRollTableManager_HandlePlaylistDataReady::PlaylistContextTags' has a wrong offset!");

}

