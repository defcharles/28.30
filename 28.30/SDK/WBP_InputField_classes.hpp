#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputField

#include "Basic.hpp"

#include "E_UI_InputField_State_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_UI_InputField_ContentSize_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InputField.WBP_InputField_C
// 0x00F8 (0x03E8 - 0x02F0)
class UWBP_InputField_C final : public UFortInputField
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ErrorAnim;                                         // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ErrorIconWrapper;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ErrorText;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ErrorTextWrapper;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LabelText;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LabelTextWrapper;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Outline;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ActionWidgetShower;                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ProcessingFeedbackWrapper;                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_UI_InputField_State                         DebugInputFieldState;                              // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowLabel;                                         // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlignContentCenter;                                // 0x0352(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefaultLabelValue;                                 // 0x0358(0x0018)(Edit, BlueprintVisible)
	class FText                                   ErrorValue;                                        // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultHintTextValue;                              // 0x0388(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           IdleEndColor;                                      // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ErrorEndColor;                                     // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutlineEndColor;                                   // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               OutlineMaterial;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutlineColorParam;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_InputField_ContentSize                   ContentSize;                                       // 0x03DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          p_IsFocused;                                       // 0x03DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          p_IsMouseHovered;                                  // 0x03DE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          p_FocusAnimPlayed;                                 // 0x03DF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowActionOnlyOnFocus;                             // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_InputField(int32 EntryPoint);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnError();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnInitialized();
	void OnInputDeviceChanged(ECommonInputType bNewInputType);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnTouchStarted(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent);
	void PreConstruct(bool IsDesignTime);
	void RefreshHoverAnim();
	void Set_Focus_Visual(bool IsFocused);
	void SetActionVisibility();
	void SetContentAlignment();
	void SetContentSize();
	void SetEditableText(const class FText& EditableText);
	void SetErrorText(const class FText& ErrorText_0);
	void SetHintText(const class FText& HintText);
	void SetInputFieldState(E_UI_InputField_State State);
	void SetLabelDisplay();
	void SetLabelValue(const class FText& LabelValue);
	void SetProcessingVisibility(bool IsVisible_0);
	void SetTextValue(const class FText& TextValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InputField_C">();
	}
	static class UWBP_InputField_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InputField_C>();
	}
};
static_assert(alignof(UWBP_InputField_C) == 0x000008, "Wrong alignment on UWBP_InputField_C");
static_assert(sizeof(UWBP_InputField_C) == 0x0003E8, "Wrong size on UWBP_InputField_C");
static_assert(offsetof(UWBP_InputField_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_InputField_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ErrorAnim) == 0x0002F8, "Member 'UWBP_InputField_C::ErrorAnim' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, HoverAnim) == 0x000300, "Member 'UWBP_InputField_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, CommonActionWidget) == 0x000308, "Member 'UWBP_InputField_C::CommonActionWidget' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ErrorIconWrapper) == 0x000310, "Member 'UWBP_InputField_C::ErrorIconWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ErrorText) == 0x000318, "Member 'UWBP_InputField_C::ErrorText' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ErrorTextWrapper) == 0x000320, "Member 'UWBP_InputField_C::ErrorTextWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, LabelText) == 0x000328, "Member 'UWBP_InputField_C::LabelText' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, LabelTextWrapper) == 0x000330, "Member 'UWBP_InputField_C::LabelTextWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, Outline) == 0x000338, "Member 'UWBP_InputField_C::Outline' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, Overlay_ActionWidgetShower) == 0x000340, "Member 'UWBP_InputField_C::Overlay_ActionWidgetShower' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ProcessingFeedbackWrapper) == 0x000348, "Member 'UWBP_InputField_C::ProcessingFeedbackWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, DebugInputFieldState) == 0x000350, "Member 'UWBP_InputField_C::DebugInputFieldState' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ShowLabel) == 0x000351, "Member 'UWBP_InputField_C::ShowLabel' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, AlignContentCenter) == 0x000352, "Member 'UWBP_InputField_C::AlignContentCenter' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, DefaultLabelValue) == 0x000358, "Member 'UWBP_InputField_C::DefaultLabelValue' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ErrorValue) == 0x000370, "Member 'UWBP_InputField_C::ErrorValue' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, DefaultHintTextValue) == 0x000388, "Member 'UWBP_InputField_C::DefaultHintTextValue' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, IdleEndColor) == 0x0003A0, "Member 'UWBP_InputField_C::IdleEndColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ErrorEndColor) == 0x0003B0, "Member 'UWBP_InputField_C::ErrorEndColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, OutlineEndColor) == 0x0003C0, "Member 'UWBP_InputField_C::OutlineEndColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, OutlineMaterial) == 0x0003D0, "Member 'UWBP_InputField_C::OutlineMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, OutlineColorParam) == 0x0003D8, "Member 'UWBP_InputField_C::OutlineColorParam' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ContentSize) == 0x0003DC, "Member 'UWBP_InputField_C::ContentSize' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, p_IsFocused) == 0x0003DD, "Member 'UWBP_InputField_C::p_IsFocused' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, p_IsMouseHovered) == 0x0003DE, "Member 'UWBP_InputField_C::p_IsMouseHovered' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, p_FocusAnimPlayed) == 0x0003DF, "Member 'UWBP_InputField_C::p_FocusAnimPlayed' has a wrong offset!");
static_assert(offsetof(UWBP_InputField_C, ShowActionOnlyOnFocus) == 0x0003E0, "Member 'UWBP_InputField_C::ShowActionOnlyOnFocus' has a wrong offset!");

}

