#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPL_VariantSelector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_BndEvt__WBP_MPL_Customize_Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.ExecuteUbergraph_WBP_MPL_VariantSelector
// 0x0080 (0x0080 - 0x0000)
struct WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FRotator& RotationOffset, bool bSnap)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName TabID)>            K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName TabID)>            K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_LockerOperation*       CallFunc_EquipItem_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSubGame_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSubGame_ReturnValue_1;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSubGame_ReturnValue_2;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_RotationOffset;                 // 0x0060(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSnap;                          // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector");
static_assert(sizeof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector) == 0x000080, "Wrong size on WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, EntryPoint) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, Temp_byte_Variable) == 0x000004, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CustomEvent_Success) == 0x000014, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, Temp_bool_Variable) == 0x000015, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_ComponentBoundEvent_Button) == 0x000040, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, Temp_byte_Variable_1) == 0x000048, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, CallFunc_EquipItem_ReturnValue) == 0x000050, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::CallFunc_EquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, CallFunc_IsInSubGame_ReturnValue) == 0x000059, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::CallFunc_IsInSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, CallFunc_IsInSubGame_ReturnValue_1) == 0x00005A, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::CallFunc_IsInSubGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_Event_IsDesignTime) == 0x00005B, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, CallFunc_IsInSubGame_ReturnValue_2) == 0x00005C, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::CallFunc_IsInSubGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CustomEvent_RotationOffset) == 0x000060, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CustomEvent_RotationOffset' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_CustomEvent_bSnap) == 0x000078, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_CustomEvent_bSnap' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, Temp_bool_Variable_1) == 0x000079, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector, K2Node_Select_Default) == 0x00007A, "Member 'WBP_MPL_VariantSelector_C_ExecuteUbergraph_WBP_MPL_VariantSelector::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.Get Icon
// 0x0070 (0x0070 - 0x0000)
struct WBP_MPL_VariantSelector_C_Get_Icon final
{
public:
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             TempTexture;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_Get_Icon) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_Get_Icon");
static_assert(sizeof(WBP_MPL_VariantSelector_C_Get_Icon) == 0x000070, "Wrong size on WBP_MPL_VariantSelector_C_Get_Icon");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, Asset) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::Asset' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, Texture) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::Texture' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, TempTexture) == 0x000028, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::TempTexture' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, K2Node_DynamicCast_AsMaterial_Instance) == 0x000040, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, K2Node_DynamicCast_AsTexture_2D) == 0x000050, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, K2Node_DynamicCast_AsTexture_2D_1) == 0x000060, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Get_Icon, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WBP_MPL_VariantSelector_C_Get_Icon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.Handle Rotation Requested
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_Handle_Rotation_Requested final
{
public:
	struct FRotator                               RotationOffset;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          bSnap;                                             // 0x0018(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_Handle_Rotation_Requested) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_Handle_Rotation_Requested");
static_assert(sizeof(WBP_MPL_VariantSelector_C_Handle_Rotation_Requested) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_Handle_Rotation_Requested");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Handle_Rotation_Requested, RotationOffset) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_Handle_Rotation_Requested::RotationOffset' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Handle_Rotation_Requested, bSnap) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_Handle_Rotation_Requested::bSnap' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.HandleVariantUnbinds
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPL_VariantSelector_C_HandleVariantUnbinds final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPL_Customize_DynamicRow_C*        K2Node_DynamicCast_AsWBP_MPL_Customize_Dynamic_Row; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FText ConflictText)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_HandleVariantUnbinds");
static_assert(sizeof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds) == 0x000030, "Wrong size on WBP_MPL_VariantSelector_C_HandleVariantUnbinds");
static_assert(offsetof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds, Object) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_HandleVariantUnbinds::Object' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_HandleVariantUnbinds::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds, K2Node_DynamicCast_AsWBP_MPL_Customize_Dynamic_Row) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_HandleVariantUnbinds::K2Node_DynamicCast_AsWBP_MPL_Customize_Dynamic_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_HandleVariantUnbinds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_HandleVariantUnbinds, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'WBP_MPL_VariantSelector_C_HandleVariantUnbinds::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.On Secondary Filter Changed
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantSelectorSubFilterVM*        K2Node_DynamicCast_AsFort_Variant_Selector_Sub_Filter_VM; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed");
static_assert(sizeof(WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed");
static_assert(offsetof(WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed, Item) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed::Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed, bIsSelected) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed, K2Node_DynamicCast_AsFort_Variant_Selector_Sub_Filter_VM) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed::K2Node_DynamicCast_AsFort_Variant_Selector_Sub_Filter_VM' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_On_Secondary_Filter_Changed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185 final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185) == 0x000001, "Wrong alignment on WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185");
static_assert(sizeof(WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185) == 0x000001, "Wrong size on WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185, Success) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_OnOperationCompleted_5EAD91254CC974AB85D8498D58AAD185::Success' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.OnPrimaryFilterSelectionChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectTabByIndex_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantSelectorFilterVM*           K2Node_DynamicCast_AsFort_Variant_Selector_Filter_VM; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged");
static_assert(sizeof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged, Item) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged::Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged, bIsSelected) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged, CallFunc_SelectTabByIndex_ReturnValue) == 0x000009, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged::CallFunc_SelectTabByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged, K2Node_DynamicCast_AsFort_Variant_Selector_Filter_VM) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged::K2Node_DynamicCast_AsFort_Variant_Selector_Filter_VM' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterSelectionChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.OnPrimaryFilterTabSelected
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected final
{
public:
	class FName                                   TabID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectTabByIndex_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTabIndexByID_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantSelectorFilterVM*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected");
static_assert(sizeof(WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected) == 0x000018, "Wrong size on WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected, TabID) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected::TabID' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected, CallFunc_SelectTabByIndex_ReturnValue) == 0x000004, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected::CallFunc_SelectTabByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected, CallFunc_GetTabIndexByID_ReturnValue) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected::CallFunc_GetTabIndexByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_OnPrimaryFilterTabSelected::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.OnSecondaryFilterTabSelected
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected final
{
public:
	class FName                                   TabID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTabIndexByID_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortVariantSelectorSubFilterVM*        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected");
static_assert(sizeof(WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected) == 0x000010, "Wrong size on WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected, TabID) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected::TabID' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected, CallFunc_GetTabIndexByID_ReturnValue) == 0x000004, "Member 'WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected::CallFunc_GetTabIndexByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_OnSecondaryFilterTabSelected::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPL_VariantSelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MPL_VariantSelector_C_PreConstruct");
static_assert(sizeof(WBP_MPL_VariantSelector_C_PreConstruct) == 0x000001, "Wrong size on WBP_MPL_VariantSelector_C_PreConstruct");
static_assert(offsetof(WBP_MPL_VariantSelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetHeaders
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetHeaders final
{
public:
	class UFortLockerCategoryItemVM*              Subcategory;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetHeaders) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetHeaders");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetHeaders) == 0x000008, "Wrong size on WBP_MPL_VariantSelector_C_SetHeaders");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetHeaders, Subcategory) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetHeaders::Subcategory' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetMobileStyle
// 0x0038 (0x0038 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetMobileStyle final
{
public:
	class UWBP_UIKit_Tabs_Base_C*                 PrimaryFilter_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_Tabs_Base_C*                 SecondaryFilter_0;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetMobileStyle) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetMobileStyle");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetMobileStyle) == 0x000038, "Wrong size on WBP_MPL_VariantSelector_C_SetMobileStyle");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetMobileStyle, PrimaryFilter_0) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetMobileStyle::PrimaryFilter_0' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetMobileStyle, SecondaryFilter_0) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_SetMobileStyle::SecondaryFilter_0' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetMobileStyle, K2Node_MakeStruct_Margin) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_SetMobileStyle::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetMobileStyle, CallFunc_IsMobileGame_ReturnValue) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_SetMobileStyle::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetMobileStyle, K2Node_MakeStruct_Margin_1) == 0x000024, "Member 'WBP_MPL_VariantSelector_C_SetMobileStyle::K2Node_MakeStruct_Margin_1' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetPrimaryFiltersViewModel
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel final
{
public:
	TArray<class UFortVariantSelectorFilterVM*>   Filters;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UUIKitTabGroupButtonViewModel*>  TabGroupButtonsViewModels;                         // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortVariantSelectorFilterVM*           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Get_Icon_Texture;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectTabByIndex_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIKitTabGroupViewModel*                CallFunc_SpawnObject_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIKitTabGroupButtonViewModel*          CallFunc_SpawnObject_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel) == 0x000060, "Wrong size on WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, Filters) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::Filters' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, TabGroupButtonsViewModels) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::TabGroupButtonsViewModels' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_Get_Icon_Texture) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_Get_Icon_Texture' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_SelectTabByIndex_ReturnValue) == 0x000038, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_SelectTabByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_SpawnObject_ReturnValue) == 0x000040, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_SpawnObject_ReturnValue_1) == 0x000050, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersViewModel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetPrimaryFiltersVisibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility final
{
public:
	TArray<class UFortVariantSelectorFilterVM*>   Filters;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, Filters) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::Filters' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, Temp_bool_Variable) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, Temp_byte_Variable) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility, K2Node_Select_Default) == 0x00001B, "Member 'WBP_MPL_VariantSelector_C_SetPrimaryFiltersVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetSecondaryFiltersViewModel
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel final
{
public:
	TArray<class UFortVariantSelectorSubFilterVM*> SubFilters;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UUIKitTabGroupButtonViewModel*>  TabGroupButtonsViewModels;                         // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortVariantSelectorSubFilterVM*        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Get_Icon_Texture;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIKitTabGroupButtonViewModel*          CallFunc_SpawnObject_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIKitTabGroupViewModel*                CallFunc_SpawnObject_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel) == 0x000060, "Wrong size on WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, SubFilters) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::SubFilters' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, TabGroupButtonsViewModels) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::TabGroupButtonsViewModels' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_Get_Icon_Texture) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_Get_Icon_Texture' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_SpawnObject_ReturnValue) == 0x000040, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel, CallFunc_SpawnObject_ReturnValue_1) == 0x000058, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersViewModel::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetSecondaryFiltersVisibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility final
{
public:
	TArray<class UFortVariantSelectorSubFilterVM*> SubFilters;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, SubFilters) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::SubFilters' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, Temp_bool_Variable) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, Temp_byte_Variable) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility, K2Node_Select_Default) == 0x00001B, "Member 'WBP_MPL_VariantSelector_C_SetSecondaryFiltersVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.SetVariantRows
// 0x0178 (0x0178 - 0x0000)
struct WBP_MPL_VariantSelector_C_SetVariantRows final
{
public:
	TArray<class UFortVariantSetVM*>              VariantSetVMs;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_1;              // 0x0040(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DynVariantRow_FocusTargetWidget_C> K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DynVariantRow_FocusTargetWidget_C> K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_FocusTarget;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_FocusTarget_1;      // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_2;              // 0x00A8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortVariantSetVM*                      CallFunc_Array_Get_Item_3;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FText ConflictText)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x00EC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_3;              // 0x0100(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item_4;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_4;              // 0x0128(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_BP_CreateEntry_ReturnValue;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_5;                         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPL_Customize_DynamicRow_C*        K2Node_DynamicCast_AsWBP_MPL_Customize_Dynamic_Row; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DynVariantRow_FocusTargetWidget_C> K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget_2; // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_FocusTarget_2;      // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_SetVariantRows) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_SetVariantRows");
static_assert(sizeof(WBP_MPL_VariantSelector_C_SetVariantRows) == 0x000178, "Wrong size on WBP_MPL_VariantSelector_C_SetVariantRows");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, VariantSetVMs) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::VariantSetVMs' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetAllEntries_ReturnValue) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetAllEntries_ReturnValue_1) == 0x000040, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetAllEntries_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget) == 0x000060, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget_1) == 0x000078, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetDesiredFocusTarget_FocusTarget) == 0x000090, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetDesiredFocusTarget_FocusTarget' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetDesiredFocusTarget_FocusTarget_1) == 0x000098, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetDesiredFocusTarget_FocusTarget_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A0, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000A1, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetAllEntries_ReturnValue_2) == 0x0000A8, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetAllEntries_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, Temp_int_Loop_Counter_Variable_1) == 0x0000D4, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Get_Item_3) == 0x0000D8, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000EC, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, Temp_int_Loop_Counter_Variable_2) == 0x0000F8, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetAllEntries_ReturnValue_3) == 0x000100, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetAllEntries_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Get_Item_4) == 0x000110, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011C, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Less_IntInt_ReturnValue_2) == 0x00011D, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Add_IntInt_ReturnValue_3) == 0x000120, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetAllEntries_ReturnValue_4) == 0x000128, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetAllEntries_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_BP_CreateEntry_ReturnValue) == 0x000138, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_BP_CreateEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_Array_Get_Item_5) == 0x000140, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_AsWBP_MPL_Customize_Dynamic_Row) == 0x000148, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_AsWBP_MPL_Customize_Dynamic_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget_2) == 0x000158, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_SetVariantRows, CallFunc_GetDesiredFocusTarget_FocusTarget_2) == 0x000170, "Member 'WBP_MPL_VariantSelector_C_SetVariantRows::CallFunc_GetDesiredFocusTarget_FocusTarget_2' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.Show Unlock Criteria
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_Show_Unlock_Criteria final
{
public:
	class FText                                   Unlock_Criteria;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_Show_Unlock_Criteria");
static_assert(sizeof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_Show_Unlock_Criteria");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria, Unlock_Criteria) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_Show_Unlock_Criteria::Unlock_Criteria' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria, Temp_bool_Variable) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_Show_Unlock_Criteria::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'WBP_MPL_VariantSelector_C_Show_Unlock_Criteria::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria, Temp_byte_Variable) == 0x00001A, "Member 'WBP_MPL_VariantSelector_C_Show_Unlock_Criteria::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria, Temp_byte_Variable_1) == 0x00001B, "Member 'WBP_MPL_VariantSelector_C_Show_Unlock_Criteria::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_Show_Unlock_Criteria, K2Node_Select_Default) == 0x00001C, "Member 'WBP_MPL_VariantSelector_C_Show_Unlock_Criteria::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.ShowErrorText
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPL_VariantSelector_C_ShowErrorText final
{
public:
	class FText                                   ConflictText;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_ShowErrorText) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_ShowErrorText");
static_assert(sizeof(WBP_MPL_VariantSelector_C_ShowErrorText) == 0x000020, "Wrong size on WBP_MPL_VariantSelector_C_ShowErrorText");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ShowErrorText, ConflictText) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_ShowErrorText::ConflictText' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ShowErrorText, Temp_bool_Variable) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_ShowErrorText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ShowErrorText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'WBP_MPL_VariantSelector_C_ShowErrorText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ShowErrorText, Temp_byte_Variable) == 0x00001A, "Member 'WBP_MPL_VariantSelector_C_ShowErrorText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ShowErrorText, Temp_byte_Variable_1) == 0x00001B, "Member 'WBP_MPL_VariantSelector_C_ShowErrorText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_ShowErrorText, K2Node_Select_Default) == 0x00001C, "Member 'WBP_MPL_VariantSelector_C_ShowErrorText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.STWRegisterTabInputs
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPL_VariantSelector_C_STWRegisterTabInputs final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_STWRegisterTabInputs) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_STWRegisterTabInputs");
static_assert(sizeof(WBP_MPL_VariantSelector_C_STWRegisterTabInputs) == 0x000030, "Wrong size on WBP_MPL_VariantSelector_C_STWRegisterTabInputs");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWRegisterTabInputs, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_STWRegisterTabInputs::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWRegisterTabInputs, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'WBP_MPL_VariantSelector_C_STWRegisterTabInputs::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWRegisterTabInputs, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_STWRegisterTabInputs::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWRegisterTabInputs, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000028, "Member 'WBP_MPL_VariantSelector_C_STWRegisterTabInputs::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.STWSecondaryFilterNextInput
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput) == 0x000001, "Wrong alignment on WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput");
static_assert(sizeof(WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput) == 0x000001, "Wrong size on WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput, bPassThrough) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_STWSecondaryFilterNextInput::bPassThrough' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.STWSecondaryFilterPreviousInput
// 0x0001 (0x0001 - 0x0000)
struct WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput) == 0x000001, "Wrong alignment on WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput");
static_assert(sizeof(WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput) == 0x000001, "Wrong size on WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput, bPassThrough) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_STWSecondaryFilterPreviousInput::bPassThrough' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.STWUnregisterTabInputs
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPL_VariantSelector_C_STWUnregisterTabInputs final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_STWUnregisterTabInputs) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_STWUnregisterTabInputs");
static_assert(sizeof(WBP_MPL_VariantSelector_C_STWUnregisterTabInputs) == 0x000010, "Wrong size on WBP_MPL_VariantSelector_C_STWUnregisterTabInputs");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWUnregisterTabInputs, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_STWUnregisterTabInputs::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_STWUnregisterTabInputs, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_STWUnregisterTabInputs::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.BP_GetDesiredFocusTarget
// 0x0040 (0x0040 - 0x0000)
struct WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DynVariantRow_FocusTargetWidget_C> K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_FocusTarget;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget) == 0x000040, "Wrong size on WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_FocusTarget) == 0x000038, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_FocusTarget' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.BP_GetDesiredInputConfig
// 0x000C (0x000C - 0x0000)
struct WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig final
{
public:
	struct FUIInputConfig                         ReturnValue;                                       // 0x0000(0x0006)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FUIInputConfig                         K2Node_MakeStruct_UIInputConfig;                   // 0x0006(0x0006)(NoDestructor)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig) == 0x000001, "Wrong alignment on WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig");
static_assert(sizeof(WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig) == 0x00000C, "Wrong size on WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig, ReturnValue) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig, K2Node_MakeStruct_UIInputConfig) == 0x000006, "Member 'WBP_MPL_VariantSelector_C_BP_GetDesiredInputConfig::K2Node_MakeStruct_UIInputConfig' has a wrong offset!");

// Function WBP_MPL_VariantSelector.WBP_MPL_VariantSelector_C.GetFocusTarget
// 0x0040 (0x0040 - 0x0000)
struct WBP_MPL_VariantSelector_C_GetFocusTarget final
{
public:
	class UWidget*                                Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DynVariantRow_FocusTargetWidget_C> K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_FocusTarget;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPL_VariantSelector_C_GetFocusTarget) == 0x000008, "Wrong alignment on WBP_MPL_VariantSelector_C_GetFocusTarget");
static_assert(sizeof(WBP_MPL_VariantSelector_C_GetFocusTarget) == 0x000040, "Wrong size on WBP_MPL_VariantSelector_C_GetFocusTarget");
static_assert(offsetof(WBP_MPL_VariantSelector_C_GetFocusTarget, Target) == 0x000000, "Member 'WBP_MPL_VariantSelector_C_GetFocusTarget::Target' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_GetFocusTarget, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_MPL_VariantSelector_C_GetFocusTarget::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_GetFocusTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MPL_VariantSelector_C_GetFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_GetFocusTarget, K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget) == 0x000020, "Member 'WBP_MPL_VariantSelector_C_GetFocusTarget::K2Node_DynamicCast_AsBPI_Dyn_Variant_Row_Focus_Target_Widget' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_GetFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_MPL_VariantSelector_C_GetFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPL_VariantSelector_C_GetFocusTarget, CallFunc_GetDesiredFocusTarget_FocusTarget) == 0x000038, "Member 'WBP_MPL_VariantSelector_C_GetFocusTarget::CallFunc_GetDesiredFocusTarget_FocusTarget' has a wrong offset!");

}

