#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RubberBandPitchShifter

#include "Basic.hpp"

#include "HarmonixDsp_classes.hpp"
#include "RubberBandPitchShifter_structs.hpp"


namespace SDK
{

// Class RubberBandPitchShifter.RubberBandPitchShifterConfig
// 0x00A8 (0x00D0 - 0x0028)
class URubberBandPitchShifterConfig final : public UStretcherAndPitchShifterConfig
{
public:
	struct FPlatformStretcherCounts               DefaultStretcherCounts;                            // 0x0028(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlatformStretcherCounts               SwitchStretcherCounts;                             // 0x0040(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlatformStretcherCounts               PS4StretcherCounts;                                // 0x0058(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlatformStretcherCounts               PS5StretcherCounts;                                // 0x0070(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlatformStretcherCounts               XboxOneStretcherCounts;                            // 0x0088(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlatformStretcherCounts               XSXStretcherCounts;                                // 0x00A0(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlatformStretcherCounts               AndroidStretcherCounts;                            // 0x00B8(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RubberBandPitchShifterConfig">();
	}
	static class URubberBandPitchShifterConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<URubberBandPitchShifterConfig>();
	}
};
static_assert(alignof(URubberBandPitchShifterConfig) == 0x000008, "Wrong alignment on URubberBandPitchShifterConfig");
static_assert(sizeof(URubberBandPitchShifterConfig) == 0x0000D0, "Wrong size on URubberBandPitchShifterConfig");
static_assert(offsetof(URubberBandPitchShifterConfig, DefaultStretcherCounts) == 0x000028, "Member 'URubberBandPitchShifterConfig::DefaultStretcherCounts' has a wrong offset!");
static_assert(offsetof(URubberBandPitchShifterConfig, SwitchStretcherCounts) == 0x000040, "Member 'URubberBandPitchShifterConfig::SwitchStretcherCounts' has a wrong offset!");
static_assert(offsetof(URubberBandPitchShifterConfig, PS4StretcherCounts) == 0x000058, "Member 'URubberBandPitchShifterConfig::PS4StretcherCounts' has a wrong offset!");
static_assert(offsetof(URubberBandPitchShifterConfig, PS5StretcherCounts) == 0x000070, "Member 'URubberBandPitchShifterConfig::PS5StretcherCounts' has a wrong offset!");
static_assert(offsetof(URubberBandPitchShifterConfig, XboxOneStretcherCounts) == 0x000088, "Member 'URubberBandPitchShifterConfig::XboxOneStretcherCounts' has a wrong offset!");
static_assert(offsetof(URubberBandPitchShifterConfig, XSXStretcherCounts) == 0x0000A0, "Member 'URubberBandPitchShifterConfig::XSXStretcherCounts' has a wrong offset!");
static_assert(offsetof(URubberBandPitchShifterConfig, AndroidStretcherCounts) == 0x0000B8, "Member 'URubberBandPitchShifterConfig::AndroidStretcherCounts' has a wrong offset!");

}

