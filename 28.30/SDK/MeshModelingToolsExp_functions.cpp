#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshModelingToolsExp

#include "Basic.hpp"

#include "MeshModelingToolsExp_classes.hpp"
#include "MeshModelingToolsExp_parameters.hpp"


namespace SDK
{

// Function MeshModelingToolsExp.HoleFillToolActions.Clear
// (Final, Native, Public)

void UHoleFillToolActions::Clear()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.HoleFillToolActions.SelectAll
// (Final, Native, Public)

void UHoleFillToolActions::SelectAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.BakeInputMeshProperties.GetSourceUVLayerNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeInputMeshProperties::GetSourceUVLayerNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSourceUVLayerNamesFunc");

	Params::BakeInputMeshProperties_GetSourceUVLayerNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.BakeInputMeshProperties.GetTargetUVLayerNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeInputMeshProperties::GetTargetUVLayerNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTargetUVLayerNamesFunc");

	Params::BakeInputMeshProperties_GetTargetUVLayerNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.MeshConstraintProperties.IsPreventNormalFlipsEnabled
// (Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMeshConstraintProperties::IsPreventNormalFlipsEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPreventNormalFlipsEnabled");

	Params::MeshConstraintProperties_IsPreventNormalFlipsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.MeshConstraintProperties.IsPreventTinyTrianglesEnabled
// (Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMeshConstraintProperties::IsPreventTinyTrianglesEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPreventTinyTrianglesEnabled");

	Params::MeshConstraintProperties_IsPreventTinyTrianglesEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.BakeTexture2DProperties.GetUVLayerNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeTexture2DProperties::GetUVLayerNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUVLayerNamesFunc");

	Params::BakeTexture2DProperties_GetUVLayerNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.BakeMultiTexture2DProperties.GetUVLayerNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeMultiTexture2DProperties::GetUVLayerNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUVLayerNamesFunc");

	Params::BakeMultiTexture2DProperties_GetUVLayerNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.MeshAttributePaintToolProperties.GetAttributeNames
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UMeshAttributePaintToolProperties::GetAttributeNames()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAttributeNames");

	Params::MeshAttributePaintToolProperties_GetAttributeNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.RevolveSplineToolActionPropertySet.ResetAxis
// (Final, Native, Public)

void URevolveSplineToolActionPropertySet::ResetAxis()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetAxis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.BakeMeshAttributeMapsToolProperties.GetMapPreviewNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeMeshAttributeMapsToolProperties::GetMapPreviewNamesFunc()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMapPreviewNamesFunc");

	Params::BakeMeshAttributeMapsToolProperties_GetMapPreviewNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.BakeMultiMeshAttributeMapsToolProperties.GetMapPreviewNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeMultiMeshAttributeMapsToolProperties::GetMapPreviewNamesFunc()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMapPreviewNamesFunc");

	Params::BakeMultiMeshAttributeMapsToolProperties_GetMapPreviewNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.BakeMultiMeshInputToolProperties.GetTargetUVLayerNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeMultiMeshInputToolProperties::GetTargetUVLayerNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTargetUVLayerNamesFunc");

	Params::BakeMultiMeshInputToolProperties_GetTargetUVLayerNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.OutputPolygroupLayerProperties.GetGroupOptionsList
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UOutputPolygroupLayerProperties::GetGroupOptionsList()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGroupOptionsList");

	Params::OutputPolygroupLayerProperties_GetGroupOptionsList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.CubeGridToolActions.CornerMode
// (Final, Native, Public)

void UCubeGridToolActions::CornerMode()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CornerMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridToolActions.Flip
// (Final, Native, Public)

void UCubeGridToolActions::Flip()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Flip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridToolActions.Pull
// (Final, Native, Public)

void UCubeGridToolActions::Pull()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Pull");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridToolActions.Push
// (Final, Native, Public)

void UCubeGridToolActions::Push()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Push");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridToolActions.ResetGridFromActor
// (Final, Native, Public)

void UCubeGridToolActions::ResetGridFromActor()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetGridFromActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridToolActions.SlideBack
// (Final, Native, Public)

void UCubeGridToolActions::SlideBack()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SlideBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridToolActions.SlideForward
// (Final, Native, Public)

void UCubeGridToolActions::SlideForward()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SlideForward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridDuringActivityActions.Cancel
// (Final, Native, Public)

void UCubeGridDuringActivityActions::Cancel()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.CubeGridDuringActivityActions.Done
// (Final, Native, Public)

void UCubeGridDuringActivityActions::Done()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Done");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.DisplaceMeshCommonProperties.GetWeightMapsFunc
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UDisplaceMeshCommonProperties::GetWeightMapsFunc()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetWeightMapsFunc");

	Params::DisplaceMeshCommonProperties_GetWeightMapsFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.SelectiveTessellationProperties.GetMaterialIDsFunc
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> USelectiveTessellationProperties::GetMaterialIDsFunc()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMaterialIDsFunc");

	Params::SelectiveTessellationProperties_GetMaterialIDsFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.DynamicSculptToolActions.DiscardAttributes
// (Final, Native, Public)

void UDynamicSculptToolActions::DiscardAttributes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DiscardAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Back
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Back()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Back");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Bottom
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Bottom()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Bottom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Center
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Center()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Center");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Front
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Front()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Front");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Left
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Left()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Left");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Right
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Right()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Right");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.Top
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::Top()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Top");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.EditPivotToolActionPropertySet.WorldOrigin
// (Final, Native, Public)

void UEditPivotToolActionPropertySet::WorldOrigin()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("WorldOrigin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.LatticeDeformerToolProperties.ClearConstraints
// (Final, Native, Public)

void ULatticeDeformerToolProperties::ClearConstraints()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearConstraints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.LatticeDeformerToolProperties.Constrain
// (Final, Native, Public)

void ULatticeDeformerToolProperties::Constrain()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Constrain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.ClearAll
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::ClearAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.ClearCurrent
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::ClearCurrent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ClearCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.FloodFillCurrent
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::FloodFillCurrent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FloodFillCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.FreezeCurrent
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::FreezeCurrent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FreezeCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.FreezeOthers
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::FreezeOthers()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FreezeOthers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.GrowCurrent
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::GrowCurrent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GrowCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.ShrinkCurrent
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::ShrinkCurrent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShrinkCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshGroupPaintToolFreezeActions.UnfreezeAll
// (Final, Native, Public)

void UMeshGroupPaintToolFreezeActions::UnfreezeAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UnfreezeAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshInspectorMaterialProperties.GetUVChannelNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UMeshInspectorMaterialProperties::GetUVChannelNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetUVChannelNamesFunc");

	Params::MeshInspectorMaterialProperties_GetUVChannelNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.Clear
// (Final, Native, Public)

void UMeshSelectionEditActions::Clear()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.ExpandToMaterials
// (Final, Native, Public)

void UMeshSelectionEditActions::ExpandToMaterials()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExpandToMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.FloodFill
// (Final, Native, Public)

void UMeshSelectionEditActions::FloodFill()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FloodFill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.Grow
// (Final, Native, Public)

void UMeshSelectionEditActions::Grow()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Grow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.Invert
// (Final, Native, Public)

void UMeshSelectionEditActions::Invert()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Invert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.LargestAreaPart
// (Final, Native, Public)

void UMeshSelectionEditActions::LargestAreaPart()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("LargestAreaPart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.LargestTriCountPart
// (Final, Native, Public)

void UMeshSelectionEditActions::LargestTriCountPart()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("LargestTriCountPart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.OptimizeBorder
// (Final, Native, Public)

void UMeshSelectionEditActions::OptimizeBorder()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OptimizeBorder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.SelectAll
// (Final, Native, Public)

void UMeshSelectionEditActions::SelectAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SelectAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionEditActions.Shrink
// (Final, Native, Public)

void UMeshSelectionEditActions::Shrink()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Shrink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.CreatePolygroup
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::CreatePolygroup()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CreatePolygroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.Delete
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::Delete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Delete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.Disconnect
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::Disconnect()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Disconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.Duplicate
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::Duplicate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Duplicate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.FlipNormals
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::FlipNormals()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FlipNormals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.Separate
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::Separate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Separate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSelectionMeshEditActions.SmoothBorder
// (Final, Native, Public)

void UMeshSelectionMeshEditActions::SmoothBorder()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SmoothBorder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshSpaceDeformerToolActionPropertySet.ShiftToCenter
// (Final, Native, Public)

void UMeshSpaceDeformerToolActionPropertySet::ShiftToCenter()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShiftToCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshVertexPaintToolQuickActions.EraseAll
// (Final, Native, Public)

void UMeshVertexPaintToolQuickActions::EraseAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EraseAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshVertexPaintToolQuickActions.FillBlack
// (Final, Native, Public)

void UMeshVertexPaintToolQuickActions::FillBlack()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FillBlack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshVertexPaintToolQuickActions.FillWhite
// (Final, Native, Public)

void UMeshVertexPaintToolQuickActions::FillWhite()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FillWhite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshVertexPaintToolQuickActions.PaintAll
// (Final, Native, Public)

void UMeshVertexPaintToolQuickActions::PaintAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PaintAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshVertexPaintToolUtilityActions.ApplySelectedOperation
// (Final, Native, Public)

void UMeshVertexPaintToolUtilityActions::ApplySelectedOperation()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ApplySelectedOperation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MeshVertexPaintToolUtilityActions.GetWeightMapsFunc
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMeshVertexPaintToolUtilityActions::GetWeightMapsFunc()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetWeightMapsFunc");

	Params::MeshVertexPaintToolUtilityActions_GetWeightMapsFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.MeshVertexPaintToolUtilityActions.GetLODNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UMeshVertexPaintToolUtilityActions::GetLODNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLODNamesFunc");

	Params::MeshVertexPaintToolUtilityActions_GetLODNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.Backward
// (Final, Native, Public)

void UMirrorToolActionPropertySet::Backward()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Backward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.Down
// (Final, Native, Public)

void UMirrorToolActionPropertySet::Down()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Down");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.Forward
// (Final, Native, Public)

void UMirrorToolActionPropertySet::Forward()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Forward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.Left
// (Final, Native, Public)

void UMirrorToolActionPropertySet::Left()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Left");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.Right
// (Final, Native, Public)

void UMirrorToolActionPropertySet::Right()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Right");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.ShiftToCenter
// (Final, Native, Public)

void UMirrorToolActionPropertySet::ShiftToCenter()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShiftToCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.MirrorToolActionPropertySet.Up
// (Final, Native, Public)

void UMirrorToolActionPropertySet::Up()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Up");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.SimpleCollisionEditorToolActionProperties.AddBox
// (Final, Native, Public)

void USimpleCollisionEditorToolActionProperties::AddBox()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.SimpleCollisionEditorToolActionProperties.AddCapsule
// (Final, Native, Public)

void USimpleCollisionEditorToolActionProperties::AddCapsule()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddCapsule");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.SimpleCollisionEditorToolActionProperties.AddSphere
// (Final, Native, Public)

void USimpleCollisionEditorToolActionProperties::AddSphere()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddSphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.SimpleCollisionEditorToolActionProperties.Delete
// (Final, Native, Public)

void USimpleCollisionEditorToolActionProperties::Delete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Delete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.SimpleCollisionEditorToolActionProperties.DeleteAll
// (Final, Native, Public)

void USimpleCollisionEditorToolActionProperties::DeleteAll()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DeleteAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.SimpleCollisionEditorToolActionProperties.Duplicate
// (Final, Native, Public)

void USimpleCollisionEditorToolActionProperties::Duplicate()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Duplicate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.PlaneCutTool.Cut
// (Final, Native, Protected)

void UPlaneCutTool::Cut()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Cut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.PlaneCutTool.FlipPlane
// (Final, Native, Protected)

void UPlaneCutTool::FlipPlane()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FlipPlane");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeshModelingToolsExp.TransferMeshToolProperties.GetSourceLODNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UTransferMeshToolProperties::GetSourceLODNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSourceLODNamesFunc");

	Params::TransferMeshToolProperties_GetSourceLODNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeshModelingToolsExp.TransferMeshToolProperties.GetTargetLODNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UTransferMeshToolProperties::GetTargetLODNamesFunc() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTargetLODNamesFunc");

	Params::TransferMeshToolProperties_GetTargetLODNamesFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

