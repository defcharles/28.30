#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Renderer

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Renderer_structs.hpp"


namespace SDK
{

// Class Renderer.SparseVolumeTextureViewerComponent
// 0x0040 (0x0540 - 0x0500)
class USparseVolumeTextureViewerComponent final : public UPrimitiveComponent
{
public:
	class USparseVolumeTexture*                   SparseVolumeTexturePreview;                        // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAnimate : 1;                                      // 0x0508(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReversePlayback : 1;                              // 0x0508(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBlockingStreamingRequests : 1;                    // 0x0508(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationFrame;                                    // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrameRate;                                         // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimationTime;                                     // 0x0514(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparseVolumeTexturePreviewAttribute          PreviewAttribute;                                  // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MipLevel;                                          // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Extinction;                                        // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_524[0x1C];                                     // 0x0524(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparseVolumeTextureViewerComponent">();
	}
	static class USparseVolumeTextureViewerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparseVolumeTextureViewerComponent>();
	}
};
static_assert(alignof(USparseVolumeTextureViewerComponent) == 0x000010, "Wrong alignment on USparseVolumeTextureViewerComponent");
static_assert(sizeof(USparseVolumeTextureViewerComponent) == 0x000540, "Wrong size on USparseVolumeTextureViewerComponent");
static_assert(offsetof(USparseVolumeTextureViewerComponent, SparseVolumeTexturePreview) == 0x000500, "Member 'USparseVolumeTextureViewerComponent::SparseVolumeTexturePreview' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, AnimationFrame) == 0x00050C, "Member 'USparseVolumeTextureViewerComponent::AnimationFrame' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, FrameRate) == 0x000510, "Member 'USparseVolumeTextureViewerComponent::FrameRate' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, AnimationTime) == 0x000514, "Member 'USparseVolumeTextureViewerComponent::AnimationTime' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, PreviewAttribute) == 0x000518, "Member 'USparseVolumeTextureViewerComponent::PreviewAttribute' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, MipLevel) == 0x00051C, "Member 'USparseVolumeTextureViewerComponent::MipLevel' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, Extinction) == 0x000520, "Member 'USparseVolumeTextureViewerComponent::Extinction' has a wrong offset!");

// Class Renderer.SparseVolumeTextureViewer
// 0x0008 (0x0298 - 0x0290)
class ASparseVolumeTextureViewer final : public AInfo
{
public:
	class USparseVolumeTextureViewerComponent*    SparseVolumeTextureViewerComponent;                // 0x0290(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparseVolumeTextureViewer">();
	}
	static class ASparseVolumeTextureViewer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASparseVolumeTextureViewer>();
	}
};
static_assert(alignof(ASparseVolumeTextureViewer) == 0x000008, "Wrong alignment on ASparseVolumeTextureViewer");
static_assert(sizeof(ASparseVolumeTextureViewer) == 0x000298, "Wrong size on ASparseVolumeTextureViewer");
static_assert(offsetof(ASparseVolumeTextureViewer, SparseVolumeTextureViewerComponent) == 0x000290, "Member 'ASparseVolumeTextureViewer::SparseVolumeTextureViewerComponent' has a wrong offset!");

}

