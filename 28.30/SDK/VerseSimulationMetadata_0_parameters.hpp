#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseSimulationMetadata_0

#include "Basic.hpp"

#include "VerseNative_structs.hpp"


namespace SDK::Params
{

// Function VerseSimulationMetadata.Simulation._L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R
// 0x0010 (0x0010 - 0x0000)
struct Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R");
static_assert(sizeof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R) == 0x000010, "Wrong size on Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R");
static_assert(offsetof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R, RetVal) == 0x000008, "Member 'Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__number_L_Nt_20where_20t_R::RetVal' has a wrong offset!");

// Function VerseSimulationMetadata.Simulation._L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R
// 0x0010 (0x0010 - 0x0000)
struct Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R");
static_assert(sizeof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R) == 0x000010, "Wrong size on Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R");
static_assert(offsetof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R, RetVal) == 0x000008, "Member 'Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__slider_L_Nt_20where_20t_R::RetVal' has a wrong offset!");

// Function VerseSimulationMetadata.Simulation._L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R
// 0x0010 (0x0010 - 0x0000)
struct Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R");
static_assert(sizeof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R) == 0x000010, "Wrong size on Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R");
static_assert(offsetof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R, RetVal) == 0x000008, "Member 'Simulation__L_2fVerse_2eorg_2fSimulation_N_Reditable__vector_L_Nt_20where_20t_R::RetVal' has a wrong offset!");

// Function VerseSimulationMetadata.Simulation_editable_number.$InitCDO
// 0x00C0 (0x00C0 - 0x0000)
struct Simulation_editable_number__InitCDO final
{
public:
	TOptional<FVerseDynamicProperty_>             _ExprResult_0;                                     // 0x0000(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__1;                             // 0x0018(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_1 : 1;                                 // 0x001A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_2;                                // 0x001B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_3;                                     // 0x0020(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__3;                             // 0x0038(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_4 : 1;                                 // 0x003A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_5;                                // 0x003B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_6;                                     // 0x0040(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__5;                             // 0x0058(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_7 : 1;                                 // 0x005A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_8;                                // 0x005B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_9;                                     // 0x0060(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__7;                             // 0x0078(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_10 : 1;                                // 0x007A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_11;                               // 0x007B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_12;                                    // 0x0080(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__9;                             // 0x0098(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_13 : 1;                                // 0x009A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_14;                               // 0x009B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_15;                                    // 0x00A0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__11;                            // 0x00B8(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_16 : 1;                                // 0x00BA(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_17;                               // 0x00BB(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Simulation_editable_number__InitCDO) == 0x000008, "Wrong alignment on Simulation_editable_number__InitCDO");
static_assert(sizeof(Simulation_editable_number__InitCDO) == 0x0000C0, "Wrong size on Simulation_editable_number__InitCDO");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResult_0) == 0x000000, "Member 'Simulation_editable_number__InitCDO::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, __verse_0x00000000__1) == 0x000018, "Member 'Simulation_editable_number__InitCDO::__verse_0x00000000__1' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResultStack_2) == 0x00001B, "Member 'Simulation_editable_number__InitCDO::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResult_3) == 0x000020, "Member 'Simulation_editable_number__InitCDO::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, __verse_0x00000000__3) == 0x000038, "Member 'Simulation_editable_number__InitCDO::__verse_0x00000000__3' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResultStack_5) == 0x00003B, "Member 'Simulation_editable_number__InitCDO::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResult_6) == 0x000040, "Member 'Simulation_editable_number__InitCDO::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, __verse_0x00000000__5) == 0x000058, "Member 'Simulation_editable_number__InitCDO::__verse_0x00000000__5' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResultStack_8) == 0x00005B, "Member 'Simulation_editable_number__InitCDO::_ExprResultStack_8' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResult_9) == 0x000060, "Member 'Simulation_editable_number__InitCDO::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, __verse_0x00000000__7) == 0x000078, "Member 'Simulation_editable_number__InitCDO::__verse_0x00000000__7' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResultStack_11) == 0x00007B, "Member 'Simulation_editable_number__InitCDO::_ExprResultStack_11' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResult_12) == 0x000080, "Member 'Simulation_editable_number__InitCDO::_ExprResult_12' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, __verse_0x00000000__9) == 0x000098, "Member 'Simulation_editable_number__InitCDO::__verse_0x00000000__9' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResultStack_14) == 0x00009B, "Member 'Simulation_editable_number__InitCDO::_ExprResultStack_14' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResult_15) == 0x0000A0, "Member 'Simulation_editable_number__InitCDO::_ExprResult_15' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, __verse_0x00000000__11) == 0x0000B8, "Member 'Simulation_editable_number__InitCDO::__verse_0x00000000__11' has a wrong offset!");
static_assert(offsetof(Simulation_editable_number__InitCDO, _ExprResultStack_17) == 0x0000BB, "Member 'Simulation_editable_number__InitCDO::_ExprResultStack_17' has a wrong offset!");

// Function VerseSimulationMetadata.Simulation_editable_vector.$InitCDO
// 0x00C0 (0x00C0 - 0x0000)
struct Simulation_editable_vector__InitCDO final
{
public:
	TOptional<FVerseDynamicProperty_>             _ExprResult_0;                                     // 0x0000(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__1;                             // 0x0018(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_1 : 1;                                 // 0x001A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_2;                                // 0x001B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_3;                                     // 0x0020(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__3;                             // 0x0038(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_4 : 1;                                 // 0x003A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_5;                                // 0x003B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_6;                                     // 0x0040(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__5;                             // 0x0058(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_7 : 1;                                 // 0x005A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_8;                                // 0x005B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_9;                                     // 0x0060(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__7;                             // 0x0078(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_10 : 1;                                // 0x007A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_11;                               // 0x007B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_12;                                    // 0x0080(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__9;                             // 0x0098(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_13 : 1;                                // 0x009A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_14;                               // 0x009B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_15;                                    // 0x00A0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__11;                            // 0x00B8(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_16 : 1;                                // 0x00BA(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_17;                               // 0x00BB(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Simulation_editable_vector__InitCDO) == 0x000008, "Wrong alignment on Simulation_editable_vector__InitCDO");
static_assert(sizeof(Simulation_editable_vector__InitCDO) == 0x0000C0, "Wrong size on Simulation_editable_vector__InitCDO");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResult_0) == 0x000000, "Member 'Simulation_editable_vector__InitCDO::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, __verse_0x00000000__1) == 0x000018, "Member 'Simulation_editable_vector__InitCDO::__verse_0x00000000__1' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResultStack_2) == 0x00001B, "Member 'Simulation_editable_vector__InitCDO::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResult_3) == 0x000020, "Member 'Simulation_editable_vector__InitCDO::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, __verse_0x00000000__3) == 0x000038, "Member 'Simulation_editable_vector__InitCDO::__verse_0x00000000__3' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResultStack_5) == 0x00003B, "Member 'Simulation_editable_vector__InitCDO::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResult_6) == 0x000040, "Member 'Simulation_editable_vector__InitCDO::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, __verse_0x00000000__5) == 0x000058, "Member 'Simulation_editable_vector__InitCDO::__verse_0x00000000__5' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResultStack_8) == 0x00005B, "Member 'Simulation_editable_vector__InitCDO::_ExprResultStack_8' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResult_9) == 0x000060, "Member 'Simulation_editable_vector__InitCDO::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, __verse_0x00000000__7) == 0x000078, "Member 'Simulation_editable_vector__InitCDO::__verse_0x00000000__7' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResultStack_11) == 0x00007B, "Member 'Simulation_editable_vector__InitCDO::_ExprResultStack_11' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResult_12) == 0x000080, "Member 'Simulation_editable_vector__InitCDO::_ExprResult_12' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, __verse_0x00000000__9) == 0x000098, "Member 'Simulation_editable_vector__InitCDO::__verse_0x00000000__9' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResultStack_14) == 0x00009B, "Member 'Simulation_editable_vector__InitCDO::_ExprResultStack_14' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResult_15) == 0x0000A0, "Member 'Simulation_editable_vector__InitCDO::_ExprResult_15' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, __verse_0x00000000__11) == 0x0000B8, "Member 'Simulation_editable_vector__InitCDO::__verse_0x00000000__11' has a wrong offset!");
static_assert(offsetof(Simulation_editable_vector__InitCDO, _ExprResultStack_17) == 0x0000BB, "Member 'Simulation_editable_vector__InitCDO::_ExprResultStack_17' has a wrong offset!");

// Function VerseSimulationMetadata.Simulation_editable_slider.$InitCDO
// 0x0100 (0x0100 - 0x0000)
struct Simulation_editable_slider__InitCDO final
{
public:
	TOptional<FVerseDynamicProperty_>             _ExprResult_0;                                     // 0x0000(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__1;                             // 0x0018(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_1 : 1;                                 // 0x001A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_2;                                // 0x001B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_3;                                     // 0x0020(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__3;                             // 0x0038(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_4 : 1;                                 // 0x003A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_5;                                // 0x003B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_6;                                     // 0x0040(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__5;                             // 0x0058(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_7 : 1;                                 // 0x005A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_8;                                // 0x005B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_9;                                     // 0x0060(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__7;                             // 0x0078(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_10 : 1;                                // 0x007A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_11;                               // 0x007B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_12;                                    // 0x0080(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__9;                             // 0x0098(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_13 : 1;                                // 0x009A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_14;                               // 0x009B(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_15;                                    // 0x00A0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__11;                            // 0x00B8(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_16 : 1;                                // 0x00BA(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_17;                               // 0x00BB(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_18;                                    // 0x00C0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__13;                            // 0x00D8(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_19 : 1;                                // 0x00DA(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_20;                               // 0x00DB(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<FVerseDynamicProperty_>             _ExprResult_21;                                    // 0x00E0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TOptional<EVerseFalse>                        __verse_0x00000000__15;                            // 0x00F8(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_22 : 1;                                // 0x00FA(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	TOptional<EVerseFalse>                        _ExprResultStack_23;                               // 0x00FB(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Simulation_editable_slider__InitCDO) == 0x000008, "Wrong alignment on Simulation_editable_slider__InitCDO");
static_assert(sizeof(Simulation_editable_slider__InitCDO) == 0x000100, "Wrong size on Simulation_editable_slider__InitCDO");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_0) == 0x000000, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__1) == 0x000018, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__1' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_2) == 0x00001B, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_3) == 0x000020, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__3) == 0x000038, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__3' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_5) == 0x00003B, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_6) == 0x000040, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__5) == 0x000058, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__5' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_8) == 0x00005B, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_8' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_9) == 0x000060, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__7) == 0x000078, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__7' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_11) == 0x00007B, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_11' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_12) == 0x000080, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_12' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__9) == 0x000098, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__9' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_14) == 0x00009B, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_14' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_15) == 0x0000A0, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_15' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__11) == 0x0000B8, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__11' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_17) == 0x0000BB, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_17' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_18) == 0x0000C0, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_18' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__13) == 0x0000D8, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__13' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_20) == 0x0000DB, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_20' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResult_21) == 0x0000E0, "Member 'Simulation_editable_slider__InitCDO::_ExprResult_21' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, __verse_0x00000000__15) == 0x0000F8, "Member 'Simulation_editable_slider__InitCDO::__verse_0x00000000__15' has a wrong offset!");
static_assert(offsetof(Simulation_editable_slider__InitCDO, _ExprResultStack_23) == 0x0000FB, "Member 'Simulation_editable_slider__InitCDO::_ExprResultStack_23' has a wrong offset!");

}

