#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItemScreen

#include "Basic.hpp"

#include "CrewUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ProgressiveItemScreen.ProgressiveItemScreen_C
// 0x0080 (0x0938 - 0x08B8)
class UProgressiveItemScreen_C final : public UFortProgressiveItemScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro;                                             // 0x08C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ProgDetailsItemChange;                             // 0x08C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BottomContentBlockerGradient;                      // 0x08D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomScreenGradient;                              // 0x08D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UErrorInfoFlag_C*                       ErrorInfoFlag;                                     // 0x08E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RightSideVertBox;                                  // 0x08E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_ProgressiveStageList;                      // 0x08F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_MtxContainer;                                 // 0x08F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ContentPurchaseBlocker_C*          WBP_ContentPurchaseBlocker;                        // 0x0900(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor;                                         // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           HoverColor;                                        // 0x0918(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           SelectColor;                                       // 0x0928(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BlockScreenContent(const bool bBlockScreen, const class FText& ContentBlockedText);
	void BP_OnActivated();
	void BP_OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs);
	void Construct();
	void ContentBlocking(bool isContentBlocked, const class FText& ContentBlockedText);
	void ExecuteUbergraph_ProgressiveItemScreen(int32 EntryPoint);
	class UWidget* Navigate_Right_from_Items_List(EUINavigation Navigation_0);
	void OnErrorStateTextUpdated(const class FText& ErrorStateText);
	void OnItemSelected();
	void OnPreviewActionButtonUpdated(const class FText& RowDisplayName, class UCommonButtonBase* Button);
	void OnUpdateSubscriptionState(const bool bSubscribed);
	void UpdateLayoutForTabs(bool bTabsVisible, double Spacing_Adjustment_For_Tabs);
	void UpdateSubscribedVisuals(bool Subscribed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProgressiveItemScreen_C">();
	}
	static class UProgressiveItemScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressiveItemScreen_C>();
	}
};
static_assert(alignof(UProgressiveItemScreen_C) == 0x000008, "Wrong alignment on UProgressiveItemScreen_C");
static_assert(sizeof(UProgressiveItemScreen_C) == 0x000938, "Wrong size on UProgressiveItemScreen_C");
static_assert(offsetof(UProgressiveItemScreen_C, UberGraphFrame) == 0x0008B8, "Member 'UProgressiveItemScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Intro) == 0x0008C0, "Member 'UProgressiveItemScreen_C::Intro' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, ProgDetailsItemChange) == 0x0008C8, "Member 'UProgressiveItemScreen_C::ProgDetailsItemChange' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, BottomContentBlockerGradient) == 0x0008D0, "Member 'UProgressiveItemScreen_C::BottomContentBlockerGradient' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, BottomScreenGradient) == 0x0008D8, "Member 'UProgressiveItemScreen_C::BottomScreenGradient' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, ErrorInfoFlag) == 0x0008E0, "Member 'UProgressiveItemScreen_C::ErrorInfoFlag' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, RightSideVertBox) == 0x0008E8, "Member 'UProgressiveItemScreen_C::RightSideVertBox' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, SizeBox_ProgressiveStageList) == 0x0008F0, "Member 'UProgressiveItemScreen_C::SizeBox_ProgressiveStageList' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, VBox_MtxContainer) == 0x0008F8, "Member 'UProgressiveItemScreen_C::VBox_MtxContainer' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, WBP_ContentPurchaseBlocker) == 0x000900, "Member 'UProgressiveItemScreen_C::WBP_ContentPurchaseBlocker' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, BaseColor) == 0x000908, "Member 'UProgressiveItemScreen_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, HoverColor) == 0x000918, "Member 'UProgressiveItemScreen_C::HoverColor' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, SelectColor) == 0x000928, "Member 'UProgressiveItemScreen_C::SelectColor' has a wrong offset!");

}

