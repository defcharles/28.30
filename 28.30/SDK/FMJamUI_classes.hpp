#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMJamUI

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "FMJamCoreRuntime_structs.hpp"


namespace SDK
{

// Class FMJamUI.JamEmoteWheelOverlay
// 0x0000 (0x0400 - 0x0400)
class UJamEmoteWheelOverlay final : public UCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JamEmoteWheelOverlay">();
	}
	static class UJamEmoteWheelOverlay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJamEmoteWheelOverlay>();
	}
};
static_assert(alignof(UJamEmoteWheelOverlay) == 0x000008, "Wrong alignment on UJamEmoteWheelOverlay");
static_assert(sizeof(UJamEmoteWheelOverlay) == 0x000400, "Wrong size on UJamEmoteWheelOverlay");

// Class FMJamUI.JamUIManagerComponent_SongIndicators
// 0x0090 (0x0138 - 0x00A8)
class UJamUIManagerComponent_SongIndicators final : public UFortControllerComponent
{
public:
	TSubclassOf<class UJamSongIndicator>          JamSongIndicatorClass;                             // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUserWidgetPool                        IndicatorPool;                                     // 0x00B0(0x0088)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void ClearJamIndicators();
	void RebuildJamSongIndicatorsForPlayspace(class AJamPlayspace* Playspace);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JamUIManagerComponent_SongIndicators">();
	}
	static class UJamUIManagerComponent_SongIndicators* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJamUIManagerComponent_SongIndicators>();
	}
};
static_assert(alignof(UJamUIManagerComponent_SongIndicators) == 0x000008, "Wrong alignment on UJamUIManagerComponent_SongIndicators");
static_assert(sizeof(UJamUIManagerComponent_SongIndicators) == 0x000138, "Wrong size on UJamUIManagerComponent_SongIndicators");
static_assert(offsetof(UJamUIManagerComponent_SongIndicators, JamSongIndicatorClass) == 0x0000A8, "Member 'UJamUIManagerComponent_SongIndicators::JamSongIndicatorClass' has a wrong offset!");
static_assert(offsetof(UJamUIManagerComponent_SongIndicators, IndicatorPool) == 0x0000B0, "Member 'UJamUIManagerComponent_SongIndicators::IndicatorPool' has a wrong offset!");

// Class FMJamUI.JamSongIndicator
// 0x0028 (0x03F8 - 0x03D0)
class UJamSongIndicator final : public UFortActorIndicatorWidget
{
public:
	uint8                                         Pad_3D0[0x28];                                     // 0x03D0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDistanceChanged(int32 Distance);
	void OnInitInfo(const class UCatalogData* Song, EFMJamLoopType Type);
	void OnScreenClampChanged(bool bIsClamped);

	const class AFortPlayerStateAthena* GetIndicatedPlayerStateAthena() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JamSongIndicator">();
	}
	static class UJamSongIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJamSongIndicator>();
	}
};
static_assert(alignof(UJamSongIndicator) == 0x000008, "Wrong alignment on UJamSongIndicator");
static_assert(sizeof(UJamSongIndicator) == 0x0003F8, "Wrong size on UJamSongIndicator");

}

