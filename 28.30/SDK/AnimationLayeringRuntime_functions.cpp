#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimationLayeringRuntime

#include "Basic.hpp"

#include "AnimationLayeringRuntime_classes.hpp"
#include "AnimationLayeringRuntime_parameters.hpp"


namespace SDK
{

// Function AnimationLayeringRuntime.BoneMaskFunctionLibrary.BP_BoneMask_GetBodyPartWeights
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBoneMask                        BoneMask                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalSpaceWeight                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MeshSpaceWeight                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBoneMaskFunctionLibrary::BP_BoneMask_GetBodyPartWeights(const struct FBoneMask& BoneMask, class FName Name_0, float* LocalSpaceWeight, float* MeshSpaceWeight)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BP_BoneMask_GetBodyPartWeights");

	Params::BoneMaskFunctionLibrary_BP_BoneMask_GetBodyPartWeights Parms{};

	Parms.BoneMask = std::move(BoneMask);
	Parms.Name_0 = Name_0;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (LocalSpaceWeight != nullptr)
		*LocalSpaceWeight = Parms.LocalSpaceWeight;

	if (MeshSpaceWeight != nullptr)
		*MeshSpaceWeight = Parms.MeshSpaceWeight;
}


// Function AnimationLayeringRuntime.BoneMaskFunctionLibrary.BP_BoneMask_UpdateBodyPartLocalSpaceWeight
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBoneMask                        BoneMask                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalSpaceWeight                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBoneMaskFunctionLibrary::BP_BoneMask_UpdateBodyPartLocalSpaceWeight(struct FBoneMask& BoneMask, class FName Name_0, float LocalSpaceWeight)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BP_BoneMask_UpdateBodyPartLocalSpaceWeight");

	Params::BoneMaskFunctionLibrary_BP_BoneMask_UpdateBodyPartLocalSpaceWeight Parms{};

	Parms.BoneMask = std::move(BoneMask);
	Parms.Name_0 = Name_0;
	Parms.LocalSpaceWeight = LocalSpaceWeight;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	BoneMask = std::move(Parms.BoneMask);
}


// Function AnimationLayeringRuntime.BoneMaskFunctionLibrary.BP_BoneMask_UpdateBodyPartMeshSpaceWeight
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBoneMask                        BoneMask                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MeshSpaceWeight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBoneMaskFunctionLibrary::BP_BoneMask_UpdateBodyPartMeshSpaceWeight(struct FBoneMask& BoneMask, class FName Name_0, float MeshSpaceWeight)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BP_BoneMask_UpdateBodyPartMeshSpaceWeight");

	Params::BoneMaskFunctionLibrary_BP_BoneMask_UpdateBodyPartMeshSpaceWeight Parms{};

	Parms.BoneMask = std::move(BoneMask);
	Parms.Name_0 = Name_0;
	Parms.MeshSpaceWeight = MeshSpaceWeight;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	BoneMask = std::move(Parms.BoneMask);
}


// Function AnimationLayeringRuntime.BoneMaskFunctionLibrary.BP_BoneMask_UpdateBodyPartWeights
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBoneMask                        BoneMask                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalSpaceWeight                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MeshSpaceWeight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBoneMaskFunctionLibrary::BP_BoneMask_UpdateBodyPartWeights(struct FBoneMask& BoneMask, class FName Name_0, float LocalSpaceWeight, float MeshSpaceWeight)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BP_BoneMask_UpdateBodyPartWeights");

	Params::BoneMaskFunctionLibrary_BP_BoneMask_UpdateBodyPartWeights Parms{};

	Parms.BoneMask = std::move(BoneMask);
	Parms.Name_0 = Name_0;
	Parms.LocalSpaceWeight = LocalSpaceWeight;
	Parms.MeshSpaceWeight = MeshSpaceWeight;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	BoneMask = std::move(Parms.BoneMask);
}


// Function AnimationLayeringRuntime.BoneMaskFunctionLibrary.BP_BoneMask_UpdateBodyPartWeightsMulti
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBoneMask                        BoneMask                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FBoneMaskUpdateMultiParam>Params_0                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBoneMaskFunctionLibrary::BP_BoneMask_UpdateBodyPartWeightsMulti(struct FBoneMask& BoneMask, const TArray<struct FBoneMaskUpdateMultiParam>& Params_0)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("BP_BoneMask_UpdateBodyPartWeightsMulti");

	Params::BoneMaskFunctionLibrary_BP_BoneMask_UpdateBodyPartWeightsMulti Parms{};

	Parms.BoneMask = std::move(BoneMask);
	Parms.Params_0 = std::move(Params_0);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	BoneMask = std::move(Parms.BoneMask);
}

}

