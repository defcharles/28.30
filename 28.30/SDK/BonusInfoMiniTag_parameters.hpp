#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BonusInfoMiniTag

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BonusInfoMiniTag.BonusInfoMiniTag_C.ExecuteUbergraph_BonusInfoMiniTag
// 0x00E8 (0x00E8 - 0x0000)
struct BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECosmeticCompatibleMode                       K2Node_Event_BonusInfoType;                        // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bClaimed;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x0008(0x0018)(ConstParm)
	const class UTexture2D*                       K2Node_Event_PreviewTexture;                       // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag) == 0x000008, "Wrong alignment on BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag");
static_assert(sizeof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag) == 0x0000E8, "Wrong size on BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, EntryPoint) == 0x000000, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Event_BonusInfoType) == 0x000004, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Event_BonusInfoType' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Event_bClaimed) == 0x000005, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Event_bClaimed' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Event_Description) == 0x000008, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Event_PreviewTexture) == 0x000020, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Event_PreviewTexture' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, Temp_bool_Variable) == 0x000028, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_SwitchEnum_CmpSuccess) == 0x00002A, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, Temp_byte_Variable) == 0x00002B, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, Temp_byte_Variable_1) == 0x00002C, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Event_IsDesignTime) == 0x00002D, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Select_Default) == 0x000048, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, Temp_bool_Variable_1) == 0x000049, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, Temp_byte_Variable_2) == 0x00004A, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, CallFunc_TextToUpper_ReturnValue) == 0x000050, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, Temp_byte_Variable_3) == 0x0000E0, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_Select_Default_1) == 0x0000E1, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag, K2Node_MakeStruct_A_ImplicitCast) == 0x0000E4, "Member 'BonusInfoMiniTag_C_ExecuteUbergraph_BonusInfoMiniTag::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function BonusInfoMiniTag.BonusInfoMiniTag_C.OnSetBonusInfo
// 0x0028 (0x0028 - 0x0000)
struct BonusInfoMiniTag_C_OnSetBonusInfo final
{
public:
	ECosmeticCompatibleMode                       BonusInfoType;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClaimed;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UTexture2D*                       PreviewTexture;                                    // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BonusInfoMiniTag_C_OnSetBonusInfo) == 0x000008, "Wrong alignment on BonusInfoMiniTag_C_OnSetBonusInfo");
static_assert(sizeof(BonusInfoMiniTag_C_OnSetBonusInfo) == 0x000028, "Wrong size on BonusInfoMiniTag_C_OnSetBonusInfo");
static_assert(offsetof(BonusInfoMiniTag_C_OnSetBonusInfo, BonusInfoType) == 0x000000, "Member 'BonusInfoMiniTag_C_OnSetBonusInfo::BonusInfoType' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_OnSetBonusInfo, bClaimed) == 0x000001, "Member 'BonusInfoMiniTag_C_OnSetBonusInfo::bClaimed' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_OnSetBonusInfo, Description) == 0x000008, "Member 'BonusInfoMiniTag_C_OnSetBonusInfo::Description' has a wrong offset!");
static_assert(offsetof(BonusInfoMiniTag_C_OnSetBonusInfo, PreviewTexture) == 0x000020, "Member 'BonusInfoMiniTag_C_OnSetBonusInfo::PreviewTexture' has a wrong offset!");

// Function BonusInfoMiniTag.BonusInfoMiniTag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BonusInfoMiniTag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BonusInfoMiniTag_C_PreConstruct) == 0x000001, "Wrong alignment on BonusInfoMiniTag_C_PreConstruct");
static_assert(sizeof(BonusInfoMiniTag_C_PreConstruct) == 0x000001, "Wrong size on BonusInfoMiniTag_C_PreConstruct");
static_assert(offsetof(BonusInfoMiniTag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BonusInfoMiniTag_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

