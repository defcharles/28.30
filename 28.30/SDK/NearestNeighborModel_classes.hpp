#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NearestNeighborModel

#include "Basic.hpp"

#include "MLDeformerFramework_classes.hpp"
#include "NearestNeighborModel_structs.hpp"
#include "ComputeFramework_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "OptimusCore_classes.hpp"


namespace SDK
{

// Class NearestNeighborModel.NearestNeighborModelVizSettings
// 0x0000 (0x0038 - 0x0038)
class UNearestNeighborModelVizSettings final : public UMLDeformerMorphModelVizSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborModelVizSettings">();
	}
	static class UNearestNeighborModelVizSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborModelVizSettings>();
	}
};
static_assert(alignof(UNearestNeighborModelVizSettings) == 0x000008, "Wrong alignment on UNearestNeighborModelVizSettings");
static_assert(sizeof(UNearestNeighborModelVizSettings) == 0x000038, "Wrong size on UNearestNeighborModelVizSettings");

// Class NearestNeighborModel.NearestNeighborNetworkLayer
// 0x0018 (0x0040 - 0x0028)
class UNearestNeighborNetworkLayer : public UObject
{
public:
	int32                                         NumInputs;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOutputs;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNearestNeighborNetworkParameter> Parameters;                                        // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborNetworkLayer">();
	}
	static class UNearestNeighborNetworkLayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborNetworkLayer>();
	}
};
static_assert(alignof(UNearestNeighborNetworkLayer) == 0x000008, "Wrong alignment on UNearestNeighborNetworkLayer");
static_assert(sizeof(UNearestNeighborNetworkLayer) == 0x000040, "Wrong size on UNearestNeighborNetworkLayer");
static_assert(offsetof(UNearestNeighborNetworkLayer, NumInputs) == 0x000028, "Member 'UNearestNeighborNetworkLayer::NumInputs' has a wrong offset!");
static_assert(offsetof(UNearestNeighborNetworkLayer, NumOutputs) == 0x00002C, "Member 'UNearestNeighborNetworkLayer::NumOutputs' has a wrong offset!");
static_assert(offsetof(UNearestNeighborNetworkLayer, Parameters) == 0x000030, "Member 'UNearestNeighborNetworkLayer::Parameters' has a wrong offset!");

// Class NearestNeighborModel.NearestNeighborNetworkLayer_Gemm_Prelu
// 0x0000 (0x0040 - 0x0040)
class UNearestNeighborNetworkLayer_Gemm_Prelu final : public UNearestNeighborNetworkLayer
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborNetworkLayer_Gemm_Prelu">();
	}
	static class UNearestNeighborNetworkLayer_Gemm_Prelu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborNetworkLayer_Gemm_Prelu>();
	}
};
static_assert(alignof(UNearestNeighborNetworkLayer_Gemm_Prelu) == 0x000008, "Wrong alignment on UNearestNeighborNetworkLayer_Gemm_Prelu");
static_assert(sizeof(UNearestNeighborNetworkLayer_Gemm_Prelu) == 0x000040, "Wrong size on UNearestNeighborNetworkLayer_Gemm_Prelu");

// Class NearestNeighborModel.NearestNeighborNetworkLayer_Gemm
// 0x0000 (0x0040 - 0x0040)
class UNearestNeighborNetworkLayer_Gemm final : public UNearestNeighborNetworkLayer
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborNetworkLayer_Gemm">();
	}
	static class UNearestNeighborNetworkLayer_Gemm* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborNetworkLayer_Gemm>();
	}
};
static_assert(alignof(UNearestNeighborNetworkLayer_Gemm) == 0x000008, "Wrong alignment on UNearestNeighborNetworkLayer_Gemm");
static_assert(sizeof(UNearestNeighborNetworkLayer_Gemm) == 0x000040, "Wrong size on UNearestNeighborNetworkLayer_Gemm");

// Class NearestNeighborModel.NearestNeighborOptimizedNetwork
// 0x0030 (0x0058 - 0x0028)
class UNearestNeighborOptimizedNetwork final : public UObject
{
public:
	class UNNEModelData*                          ModelData;                                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumInputs;                                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumOutputs;                                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNearestNeighborNetworkLayer*>   Layers;                                            // 0x0048(0x0010)(ZeroConstructor, Deprecated, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void Empty();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborOptimizedNetwork">();
	}
	static class UNearestNeighborOptimizedNetwork* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborOptimizedNetwork>();
	}
};
static_assert(alignof(UNearestNeighborOptimizedNetwork) == 0x000008, "Wrong alignment on UNearestNeighborOptimizedNetwork");
static_assert(sizeof(UNearestNeighborOptimizedNetwork) == 0x000058, "Wrong size on UNearestNeighborOptimizedNetwork");
static_assert(offsetof(UNearestNeighborOptimizedNetwork, ModelData) == 0x000028, "Member 'UNearestNeighborOptimizedNetwork::ModelData' has a wrong offset!");
static_assert(offsetof(UNearestNeighborOptimizedNetwork, NumInputs) == 0x000040, "Member 'UNearestNeighborOptimizedNetwork::NumInputs' has a wrong offset!");
static_assert(offsetof(UNearestNeighborOptimizedNetwork, NumOutputs) == 0x000044, "Member 'UNearestNeighborOptimizedNetwork::NumOutputs' has a wrong offset!");
static_assert(offsetof(UNearestNeighborOptimizedNetwork, Layers) == 0x000048, "Member 'UNearestNeighborOptimizedNetwork::Layers' has a wrong offset!");

// Class NearestNeighborModel.NearestNeighborOptimizedNetworkInstance
// 0x0038 (0x0060 - 0x0028)
class UNearestNeighborOptimizedNetworkInstance final : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UNearestNeighborOptimizedNetwork*       Network;                                           // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborOptimizedNetworkInstance">();
	}
	static class UNearestNeighborOptimizedNetworkInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborOptimizedNetworkInstance>();
	}
};
static_assert(alignof(UNearestNeighborOptimizedNetworkInstance) == 0x000008, "Wrong alignment on UNearestNeighborOptimizedNetworkInstance");
static_assert(sizeof(UNearestNeighborOptimizedNetworkInstance) == 0x000060, "Wrong size on UNearestNeighborOptimizedNetworkInstance");
static_assert(offsetof(UNearestNeighborOptimizedNetworkInstance, Network) == 0x000058, "Member 'UNearestNeighborOptimizedNetworkInstance::Network' has a wrong offset!");

// Class NearestNeighborModel.NearestNeighborOptimizedNetworkLoader
// 0x0008 (0x0030 - 0x0028)
class UNearestNeighborOptimizedNetworkLoader final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool LoadOptimizedNetwork(const class FString& OnnxPath);

	class UNearestNeighborOptimizedNetwork* GetOptimizedNetwork() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborOptimizedNetworkLoader">();
	}
	static class UNearestNeighborOptimizedNetworkLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborOptimizedNetworkLoader>();
	}
};
static_assert(alignof(UNearestNeighborOptimizedNetworkLoader) == 0x000008, "Wrong alignment on UNearestNeighborOptimizedNetworkLoader");
static_assert(sizeof(UNearestNeighborOptimizedNetworkLoader) == 0x000030, "Wrong size on UNearestNeighborOptimizedNetworkLoader");

// Class NearestNeighborModel.NearestNeighborModel
// 0x0070 (0x0200 - 0x0190)
class UNearestNeighborModel final : public UMLDeformerMorphModel
{
public:
	int32                                         InputDim;                                          // 0x0190(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         OutputDim;                                         // 0x0194(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseInputMultipliers;                              // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector3f>                      InputMultipliers;                                  // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FClothPartData>                 ClothPartData;                                     // 0x01B0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                 InputsMin;                                         // 0x01C0(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                 InputsMax;                                         // 0x01D0(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                         DecayFactor;                                       // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NearestNeighborOffsetWeight;                       // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseRBF;                                           // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RBFSigma;                                          // 0x01EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNearestNeighborOptimizedNetwork*       OptimizedNetwork;                                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseOptimizedNetwork;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<float> ClipInputs(const TArray<float>& Input) const;
	int32 GetNumParts() const;
	int32 GetPartNumVerts(int32 PartId) const;
	int32 GetPCACoeffNum(int32 PartId) const;
	int32 GetPCACoeffStart(int32 PartId) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborModel">();
	}
	static class UNearestNeighborModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborModel>();
	}
};
static_assert(alignof(UNearestNeighborModel) == 0x000008, "Wrong alignment on UNearestNeighborModel");
static_assert(sizeof(UNearestNeighborModel) == 0x000200, "Wrong size on UNearestNeighborModel");
static_assert(offsetof(UNearestNeighborModel, InputDim) == 0x000190, "Member 'UNearestNeighborModel::InputDim' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, OutputDim) == 0x000194, "Member 'UNearestNeighborModel::OutputDim' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, bUseInputMultipliers) == 0x000198, "Member 'UNearestNeighborModel::bUseInputMultipliers' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, InputMultipliers) == 0x0001A0, "Member 'UNearestNeighborModel::InputMultipliers' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, ClothPartData) == 0x0001B0, "Member 'UNearestNeighborModel::ClothPartData' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, InputsMin) == 0x0001C0, "Member 'UNearestNeighborModel::InputsMin' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, InputsMax) == 0x0001D0, "Member 'UNearestNeighborModel::InputsMax' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, DecayFactor) == 0x0001E0, "Member 'UNearestNeighborModel::DecayFactor' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, NearestNeighborOffsetWeight) == 0x0001E4, "Member 'UNearestNeighborModel::NearestNeighborOffsetWeight' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, bUseRBF) == 0x0001E8, "Member 'UNearestNeighborModel::bUseRBF' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, RBFSigma) == 0x0001EC, "Member 'UNearestNeighborModel::RBFSigma' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, OptimizedNetwork) == 0x0001F0, "Member 'UNearestNeighborModel::OptimizedNetwork' has a wrong offset!");
static_assert(offsetof(UNearestNeighborModel, bUseOptimizedNetwork) == 0x0001F8, "Member 'UNearestNeighborModel::bUseOptimizedNetwork' has a wrong offset!");

// Class NearestNeighborModel.NearestNeighborModelInputInfo
// 0x0010 (0x0078 - 0x0068)
class UNearestNeighborModelInputInfo final : public UMLDeformerMorphModelInputInfo
{
public:
	TArray<struct FQuat>                          RefBoneRotations;                                  // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborModelInputInfo">();
	}
	static class UNearestNeighborModelInputInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborModelInputInfo>();
	}
};
static_assert(alignof(UNearestNeighborModelInputInfo) == 0x000008, "Wrong alignment on UNearestNeighborModelInputInfo");
static_assert(sizeof(UNearestNeighborModelInputInfo) == 0x000078, "Wrong size on UNearestNeighborModelInputInfo");
static_assert(offsetof(UNearestNeighborModelInputInfo, RefBoneRotations) == 0x000068, "Member 'UNearestNeighborModelInputInfo::RefBoneRotations' has a wrong offset!");

// Class NearestNeighborModel.NearestNeighborModelInstance
// 0x0018 (0x00C0 - 0x00A8)
class UNearestNeighborModelInstance final : public UMLDeformerMorphModelInstance
{
public:
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UNearestNeighborOptimizedNetworkInstance* OptimizedNetworkInstance;                          // 0x00B8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	TArray<float> Eval(const TArray<float>& InputData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NearestNeighborModelInstance">();
	}
	static class UNearestNeighborModelInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNearestNeighborModelInstance>();
	}
};
static_assert(alignof(UNearestNeighborModelInstance) == 0x000008, "Wrong alignment on UNearestNeighborModelInstance");
static_assert(sizeof(UNearestNeighborModelInstance) == 0x0000C0, "Wrong size on UNearestNeighborModelInstance");
static_assert(offsetof(UNearestNeighborModelInstance, OptimizedNetworkInstance) == 0x0000B8, "Member 'UNearestNeighborModelInstance::OptimizedNetworkInstance' has a wrong offset!");

// Class NearestNeighborModel.OptimusSkeletonWithQuatsDataInterface
// 0x0000 (0x0028 - 0x0028)
class UOptimusSkeletonWithQuatsDataInterface final : public UOptimusComputeDataInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OptimusSkeletonWithQuatsDataInterface">();
	}
	static class UOptimusSkeletonWithQuatsDataInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptimusSkeletonWithQuatsDataInterface>();
	}
};
static_assert(alignof(UOptimusSkeletonWithQuatsDataInterface) == 0x000008, "Wrong alignment on UOptimusSkeletonWithQuatsDataInterface");
static_assert(sizeof(UOptimusSkeletonWithQuatsDataInterface) == 0x000028, "Wrong size on UOptimusSkeletonWithQuatsDataInterface");

// Class NearestNeighborModel.OptimusSkeletonWithQuatsDataProvider
// 0x0008 (0x0030 - 0x0028)
class UOptimusSkeletonWithQuatsDataProvider final : public UComputeDataProvider
{
public:
	class USkinnedMeshComponent*                  SkinnedMesh;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OptimusSkeletonWithQuatsDataProvider">();
	}
	static class UOptimusSkeletonWithQuatsDataProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptimusSkeletonWithQuatsDataProvider>();
	}
};
static_assert(alignof(UOptimusSkeletonWithQuatsDataProvider) == 0x000008, "Wrong alignment on UOptimusSkeletonWithQuatsDataProvider");
static_assert(sizeof(UOptimusSkeletonWithQuatsDataProvider) == 0x000030, "Wrong size on UOptimusSkeletonWithQuatsDataProvider");
static_assert(offsetof(UOptimusSkeletonWithQuatsDataProvider, SkinnedMesh) == 0x000028, "Member 'UOptimusSkeletonWithQuatsDataProvider::SkinnedMesh' has a wrong offset!");

}

