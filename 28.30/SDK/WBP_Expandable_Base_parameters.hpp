#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Expandable_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Expandable_Base.WBP_Expandable_Base_C.CollapseExtPart
// 0x0030 (0x0030 - 0x0000)
struct WBP_Expandable_Base_C_CollapseExtPart final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Base_C_CollapseExtPart) == 0x000008, "Wrong alignment on WBP_Expandable_Base_C_CollapseExtPart");
static_assert(sizeof(WBP_Expandable_Base_C_CollapseExtPart) == 0x000030, "Wrong size on WBP_Expandable_Base_C_CollapseExtPart");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_IsUsingTouch_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_BooleanNOR_ReturnValue) == 0x00000A, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00000C, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Expandable_Base_C_CollapseExtPart::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_CollapseExtPart, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WBP_Expandable_Base_C_CollapseExtPart::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_Expandable_Base.WBP_Expandable_Base_C.ExecuteUbergraph_WBP_Expandable_Base
// 0x0020 (0x0020 - 0x0000)
struct WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_2;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base) == 0x000008, "Wrong alignment on WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base");
static_assert(sizeof(WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base) == 0x000020, "Wrong size on WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base");
static_assert(offsetof(WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base, EntryPoint) == 0x000000, "Member 'WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000010, "Member 'WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base, CallFunc_SpawnSound2D_ReturnValue_2) == 0x000018, "Member 'WBP_Expandable_Base_C_ExecuteUbergraph_WBP_Expandable_Base::CallFunc_SpawnSound2D_ReturnValue_2' has a wrong offset!");

// Function WBP_Expandable_Base.WBP_Expandable_Base_C.ExpandExtPart
// 0x0008 (0x0008 - 0x0000)
struct WBP_Expandable_Base_C_ExpandExtPart final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Expandable_Base_C_ExpandExtPart) == 0x000008, "Wrong alignment on WBP_Expandable_Base_C_ExpandExtPart");
static_assert(sizeof(WBP_Expandable_Base_C_ExpandExtPart) == 0x000008, "Wrong size on WBP_Expandable_Base_C_ExpandExtPart");
static_assert(offsetof(WBP_Expandable_Base_C_ExpandExtPart, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_Expandable_Base_C_ExpandExtPart::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

