#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_AudioPlayerRuntime

#include "Basic.hpp"

#include "CRD_AudioPlayerRuntime_classes.hpp"
#include "CRD_AudioPlayerRuntime_parameters.hpp"


namespace SDK
{

// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnAllPlayersUnregistered
// (Final, Native, Private)

void UCreativeAudioComponent::OnAllPlayersUnregistered()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAllPlayersUnregistered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnAudioLoadComplete
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FSoftObjectPath                  Audio                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnAudioLoadComplete(const struct FSoftObjectPath& Audio)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAudioLoadComplete");

	Params::CreativeAudioComponent_OnAudioLoadComplete Parms{};

	Parms.Audio = std::move(Audio);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnEnabledStateChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnEnabledStateChanged(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEnabledStateChanged");

	Params::CreativeAudioComponent_OnEnabledStateChanged Parms{};

	Parms.bIsEnabled = bIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnMinigameEnded
// (Final, Native, Private)

void UCreativeAudioComponent::OnMinigameEnded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMinigameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnMinigameStarted
// (Final, Native, Private)

void UCreativeAudioComponent::OnMinigameStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMinigameStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnMinigameStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortMinigame*                    Minigame                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMinigameState                      NewMinigameState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnMinigameStateChanged(class AFortMinigame* Minigame, EFortMinigameState NewMinigameState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMinigameStateChanged");

	Params::CreativeAudioComponent_OnMinigameStateChanged Parms{};

	Parms.Minigame = Minigame;
	Parms.NewMinigameState = NewMinigameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnPlayerAdded
// (Final, Native, Private)
// Parameters:
// struct FUniqueNetIdRepl                 NetId                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnPlayerAdded(const struct FUniqueNetIdRepl& NetId, bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayerAdded");

	Params::CreativeAudioComponent_OnPlayerAdded Parms{};

	Parms.NetId = std::move(NetId);
	Parms.bIsLocalPlayer = bIsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnPlayerRegistered
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnPlayerRegistered(const class AFortPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayerRegistered");

	Params::CreativeAudioComponent_OnPlayerRegistered Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnPlayerRemoved
// (Final, Native, Private)
// Parameters:
// struct FUniqueNetIdRepl                 NetId                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnPlayerRemoved(const struct FUniqueNetIdRepl& NetId, bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayerRemoved");

	Params::CreativeAudioComponent_OnPlayerRemoved Parms{};

	Parms.NetId = std::move(NetId);
	Parms.bIsLocalPlayer = bIsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnPlayerUnregistered
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnPlayerUnregistered(const class AFortPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayerUnregistered");

	Params::CreativeAudioComponent_OnPlayerUnregistered Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnProxyDataChanged
// (Final, Native, Private)
// Parameters:
// class ACreativePlayerReplicationProxy*  ProxyData                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::OnProxyDataChanged(class ACreativePlayerReplicationProxy* ProxyData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnProxyDataChanged");

	Params::CreativeAudioComponent_OnProxyDataChanged Parms{};

	Parms.ProxyData = ProxyData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnRep_RegisteredPlayerIds
// (Final, Native, Private)

void UCreativeAudioComponent::OnRep_RegisteredPlayerIds()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_RegisteredPlayerIds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.OnRep_ServerInstigatorData
// (Final, Native, Private)

void UCreativeAudioComponent::OnRep_ServerInstigatorData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_ServerInstigatorData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.PlayAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::PlayAudio(class AController* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayAudio");

	Params::CreativeAudioComponent_PlayAudio Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.ResetDevice
// (Final, Native, Public, BlueprintCallable)

void UCreativeAudioComponent::ResetDevice()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetDevice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.RetryClientPlayAudio
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FCreativeAudioPlayerData         InstigatorData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::RetryClientPlayAudio(const struct FCreativeAudioPlayerData& InstigatorData)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RetryClientPlayAudio");

	Params::CreativeAudioComponent_RetryClientPlayAudio Parms{};

	Parms.InstigatorData = std::move(InstigatorData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.RetryUpdateAutoplayStatusOnMinigameAdd
// (Final, Native, Private)
// Parameters:
// class AFortMinigame*                    Minigame                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::RetryUpdateAutoplayStatusOnMinigameAdd(class AFortMinigame* Minigame)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RetryUpdateAutoplayStatusOnMinigameAdd");

	Params::CreativeAudioComponent_RetryUpdateAutoplayStatusOnMinigameAdd Parms{};

	Parms.Minigame = Minigame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.SetProperties
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USoundBase>        Audio                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewFadeInDuration                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewFadeOutDuration                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableVolumeAttenuation                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableSpatialization                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StereoSpread                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttenuationDistanceModel               DistanceModel                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AttenuationMinDistance                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AttenuationFalloffDistance                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSyncPlayerAudio                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewRestartAudioOnPlay                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCanBeHeardBy                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewPlayLocation                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewAutoplayOptions                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::SetProperties(const TSoftObjectPtr<class USoundBase>& Audio, const float Volume, const float PlaybackSpeed, const float NewFadeInDuration, const float NewFadeOutDuration, const bool bEnableVolumeAttenuation, const bool bEnableSpatialization, const float StereoSpread, const EAttenuationDistanceModel DistanceModel, const float AttenuationMinDistance, const float AttenuationFalloffDistance, const bool bNewSyncPlayerAudio, const bool bNewRestartAudioOnPlay, const int32 NewCanBeHeardBy, const int32 NewPlayLocation, const int32 NewAutoplayOptions)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetProperties");

	Params::CreativeAudioComponent_SetProperties Parms{};

	Parms.Audio = Audio;
	Parms.Volume = Volume;
	Parms.PlaybackSpeed = PlaybackSpeed;
	Parms.NewFadeInDuration = NewFadeInDuration;
	Parms.NewFadeOutDuration = NewFadeOutDuration;
	Parms.bEnableVolumeAttenuation = bEnableVolumeAttenuation;
	Parms.bEnableSpatialization = bEnableSpatialization;
	Parms.StereoSpread = StereoSpread;
	Parms.DistanceModel = DistanceModel;
	Parms.AttenuationMinDistance = AttenuationMinDistance;
	Parms.AttenuationFalloffDistance = AttenuationFalloffDistance;
	Parms.bNewSyncPlayerAudio = bNewSyncPlayerAudio;
	Parms.bNewRestartAudioOnPlay = bNewRestartAudioOnPlay;
	Parms.NewCanBeHeardBy = NewCanBeHeardBy;
	Parms.NewPlayLocation = NewPlayLocation;
	Parms.NewAutoplayOptions = NewAutoplayOptions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CRD_AudioPlayerRuntime.CreativeAudioComponent.StopAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeAudioComponent::StopAudio(class AController* Player)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopAudio");

	Params::CreativeAudioComponent_StopAudio Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}

}

