#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroesCamera_Blueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HeroesCamera_Blueprint.HeroesCamera_Blueprint_C
// 0x0020 (0x0A20 - 0x0A00)
class AHeroesCamera_Blueprint_C final : public AFortCameraBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          MouseDown;                                         // 0x0A08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A09[0x7];                                      // 0x0A09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        Cached_Pawn;                                       // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void HandleMousePress();
	void HandleMouseRelease();
	void ExecuteUbergraph_HeroesCamera_Blueprint(int32 EntryPoint);
	void BP_OnActivated(class AFortPlayerController* PlayerController);
	void BP_OnDeactivated(class AFortPlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroesCamera_Blueprint_C">();
	}
	static class AHeroesCamera_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHeroesCamera_Blueprint_C>();
	}
};
static_assert(alignof(AHeroesCamera_Blueprint_C) == 0x000010, "Wrong alignment on AHeroesCamera_Blueprint_C");
static_assert(sizeof(AHeroesCamera_Blueprint_C) == 0x000A20, "Wrong size on AHeroesCamera_Blueprint_C");
static_assert(offsetof(AHeroesCamera_Blueprint_C, UberGraphFrame) == 0x000A00, "Member 'AHeroesCamera_Blueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHeroesCamera_Blueprint_C, MouseDown) == 0x000A08, "Member 'AHeroesCamera_Blueprint_C::MouseDown' has a wrong offset!");
static_assert(offsetof(AHeroesCamera_Blueprint_C, Cached_Pawn) == 0x000A10, "Member 'AHeroesCamera_Blueprint_C::Cached_Pawn' has a wrong offset!");

}

