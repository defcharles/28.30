#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_Content

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.ExecuteUbergraph_WBP_MPItemShop_Content
// 0x0088 (0x0088 - 0x0000)
struct WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_RowWidget;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRowIndexFromWidget_RowIndex;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFocusedRowIndex_RowIndex;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0028(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_DestinationIndex;                     // 0x0034(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_OfferId;                        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget_1;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ScrollAmount;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_RowWidget;                            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_HandleScroll_OffsetAmount_ImplicitCast;   // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content");
static_assert(sizeof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content) == 0x000088, "Wrong size on WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, EntryPoint) == 0x000000, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_CustomEvent_RowWidget) == 0x000010, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_CustomEvent_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_GetRowIndexFromWidget_RowIndex) == 0x000018, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_GetRowIndexFromWidget_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_GetFocusedRowIndex_RowIndex) == 0x00001C, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_GetFocusedRowIndex_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_GetCurrentRowWidget_RowWidget) == 0x000020, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_GetCurrentRowWidget_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_Event_InFocusEvent) == 0x000028, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_Event_DestinationIndex) == 0x000034, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_Event_DestinationIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_CustomEvent_OfferId) == 0x000038, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_CustomEvent_OfferId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_IsEmpty_ReturnValue) == 0x000048, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_GetCurrentRowWidget_RowWidget_1) == 0x000050, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_GetCurrentRowWidget_RowWidget_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_Event_ScrollAmount) == 0x00005C, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_Event_ScrollAmount' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_IsUsingTouch_ReturnValue) == 0x000060, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_Event_RowWidget) == 0x000068, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_Event_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000070, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content, CallFunc_HandleScroll_OffsetAmount_ImplicitCast) == 0x000080, "Member 'WBP_MPItemShop_Content_C_ExecuteUbergraph_WBP_MPItemShop_Content::CallFunc_HandleScroll_OffsetAmount_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.GetRowWidgetByRowIndex
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex final
{
public:
	int32                                         RowIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  RowWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRowIndexFromWidget_RowIndex;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex");
static_assert(sizeof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex) == 0x000060, "Wrong size on WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, RowIndex) == 0x000000, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, RowWidget) == 0x000008, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000048, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_GetRowIndexFromWidget_RowIndex) == 0x000054, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_GetRowIndexFromWidget_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'WBP_MPItemShop_Content_C_GetRowWidgetByRowIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.HandleScroll
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Content_C_HandleScroll final
{
public:
	double                                        OffsetAmount;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_HandleScroll) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_HandleScroll");
static_assert(sizeof(WBP_MPItemShop_Content_C_HandleScroll) == 0x000030, "Wrong size on WBP_MPItemShop_Content_C_HandleScroll");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, OffsetAmount) == 0x000000, "Member 'WBP_MPItemShop_Content_C_HandleScroll::OffsetAmount' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000021, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_IsUsingTouch_ReturnValue) == 0x000022, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_HandleScroll, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'WBP_MPItemShop_Content_C_HandleScroll::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.IsQuickNavCollapsible
// 0x0005 (0x0005 - 0x0000)
struct WBP_MPItemShop_Content_C_IsQuickNavCollapsible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPreviewEnabled_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible) == 0x000001, "Wrong alignment on WBP_MPItemShop_Content_C_IsQuickNavCollapsible");
static_assert(sizeof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible) == 0x000005, "Wrong size on WBP_MPItemShop_Content_C_IsQuickNavCollapsible");
static_assert(offsetof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Content_C_IsQuickNavCollapsible::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible, CallFunc_IsUsingTouch_ReturnValue) == 0x000001, "Member 'WBP_MPItemShop_Content_C_IsQuickNavCollapsible::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_MPItemShop_Content_C_IsQuickNavCollapsible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible, CallFunc_IsItemPreviewEnabled_ReturnValue) == 0x000003, "Member 'WBP_MPItemShop_Content_C_IsQuickNavCollapsible::CallFunc_IsItemPreviewEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_IsQuickNavCollapsible, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'WBP_MPItemShop_Content_C_IsQuickNavCollapsible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.On Update Offer Groups
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Content_C_On_Update_Offer_Groups final
{
public:
	TArray<class UFortItemShopOfferGroupVM*>      AllOfferGroupsWithOffers;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_GetFocusedRowIndex_RowIndex;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_On_Update_Offer_Groups) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_On_Update_Offer_Groups");
static_assert(sizeof(WBP_MPItemShop_Content_C_On_Update_Offer_Groups) == 0x000020, "Wrong size on WBP_MPItemShop_Content_C_On_Update_Offer_Groups");
static_assert(offsetof(WBP_MPItemShop_Content_C_On_Update_Offer_Groups, AllOfferGroupsWithOffers) == 0x000000, "Member 'WBP_MPItemShop_Content_C_On_Update_Offer_Groups::AllOfferGroupsWithOffers' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_On_Update_Offer_Groups, CallFunc_GetFocusedRowIndex_RowIndex) == 0x000010, "Member 'WBP_MPItemShop_Content_C_On_Update_Offer_Groups::CallFunc_GetFocusedRowIndex_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_On_Update_Offer_Groups, CallFunc_Max_ReturnValue) == 0x000014, "Member 'WBP_MPItemShop_Content_C_On_Update_Offer_Groups::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_On_Update_Offer_Groups, CallFunc_IsActivated_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_On_Update_Offer_Groups::CallFunc_IsActivated_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Content_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_MPItemShop_Content_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnFeaturedLayoutUpdated
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated final
{
public:
	struct FFortItemShopLayout                    FeaturedLayout;                                    // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated) == 0x000028, "Wrong size on WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated, FeaturedLayout) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated::FeaturedLayout' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated, CallFunc_Map_Find_Value) == 0x000020, "Member 'WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'WBP_MPItemShop_Content_C_OnFeaturedLayoutUpdated::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnInitializeRow
// 0x0058 (0x0058 - 0x0000)
struct WBP_MPItemShop_Content_C_OnInitializeRow final
{
public:
	class UUserWidget*                            RowWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  RowRef;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& OfferId)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* RowWidget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnInitializeRow) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_OnInitializeRow");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnInitializeRow) == 0x000058, "Wrong size on WBP_MPItemShop_Content_C_OnInitializeRow");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, RowWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, RowIndex) == 0x000008, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, RowRef) == 0x000010, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::RowRef' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000048, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnInitializeRow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000051, "Member 'WBP_MPItemShop_Content_C_OnInitializeRow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnOfferTileFocused
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Content_C_OnOfferTileFocused final
{
public:
	class FString                                 OfferId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnOfferTileFocused) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_OnOfferTileFocused");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnOfferTileFocused) == 0x000010, "Wrong size on WBP_MPItemShop_Content_C_OnOfferTileFocused");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnOfferTileFocused, OfferId) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnOfferTileFocused::OfferId' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnResetRow
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Content_C_OnResetRow final
{
public:
	class UUserWidget*                            RowWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnResetRow) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_OnResetRow");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnResetRow) == 0x000008, "Wrong size on WBP_MPItemShop_Content_C_OnResetRow");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnResetRow, RowWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnResetRow::RowWidget' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnRowFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_MPItemShop_Content_C_OnRowFocused final
{
public:
	class UUserWidget*                            RowWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnRowFocused) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_OnRowFocused");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnRowFocused) == 0x000008, "Wrong size on WBP_MPItemShop_Content_C_OnRowFocused");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowFocused, RowWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnRowFocused::RowWidget' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnRowNavigatedFrom
// 0x0058 (0x0058 - 0x0000)
struct WBP_MPItemShop_Content_C_OnRowNavigatedFrom final
{
public:
	EUINavigation                                 Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              FocusedTilePosition;                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetRowWidgetByRowIndex_RowWidget;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 CallFunc_GetClosestTile_Tile;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_OnRowNavigatedFrom");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom) == 0x000058, "Wrong size on WBP_MPItemShop_Content_C_OnRowNavigatedFrom");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Direction) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Direction' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, FocusedTilePosition) == 0x000008, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::FocusedTilePosition' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Temp_int_Variable) == 0x000018, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Temp_int_Variable_1) == 0x00001C, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Temp_int_Variable_2) == 0x000020, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Temp_int_Variable_3) == 0x000024, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Temp_int_Variable_4) == 0x000028, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, Temp_byte_Variable) == 0x00002C, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, K2Node_Select_Default) == 0x000038, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, CallFunc_GetRowWidgetByRowIndex_RowWidget) == 0x000040, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::CallFunc_GetRowWidgetByRowIndex_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, CallFunc_GetClosestTile_Tile) == 0x000048, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::CallFunc_GetClosestTile_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnRowNavigatedFrom, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Content_C_OnRowNavigatedFrom::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnScrollComplete
// 0x0004 (0x0004 - 0x0000)
struct WBP_MPItemShop_Content_C_OnScrollComplete final
{
public:
	int32                                         DestinationIndex;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnScrollComplete) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_OnScrollComplete");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnScrollComplete) == 0x000004, "Wrong size on WBP_MPItemShop_Content_C_OnScrollComplete");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnScrollComplete, DestinationIndex) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnScrollComplete::DestinationIndex' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.OnScrollInput
// 0x0004 (0x0004 - 0x0000)
struct WBP_MPItemShop_Content_C_OnScrollInput final
{
public:
	float                                         ScrollAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_OnScrollInput) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_OnScrollInput");
static_assert(sizeof(WBP_MPItemShop_Content_C_OnScrollInput) == 0x000004, "Wrong size on WBP_MPItemShop_Content_C_OnScrollInput");
static_assert(offsetof(WBP_MPItemShop_Content_C_OnScrollInput, ScrollAmount) == 0x000000, "Member 'WBP_MPItemShop_Content_C_OnScrollInput::ScrollAmount' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.ScrollDown
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Content_C_ScrollDown final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_ScrollDown) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_ScrollDown");
static_assert(sizeof(WBP_MPItemShop_Content_C_ScrollDown) == 0x000010, "Wrong size on WBP_MPItemShop_Content_C_ScrollDown");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollDown, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Content_C_ScrollDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollDown, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_MPItemShop_Content_C_ScrollDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollDown, CallFunc_Add_IntInt_ReturnValue_1) == 0x000008, "Member 'WBP_MPItemShop_Content_C_ScrollDown::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollDown, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_ScrollDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollDown, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'WBP_MPItemShop_Content_C_ScrollDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.ScrollToFeaturedRowIndex
// 0x000C (0x000C - 0x0000)
struct WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex final
{
public:
	bool                                          bForceRefreshAll;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFocusedRowIndex_RowIndex;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex");
static_assert(sizeof(WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex) == 0x00000C, "Wrong size on WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex, bForceRefreshAll) == 0x000000, "Member 'WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex::bForceRefreshAll' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex, CallFunc_GetFocusedRowIndex_RowIndex) == 0x000004, "Member 'WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex::CallFunc_GetFocusedRowIndex_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_ScrollToFeaturedRowIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.ScrollToIndex
// 0x000C (0x000C - 0x0000)
struct WBP_MPItemShop_Content_C_ScrollToIndex final
{
public:
	int32                                         DestinationIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRefreshAll;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_ScrollToIndex) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_ScrollToIndex");
static_assert(sizeof(WBP_MPItemShop_Content_C_ScrollToIndex) == 0x00000C, "Wrong size on WBP_MPItemShop_Content_C_ScrollToIndex");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToIndex, DestinationIndex) == 0x000000, "Member 'WBP_MPItemShop_Content_C_ScrollToIndex::DestinationIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToIndex, bRefreshAll) == 0x000004, "Member 'WBP_MPItemShop_Content_C_ScrollToIndex::bRefreshAll' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToIndex, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_MPItemShop_Content_C_ScrollToIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollToIndex, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_ScrollToIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.ScrollUp
// 0x000C (0x000C - 0x0000)
struct WBP_MPItemShop_Content_C_ScrollUp final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_ScrollUp) == 0x000004, "Wrong alignment on WBP_MPItemShop_Content_C_ScrollUp");
static_assert(sizeof(WBP_MPItemShop_Content_C_ScrollUp) == 0x00000C, "Wrong size on WBP_MPItemShop_Content_C_ScrollUp");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Content_C_ScrollUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollUp, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000004, "Member 'WBP_MPItemShop_Content_C_ScrollUp::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollUp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_ScrollUp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_ScrollUp, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_MPItemShop_Content_C_ScrollUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.SetContentFocusedState
// 0x0060 (0x0060 - 0x0000)
struct WBP_MPItemShop_Content_C_SetContentFocusedState final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQuickNavCollapsible_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_SetContentFocusedState) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_SetContentFocusedState");
static_assert(sizeof(WBP_MPItemShop_Content_C_SetContentFocusedState) == 0x000060, "Wrong size on WBP_MPItemShop_Content_C_SetContentFocusedState");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, IsFocused) == 0x000000, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::IsFocused' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, Temp_bool_Variable) == 0x000001, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, Temp_byte_Variable) == 0x000002, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_IsQuickNavCollapsible_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_IsQuickNavCollapsible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_GetCurrentInputType_ReturnValue) == 0x000021, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_BooleanAND_ReturnValue_1) == 0x000024, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, K2Node_Select_Default) == 0x000040, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000048, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetContentFocusedState, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_MPItemShop_Content_C_SetContentFocusedState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.SetFortItemShopVM
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Content_C_SetFortItemShopVM final
{
public:
	class UFortItemShopVM*                        ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_SetFortItemShopVM) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_SetFortItemShopVM");
static_assert(sizeof(WBP_MPItemShop_Content_C_SetFortItemShopVM) == 0x000028, "Wrong size on WBP_MPItemShop_Content_C_SetFortItemShopVM");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetFortItemShopVM, ViewModel) == 0x000000, "Member 'WBP_MPItemShop_Content_C_SetFortItemShopVM::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetFortItemShopVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_SetFortItemShopVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetFortItemShopVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_MPItemShop_Content_C_SetFortItemShopVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetFortItemShopVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Content_C_SetFortItemShopVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.SetRowActiveState
// 0x0088 (0x0088 - 0x0000)
struct WBP_MPItemShop_Content_C_SetRowActiveState final
{
public:
	class UWBP_MPItemShop_Row_C*                  CurrentRow;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Direction, const struct FVector2D& FocusedTilePosition)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFocusedRowIndex_RowIndex;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetDesiredFocusTile_TileWidget;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Tile_C*                 K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetTileByOfferId_TileWidget;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_SetRowActiveState) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_SetRowActiveState");
static_assert(sizeof(WBP_MPItemShop_Content_C_SetRowActiveState) == 0x000088, "Wrong size on WBP_MPItemShop_Content_C_SetRowActiveState");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CurrentRow) == 0x000000, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CurrentRow' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_GetFocusedRowIndex_RowIndex) == 0x000020, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_GetFocusedRowIndex_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_GetDesiredFocusTile_TileWidget) == 0x000028, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_GetDesiredFocusTile_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile) == 0x000030, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::K2Node_DynamicCast_AsWBP_MPItem_Shop_Tile' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_GetTileByOfferId_TileWidget) == 0x000040, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_GetTileByOfferId_TileWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_GetAllChildren_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_GetCurrentRowWidget_RowWidget) == 0x000060, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_GetCurrentRowWidget_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000070, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_SetRowActiveState, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'WBP_MPItemShop_Content_C_SetRowActiveState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.Update Featured Layout
// 0x0028 (0x0028 - 0x0000)
struct WBP_MPItemShop_Content_C_Update_Featured_Layout final
{
public:
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemShopLayout>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_Update_Featured_Layout) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_Update_Featured_Layout");
static_assert(sizeof(WBP_MPItemShop_Content_C_Update_Featured_Layout) == 0x000028, "Wrong size on WBP_MPItemShop_Content_C_Update_Featured_Layout");
static_assert(offsetof(WBP_MPItemShop_Content_C_Update_Featured_Layout, CallFunc_GetCurrentRowWidget_RowWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_Update_Featured_Layout::CallFunc_GetCurrentRowWidget_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_Update_Featured_Layout, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_Update_Featured_Layout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_Update_Featured_Layout, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_MPItemShop_Content_C_Update_Featured_Layout::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_Update_Featured_Layout, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Content_C_Update_Featured_Layout::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_Update_Featured_Layout, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'WBP_MPItemShop_Content_C_Update_Featured_Layout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.UpdateFakeLoadingRowsVisibility
// 0x0048 (0x0048 - 0x0000)
struct WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRowIndexFromWidget_RowIndex;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility");
static_assert(sizeof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility) == 0x000048, "Wrong size on WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_GetRowIndexFromWidget_RowIndex) == 0x00003C, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_GetRowIndexFromWidget_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'WBP_MPItemShop_Content_C_UpdateFakeLoadingRowsVisibility::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.UpdateRowFocusedOffer
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Content_C_UpdateRowFocusedOffer final
{
public:
	int32                                         RowIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetRowWidgetByRowIndex_RowWidget;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_UpdateRowFocusedOffer) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_UpdateRowFocusedOffer");
static_assert(sizeof(WBP_MPItemShop_Content_C_UpdateRowFocusedOffer) == 0x000018, "Wrong size on WBP_MPItemShop_Content_C_UpdateRowFocusedOffer");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowFocusedOffer, RowIndex) == 0x000000, "Member 'WBP_MPItemShop_Content_C_UpdateRowFocusedOffer::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowFocusedOffer, CallFunc_GetRowWidgetByRowIndex_RowWidget) == 0x000008, "Member 'WBP_MPItemShop_Content_C_UpdateRowFocusedOffer::CallFunc_GetRowWidgetByRowIndex_RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowFocusedOffer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_UpdateRowFocusedOffer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.UpdateRows
// 0x0048 (0x0048 - 0x0000)
struct WBP_MPItemShop_Content_C_UpdateRows final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_UpdateRows) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_UpdateRows");
static_assert(sizeof(WBP_MPItemShop_Content_C_UpdateRows) == 0x000048, "Wrong size on WBP_MPItemShop_Content_C_UpdateRows");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MPItemShop_Content_C_UpdateRows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MPItemShop_Content_C_UpdateRows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_UpdateRows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_UpdateRows::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Content_C_UpdateRows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPItemShop_Content_C_UpdateRows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MPItemShop_Content_C_UpdateRows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000038, "Member 'WBP_MPItemShop_Content_C_UpdateRows::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRows, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MPItemShop_Content_C_UpdateRows::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.UpdateRowWidth
// 0x0018 (0x0018 - 0x0000)
struct WBP_MPItemShop_Content_C_UpdateRowWidth final
{
public:
	class UWBP_MPItemShop_Row_C*                  Row;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseWidePreview;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPreviewEnabled_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_UpdateRowWidth) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_UpdateRowWidth");
static_assert(sizeof(WBP_MPItemShop_Content_C_UpdateRowWidth) == 0x000018, "Wrong size on WBP_MPItemShop_Content_C_UpdateRowWidth");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowWidth, Row) == 0x000000, "Member 'WBP_MPItemShop_Content_C_UpdateRowWidth::Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowWidth, UseWidePreview) == 0x000008, "Member 'WBP_MPItemShop_Content_C_UpdateRowWidth::UseWidePreview' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowWidth, CallFunc_IsItemPreviewEnabled_ReturnValue) == 0x000009, "Member 'WBP_MPItemShop_Content_C_UpdateRowWidth::CallFunc_IsItemPreviewEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateRowWidth, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_UpdateRowWidth::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.UpdateSectionIndexMap
// 0x0030 (0x0030 - 0x0000)
struct WBP_MPItemShop_Content_C_UpdateSectionIndexMap final
{
public:
	class FString                                 CurrentSectionId;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_UpdateSectionIndexMap");
static_assert(sizeof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap) == 0x000030, "Wrong size on WBP_MPItemShop_Content_C_UpdateSectionIndexMap");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, CurrentSectionId) == 0x000000, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::CurrentSectionId' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_UpdateSectionIndexMap, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00002D, "Member 'WBP_MPItemShop_Content_C_UpdateSectionIndexMap::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  CallFunc_GetCurrentRowWidget_RowWidget;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget, CallFunc_GetCurrentRowWidget_RowWidget) == 0x000008, "Member 'WBP_MPItemShop_Content_C_BP_GetDesiredFocusTarget::CallFunc_GetCurrentRowWidget_RowWidget' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.GetCurrentRowWidget
// 0x0058 (0x0058 - 0x0000)
struct WBP_MPItemShop_Content_C_GetCurrentRowWidget final
{
public:
	class UWBP_MPItemShop_Row_C*                  RowWidget;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRowIndexFromWidget_RowIndex;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_GetCurrentRowWidget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_GetCurrentRowWidget");
static_assert(sizeof(WBP_MPItemShop_Content_C_GetCurrentRowWidget) == 0x000058, "Wrong size on WBP_MPItemShop_Content_C_GetCurrentRowWidget");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, RowWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000040, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_GetRowIndexFromWidget_RowIndex) == 0x00004C, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_GetRowIndexFromWidget_RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetCurrentRowWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'WBP_MPItemShop_Content_C_GetCurrentRowWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.GetFeaturedRowIndex
// 0x0048 (0x0048 - 0x0000)
struct WBP_MPItemShop_Content_C_GetFeaturedRowIndex final
{
public:
	int32                                         RowIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowLoopIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferVM*                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_GetFeaturedRowIndex");
static_assert(sizeof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex) == 0x000048, "Wrong size on WBP_MPItemShop_Content_C_GetFeaturedRowIndex");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, RowIndex) == 0x000000, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, RowLoopIndex) == 0x000004, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::RowLoopIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000034, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFeaturedRowIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_MPItemShop_Content_C_GetFeaturedRowIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.GetFocusedRowIndex
// 0x0050 (0x0050 - 0x0000)
struct WBP_MPItemShop_Content_C_GetFocusedRowIndex final
{
public:
	int32                                         RowIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowLoopIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemShopOfferGroupVM*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortItemShopOfferVM*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_GetFocusedRowIndex) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_GetFocusedRowIndex");
static_assert(sizeof(WBP_MPItemShop_Content_C_GetFocusedRowIndex) == 0x000050, "Wrong size on WBP_MPItemShop_Content_C_GetFocusedRowIndex");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, RowIndex) == 0x000000, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, RowLoopIndex) == 0x000004, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::RowLoopIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00003C, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetFocusedRowIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'WBP_MPItemShop_Content_C_GetFocusedRowIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.GetRowIndexFromWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Content_C_GetRowIndexFromWidget final
{
public:
	class UWidget*                                RowWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_GetRowIndexFromWidget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_GetRowIndexFromWidget");
static_assert(sizeof(WBP_MPItemShop_Content_C_GetRowIndexFromWidget) == 0x000020, "Wrong size on WBP_MPItemShop_Content_C_GetRowIndexFromWidget");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowIndexFromWidget, RowWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_GetRowIndexFromWidget::RowWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowIndexFromWidget, RowIndex) == 0x000008, "Member 'WBP_MPItemShop_Content_C_GetRowIndexFromWidget::RowIndex' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowIndexFromWidget, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000010, "Member 'WBP_MPItemShop_Content_C_GetRowIndexFromWidget::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetRowIndexFromWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MPItemShop_Content_C_GetRowIndexFromWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MPItemShop_Content.WBP_MPItemShop_Content_C.GetScrollTarget
// 0x0020 (0x0020 - 0x0000)
struct WBP_MPItemShop_Content_C_GetScrollTarget final
{
public:
	class UWidget*                                TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_Row_C*                  K2Node_DynamicCast_AsWBP_MPItem_Shop_Row;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MPItemShop_Content_C_GetScrollTarget) == 0x000008, "Wrong alignment on WBP_MPItemShop_Content_C_GetScrollTarget");
static_assert(sizeof(WBP_MPItemShop_Content_C_GetScrollTarget) == 0x000020, "Wrong size on WBP_MPItemShop_Content_C_GetScrollTarget");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetScrollTarget, TargetWidget) == 0x000000, "Member 'WBP_MPItemShop_Content_C_GetScrollTarget::TargetWidget' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetScrollTarget, ReturnValue) == 0x000008, "Member 'WBP_MPItemShop_Content_C_GetScrollTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetScrollTarget, K2Node_DynamicCast_AsWBP_MPItem_Shop_Row) == 0x000010, "Member 'WBP_MPItemShop_Content_C_GetScrollTarget::K2Node_DynamicCast_AsWBP_MPItem_Shop_Row' has a wrong offset!");
static_assert(offsetof(WBP_MPItemShop_Content_C_GetScrollTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MPItemShop_Content_C_GetScrollTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

