#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Consumable_Throw_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Consumable_Throw_Parent.GA_Athena_Consumable_Throw_Parent_C
// 0x0448 (0x1008 - 0x0BC0)
class UGA_Athena_Consumable_Throw_Parent_C : public UFortGameplayAbility_ThrowTrajectory
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AbilityKeyPressed;                                 // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0BD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD2[0x6];                                      // 0x0BD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AdditionalThrowAngle;                              // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTossPitch;                                      // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    SpawnedProjectile;                                 // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         bIsEnabled;                                        // 0x0BF0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  Tag_BlockAbilityActivation;                        // 0x0C18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 ThrownProjectileClass;                             // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSecondaryFire;                                  // 0x0C40(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bThrowInstantly;                                   // 0x0C41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C42[0x6];                                      // 0x0C42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ProjectileGravityScale;                            // 0x0C48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileSpeed;                                   // 0x0C70(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ProjectileTrajectory_C*             TrajectoryIndicator;                               // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TrajectoryUpdateInterval;                          // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CookMontage;                                       // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CookMontage1P;                                     // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ThrowMontage;                                      // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ThrowMontage1P;                                    // 0x0CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OnThrow;                                        // 0x0CD0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD4[0x4];                                      // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TrajectoryTimeStep;                                // 0x0CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TrajectoryMaxSteps;                                // 0x0CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TrajectoryCollisionProfileName;                    // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_CookLoop;                                       // 0x0CE8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CEC[0x4];                                      // 0x0CEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_InWindup;                                       // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CameraMode;                                        // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_DefaultExplosion;                               // 0x0D00(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionEffectLevel;                              // 0x0D04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_DefaultHit;                                     // 0x0D08(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         HitEffectLevel;                                    // 0x0D0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnProjectileSpawn;                                 // 0x0D10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasAdditionalExplosion;                            // 0x0D20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D21[0x3];                                      // 0x0D21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EC_AdditionalExplosion;                            // 0x0D24(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         AdditionalExplodeLevel;                            // 0x0D28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2C[0x4];                                      // 0x0D2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  QuestCreditTargetTag;                              // 0x0D30(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          ReturnPhysicalMaterial;                            // 0x0D50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D51[0x7];                                      // 0x0D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Tags_UseNullFailedActivateReason;                  // 0x0D58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsThrowing;                                       // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedOnEquip;                                    // 0x0D79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7A[0x2];                                      // 0x0D7A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            Handle_GE_InWindup;                                // 0x0D7C(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D84[0x4];                                      // 0x0D84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayEffectContainerSpec       HitContainerSpec;                                  // 0x0D88(0x00B8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	struct FFortGameplayEffectContainerSpec       ExplosionContainerSpec;                            // 0x0E40(0x00B8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	struct FFortGameplayEffectContainerSpec       AdditionalExplosionContainerSpec;                  // 0x0EF8(0x00B8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                          bPreventDeploymentInBlockAreas;                    // 0x0FB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1[0x3];                                      // 0x0FB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeployableBlockingAreaCheckRadius;                 // 0x0FB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeployableBlockingAreaCheckOffset;                 // 0x0FB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortProjectileTrajectoryData          Projectile_Trajectory_Data;                        // 0x0FD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Trajectory_Max_Distance_Between_Spline_Points;     // 0x0FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Trajectory_Max_Bounces;                            // 0x0FF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Trajectory_Initial_Distance;                       // 0x0FF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Projectile_Trajectory_Data_Initialized;            // 0x0FFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFD[0x3];                                      // 0x0FFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Projectile_Gravity_Scale_to_Use;                   // 0x1000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddCookGC();
	void AddValidCamera();
	void AttemptSpawnThrownProjectile();
	void Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void CleanupTrajectory();
	void CleanupTrajectoryIndicatorOnUnequip();
	void Completed_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void EventReceived_05B8BFFC4ECA26FE5390E9BC303AACA6(const struct FGameplayEventData& Payload);
	void EventReceived_E3F1B58D4D7A664CB557709F9DAE3C9F(const struct FGameplayEventData& Payload);
	void ExecuteThrowGC();
	void ExecuteUbergraph_GA_Athena_Consumable_Throw_Parent(int32 EntryPoint);
	void Get_Throw_Montage(class UAnimMontage** Montage);
	void GetCookMontage(class UAnimMontage** Montage);
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult);
	void InitTrajectoryVariables();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_OverrideFailedReason(const struct FGameplayTagContainer& FailedReason, struct FGameplayTagContainer* OverridenFailedReason);
	void OnAbilityInputReleased();
	void OnBlendOut_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnCancelled_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnCompleted_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnFinish_96367E244486362FDDE5ED87D909C17B();
	void OnInterrupted_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnProjectileSetup();
	void OnProjectileSpawned(class AFortProjectileBase* SpawnedProjectile_0);
	void OnRelease_76BCD7D74FEC0FB6EFBBDFB57A0107B0(float TimeHeld);
	void OnSync_9C8FDC8044B1444580A9809C231F294D();
	void OnUpdateTrajectory(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents, const struct FHitResult& TrajectoryHitResult);
	void PostThrowCleanup();
	void PrethrowSetup();
	void RemoveCookGC();
	void SetupDummyProjectile();
	void SpawnThrownProjectile(class UClass* ProjectileClass_0, const struct FVector& ProjectileSpawnLocation, const struct FRotator& ProjectileSpawnDirection, const struct FFortGameplayEffectContainerSpec& HitEffectContainerSpec, const struct FFortGameplayEffectContainerSpec& ExplosionEffectContainerSpec, double ProjectileInitialSpeed, double ProjectileGravityScale_0, class AFortProjectileBase** SpawnedProjectile_0);
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip);
	void ThrowMontageStarted();
	void ThrowProjectile();
	void Triggered_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void UpdateTrajectory();
	void UpdateTrajectorySpline();

	void CalculateProjectileTrajectory(class AFortPawn* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, struct FHitResult* OutHitResult, TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents) const;
	void GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const;
	void GetProjectileAdditionalThrowAngleToUse(double* AdditionalThrowAngleToUse) const;
	void GetProjectileInitialGravityScaleToUse(double* GravityScaleToUse) const;
	void GetProjectileInitialSpeedToUse(double* ProjectileSpeedToUse) const;
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor() const;
	void GetSpawnLocationAndRotation(struct FVector* Location, struct FRotator* Rotation) const;
	void IsTrajectoryLocationValid(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents, const struct FHitResult& TrajectoryHitResult, bool* bIsLocationValid) const;
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;
	bool ShouldOnlyShowTrajectoryOnUse() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Consumable_Throw_Parent_C">();
	}
	static class UGA_Athena_Consumable_Throw_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Consumable_Throw_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_Consumable_Throw_Parent_C) == 0x000008, "Wrong alignment on UGA_Athena_Consumable_Throw_Parent_C");
static_assert(sizeof(UGA_Athena_Consumable_Throw_Parent_C) == 0x001008, "Wrong size on UGA_Athena_Consumable_Throw_Parent_C");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, UberGraphFrame) == 0x000BC0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, PlayerPawn) == 0x000BC8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, AbilityKeyPressed) == 0x000BD0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, InThrowWindup) == 0x000BD1, "Member 'UGA_Athena_Consumable_Throw_Parent_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, AdditionalThrowAngle) == 0x000BD8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, MaxTossPitch) == 0x000BE0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::MaxTossPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, SpawnedProjectile) == 0x000BE8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, bIsEnabled) == 0x000BF0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::bIsEnabled' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Tag_BlockAbilityActivation) == 0x000C18, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Tag_BlockAbilityActivation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ThrownProjectileClass) == 0x000C38, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ThrownProjectileClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, bIsSecondaryFire) == 0x000C40, "Member 'UGA_Athena_Consumable_Throw_Parent_C::bIsSecondaryFire' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, bThrowInstantly) == 0x000C41, "Member 'UGA_Athena_Consumable_Throw_Parent_C::bThrowInstantly' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ProjectileGravityScale) == 0x000C48, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ProjectileSpeed) == 0x000C70, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, TrajectoryIndicator) == 0x000C98, "Member 'UGA_Athena_Consumable_Throw_Parent_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, TrajectoryIndicatorClass) == 0x000CA0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, TrajectoryUpdateInterval) == 0x000CA8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::TrajectoryUpdateInterval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, CookMontage) == 0x000CB0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::CookMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, CookMontage1P) == 0x000CB8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::CookMontage1P' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ThrowMontage) == 0x000CC0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ThrowMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ThrowMontage1P) == 0x000CC8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ThrowMontage1P' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, GC_OnThrow) == 0x000CD0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::GC_OnThrow' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, TrajectoryTimeStep) == 0x000CD8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::TrajectoryTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, TrajectoryMaxSteps) == 0x000CE0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::TrajectoryMaxSteps' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, TrajectoryCollisionProfileName) == 0x000CE4, "Member 'UGA_Athena_Consumable_Throw_Parent_C::TrajectoryCollisionProfileName' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, GC_CookLoop) == 0x000CE8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::GC_CookLoop' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, GE_InWindup) == 0x000CF0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::GE_InWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, CameraMode) == 0x000CF8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::CameraMode' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, EC_DefaultExplosion) == 0x000D00, "Member 'UGA_Athena_Consumable_Throw_Parent_C::EC_DefaultExplosion' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ExplosionEffectLevel) == 0x000D04, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ExplosionEffectLevel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, EC_DefaultHit) == 0x000D08, "Member 'UGA_Athena_Consumable_Throw_Parent_C::EC_DefaultHit' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, HitEffectLevel) == 0x000D0C, "Member 'UGA_Athena_Consumable_Throw_Parent_C::HitEffectLevel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, OnProjectileSpawn) == 0x000D10, "Member 'UGA_Athena_Consumable_Throw_Parent_C::OnProjectileSpawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, HasAdditionalExplosion) == 0x000D20, "Member 'UGA_Athena_Consumable_Throw_Parent_C::HasAdditionalExplosion' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, EC_AdditionalExplosion) == 0x000D24, "Member 'UGA_Athena_Consumable_Throw_Parent_C::EC_AdditionalExplosion' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, AdditionalExplodeLevel) == 0x000D28, "Member 'UGA_Athena_Consumable_Throw_Parent_C::AdditionalExplodeLevel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, QuestCreditTargetTag) == 0x000D30, "Member 'UGA_Athena_Consumable_Throw_Parent_C::QuestCreditTargetTag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ReturnPhysicalMaterial) == 0x000D50, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ReturnPhysicalMaterial' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Tags_UseNullFailedActivateReason) == 0x000D58, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Tags_UseNullFailedActivateReason' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, bIsThrowing) == 0x000D78, "Member 'UGA_Athena_Consumable_Throw_Parent_C::bIsThrowing' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, SpawnedOnEquip) == 0x000D79, "Member 'UGA_Athena_Consumable_Throw_Parent_C::SpawnedOnEquip' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Handle_GE_InWindup) == 0x000D7C, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Handle_GE_InWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, HitContainerSpec) == 0x000D88, "Member 'UGA_Athena_Consumable_Throw_Parent_C::HitContainerSpec' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, ExplosionContainerSpec) == 0x000E40, "Member 'UGA_Athena_Consumable_Throw_Parent_C::ExplosionContainerSpec' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, AdditionalExplosionContainerSpec) == 0x000EF8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::AdditionalExplosionContainerSpec' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, bPreventDeploymentInBlockAreas) == 0x000FB0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::bPreventDeploymentInBlockAreas' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, DeployableBlockingAreaCheckRadius) == 0x000FB4, "Member 'UGA_Athena_Consumable_Throw_Parent_C::DeployableBlockingAreaCheckRadius' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, DeployableBlockingAreaCheckOffset) == 0x000FB8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::DeployableBlockingAreaCheckOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Projectile_Trajectory_Data) == 0x000FD0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Projectile_Trajectory_Data' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Trajectory_Max_Distance_Between_Spline_Points) == 0x000FF0, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Trajectory_Max_Distance_Between_Spline_Points' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Trajectory_Max_Bounces) == 0x000FF4, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Trajectory_Max_Bounces' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Trajectory_Initial_Distance) == 0x000FF8, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Trajectory_Initial_Distance' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Projectile_Trajectory_Data_Initialized) == 0x000FFC, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Projectile_Trajectory_Data_Initialized' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Throw_Parent_C, Projectile_Gravity_Scale_to_Use) == 0x001000, "Member 'UGA_Athena_Consumable_Throw_Parent_C::Projectile_Gravity_Scale_to_Use' has a wrong offset!");

}

