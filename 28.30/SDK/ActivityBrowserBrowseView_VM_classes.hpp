#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserBrowseView_VM

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserBrowseView_VM.ActivityBrowserBrowseView_VM_C
// 0x00B8 (0x04B8 - 0x0400)
class UActivityBrowserBrowseView_VM_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortDiscoverBrowseViewModel*           FortDiscoverBrowseViewModel;                       // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_DisplayLoading;                               // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShiftToNextPanel;                                  // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_HeaderSoftEdge;                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UActivityCategoryTilePanelBase_VM_C*    TilePanel_All_VMversion;                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UActivityCategoryTilePanelBase_VM_C*    TilePanel_Featured_VMversion;                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Panels;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BottomBarDecoyButton_C*            WBP_BottomBarHack_BackToTop;                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Throbber_C*                  WBP_UIKit_Throbber;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnPlayIntro;                                       // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool IsPromoted, bool IsFirstRow)> OnRowUpdated;                                      // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        CategoryIndexAnimator;                             // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	int32                                         DesiredPanelIndex;                                 // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastDesiredPanelIndex;                             // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPanelIndex;                                 // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActivityCategoryTilePanelBase_C*       LastSelectedPanel;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          CurrentPlayDirection;                              // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBackToTopClicked;                                // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ECommonInputType                              CurrentInputType;                                  // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClickedOnBottomPanel;                            // 0x04B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Animate_to_Next_Panel();
	void Animate_to_Previous_Panel();
	void AnimatePanelOpacity(int32 AnimateAwayFromIndex, int32 AnimateToIndex);
	void AnimateToDesiredPanel(int32 NewDesiredIndex);
	void BndEvt__ActivityBrowserBrowseView_VM_WBP_BottomBarHack_BackToTop_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BP_OnActivated();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_ActivityBrowserBrowseView_VM(int32 EntryPoint);
	void GetIndexOfPanel(const class UWidget* Widget, int32* Index_0);
	void GetLocalPanelPosition(int32 Index_0, double* Position);
	void IsWidgetFullSizedAndOnScreen(class UWidget* Widget, bool* IsFullSized);
	class UWidget* NavAllToFeatured(EUINavigation Navigation_0);
	class UWidget* NavFeaturedToAll(EUINavigation Navigation_0);
	void OnBottomPanelItemClicked();
	void OnCategoryTilePanelSelected_1(const class UFortActivityCategoryTilePanel* SelectedPanel);
	void OnInputChanged(ECommonInputType NewInputType);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnTopPanelItemClicked();
	void PostUpdatePanelSize();
	void PreConstruct(bool IsDesignTime);
	void PreUpdatePanelSize();
	void Set_All_Categories(TArray<class UFortActivityViewModel*>& In_Category_List);
	void Set_All_Categories_Panel_Display_Name(const class FText& In_Panel_Name);
	void Set_Featured_Categories(TArray<class UFortActivityViewModel*>& In_Category_List);
	void Set_Featured_Categories_Panel_Display_Name(const class FText& In_Panel_Name);
	void Set_Panel_Data();
	void Set_ViewModel(class UFortDiscoverBrowseViewModel* In_Discover_Browse_VM);
	void SetCategoryIndexAnimator(double NewValue);
	void SetCurrentPanelIndex(int32 CurrentPanelIndex_0);
	void SetFortDiscoverBrowseViewModel(class UFortDiscoverBrowseViewModel* ViewModel);
	void SnapToEndOfAnimation(class UWidgetAnimation* InAnimation, EUMGSequencePlayMode PlayMode);
	void SwitchToGamepad();
	void UpdateMouseWheelForIndex(int32 PanelIndex, bool bListenForInput);

	void GetTilePanelFromIndex(int32 PanelIndex, class UActivityCategoryTilePanelBase_C** TilePanel) const;
	class UFortActivityCategoryTilePanel* GetTopMostVisiblePanel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserBrowseView_VM_C">();
	}
	static class UActivityBrowserBrowseView_VM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserBrowseView_VM_C>();
	}
};
static_assert(alignof(UActivityBrowserBrowseView_VM_C) == 0x000008, "Wrong alignment on UActivityBrowserBrowseView_VM_C");
static_assert(sizeof(UActivityBrowserBrowseView_VM_C) == 0x0004B8, "Wrong size on UActivityBrowserBrowseView_VM_C");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, UberGraphFrame) == 0x000400, "Member 'UActivityBrowserBrowseView_VM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, FortDiscoverBrowseViewModel) == 0x000408, "Member 'UActivityBrowserBrowseView_VM_C::FortDiscoverBrowseViewModel' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, Anim_DisplayLoading) == 0x000410, "Member 'UActivityBrowserBrowseView_VM_C::Anim_DisplayLoading' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, Intro) == 0x000418, "Member 'UActivityBrowserBrowseView_VM_C::Intro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, ShiftToNextPanel) == 0x000420, "Member 'UActivityBrowserBrowseView_VM_C::ShiftToNextPanel' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, Image_HeaderSoftEdge) == 0x000428, "Member 'UActivityBrowserBrowseView_VM_C::Image_HeaderSoftEdge' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, TilePanel_All_VMversion) == 0x000430, "Member 'UActivityBrowserBrowseView_VM_C::TilePanel_All_VMversion' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, TilePanel_Featured_VMversion) == 0x000438, "Member 'UActivityBrowserBrowseView_VM_C::TilePanel_Featured_VMversion' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, VerticalBox_Panels) == 0x000440, "Member 'UActivityBrowserBrowseView_VM_C::VerticalBox_Panels' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, WBP_BottomBarHack_BackToTop) == 0x000448, "Member 'UActivityBrowserBrowseView_VM_C::WBP_BottomBarHack_BackToTop' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, WBP_UIKit_Throbber) == 0x000450, "Member 'UActivityBrowserBrowseView_VM_C::WBP_UIKit_Throbber' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, OnPlayIntro) == 0x000458, "Member 'UActivityBrowserBrowseView_VM_C::OnPlayIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, OnRowUpdated) == 0x000468, "Member 'UActivityBrowserBrowseView_VM_C::OnRowUpdated' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, CategoryIndexAnimator) == 0x000478, "Member 'UActivityBrowserBrowseView_VM_C::CategoryIndexAnimator' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, DesiredPanelIndex) == 0x000480, "Member 'UActivityBrowserBrowseView_VM_C::DesiredPanelIndex' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, LastDesiredPanelIndex) == 0x000484, "Member 'UActivityBrowserBrowseView_VM_C::LastDesiredPanelIndex' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, CurrentPanelIndex) == 0x000488, "Member 'UActivityBrowserBrowseView_VM_C::CurrentPanelIndex' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, LastSelectedPanel) == 0x000490, "Member 'UActivityBrowserBrowseView_VM_C::LastSelectedPanel' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, CurrentPlayDirection) == 0x000498, "Member 'UActivityBrowserBrowseView_VM_C::CurrentPlayDirection' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, OnBackToTopClicked) == 0x0004A0, "Member 'UActivityBrowserBrowseView_VM_C::OnBackToTopClicked' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, CurrentInputType) == 0x0004B0, "Member 'UActivityBrowserBrowseView_VM_C::CurrentInputType' has a wrong offset!");
static_assert(offsetof(UActivityBrowserBrowseView_VM_C, IsClickedOnBottomPanel) == 0x0004B1, "Member 'UActivityBrowserBrowseView_VM_C::IsClickedOnBottomPanel' has a wrong offset!");

}

