#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityCategoryTilePanelBase_VM

#include "Basic.hpp"


namespace SDK::Params
{

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.EnableMouseWheelInput
// 0x0001 (0x0001 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput final
{
public:
	bool                                          bListenForInput;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput) == 0x000001, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput) == 0x000001, "Wrong size on ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput, bListenForInput) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_EnableMouseWheelInput::bListenForInput' has a wrong offset!");

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.ExecuteUbergraph_ActivityCategoryTilePanelBase_VM
// 0x0058 (0x0058 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bListenForInput;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsActive;                       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Item)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetEntryWidth_NewWidth_ImplicitCast;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetEntryHeight_NewHeight_ImplicitCast;    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM) == 0x000008, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM) == 0x000058, "Wrong size on ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, EntryPoint) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::EntryPoint' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, K2Node_Event_IsDesignTime) == 0x000018, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, K2Node_CustomEvent_bListenForInput) == 0x000019, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::K2Node_CustomEvent_bListenForInput' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, K2Node_CustomEvent_IsActive) == 0x00001A, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::K2Node_CustomEvent_IsActive' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000020, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000028, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000040, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, K2Node_CustomEvent_Item) == 0x000048, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_SetEntryWidth_NewWidth_ImplicitCast) == 0x000050, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_SetEntryWidth_NewWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM, CallFunc_SetEntryHeight_NewHeight_ImplicitCast) == 0x000054, "Member 'ActivityCategoryTilePanelBase_VM_C_ExecuteUbergraph_ActivityCategoryTilePanelBase_VM::CallFunc_SetEntryHeight_NewHeight_ImplicitCast' has a wrong offset!");

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.OnItemClicked
// 0x0008 (0x0008 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_OnItemClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_OnItemClicked) == 0x000008, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_OnItemClicked");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_OnItemClicked) == 0x000008, "Wrong size on ActivityCategoryTilePanelBase_VM_C_OnItemClicked");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_OnItemClicked, Item) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_OnItemClicked::Item' has a wrong offset!");

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_PreConstruct) == 0x000001, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_PreConstruct");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_PreConstruct) == 0x000001, "Wrong size on ActivityCategoryTilePanelBase_VM_C_PreConstruct");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.Set Categories
// 0x0010 (0x0010 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_Set_Categories final
{
public:
	TArray<class UFortActivityViewModel*>         In_Categories;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_Set_Categories) == 0x000008, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_Set_Categories");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_Set_Categories) == 0x000010, "Wrong size on ActivityCategoryTilePanelBase_VM_C_Set_Categories");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_Set_Categories, In_Categories) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_Set_Categories::In_Categories' has a wrong offset!");

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.Set Panel Display Name
// 0x0018 (0x0018 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name final
{
public:
	class FText                                   In_Panel_Name;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name) == 0x000008, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name) == 0x000018, "Wrong size on ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name, In_Panel_Name) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_Set_Panel_Display_Name::In_Panel_Name' has a wrong offset!");

// Function ActivityCategoryTilePanelBase_VM.ActivityCategoryTilePanelBase_VM_C.SetActive
// 0x0001 (0x0001 - 0x0000)
struct ActivityCategoryTilePanelBase_VM_C_SetActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCategoryTilePanelBase_VM_C_SetActive) == 0x000001, "Wrong alignment on ActivityCategoryTilePanelBase_VM_C_SetActive");
static_assert(sizeof(ActivityCategoryTilePanelBase_VM_C_SetActive) == 0x000001, "Wrong size on ActivityCategoryTilePanelBase_VM_C_SetActive");
static_assert(offsetof(ActivityCategoryTilePanelBase_VM_C_SetActive, IsActive) == 0x000000, "Member 'ActivityCategoryTilePanelBase_VM_C_SetActive::IsActive' has a wrong offset!");

}

