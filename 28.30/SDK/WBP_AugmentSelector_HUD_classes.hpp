#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AugmentSelector_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "PlayerAugmentsUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AugmentSelector_HUD.WBP_AugmentSelector_HUD_C
// 0x0160 (0x04B0 - 0x0350)
class UWBP_AugmentSelector_HUD_C final : public UFortPlayerAugmentGranterWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_SwapToList;                                   // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_SwapToSelector;                               // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ReturnToSelectorPressed;                      // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ViewMorePressed;                              // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_TranslateSwapIndicator;                       // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Close;                                        // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_AugmentSelector_Reroll_C*          AugmentSelector_Reroll;                            // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortTouchUserWidget*                   FortTouchUserWidget_GoToActiveAugments;            // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortTouchUserWidget*                   FortTouchUserWidget_LeaveActiveAugments;           // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ArrowDown;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ArrowUp;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ReadyButton_Glow;                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       Keybind_CycleAction;                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       Keybind_SwapAction;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       Keybind_ViewMore;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_AugmentSelection;                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ReadyInput;                                // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_AugmentHUD;                               // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_ReadyCount;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_AugmentSelectionList;                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ActiveList;                            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_CycleInput;                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_SelectorHUD;                           // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ViewMoreInput;                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ActiveAugments_List_C*             WBP_ActiveAugments_List;                           // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ActiveAugments_Timer_C*            WBP_ActiveAugments_Timer;                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Augments_Quickbar_C*               WBP_Augments_Quickbar;                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UFortPlayerAugmentItemDefinition*> AvailableAugmentDefinitions;                       // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Highlighted_Augment_Index;                         // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CloseSound;                                        // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CloseHUDTimer;                                     // 0x0450(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ActivateAugmentTimer;                              // 0x0458(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ExtraDelayAfterConfirm;                            // 0x0460(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTopHighlighted;                                  // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Input_Type;                                        // 0x0469(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Viewing_Augment_Active_List;                       // 0x046A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AugmentHUDOpened;                                  // 0x046B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Select_Augment;                                // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_AugmentSelector_Augment_C*> AugmentOptions_Widgets;                            // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         TestAugmentOptonsIndexNum;                         // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  MobileHUDTagsToHide;                               // 0x0488(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Num_Pending_to_Grant;                              // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PopulateNeedsRefresh;                              // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasNewSelectionsPendingRefresh;                    // 0x04AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNumPendingToGrantUpdated;                        // 0x04AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateSelectedAugment(int32 AugmentIndex);
	void CloseHUD();
	void Construct();
	void CreateAugmentInfos(int32 Count);
	void Destruct();
	void Event_CheckForQueuedSelections();
	void ExecuteUbergraph_WBP_AugmentSelector_HUD(int32 EntryPoint);
	void Finished_84B816CC488209DCD8E62C97366C8B17();
	void Finished_8E2791EB483EE6CB7486D5BCEB04ECDA();
	void HideReturnToSelectorInput();
	void ManualRefreshAugmentSelections();
	void OnActivateAugmentAnimationFinished();
	void OnAugmentHighlighted(int32 HighlightedAugmentIndex);
	void OnAugmentScrollDownEvent();
	void OnAugmentScrollUpEvent();
	void OnAugmentSelectionStarted(const int32 SelectedAugmentIndex);
	void OnAugmentSelectorOpenedStatusChanged(const bool bIsOpened, const bool bViewingAugmentInventory);
	void OnAugmentSelectorToolViewSwapped(const bool bViewingAugmentInventory);
	void OnCanSelectAugmentChanged(bool bCanSelectAugment);
	void OnInputTypeChanged(const ECommonInputType NewInputType);
	void OnPopulateAvailableAugmentsHUD(const TArray<class UFortPlayerAugmentItemDefinition*>& AugmentItemDefinition);
	void OnRerollAugments();
	void OnSwapToActiveList();
	void OnSwapToSelector();
	void PlayCloseAnimation();
	void PreConstruct(bool IsDesignTime);
	void RefreshArrows();
	void RefreshAugmentInfo();
	void ResetState();
	void SetHideTags(const bool bHideElements);
	void SetMobileVisuals();
	void ShouldRefreshAugmentInfo(bool* ShouldRefresh);
	void Swap_Augment_Focus(int32 UpdatedAugmentIndex, bool PlayAnimation_0);
	void UpdateSelectionReadyCount(int32 NumPendingToGrant);
	void UpdateSwapBoundAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AugmentSelector_HUD_C">();
	}
	static class UWBP_AugmentSelector_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AugmentSelector_HUD_C>();
	}
};
static_assert(alignof(UWBP_AugmentSelector_HUD_C) == 0x000008, "Wrong alignment on UWBP_AugmentSelector_HUD_C");
static_assert(sizeof(UWBP_AugmentSelector_HUD_C) == 0x0004B0, "Wrong size on UWBP_AugmentSelector_HUD_C");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, UberGraphFrame) == 0x000350, "Member 'UWBP_AugmentSelector_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Anim_SwapToList) == 0x000358, "Member 'UWBP_AugmentSelector_HUD_C::Anim_SwapToList' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Anim_SwapToSelector) == 0x000360, "Member 'UWBP_AugmentSelector_HUD_C::Anim_SwapToSelector' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Anim_ReturnToSelectorPressed) == 0x000368, "Member 'UWBP_AugmentSelector_HUD_C::Anim_ReturnToSelectorPressed' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Anim_ViewMorePressed) == 0x000370, "Member 'UWBP_AugmentSelector_HUD_C::Anim_ViewMorePressed' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Anim_TranslateSwapIndicator) == 0x000378, "Member 'UWBP_AugmentSelector_HUD_C::Anim_TranslateSwapIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Anim_Close) == 0x000380, "Member 'UWBP_AugmentSelector_HUD_C::Anim_Close' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, AugmentSelector_Reroll) == 0x000388, "Member 'UWBP_AugmentSelector_HUD_C::AugmentSelector_Reroll' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, FortTouchUserWidget_GoToActiveAugments) == 0x000390, "Member 'UWBP_AugmentSelector_HUD_C::FortTouchUserWidget_GoToActiveAugments' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, FortTouchUserWidget_LeaveActiveAugments) == 0x000398, "Member 'UWBP_AugmentSelector_HUD_C::FortTouchUserWidget_LeaveActiveAugments' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Image_ArrowDown) == 0x0003A0, "Member 'UWBP_AugmentSelector_HUD_C::Image_ArrowDown' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Image_ArrowUp) == 0x0003A8, "Member 'UWBP_AugmentSelector_HUD_C::Image_ArrowUp' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Image_ReadyButton_Glow) == 0x0003B0, "Member 'UWBP_AugmentSelector_HUD_C::Image_ReadyButton_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Keybind_CycleAction) == 0x0003B8, "Member 'UWBP_AugmentSelector_HUD_C::Keybind_CycleAction' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Keybind_SwapAction) == 0x0003C0, "Member 'UWBP_AugmentSelector_HUD_C::Keybind_SwapAction' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Keybind_ViewMore) == 0x0003C8, "Member 'UWBP_AugmentSelector_HUD_C::Keybind_ViewMore' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Overlay_AugmentSelection) == 0x0003D0, "Member 'UWBP_AugmentSelector_HUD_C::Overlay_AugmentSelection' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Overlay_ReadyInput) == 0x0003D8, "Member 'UWBP_AugmentSelector_HUD_C::Overlay_ReadyInput' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Switcher_AugmentHUD) == 0x0003E0, "Member 'UWBP_AugmentSelector_HUD_C::Switcher_AugmentHUD' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Text_ReadyCount) == 0x0003E8, "Member 'UWBP_AugmentSelector_HUD_C::Text_ReadyCount' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, VBox_AugmentSelectionList) == 0x0003F0, "Member 'UWBP_AugmentSelector_HUD_C::VBox_AugmentSelectionList' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, VerticalBox_ActiveList) == 0x0003F8, "Member 'UWBP_AugmentSelector_HUD_C::VerticalBox_ActiveList' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, VerticalBox_CycleInput) == 0x000400, "Member 'UWBP_AugmentSelector_HUD_C::VerticalBox_CycleInput' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, VerticalBox_SelectorHUD) == 0x000408, "Member 'UWBP_AugmentSelector_HUD_C::VerticalBox_SelectorHUD' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, VerticalBox_ViewMoreInput) == 0x000410, "Member 'UWBP_AugmentSelector_HUD_C::VerticalBox_ViewMoreInput' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, WBP_ActiveAugments_List) == 0x000418, "Member 'UWBP_AugmentSelector_HUD_C::WBP_ActiveAugments_List' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, WBP_ActiveAugments_Timer) == 0x000420, "Member 'UWBP_AugmentSelector_HUD_C::WBP_ActiveAugments_Timer' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, WBP_Augments_Quickbar) == 0x000428, "Member 'UWBP_AugmentSelector_HUD_C::WBP_Augments_Quickbar' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, AvailableAugmentDefinitions) == 0x000430, "Member 'UWBP_AugmentSelector_HUD_C::AvailableAugmentDefinitions' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Highlighted_Augment_Index) == 0x000440, "Member 'UWBP_AugmentSelector_HUD_C::Highlighted_Augment_Index' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, CloseSound) == 0x000448, "Member 'UWBP_AugmentSelector_HUD_C::CloseSound' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, CloseHUDTimer) == 0x000450, "Member 'UWBP_AugmentSelector_HUD_C::CloseHUDTimer' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, ActivateAugmentTimer) == 0x000458, "Member 'UWBP_AugmentSelector_HUD_C::ActivateAugmentTimer' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, ExtraDelayAfterConfirm) == 0x000460, "Member 'UWBP_AugmentSelector_HUD_C::ExtraDelayAfterConfirm' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, IsTopHighlighted) == 0x000468, "Member 'UWBP_AugmentSelector_HUD_C::IsTopHighlighted' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Input_Type) == 0x000469, "Member 'UWBP_AugmentSelector_HUD_C::Input_Type' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Viewing_Augment_Active_List) == 0x00046A, "Member 'UWBP_AugmentSelector_HUD_C::Viewing_Augment_Active_List' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, AugmentHUDOpened) == 0x00046B, "Member 'UWBP_AugmentSelector_HUD_C::AugmentHUDOpened' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Can_Select_Augment) == 0x00046C, "Member 'UWBP_AugmentSelector_HUD_C::Can_Select_Augment' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, AugmentOptions_Widgets) == 0x000470, "Member 'UWBP_AugmentSelector_HUD_C::AugmentOptions_Widgets' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, TestAugmentOptonsIndexNum) == 0x000480, "Member 'UWBP_AugmentSelector_HUD_C::TestAugmentOptonsIndexNum' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, MobileHUDTagsToHide) == 0x000488, "Member 'UWBP_AugmentSelector_HUD_C::MobileHUDTagsToHide' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, Num_Pending_to_Grant) == 0x0004A8, "Member 'UWBP_AugmentSelector_HUD_C::Num_Pending_to_Grant' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, PopulateNeedsRefresh) == 0x0004AC, "Member 'UWBP_AugmentSelector_HUD_C::PopulateNeedsRefresh' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, HasNewSelectionsPendingRefresh) == 0x0004AD, "Member 'UWBP_AugmentSelector_HUD_C::HasNewSelectionsPendingRefresh' has a wrong offset!");
static_assert(offsetof(UWBP_AugmentSelector_HUD_C, IsNumPendingToGrantUpdated) == 0x0004AE, "Member 'UWBP_AugmentSelector_HUD_C::IsNumPendingToGrantUpdated' has a wrong offset!");

}

