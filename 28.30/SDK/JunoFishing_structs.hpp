#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoFishing

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct JunoFishing.JunoPlayerFishingTelemetryData
// 0x0050 (0x0050 - 0x0000)
struct FJunoPlayerFishingTelemetryData final
{
public:
	float                                         TimeFishingSessionBegan;                           // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               ResultItem;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  ItemUsedToFish;                                    // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromHotspot;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerSpawnedHotspot;                           // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 HotspotTierTag;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WaterBodyName;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CatchTypeName;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoPlayerFishingTelemetryData) == 0x000008, "Wrong alignment on FJunoPlayerFishingTelemetryData");
static_assert(sizeof(FJunoPlayerFishingTelemetryData) == 0x000050, "Wrong size on FJunoPlayerFishingTelemetryData");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, TimeFishingSessionBegan) == 0x000000, "Member 'FJunoPlayerFishingTelemetryData::TimeFishingSessionBegan' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, ResultItem) == 0x000008, "Member 'FJunoPlayerFishingTelemetryData::ResultItem' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, ItemUsedToFish) == 0x000010, "Member 'FJunoPlayerFishingTelemetryData::ItemUsedToFish' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, bFromHotspot) == 0x000018, "Member 'FJunoPlayerFishingTelemetryData::bFromHotspot' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, bIsPlayerSpawnedHotspot) == 0x000019, "Member 'FJunoPlayerFishingTelemetryData::bIsPlayerSpawnedHotspot' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, HotspotTierTag) == 0x000020, "Member 'FJunoPlayerFishingTelemetryData::HotspotTierTag' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, WaterBodyName) == 0x000030, "Member 'FJunoPlayerFishingTelemetryData::WaterBodyName' has a wrong offset!");
static_assert(offsetof(FJunoPlayerFishingTelemetryData, CatchTypeName) == 0x000040, "Member 'FJunoPlayerFishingTelemetryData::CatchTypeName' has a wrong offset!");

}

