#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_AudioPlayerRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum CRD_AudioPlayerRuntime.ECreativeAudioPlayerTargetListener
// NumValues: 0x0005
enum class ECreativeAudioPlayerTargetListener : uint8
{
	None                                     = 0,
	Instigator                               = 1,
	RegisteredPlayers                        = 2,
	NonRegisteredPlayers                     = 4,
	Everyone                                 = 6,
};

// Enum CRD_AudioPlayerRuntime.ECreativeAudioPlayerTargetLocation
// NumValues: 0x0006
enum class ECreativeAudioPlayerTargetLocation : uint8
{
	None                                     = 0,
	Device                                   = 1,
	LocalPlayer                              = 2,
	RegisteredPlayers                        = 4,
	InstigatingPlayer                        = 8,
	All                                      = 15,
};

// Enum CRD_AudioPlayerRuntime.EAutoplayOptions
// NumValues: 0x0007
enum class EAutoplayOptions : uint8
{
	None                                     = 0,
	Create                                   = 1,
	WaitingForPlayer                         = 2,
	Countdown                                = 4,
	Gameplay                                 = 8,
	RoundEnd                                 = 16,
	GameEnd                                  = 32,
};

// ScriptStruct CRD_AudioPlayerRuntime.CreativeAudioPlayerData
// 0x0040 (0x0040 - 0x0000)
struct FCreativeAudioPlayerData final
{
public:
	struct FUniqueNetIdRepl                       NetId;                                             // 0x0000(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  Pawn;                                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ServerAudioStartTime;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCreativeAudioPlayerData) == 0x000008, "Wrong alignment on FCreativeAudioPlayerData");
static_assert(sizeof(FCreativeAudioPlayerData) == 0x000040, "Wrong size on FCreativeAudioPlayerData");
static_assert(offsetof(FCreativeAudioPlayerData, NetId) == 0x000000, "Member 'FCreativeAudioPlayerData::NetId' has a wrong offset!");
static_assert(offsetof(FCreativeAudioPlayerData, Pawn) == 0x000030, "Member 'FCreativeAudioPlayerData::Pawn' has a wrong offset!");
static_assert(offsetof(FCreativeAudioPlayerData, ServerAudioStartTime) == 0x000038, "Member 'FCreativeAudioPlayerData::ServerAudioStartTime' has a wrong offset!");

}

