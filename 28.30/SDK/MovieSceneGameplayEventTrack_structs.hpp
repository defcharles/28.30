#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieSceneGameplayEventTrack

#include "Basic.hpp"

#include "StructUtils_structs.hpp"
#include "Engine_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct MovieSceneGameplayEventTrack.MovieSceneGameplayEvent
// 0x0040 (0x0040 - 0x0000)
struct FMovieSceneGameplayEvent final
{
public:
	struct FMemberReference                       GameplayEventFunctionProperty;                     // 0x0000(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedPropertyBag                  Payload;                                           // 0x0030(0x0010)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMovieSceneGameplayEvent) == 0x000008, "Wrong alignment on FMovieSceneGameplayEvent");
static_assert(sizeof(FMovieSceneGameplayEvent) == 0x000040, "Wrong size on FMovieSceneGameplayEvent");
static_assert(offsetof(FMovieSceneGameplayEvent, GameplayEventFunctionProperty) == 0x000000, "Member 'FMovieSceneGameplayEvent::GameplayEventFunctionProperty' has a wrong offset!");
static_assert(offsetof(FMovieSceneGameplayEvent, Payload) == 0x000030, "Member 'FMovieSceneGameplayEvent::Payload' has a wrong offset!");

// ScriptStruct MovieSceneGameplayEventTrack.MovieSceneGameplayEventChannel
// 0x00A8 (0x00F8 - 0x0050)
struct FMovieSceneGameplayEventChannel final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   KeyTimes;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FMovieSceneGameplayEvent>       KeyValues;                                         // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FMovieSceneKeyHandleMap                KeyHandles;                                        // 0x0070(0x0088)(Transient, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneGameplayEventChannel) == 0x000008, "Wrong alignment on FMovieSceneGameplayEventChannel");
static_assert(sizeof(FMovieSceneGameplayEventChannel) == 0x0000F8, "Wrong size on FMovieSceneGameplayEventChannel");
static_assert(offsetof(FMovieSceneGameplayEventChannel, KeyTimes) == 0x000050, "Member 'FMovieSceneGameplayEventChannel::KeyTimes' has a wrong offset!");
static_assert(offsetof(FMovieSceneGameplayEventChannel, KeyValues) == 0x000060, "Member 'FMovieSceneGameplayEventChannel::KeyValues' has a wrong offset!");
static_assert(offsetof(FMovieSceneGameplayEventChannel, KeyHandles) == 0x000070, "Member 'FMovieSceneGameplayEventChannel::KeyHandles' has a wrong offset!");

// ScriptStruct MovieSceneGameplayEventTrack.MovieSceneGameplayEventTriggerData
// 0x0060 (0x0060 - 0x0000)
struct FMovieSceneGameplayEventTriggerData final
{
public:
	struct FMemberReference                       GameplayEventFunctionProperty;                     // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	struct FInstancedPropertyBag                  Payload;                                           // 0x0030(0x0010)(NativeAccessSpecifierPublic)
	struct FGuid                                  ObjectBindingID;                                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneGameplayEventTriggerData) == 0x000008, "Wrong alignment on FMovieSceneGameplayEventTriggerData");
static_assert(sizeof(FMovieSceneGameplayEventTriggerData) == 0x000060, "Wrong size on FMovieSceneGameplayEventTriggerData");
static_assert(offsetof(FMovieSceneGameplayEventTriggerData, GameplayEventFunctionProperty) == 0x000000, "Member 'FMovieSceneGameplayEventTriggerData::GameplayEventFunctionProperty' has a wrong offset!");
static_assert(offsetof(FMovieSceneGameplayEventTriggerData, Payload) == 0x000030, "Member 'FMovieSceneGameplayEventTriggerData::Payload' has a wrong offset!");
static_assert(offsetof(FMovieSceneGameplayEventTriggerData, ObjectBindingID) == 0x000040, "Member 'FMovieSceneGameplayEventTriggerData::ObjectBindingID' has a wrong offset!");

}

