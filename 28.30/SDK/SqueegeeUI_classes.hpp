#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SqueegeeUI

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "CommonUI_classes.hpp"
#include "SqueegeeUI_structs.hpp"


namespace SDK
{

// Class SqueegeeUI.FortContentGateDetailsWidget
// 0x0008 (0x0310 - 0x0308)
class UFortContentGateDetailsWidget final : public UFortSqueegeeWidget
{
public:
	class UFortContentGateRatingWidget*           ContentGateRatingWidget;                           // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnShowGamemodeDescription(const class FString& ActivityTitle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentGateDetailsWidget">();
	}
	static class UFortContentGateDetailsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentGateDetailsWidget>();
	}
};
static_assert(alignof(UFortContentGateDetailsWidget) == 0x000008, "Wrong alignment on UFortContentGateDetailsWidget");
static_assert(sizeof(UFortContentGateDetailsWidget) == 0x000310, "Wrong size on UFortContentGateDetailsWidget");
static_assert(offsetof(UFortContentGateDetailsWidget, ContentGateRatingWidget) == 0x000308, "Member 'UFortContentGateDetailsWidget::ContentGateRatingWidget' has a wrong offset!");

// Class SqueegeeUI.FortContentGateRatingWidget
// 0x0000 (0x0308 - 0x0308)
class UFortContentGateRatingWidget final : public UFortSqueegeeWidget
{
public:
	void OnLabelUpdated(bool bLabelEnabled, const class FText& LabelText, const class FText& LabelNumber);
	void OnStyleUpdated(const struct FSqueegeeStyleParams& StyleParams);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentGateRatingWidget">();
	}
	static class UFortContentGateRatingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentGateRatingWidget>();
	}
};
static_assert(alignof(UFortContentGateRatingWidget) == 0x000008, "Wrong alignment on UFortContentGateRatingWidget");
static_assert(sizeof(UFortContentGateRatingWidget) == 0x000308, "Wrong size on UFortContentGateRatingWidget");

// Class SqueegeeUI.FortContentManagementDetails
// 0x0038 (0x0340 - 0x0308)
class UFortContentManagementDetails final : public UFortSqueegeeWidget
{
public:
	class UFortContentGateRatingWidget*           ContentGateRatingWidget;                           // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_310[0x30];                                     // 0x0310(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void OnShowActivityData(const class FText& ActivityDisplayName, const class FText& ActivityDescription, const class FString& CreatorName, const class FText& LinkCode, const bool IsCreative, const struct FDateTime& UnlockTime, class UFortGameActivity* GameActivity);
	void OnShowWeaponData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementDetails">();
	}
	static class UFortContentManagementDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementDetails>();
	}
};
static_assert(alignof(UFortContentManagementDetails) == 0x000008, "Wrong alignment on UFortContentManagementDetails");
static_assert(sizeof(UFortContentManagementDetails) == 0x000340, "Wrong size on UFortContentManagementDetails");
static_assert(offsetof(UFortContentManagementDetails, ContentGateRatingWidget) == 0x000308, "Member 'UFortContentManagementDetails::ContentGateRatingWidget' has a wrong offset!");

// Class SqueegeeUI.FortContentManagementButton
// 0x0030 (0x14C0 - 0x1490)
class UFortContentManagementButton final : public UCommonButtonBase
{
public:
	uint8                                         Pad_1490[0x30];                                    // 0x1490(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeManagementState(EFortContentManagementState NewState);
	void OnShowError(const class FText& ErrorText);
	void OnShowGameActivity(const class UFortGameActivity* NewGameActivity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementButton">();
	}
	static class UFortContentManagementButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementButton>();
	}
};
static_assert(alignof(UFortContentManagementButton) == 0x000010, "Wrong alignment on UFortContentManagementButton");
static_assert(sizeof(UFortContentManagementButton) == 0x0014C0, "Wrong size on UFortContentManagementButton");

// Class SqueegeeUI.FortContentManagementLabelWidget
// 0x0008 (0x02C8 - 0x02C0)
class UFortContentManagementLabelWidget final : public UUserWidget
{
public:
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetLabel(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementLabelWidget">();
	}
	static class UFortContentManagementLabelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementLabelWidget>();
	}
};
static_assert(alignof(UFortContentManagementLabelWidget) == 0x000008, "Wrong alignment on UFortContentManagementLabelWidget");
static_assert(sizeof(UFortContentManagementLabelWidget) == 0x0002C8, "Wrong size on UFortContentManagementLabelWidget");

// Class SqueegeeUI.FortContentManagementEntryLabelObject
// 0x0018 (0x0040 - 0x0028)
class UFortContentManagementEntryLabelObject final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementEntryLabelObject">();
	}
	static class UFortContentManagementEntryLabelObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementEntryLabelObject>();
	}
};
static_assert(alignof(UFortContentManagementEntryLabelObject) == 0x000008, "Wrong alignment on UFortContentManagementEntryLabelObject");
static_assert(sizeof(UFortContentManagementEntryLabelObject) == 0x000040, "Wrong size on UFortContentManagementEntryLabelObject");

// Class SqueegeeUI.FortContentManagementEntryDataObject
// 0x0038 (0x0060 - 0x0028)
class UFortContentManagementEntryDataObject final : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementEntryDataObject">();
	}
	static class UFortContentManagementEntryDataObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementEntryDataObject>();
	}
};
static_assert(alignof(UFortContentManagementEntryDataObject) == 0x000008, "Wrong alignment on UFortContentManagementEntryDataObject");
static_assert(sizeof(UFortContentManagementEntryDataObject) == 0x000060, "Wrong size on UFortContentManagementEntryDataObject");

// Class SqueegeeUI.FortContentManagementListView
// 0x0010 (0x0BE0 - 0x0BD0)
class UFortContentManagementListView final : public UCommonListView
{
public:
	TSubclassOf<class UFortContentManagementLabelWidget> LabelWidget;                                       // 0x0BD0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BD8[0x8];                                      // 0x0BD8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementListView">();
	}
	static class UFortContentManagementListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementListView>();
	}
};
static_assert(alignof(UFortContentManagementListView) == 0x000010, "Wrong alignment on UFortContentManagementListView");
static_assert(sizeof(UFortContentManagementListView) == 0x000BE0, "Wrong size on UFortContentManagementListView");
static_assert(offsetof(UFortContentManagementListView, LabelWidget) == 0x000BD0, "Member 'UFortContentManagementListView::LabelWidget' has a wrong offset!");

// Class SqueegeeUI.FortContentManagementList
// 0x0080 (0x0388 - 0x0308)
class UFortContentManagementList final : public UFortSqueegeeWidget
{
public:
	class FText                                   WeaponLabelText;                                   // 0x0308(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   GameModeLabelText;                                 // 0x0320(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortContentManagementListView*         ContentManagementListView;                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0x18];                                     // 0x0340(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortGameActivity*>              CachedActivities;                                  // 0x0358(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x20];                                     // 0x0368(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnNextUnlockPageRequestCompleted(bool bSuccess);
	void RequestNextUnlockPage();
	void ResetUnlockList();

	bool CanRequestNextUnlockPage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementList">();
	}
	static class UFortContentManagementList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementList>();
	}
};
static_assert(alignof(UFortContentManagementList) == 0x000008, "Wrong alignment on UFortContentManagementList");
static_assert(sizeof(UFortContentManagementList) == 0x000388, "Wrong size on UFortContentManagementList");
static_assert(offsetof(UFortContentManagementList, WeaponLabelText) == 0x000308, "Member 'UFortContentManagementList::WeaponLabelText' has a wrong offset!");
static_assert(offsetof(UFortContentManagementList, GameModeLabelText) == 0x000320, "Member 'UFortContentManagementList::GameModeLabelText' has a wrong offset!");
static_assert(offsetof(UFortContentManagementList, ContentManagementListView) == 0x000338, "Member 'UFortContentManagementList::ContentManagementListView' has a wrong offset!");
static_assert(offsetof(UFortContentManagementList, CachedActivities) == 0x000358, "Member 'UFortContentManagementList::CachedActivities' has a wrong offset!");

// Class SqueegeeUI.FortContentManagementScreen
// 0x0018 (0x0560 - 0x0548)
class UFortContentManagementScreen final : public UFortPinScreen
{
public:
	class UCommonButtonBase*                      Button_CloseTouch;                                 // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortContentManagementList*             ContentManagementList;                             // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortContentManagementDetails*          ContentManagementDetails;                          // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ExitScreen();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContentManagementScreen">();
	}
	static class UFortContentManagementScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContentManagementScreen>();
	}
};
static_assert(alignof(UFortContentManagementScreen) == 0x000008, "Wrong alignment on UFortContentManagementScreen");
static_assert(sizeof(UFortContentManagementScreen) == 0x000560, "Wrong size on UFortContentManagementScreen");
static_assert(offsetof(UFortContentManagementScreen, Button_CloseTouch) == 0x000548, "Member 'UFortContentManagementScreen::Button_CloseTouch' has a wrong offset!");
static_assert(offsetof(UFortContentManagementScreen, ContentManagementList) == 0x000550, "Member 'UFortContentManagementScreen::ContentManagementList' has a wrong offset!");
static_assert(offsetof(UFortContentManagementScreen, ContentManagementDetails) == 0x000558, "Member 'UFortContentManagementScreen::ContentManagementDetails' has a wrong offset!");

// Class SqueegeeUI.SqueegeeUIGameFeatureAction
// 0x0040 (0x0068 - 0x0028)
class USqueegeeUIGameFeatureAction final : public UFortUIGameFeatureAction
{
public:
	TArray<struct FSqueegeeInjectionData>         SqueegeeWidgetInjections;                          // 0x0028(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSqueegeeTextData>              SqueegeTexts;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   SqueegeeIntroModalClass;                           // 0x0048(0x0020)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SqueegeeUIGameFeatureAction">();
	}
	static class USqueegeeUIGameFeatureAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USqueegeeUIGameFeatureAction>();
	}
};
static_assert(alignof(USqueegeeUIGameFeatureAction) == 0x000008, "Wrong alignment on USqueegeeUIGameFeatureAction");
static_assert(sizeof(USqueegeeUIGameFeatureAction) == 0x000068, "Wrong size on USqueegeeUIGameFeatureAction");
static_assert(offsetof(USqueegeeUIGameFeatureAction, SqueegeeWidgetInjections) == 0x000028, "Member 'USqueegeeUIGameFeatureAction::SqueegeeWidgetInjections' has a wrong offset!");
static_assert(offsetof(USqueegeeUIGameFeatureAction, SqueegeTexts) == 0x000038, "Member 'USqueegeeUIGameFeatureAction::SqueegeTexts' has a wrong offset!");
static_assert(offsetof(USqueegeeUIGameFeatureAction, SqueegeeIntroModalClass) == 0x000048, "Member 'USqueegeeUIGameFeatureAction::SqueegeeIntroModalClass' has a wrong offset!");

}

