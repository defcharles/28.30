#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimPresetsRuntime

#include "Basic.hpp"

#include "GameFeatures_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "AnimPresetsRuntime_structs.hpp"


namespace SDK
{

// Class AnimPresetsRuntime.AnimPreset
// 0x0000 (0x0028 - 0x0028)
class UAnimPreset : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimPreset">();
	}
	static class UAnimPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPreset>();
	}
};
static_assert(alignof(UAnimPreset) == 0x000008, "Wrong alignment on UAnimPreset");
static_assert(sizeof(UAnimPreset) == 0x000028, "Wrong size on UAnimPreset");

// Class AnimPresetsRuntime.AnimPreset_BasicLocomotion
// 0x0050 (0x0078 - 0x0028)
class UAnimPreset_BasicLocomotion final : public UAnimPreset
{
public:
	struct FAnimPreset_SingleAnimationData        Idle;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimPreset_SingleAnimationData        MoveForward;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimPreset_SingleAnimationData        MoveBackward;                                      // 0x0048(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimPreset_SingleAnimationData        MoveLeft;                                          // 0x0058(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimPreset_SingleAnimationData        MoveRight;                                         // 0x0068(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimPreset_BasicLocomotion">();
	}
	static class UAnimPreset_BasicLocomotion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPreset_BasicLocomotion>();
	}
};
static_assert(alignof(UAnimPreset_BasicLocomotion) == 0x000008, "Wrong alignment on UAnimPreset_BasicLocomotion");
static_assert(sizeof(UAnimPreset_BasicLocomotion) == 0x000078, "Wrong size on UAnimPreset_BasicLocomotion");
static_assert(offsetof(UAnimPreset_BasicLocomotion, Idle) == 0x000028, "Member 'UAnimPreset_BasicLocomotion::Idle' has a wrong offset!");
static_assert(offsetof(UAnimPreset_BasicLocomotion, MoveForward) == 0x000038, "Member 'UAnimPreset_BasicLocomotion::MoveForward' has a wrong offset!");
static_assert(offsetof(UAnimPreset_BasicLocomotion, MoveBackward) == 0x000048, "Member 'UAnimPreset_BasicLocomotion::MoveBackward' has a wrong offset!");
static_assert(offsetof(UAnimPreset_BasicLocomotion, MoveLeft) == 0x000058, "Member 'UAnimPreset_BasicLocomotion::MoveLeft' has a wrong offset!");
static_assert(offsetof(UAnimPreset_BasicLocomotion, MoveRight) == 0x000068, "Member 'UAnimPreset_BasicLocomotion::MoveRight' has a wrong offset!");

// Class AnimPresetsRuntime.GameFeatureAction_AnimPreset
// 0x0060 (0x0088 - 0x0028)
class UGameFeatureAction_AnimPreset final : public UGameFeatureAction
{
public:
	TSoftClassPtr<class UClass>                   AnimBP_Preset_BasicLocomotion;                     // 0x0028(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AnimBP_CopyPoseFromMesh;                           // 0x0048(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AnimBP_RetargetPoseFromMesh;                       // 0x0068(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_AnimPreset">();
	}
	static class UGameFeatureAction_AnimPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_AnimPreset>();
	}
};
static_assert(alignof(UGameFeatureAction_AnimPreset) == 0x000008, "Wrong alignment on UGameFeatureAction_AnimPreset");
static_assert(sizeof(UGameFeatureAction_AnimPreset) == 0x000088, "Wrong size on UGameFeatureAction_AnimPreset");
static_assert(offsetof(UGameFeatureAction_AnimPreset, AnimBP_Preset_BasicLocomotion) == 0x000028, "Member 'UGameFeatureAction_AnimPreset::AnimBP_Preset_BasicLocomotion' has a wrong offset!");
static_assert(offsetof(UGameFeatureAction_AnimPreset, AnimBP_CopyPoseFromMesh) == 0x000048, "Member 'UGameFeatureAction_AnimPreset::AnimBP_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UGameFeatureAction_AnimPreset, AnimBP_RetargetPoseFromMesh) == 0x000068, "Member 'UGameFeatureAction_AnimPreset::AnimBP_RetargetPoseFromMesh' has a wrong offset!");

}

