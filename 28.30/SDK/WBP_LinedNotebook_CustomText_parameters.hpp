#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_CustomText

#include "Basic.hpp"

#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_LinedNotebook_CustomText.WBP_LinedNotebook_CustomText_C.ExecuteUbergraph_WBP_LinedNotebook_CustomText
// 0x0048 (0x0048 - 0x0000)
struct WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_CustomText;                           // 0x0008(0x0018)(ConstParm)
	const class UFortEventScreenData*             K2Node_Event_InEventScreenData;                    // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_CustomEvent_TextJustification;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText) == 0x000008, "Wrong alignment on WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText");
static_assert(sizeof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText) == 0x000048, "Wrong size on WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, EntryPoint) == 0x000000, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, Temp_bool_Variable) == 0x000004, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, Temp_byte_Variable) == 0x000005, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, K2Node_Event_CustomText) == 0x000008, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::K2Node_Event_CustomText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, K2Node_Event_InEventScreenData) == 0x000020, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::K2Node_Event_InEventScreenData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, K2Node_CustomEvent_TextJustification) == 0x000029, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::K2Node_CustomEvent_TextJustification' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000030, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000040, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText, K2Node_Select_Default) == 0x000042, "Member 'WBP_LinedNotebook_CustomText_C_ExecuteUbergraph_WBP_LinedNotebook_CustomText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_LinedNotebook_CustomText.WBP_LinedNotebook_CustomText_C.OnModuleInitialized
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_CustomText_C_OnModuleInitialized final
{
public:
	const class UFortEventScreenData*             InEventScreenData;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_CustomText_C_OnModuleInitialized) == 0x000008, "Wrong alignment on WBP_LinedNotebook_CustomText_C_OnModuleInitialized");
static_assert(sizeof(WBP_LinedNotebook_CustomText_C_OnModuleInitialized) == 0x000008, "Wrong size on WBP_LinedNotebook_CustomText_C_OnModuleInitialized");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_OnModuleInitialized, InEventScreenData) == 0x000000, "Member 'WBP_LinedNotebook_CustomText_C_OnModuleInitialized::InEventScreenData' has a wrong offset!");

// Function WBP_LinedNotebook_CustomText.WBP_LinedNotebook_CustomText_C.OnPopulateText
// 0x0018 (0x0018 - 0x0000)
struct WBP_LinedNotebook_CustomText_C_OnPopulateText final
{
public:
	class FText                                   CustomText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LinedNotebook_CustomText_C_OnPopulateText) == 0x000008, "Wrong alignment on WBP_LinedNotebook_CustomText_C_OnPopulateText");
static_assert(sizeof(WBP_LinedNotebook_CustomText_C_OnPopulateText) == 0x000018, "Wrong size on WBP_LinedNotebook_CustomText_C_OnPopulateText");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_OnPopulateText, CustomText) == 0x000000, "Member 'WBP_LinedNotebook_CustomText_C_OnPopulateText::CustomText' has a wrong offset!");

// Function WBP_LinedNotebook_CustomText.WBP_LinedNotebook_CustomText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_CustomText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_CustomText_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_LinedNotebook_CustomText_C_PreConstruct");
static_assert(sizeof(WBP_LinedNotebook_CustomText_C_PreConstruct) == 0x000001, "Wrong size on WBP_LinedNotebook_CustomText_C_PreConstruct");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_LinedNotebook_CustomText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_LinedNotebook_CustomText.WBP_LinedNotebook_CustomText_C.SetJustification
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_CustomText_C_SetJustification final
{
public:
	ETextJustify                                  TextJustification_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_CustomText_C_SetJustification) == 0x000001, "Wrong alignment on WBP_LinedNotebook_CustomText_C_SetJustification");
static_assert(sizeof(WBP_LinedNotebook_CustomText_C_SetJustification) == 0x000001, "Wrong size on WBP_LinedNotebook_CustomText_C_SetJustification");
static_assert(offsetof(WBP_LinedNotebook_CustomText_C_SetJustification, TextJustification_0) == 0x000000, "Member 'WBP_LinedNotebook_CustomText_C_SetJustification::TextJustification_0' has a wrong offset!");

}

