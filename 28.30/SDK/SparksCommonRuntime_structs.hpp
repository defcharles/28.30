#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCommonRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct SparksCommonRuntime.SparksCommonAllPlayersReadyEvent
// 0x0001 (0x0001 - 0x0000)
struct FSparksCommonAllPlayersReadyEvent final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksCommonAllPlayersReadyEvent) == 0x000001, "Wrong alignment on FSparksCommonAllPlayersReadyEvent");
static_assert(sizeof(FSparksCommonAllPlayersReadyEvent) == 0x000001, "Wrong size on FSparksCommonAllPlayersReadyEvent");

// ScriptStruct SparksCommonRuntime.SparksCommonStartCameraEvent
// 0x0001 (0x0001 - 0x0000)
struct FSparksCommonStartCameraEvent final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksCommonStartCameraEvent) == 0x000001, "Wrong alignment on FSparksCommonStartCameraEvent");
static_assert(sizeof(FSparksCommonStartCameraEvent) == 0x000001, "Wrong size on FSparksCommonStartCameraEvent");

// ScriptStruct SparksCommonRuntime.SparksCommonCameraFinishedEvent
// 0x0001 (0x0001 - 0x0000)
struct FSparksCommonCameraFinishedEvent final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksCommonCameraFinishedEvent) == 0x000001, "Wrong alignment on FSparksCommonCameraFinishedEvent");
static_assert(sizeof(FSparksCommonCameraFinishedEvent) == 0x000001, "Wrong size on FSparksCommonCameraFinishedEvent");

// ScriptStruct SparksCommonRuntime.SparksCommonEnableCameraDirectorEvent
// 0x0001 (0x0001 - 0x0000)
struct FSparksCommonEnableCameraDirectorEvent final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksCommonEnableCameraDirectorEvent) == 0x000001, "Wrong alignment on FSparksCommonEnableCameraDirectorEvent");
static_assert(sizeof(FSparksCommonEnableCameraDirectorEvent) == 0x000001, "Wrong size on FSparksCommonEnableCameraDirectorEvent");

// ScriptStruct SparksCommonRuntime.SparksCommonCameraDirectorFinishedEvent
// 0x0001 (0x0001 - 0x0000)
struct FSparksCommonCameraDirectorFinishedEvent final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksCommonCameraDirectorFinishedEvent) == 0x000001, "Wrong alignment on FSparksCommonCameraDirectorFinishedEvent");
static_assert(sizeof(FSparksCommonCameraDirectorFinishedEvent) == 0x000001, "Wrong size on FSparksCommonCameraDirectorFinishedEvent");

// ScriptStruct SparksCommonRuntime.CrowdMemberToSpawn
// 0x0040 (0x0040 - 0x0000)
struct FCrowdMemberToSpawn final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotator;                                           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          Mesh;                                              // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ID;                                                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCrowdMemberToSpawn) == 0x000008, "Wrong alignment on FCrowdMemberToSpawn");
static_assert(sizeof(FCrowdMemberToSpawn) == 0x000040, "Wrong size on FCrowdMemberToSpawn");
static_assert(offsetof(FCrowdMemberToSpawn, Location) == 0x000000, "Member 'FCrowdMemberToSpawn::Location' has a wrong offset!");
static_assert(offsetof(FCrowdMemberToSpawn, Rotator) == 0x000010, "Member 'FCrowdMemberToSpawn::Rotator' has a wrong offset!");
static_assert(offsetof(FCrowdMemberToSpawn, Scale) == 0x000028, "Member 'FCrowdMemberToSpawn::Scale' has a wrong offset!");
static_assert(offsetof(FCrowdMemberToSpawn, Mesh) == 0x000030, "Member 'FCrowdMemberToSpawn::Mesh' has a wrong offset!");
static_assert(offsetof(FCrowdMemberToSpawn, ID) == 0x000038, "Member 'FCrowdMemberToSpawn::ID' has a wrong offset!");

}

