#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RebootRallyAvailableTooltip

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function RebootRallyAvailableTooltip.RebootRallyAvailableTooltip_C.ExecuteUbergraph_RebootRallyAvailableTooltip
// 0x0030 (0x0030 - 0x0000)
struct RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip) == 0x000008, "Wrong alignment on RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip");
static_assert(sizeof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip) == 0x000030, "Wrong size on RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip");
static_assert(offsetof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip, EntryPoint) == 0x000000, "Member 'RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip, K2Node_CustomEvent_bNewInputType) == 0x00001C, "Member 'RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000020, "Member 'RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip, K2Node_Event_IsDesignTime) == 0x000028, "Member 'RebootRallyAvailableTooltip_C_ExecuteUbergraph_RebootRallyAvailableTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function RebootRallyAvailableTooltip.RebootRallyAvailableTooltip_C.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct RebootRallyAvailableTooltip_C_HandleInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RebootRallyAvailableTooltip_C_HandleInputMethodChanged) == 0x000001, "Wrong alignment on RebootRallyAvailableTooltip_C_HandleInputMethodChanged");
static_assert(sizeof(RebootRallyAvailableTooltip_C_HandleInputMethodChanged) == 0x000001, "Wrong size on RebootRallyAvailableTooltip_C_HandleInputMethodChanged");
static_assert(offsetof(RebootRallyAvailableTooltip_C_HandleInputMethodChanged, bNewInputType) == 0x000000, "Member 'RebootRallyAvailableTooltip_C_HandleInputMethodChanged::bNewInputType' has a wrong offset!");

// Function RebootRallyAvailableTooltip.RebootRallyAvailableTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct RebootRallyAvailableTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RebootRallyAvailableTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on RebootRallyAvailableTooltip_C_PreConstruct");
static_assert(sizeof(RebootRallyAvailableTooltip_C_PreConstruct) == 0x000001, "Wrong size on RebootRallyAvailableTooltip_C_PreConstruct");
static_assert(offsetof(RebootRallyAvailableTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'RebootRallyAvailableTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function RebootRallyAvailableTooltip.RebootRallyAvailableTooltip_C.SetTooltipAlignment
// 0x0080 (0x0080 - 0x0000)
struct RebootRallyAvailableTooltip_C_SetTooltipAlignment final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDiscoverInLobbyEnabled_ReturnValue;  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0048(0x0038)(NoDestructor)
};
static_assert(alignof(RebootRallyAvailableTooltip_C_SetTooltipAlignment) == 0x000008, "Wrong alignment on RebootRallyAvailableTooltip_C_SetTooltipAlignment");
static_assert(sizeof(RebootRallyAvailableTooltip_C_SetTooltipAlignment) == 0x000080, "Wrong size on RebootRallyAvailableTooltip_C_SetTooltipAlignment");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, Temp_bool_Variable) == 0x000000, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, Temp_struct_Variable) == 0x000008, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, Temp_struct_Variable_1) == 0x000018, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000028, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, CallFunc_GetIsDiscoverInLobbyEnabled_ReturnValue) == 0x000030, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::CallFunc_GetIsDiscoverInLobbyEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, K2Node_Select_Default) == 0x000038, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_SetTooltipAlignment, K2Node_MakeStruct_WidgetTransform) == 0x000048, "Member 'RebootRallyAvailableTooltip_C_SetTooltipAlignment::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function RebootRallyAvailableTooltip.RebootRallyAvailableTooltip_C.UpdateText
// 0x0078 (0x0078 - 0x0000)
struct RebootRallyAvailableTooltip_C_UpdateText final
{
public:
	ECommonInputType                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0018)()
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0030(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0048(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)(ConstParm)
};
static_assert(alignof(RebootRallyAvailableTooltip_C_UpdateText) == 0x000008, "Wrong alignment on RebootRallyAvailableTooltip_C_UpdateText");
static_assert(sizeof(RebootRallyAvailableTooltip_C_UpdateText) == 0x000078, "Wrong size on RebootRallyAvailableTooltip_C_UpdateText");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, Temp_byte_Variable) == 0x000000, "Member 'RebootRallyAvailableTooltip_C_UpdateText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'RebootRallyAvailableTooltip_C_UpdateText::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'RebootRallyAvailableTooltip_C_UpdateText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, CallFunc_GetCurrentInputType_ReturnValue) == 0x000028, "Member 'RebootRallyAvailableTooltip_C_UpdateText::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000030, "Member 'RebootRallyAvailableTooltip_C_UpdateText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000048, "Member 'RebootRallyAvailableTooltip_C_UpdateText::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RebootRallyAvailableTooltip_C_UpdateText, K2Node_Select_Default) == 0x000060, "Member 'RebootRallyAvailableTooltip_C_UpdateText::K2Node_Select_Default' has a wrong offset!");

}

