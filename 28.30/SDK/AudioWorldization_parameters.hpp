#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioWorldization

#include "Basic.hpp"

#include "AudioWorldization_structs.hpp"


namespace SDK::Params
{

// Function AudioWorldization.AudioWorldizationSubsystem.OverrideEffectSends
// 0x0018 (0x0018 - 0x0000)
struct AudioWorldizationSubsystem_OverrideEffectSends final
{
public:
	class FName                                   InIdentifier;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAudioWorldizationSend>         InSends;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_OverrideEffectSends) == 0x000008, "Wrong alignment on AudioWorldizationSubsystem_OverrideEffectSends");
static_assert(sizeof(AudioWorldizationSubsystem_OverrideEffectSends) == 0x000018, "Wrong size on AudioWorldizationSubsystem_OverrideEffectSends");
static_assert(offsetof(AudioWorldizationSubsystem_OverrideEffectSends, InIdentifier) == 0x000000, "Member 'AudioWorldizationSubsystem_OverrideEffectSends::InIdentifier' has a wrong offset!");
static_assert(offsetof(AudioWorldizationSubsystem_OverrideEffectSends, InSends) == 0x000008, "Member 'AudioWorldizationSubsystem_OverrideEffectSends::InSends' has a wrong offset!");

// Function AudioWorldization.AudioWorldizationSubsystem.RemoveEffectSendOverride
// 0x0004 (0x0004 - 0x0000)
struct AudioWorldizationSubsystem_RemoveEffectSendOverride final
{
public:
	class FName                                   InIdentifier;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_RemoveEffectSendOverride) == 0x000004, "Wrong alignment on AudioWorldizationSubsystem_RemoveEffectSendOverride");
static_assert(sizeof(AudioWorldizationSubsystem_RemoveEffectSendOverride) == 0x000004, "Wrong size on AudioWorldizationSubsystem_RemoveEffectSendOverride");
static_assert(offsetof(AudioWorldizationSubsystem_RemoveEffectSendOverride, InIdentifier) == 0x000000, "Member 'AudioWorldizationSubsystem_RemoveEffectSendOverride::InIdentifier' has a wrong offset!");

// Function AudioWorldization.AudioWorldizationSubsystem.RemoveWorldizationSettings
// 0x0004 (0x0004 - 0x0000)
struct AudioWorldizationSubsystem_RemoveWorldizationSettings final
{
public:
	class FName                                   InIdentifier;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_RemoveWorldizationSettings) == 0x000004, "Wrong alignment on AudioWorldizationSubsystem_RemoveWorldizationSettings");
static_assert(sizeof(AudioWorldizationSubsystem_RemoveWorldizationSettings) == 0x000004, "Wrong size on AudioWorldizationSubsystem_RemoveWorldizationSettings");
static_assert(offsetof(AudioWorldizationSubsystem_RemoveWorldizationSettings, InIdentifier) == 0x000000, "Member 'AudioWorldizationSubsystem_RemoveWorldizationSettings::InIdentifier' has a wrong offset!");

// Function AudioWorldization.AudioWorldizationSubsystem.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct AudioWorldizationSubsystem_SetEnabled final
{
public:
	bool                                          bNewEnabled;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_SetEnabled) == 0x000001, "Wrong alignment on AudioWorldizationSubsystem_SetEnabled");
static_assert(sizeof(AudioWorldizationSubsystem_SetEnabled) == 0x000001, "Wrong size on AudioWorldizationSubsystem_SetEnabled");
static_assert(offsetof(AudioWorldizationSubsystem_SetEnabled, bNewEnabled) == 0x000000, "Member 'AudioWorldizationSubsystem_SetEnabled::bNewEnabled' has a wrong offset!");

// Function AudioWorldization.AudioWorldizationSubsystem.SetWorldizationSettings
// 0x0078 (0x0078 - 0x0000)
struct AudioWorldizationSubsystem_SetWorldizationSettings final
{
public:
	struct FAudioWorldizationSettings             InSettings;                                        // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_SetWorldizationSettings) == 0x000008, "Wrong alignment on AudioWorldizationSubsystem_SetWorldizationSettings");
static_assert(sizeof(AudioWorldizationSubsystem_SetWorldizationSettings) == 0x000078, "Wrong size on AudioWorldizationSubsystem_SetWorldizationSettings");
static_assert(offsetof(AudioWorldizationSubsystem_SetWorldizationSettings, InSettings) == 0x000000, "Member 'AudioWorldizationSubsystem_SetWorldizationSettings::InSettings' has a wrong offset!");

// Function AudioWorldization.AudioWorldizationSubsystem.GetEnclosureFactor
// 0x0004 (0x0004 - 0x0000)
struct AudioWorldizationSubsystem_GetEnclosureFactor final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_GetEnclosureFactor) == 0x000004, "Wrong alignment on AudioWorldizationSubsystem_GetEnclosureFactor");
static_assert(sizeof(AudioWorldizationSubsystem_GetEnclosureFactor) == 0x000004, "Wrong size on AudioWorldizationSubsystem_GetEnclosureFactor");
static_assert(offsetof(AudioWorldizationSubsystem_GetEnclosureFactor, ReturnValue) == 0x000000, "Member 'AudioWorldizationSubsystem_GetEnclosureFactor::ReturnValue' has a wrong offset!");

// Function AudioWorldization.AudioWorldizationSubsystem.GetWallDistanceRatio
// 0x0004 (0x0004 - 0x0000)
struct AudioWorldizationSubsystem_GetWallDistanceRatio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioWorldizationSubsystem_GetWallDistanceRatio) == 0x000004, "Wrong alignment on AudioWorldizationSubsystem_GetWallDistanceRatio");
static_assert(sizeof(AudioWorldizationSubsystem_GetWallDistanceRatio) == 0x000004, "Wrong size on AudioWorldizationSubsystem_GetWallDistanceRatio");
static_assert(offsetof(AudioWorldizationSubsystem_GetWallDistanceRatio, ReturnValue) == 0x000000, "Member 'AudioWorldizationSubsystem_GetWallDistanceRatio::ReturnValue' has a wrong offset!");

}

