#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActiveAugments_Timer

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ActiveAugments_Timer.WBP_ActiveAugments_Timer_C.ExecuteUbergraph_WBP_ActiveAugments_Timer
// 0x0038 (0x0038 - 0x0000)
struct WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NumPendingAugmentsToGrant;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_TimeRemaining;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TimePercentage;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatTime_ReturnValue;                   // 0x0020(0x0018)()
};
static_assert(alignof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer) == 0x000008, "Wrong alignment on WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer");
static_assert(sizeof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer) == 0x000038, "Wrong size on WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, EntryPoint) == 0x000000, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, Temp_byte_Variable) == 0x000004, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, K2Node_Event_NumPendingAugmentsToGrant) == 0x000008, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::K2Node_Event_NumPendingAugmentsToGrant' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, Temp_byte_Variable_1) == 0x00000D, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00000E, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, Temp_bool_Variable) == 0x00000F, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, K2Node_Select_Default) == 0x000010, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, K2Node_Event_TimeRemaining) == 0x000014, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::K2Node_Event_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, K2Node_Event_TimePercentage) == 0x000018, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::K2Node_Event_TimePercentage' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer, CallFunc_FormatTime_ReturnValue) == 0x000020, "Member 'WBP_ActiveAugments_Timer_C_ExecuteUbergraph_WBP_ActiveAugments_Timer::CallFunc_FormatTime_ReturnValue' has a wrong offset!");

// Function WBP_ActiveAugments_Timer.WBP_ActiveAugments_Timer_C.OnNumPendingAugmentsToGrantUpdated
// 0x0004 (0x0004 - 0x0000)
struct WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated final
{
public:
	int32                                         NumPendingAugmentsToGrant;                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated) == 0x000004, "Wrong alignment on WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated");
static_assert(sizeof(WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated) == 0x000004, "Wrong size on WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated, NumPendingAugmentsToGrant) == 0x000000, "Member 'WBP_ActiveAugments_Timer_C_OnNumPendingAugmentsToGrantUpdated::NumPendingAugmentsToGrant' has a wrong offset!");

// Function WBP_ActiveAugments_Timer.WBP_ActiveAugments_Timer_C.OnTimerUpdated
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActiveAugments_Timer_C_OnTimerUpdated final
{
public:
	float                                         TimeRemaining;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimePercentage;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveAugments_Timer_C_OnTimerUpdated) == 0x000004, "Wrong alignment on WBP_ActiveAugments_Timer_C_OnTimerUpdated");
static_assert(sizeof(WBP_ActiveAugments_Timer_C_OnTimerUpdated) == 0x000008, "Wrong size on WBP_ActiveAugments_Timer_C_OnTimerUpdated");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_OnTimerUpdated, TimeRemaining) == 0x000000, "Member 'WBP_ActiveAugments_Timer_C_OnTimerUpdated::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_ActiveAugments_Timer_C_OnTimerUpdated, TimePercentage) == 0x000004, "Member 'WBP_ActiveAugments_Timer_C_OnTimerUpdated::TimePercentage' has a wrong offset!");

}

