#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemVariant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_UIKit_ItemCard_Base_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UIKit_ItemVariant.WBP_UIKit_ItemVariant_C
// 0x0010 (0x1750 - 0x1740)
class UWBP_UIKit_ItemVariant_C : public UWBP_UIKit_ItemCard_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_UIKit_ItemVariant_C;            // 0x1738(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortVariantItemVM*                     FortVariantItemVM;                                 // 0x1740(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_UIKit_StatusIndicator_C*           StatusIndicator_Owned;                             // 0x1748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void ExecuteUbergraph_WBP_UIKit_ItemVariant(int32 EntryPoint);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void PreConstruct(bool IsDesignTime);
	void SetFortVariantItemVM(class UFortVariantItemVM* ViewModel);
	void SetItemIsDisabled(bool Disabled);
	void SetItemIsOwned(bool IsOwned);
	void SetVariantDisplayInfo(const struct FVariantDisplayInfo& VariantDisplayInfo);

	void OwnedVisibility(bool IsOwned, ESlateVisibility* NewParam) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UIKit_ItemVariant_C">();
	}
	static class UWBP_UIKit_ItemVariant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UIKit_ItemVariant_C>();
	}
};
static_assert(alignof(UWBP_UIKit_ItemVariant_C) == 0x000010, "Wrong alignment on UWBP_UIKit_ItemVariant_C");
static_assert(sizeof(UWBP_UIKit_ItemVariant_C) == 0x001750, "Wrong size on UWBP_UIKit_ItemVariant_C");
static_assert(offsetof(UWBP_UIKit_ItemVariant_C, UberGraphFrame_WBP_UIKit_ItemVariant_C) == 0x001738, "Member 'UWBP_UIKit_ItemVariant_C::UberGraphFrame_WBP_UIKit_ItemVariant_C' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemVariant_C, FortVariantItemVM) == 0x001740, "Member 'UWBP_UIKit_ItemVariant_C::FortVariantItemVM' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemVariant_C, StatusIndicator_Owned) == 0x001748, "Member 'UWBP_UIKit_ItemVariant_C::StatusIndicator_Owned' has a wrong offset!");

}

