#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_ItemDescription_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "E_UIKit_ItemDescription_TextWrapType_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "E_UI_TagType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UIKit_ItemDescription_Base.WBP_UIKit_ItemDescription_Base_C
// 0x0150 (0x0410 - 0x02C0)
class UWBP_UIKit_ItemDescription_Base_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGridPanel*                             GameCompatible;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               ModeTagsBox;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Tag_C*                       RarityTag;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Root;                                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Compatibilty;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxTitle;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Bottom;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_Body;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Compatibility;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Title;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         TitleFont;                                         // 0x0318(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateColor                            TitleColor;                                        // 0x0370(0x0014)(Edit, BlueprintVisible)
	int32                                         TagRow;                                            // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TitleRow;                                          // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BodyTextRow;                                       // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                TitlePadding;                                      // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                TagPadding;                                        // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideBodyText;                                      // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                BodyTextPadding;                                   // 0x03B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UIKit_ItemDescription_TextWrapType          TitleWrap;                                         // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideCompatibility;                                 // 0x03C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6[0x2];                                      // 0x03C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CompatibilityRow;                                  // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CompatibilityPadding;                              // 0x03CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GameTagClass;                                      // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_UI_TagType                                  GameTagType;                                       // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           GameTags;                                          // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HideRarityTag;                                     // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TitleMaxHeight;                                    // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TagWrapSizeDefault;                                // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TagWrapSizeMobile;                                 // 0x0409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddCompatibilityTags(TArray<class FText>& GameTags_0);
	void BP_OnWidgetStyled();
	void ExecuteUbergraph_WBP_UIKit_ItemDescription_Base(int32 EntryPoint);
	void InitializeWidget();
	void PreConstruct(bool IsDesignTime);
	void PresetForDesignTime();
	void SetBodyText(const class FText& Text);
	void SetBodyTextVisibility(bool Show_Text);
	void SetCategoryText(const class FText& Text);
	void SetCompatibilityTags(const TSet<ECosmeticCompatibleMode>& Names);
	void SetCompatibilityText(const class FText& Text);
	void SetCompatibilityVisibility(bool Show);
	void SetRarityTagColors(const struct FFortColorPalette& FortColorPalette);
	void SetRarityTagVisibility(bool ShowTag);
	void SetRarityText(const class FText& Text);
	void SetStyleText(const class FText& Text);
	void SetTitleText(const class FText& Text);
	void SetWidgetLayout();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UIKit_ItemDescription_Base_C">();
	}
	static class UWBP_UIKit_ItemDescription_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UIKit_ItemDescription_Base_C>();
	}
};
static_assert(alignof(UWBP_UIKit_ItemDescription_Base_C) == 0x000008, "Wrong alignment on UWBP_UIKit_ItemDescription_Base_C");
static_assert(sizeof(UWBP_UIKit_ItemDescription_Base_C) == 0x000410, "Wrong size on UWBP_UIKit_ItemDescription_Base_C");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_UIKit_ItemDescription_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, GameCompatible) == 0x0002C8, "Member 'UWBP_UIKit_ItemDescription_Base_C::GameCompatible' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, ModeTagsBox) == 0x0002D0, "Member 'UWBP_UIKit_ItemDescription_Base_C::ModeTagsBox' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, RarityTag) == 0x0002D8, "Member 'UWBP_UIKit_ItemDescription_Base_C::RarityTag' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, Root) == 0x0002E0, "Member 'UWBP_UIKit_ItemDescription_Base_C::Root' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, SizeBox_Compatibilty) == 0x0002E8, "Member 'UWBP_UIKit_ItemDescription_Base_C::SizeBox_Compatibilty' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, SizeBoxTitle) == 0x0002F0, "Member 'UWBP_UIKit_ItemDescription_Base_C::SizeBoxTitle' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, Slot_Bottom) == 0x0002F8, "Member 'UWBP_UIKit_ItemDescription_Base_C::Slot_Bottom' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, Text_Body) == 0x000300, "Member 'UWBP_UIKit_ItemDescription_Base_C::Text_Body' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, Text_Compatibility) == 0x000308, "Member 'UWBP_UIKit_ItemDescription_Base_C::Text_Compatibility' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, Text_Title) == 0x000310, "Member 'UWBP_UIKit_ItemDescription_Base_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TitleFont) == 0x000318, "Member 'UWBP_UIKit_ItemDescription_Base_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TitleColor) == 0x000370, "Member 'UWBP_UIKit_ItemDescription_Base_C::TitleColor' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TagRow) == 0x000384, "Member 'UWBP_UIKit_ItemDescription_Base_C::TagRow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TitleRow) == 0x000388, "Member 'UWBP_UIKit_ItemDescription_Base_C::TitleRow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, BodyTextRow) == 0x00038C, "Member 'UWBP_UIKit_ItemDescription_Base_C::BodyTextRow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TitlePadding) == 0x000390, "Member 'UWBP_UIKit_ItemDescription_Base_C::TitlePadding' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TagPadding) == 0x0003A0, "Member 'UWBP_UIKit_ItemDescription_Base_C::TagPadding' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, HideBodyText) == 0x0003B0, "Member 'UWBP_UIKit_ItemDescription_Base_C::HideBodyText' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, BodyTextPadding) == 0x0003B4, "Member 'UWBP_UIKit_ItemDescription_Base_C::BodyTextPadding' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TitleWrap) == 0x0003C4, "Member 'UWBP_UIKit_ItemDescription_Base_C::TitleWrap' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, HideCompatibility) == 0x0003C5, "Member 'UWBP_UIKit_ItemDescription_Base_C::HideCompatibility' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, CompatibilityRow) == 0x0003C8, "Member 'UWBP_UIKit_ItemDescription_Base_C::CompatibilityRow' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, CompatibilityPadding) == 0x0003CC, "Member 'UWBP_UIKit_ItemDescription_Base_C::CompatibilityPadding' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, GameTagClass) == 0x0003E0, "Member 'UWBP_UIKit_ItemDescription_Base_C::GameTagClass' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, GameTagType) == 0x0003E8, "Member 'UWBP_UIKit_ItemDescription_Base_C::GameTagType' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, GameTags) == 0x0003F0, "Member 'UWBP_UIKit_ItemDescription_Base_C::GameTags' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, HideRarityTag) == 0x000400, "Member 'UWBP_UIKit_ItemDescription_Base_C::HideRarityTag' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TitleMaxHeight) == 0x000404, "Member 'UWBP_UIKit_ItemDescription_Base_C::TitleMaxHeight' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TagWrapSizeDefault) == 0x000408, "Member 'UWBP_UIKit_ItemDescription_Base_C::TagWrapSizeDefault' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_ItemDescription_Base_C, TagWrapSizeMobile) == 0x000409, "Member 'UWBP_UIKit_ItemDescription_Base_C::TagWrapSizeMobile' has a wrong offset!");

}

