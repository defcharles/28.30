#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CategorySet

#include "Basic.hpp"

#include "ELockerTileSize_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CategorySet.WBP_CategorySet_C
// 0x0068 (0x0328 - 0x02C0)
class UWBP_CategorySet_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortLockerCategoryGroupVM*             FortLockerCategoryGroupVM;                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFortDynamicEntryBox*                   CategoryBottom;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortDynamicEntryBox*                   CategoryTopRow;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_1;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ELockerTileSize                               Tile_Size;                                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                FirstTile;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnCategoryClicked;                                 // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UFortLockerCategoryItemVM*>      VisibleItems;                                      // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UUserWidget* CategoryItemEntryObject)> OnCategoryItemSetup;                               // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void ExecuteUbergraph_WBP_CategorySet(int32 EntryPoint);
	void HandleCategoryClicked();
	void OnListItemObjectSet(class UObject* ListItemObject);
	void PreConstruct(bool IsDesignTime);
	void ResetItems();
	void SetFortLockerCategoryGroupVM(class UFortLockerCategoryGroupVM* ViewModel);
	void SetRowDistance(bool EnableSpacer);
	void SetupCategoryItem(class UFortLockerCategoryItemVM* Category, bool IsSecondRow);
	void SetupCategoryRows(TArray<class UFortLockerCategoryItemVM*>& CategoryItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CategorySet_C">();
	}
	static class UWBP_CategorySet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CategorySet_C>();
	}
};
static_assert(alignof(UWBP_CategorySet_C) == 0x000008, "Wrong alignment on UWBP_CategorySet_C");
static_assert(sizeof(UWBP_CategorySet_C) == 0x000328, "Wrong size on UWBP_CategorySet_C");
static_assert(offsetof(UWBP_CategorySet_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_CategorySet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, FortLockerCategoryGroupVM) == 0x0002C8, "Member 'UWBP_CategorySet_C::FortLockerCategoryGroupVM' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, CategoryBottom) == 0x0002D0, "Member 'UWBP_CategorySet_C::CategoryBottom' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, CategoryTopRow) == 0x0002D8, "Member 'UWBP_CategorySet_C::CategoryTopRow' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, Spacer_1) == 0x0002E0, "Member 'UWBP_CategorySet_C::Spacer_1' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, Tile_Size) == 0x0002E8, "Member 'UWBP_CategorySet_C::Tile_Size' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, FirstTile) == 0x0002F0, "Member 'UWBP_CategorySet_C::FirstTile' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, OnCategoryClicked) == 0x0002F8, "Member 'UWBP_CategorySet_C::OnCategoryClicked' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, VisibleItems) == 0x000308, "Member 'UWBP_CategorySet_C::VisibleItems' has a wrong offset!");
static_assert(offsetof(UWBP_CategorySet_C, OnCategoryItemSetup) == 0x000318, "Member 'UWBP_CategorySet_C::OnCategoryItemSetup' has a wrong offset!");

}

