#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengeListEntry_LockedQuest

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.BP_OnChallengeInfoSet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet) == 0x000001, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet, bDisabled) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet::bDisabled' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged, bIsSelected_0) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged::bIsSelected_0' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest
// 0x0620 (0x0620 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0044(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0080(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F8(0x0078)(ConstParm)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisabled;                            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x019C(0x0014)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockedWidgetUnlockType                       K2Node_Event_InUnlockType;                         // 0x01B8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_Int64Int64_ReturnValue;           // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x1];                                      // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x01C0(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0230(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetFinalCategoryName_CategoryName;        // 0x0280(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0298(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02E8(0x0010)(ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemDescription_ReturnValue;           // 0x0300(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0318(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0368(0x0010)(ReferenceParm)
	struct FTimespan                              CallFunc_GetTimeSinceEventStart_ReturnValue;       // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetTimeSinceEventStart_ReturnValue_1;     // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_TimespanTimespan_ReturnValue;    // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_TimespanTimespan_ReturnValue_1;  // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFinalCategoryName_CategoryName_1;      // 0x0398(0x0018)()
	class FText                                   CallFunc_GetFinalCategoryName_CategoryName_2;      // 0x03B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x03C8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0418(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0468(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0478(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetFinalDisplayText_DisplayText;          // 0x0488(0x0018)()
	class FText                                   CallFunc_GetFinalDisplayText_DisplayText_1;        // 0x04A0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04B8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04D0(0x0018)()
	class FText                                   CallFunc_GetFinalDisplayText_DisplayText_2;        // 0x04E8(0x0018)()
	class FText                                   CallFunc_GetFinalDisplayText_DisplayText_3;        // 0x0500(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0518(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0530(0x0018)()
	class UMaterialInstance*                      CallFunc_GetFinalDisplayIcon_DisplayIcon;          // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0xE];                                      // 0x0552(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0560(0x00C0)()
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest) == 0x000010, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest) == 0x000620, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, EntryPoint) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable) == 0x000004, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_text_Variable) == 0x000010, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_text_Variable_1) == 0x000028, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable_1) == 0x000040, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_byte_Variable) == 0x000041, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_byte_Variable_1) == 0x000042, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_MyGeometry) == 0x000044, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_MouseEvent_1) == 0x000080, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_MouseEvent) == 0x0000F8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_bIsSelected) == 0x000170, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimation_ReturnValue) == 0x000178, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000180, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000188, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimation_ReturnValue_1) == 0x000190, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_bDisabled) == 0x000198, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_bDisabled' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default) == 0x000199, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_SlateColor) == 0x00019C, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001B0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_InUnlockType) == 0x0001B8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_InUnlockType' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Greater_Int64Int64_ReturnValue) == 0x0001B9, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Greater_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_SwitchEnum_CmpSuccess) == 0x0001BA, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0001BC, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default_1) == 0x0001C0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0001D8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData) == 0x0001E0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_1) == 0x000230, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalCategoryName_CategoryName) == 0x000280, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalCategoryName_CategoryName' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_2) == 0x000298, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array) == 0x0002E8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x0002F8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetItemDescription_ReturnValue) == 0x000300, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetItemDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_3) == 0x000318, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array_1) == 0x000368, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetTimeSinceEventStart_ReturnValue) == 0x000378, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetTimeSinceEventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetTimeSinceEventStart_ReturnValue_1) == 0x000380, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetTimeSinceEventStart_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Subtract_TimespanTimespan_ReturnValue) == 0x000388, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Subtract_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Subtract_TimespanTimespan_ReturnValue_1) == 0x000390, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Subtract_TimespanTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalCategoryName_CategoryName_1) == 0x000398, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalCategoryName_CategoryName_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalCategoryName_CategoryName_2) == 0x0003B0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalCategoryName_CategoryName_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_4) == 0x0003C8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_5) == 0x000418, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array_2) == 0x000468, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array_3) == 0x000478, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalDisplayText_DisplayText) == 0x000488, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalDisplayText_DisplayText' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalDisplayText_DisplayText_1) == 0x0004A0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalDisplayText_DisplayText_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue) == 0x0004B8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue_1) == 0x0004D0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalDisplayText_DisplayText_2) == 0x0004E8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalDisplayText_DisplayText_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalDisplayText_DisplayText_3) == 0x000500, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalDisplayText_DisplayText_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue_2) == 0x000518, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue_3) == 0x000530, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalDisplayIcon_DisplayIcon) == 0x000548, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalDisplayIcon_DisplayIcon' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_IsUsingTouch_ReturnValue) == 0x000550, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_IsValid_ReturnValue) == 0x000551, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_SlateBrush) == 0x000560, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.GetFinalCategoryName
// 0x0020 (0x0020 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName final
{
public:
	class FText                                   CategoryName;                                      // 0x0000(0x0018)(Parm, OutParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName) == 0x000020, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName, CategoryName) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName::CategoryName' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalCategoryName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.GetFinalDisplayIcon
// 0x0010 (0x0010 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon final
{
public:
	class UMaterialInstance*                      DisplayIcon;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon) == 0x000010, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon, DisplayIcon) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon::DisplayIcon' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.GetFinalDisplayText
// 0x0038 (0x0038 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText final
{
public:
	class FText                                   DefaultText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   DisplayText;                                       // 0x0018(0x0018)(Parm, OutParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText) == 0x000038, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText, DefaultText) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText::DefaultText' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText, DisplayText) == 0x000018, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText::DisplayText' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText, CallFunc_TextIsEmpty_ReturnValue) == 0x000030, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000031, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayText::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.GetFormattedTime
// 0x0078 (0x0078 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime final
{
public:
	struct FTimespan                              TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutputString;                                      // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime) == 0x000078, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, TimeRemaining) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::TimeRemaining' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, OutputString) == 0x000008, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::OutputString' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, Temp_bool_Variable) == 0x000020, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, CallFunc_GetTimespanAsText_ReturnValue) == 0x000028, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, Temp_text_Variable) == 0x000040, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, CallFunc_TextIsEmpty_ReturnValue) == 0x000058, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, K2Node_Select_Default) == 0x000060, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::K2Node_Select_Default' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.OnInitDisplayText
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText final
{
public:
	ELockedWidgetUnlockType                       InUnlockType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText) == 0x000001, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText, InUnlockType) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText::InUnlockType' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter) == 0x0000B0, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave) == 0x000078, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave::MouseEvent' has a wrong offset!");

}

