#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_Frame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LinedNotebook_Frame.WBP_LinedNotebook_Frame_C
// 0x0060 (0x0320 - 0x02C0)
class UWBP_LinedNotebook_Frame_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 M_Frame_Bot;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Frame_Left;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Frame_Right;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Frame_Top;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Scrach_C*            scrach_bottom_left;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Scrach_C*            scrach_bottom_right;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Scrach_C*            scrach_top_left;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_Scrach_C*            scrach_top_right;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasSideBars;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PurpleIntensity;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasScraches;                                       // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DrawAgain();
	void ExecuteUbergraph_WBP_LinedNotebook_Frame(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LinedNotebook_Frame_C">();
	}
	static class UWBP_LinedNotebook_Frame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LinedNotebook_Frame_C>();
	}
};
static_assert(alignof(UWBP_LinedNotebook_Frame_C) == 0x000008, "Wrong alignment on UWBP_LinedNotebook_Frame_C");
static_assert(sizeof(UWBP_LinedNotebook_Frame_C) == 0x000320, "Wrong size on UWBP_LinedNotebook_Frame_C");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_LinedNotebook_Frame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, M_Frame_Bot) == 0x0002C8, "Member 'UWBP_LinedNotebook_Frame_C::M_Frame_Bot' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, M_Frame_Left) == 0x0002D0, "Member 'UWBP_LinedNotebook_Frame_C::M_Frame_Left' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, M_Frame_Right) == 0x0002D8, "Member 'UWBP_LinedNotebook_Frame_C::M_Frame_Right' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, M_Frame_Top) == 0x0002E0, "Member 'UWBP_LinedNotebook_Frame_C::M_Frame_Top' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, scrach_bottom_left) == 0x0002E8, "Member 'UWBP_LinedNotebook_Frame_C::scrach_bottom_left' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, scrach_bottom_right) == 0x0002F0, "Member 'UWBP_LinedNotebook_Frame_C::scrach_bottom_right' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, scrach_top_left) == 0x0002F8, "Member 'UWBP_LinedNotebook_Frame_C::scrach_top_left' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, scrach_top_right) == 0x000300, "Member 'UWBP_LinedNotebook_Frame_C::scrach_top_right' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, HasSideBars) == 0x000308, "Member 'UWBP_LinedNotebook_Frame_C::HasSideBars' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, PurpleIntensity) == 0x000310, "Member 'UWBP_LinedNotebook_Frame_C::PurpleIntensity' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_Frame_C, HasScraches) == 0x000318, "Member 'UWBP_LinedNotebook_Frame_C::HasScraches' has a wrong offset!");

}

