#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_KeyArt

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_LinedNotebook_KeyArt.WBP_LinedNotebook_KeyArt_C.ExecuteUbergraph_WBP_LinedNotebook_KeyArt
// 0x0018 (0x0018 - 0x0000)
struct WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LinedNotebook_FlameFX_C*           K2Node_CustomEvent_FlameFX_RightHand;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           K2Node_CustomEvent_FlameFX_LeftHand;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt) == 0x000008, "Wrong alignment on WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt");
static_assert(sizeof(WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt) == 0x000018, "Wrong size on WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt");
static_assert(offsetof(WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt, EntryPoint) == 0x000000, "Member 'WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt, K2Node_CustomEvent_FlameFX_RightHand) == 0x000008, "Member 'WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt::K2Node_CustomEvent_FlameFX_RightHand' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt, K2Node_CustomEvent_FlameFX_LeftHand) == 0x000010, "Member 'WBP_LinedNotebook_KeyArt_C_ExecuteUbergraph_WBP_LinedNotebook_KeyArt::K2Node_CustomEvent_FlameFX_LeftHand' has a wrong offset!");

// Function WBP_LinedNotebook_KeyArt.WBP_LinedNotebook_KeyArt_C.FlameFX_LeftHand_Ignite
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite final
{
public:
	class UWBP_LinedNotebook_FlameFX_C*           FlameFX_LeftHand;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite) == 0x000008, "Wrong alignment on WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite");
static_assert(sizeof(WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite) == 0x000008, "Wrong size on WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite");
static_assert(offsetof(WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite, FlameFX_LeftHand) == 0x000000, "Member 'WBP_LinedNotebook_KeyArt_C_FlameFX_LeftHand_Ignite::FlameFX_LeftHand' has a wrong offset!");

// Function WBP_LinedNotebook_KeyArt.WBP_LinedNotebook_KeyArt_C.FlameFX_RightHand_Ignite
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite final
{
public:
	class UWBP_LinedNotebook_FlameFX_C*           FlameFX_RightHand;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite) == 0x000008, "Wrong alignment on WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite");
static_assert(sizeof(WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite) == 0x000008, "Wrong size on WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite");
static_assert(offsetof(WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite, FlameFX_RightHand) == 0x000000, "Member 'WBP_LinedNotebook_KeyArt_C_FlameFX_RightHand_Ignite::FlameFX_RightHand' has a wrong offset!");

}

