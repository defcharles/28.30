#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hoverboard_V2

#include "Basic.hpp"

#include "Hoverboard_V2_classes.hpp"
#include "Hoverboard_V2_parameters.hpp"


namespace SDK
{

// Function Hoverboard_V2.Hoverboard_V2_C.BP_CanBoost
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHoverboard_V2_C::BP_CanBoost()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_CanBoost");

	Params::Hoverboard_V2_C_BP_CanBoost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hoverboard_V2.Hoverboard_V2_C.BP_OnEmptyFuel
// (Event, Public, BlueprintEvent)

void AHoverboard_V2_C::BP_OnEmptyFuel()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnEmptyFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hoverboard_V2.Hoverboard_V2_C.BP_OnGainedFuel
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   NewPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::BP_OnGainedFuel(float NewPercent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnGainedFuel");

	Params::Hoverboard_V2_C_BP_OnGainedFuel Parms{};

	Parms.NewPercent = NewPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.CheckWaterEvent
// (BlueprintCallable, BlueprintEvent)

void AHoverboard_V2_C::CheckWaterEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheckWaterEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hoverboard_V2.Hoverboard_V2_C.DeactivateComponents
// (Public, BlueprintCallable, BlueprintEvent)

void AHoverboard_V2_C::DeactivateComponents()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DeactivateComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hoverboard_V2.Hoverboard_V2_C.ExecuteUbergraph_Hoverboard_V2
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::ExecuteUbergraph_Hoverboard_V2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ExecuteUbergraph_Hoverboard_V2");

	Params::Hoverboard_V2_C_ExecuteUbergraph_Hoverboard_V2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnBoostBegin
// (Event, Public, BlueprintEvent)

void AHoverboard_V2_C::OnBoostBegin()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBoostBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnBoostEnd
// (Event, Public, BlueprintEvent)

void AHoverboard_V2_C::OnBoostEnd()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnBoostEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnCollisionHitEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormalImpulse                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitFrictionImpulse                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        HitSurfaceType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::OnCollisionHitEffects(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, const struct FVector& HitFrictionImpulse, const struct FVector& HitNormal, class AActor* HitActor, EPhysicalSurface HitSurfaceType)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCollisionHitEffects");

	Params::Hoverboard_V2_C_OnCollisionHitEffects Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormalImpulse = std::move(HitNormalImpulse);
	Parms.HitFrictionImpulse = std::move(HitFrictionImpulse);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitActor = HitActor;
	Parms.HitSurfaceType = HitSurfaceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AHoverboard_V2_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDeathPlayEffects");

	Params::Hoverboard_V2_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnEnteredWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEnteredWaterBody");

	Params::Hoverboard_V2_C_OnEnteredWaterBody Parms{};

	Parms.WaterBody = WaterBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnEnteredWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEnteredWaterVolume");

	Params::Hoverboard_V2_C_OnEnteredWaterVolume Parms{};

	Parms.WaterSurfacePoint = std::move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnExitedWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::OnExitedWaterBody(class AFortWaterBodyActor* WaterBody)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnExitedWaterBody");

	Params::Hoverboard_V2_C_OnExitedWaterBody Parms{};

	Parms.WaterBody = WaterBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnExitedWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::OnExitedWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnExitedWaterVolume");

	Params::Hoverboard_V2_C_OnExitedWaterVolume Parms{};

	Parms.WaterSurfacePoint = std::move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.OnJumped
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Charge                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHoverboard_V2_C::OnJumped(float Charge)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnJumped");

	Params::Hoverboard_V2_C_OnJumped Parms{};

	Parms.Charge = Charge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hoverboard_V2.Hoverboard_V2_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AHoverboard_V2_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hoverboard_V2.Hoverboard_V2_C.SetupCosmetics
// (BlueprintCallable, BlueprintEvent)

void AHoverboard_V2_C::SetupCosmetics()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetupCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}

}

