#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "VerseFortnite_structs.hpp"
#include "FortniteAI_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function VerseFortnite.NPCCharacterModifier.BP_ModifySpawnComponentList
// 0x0010 (0x0010 - 0x0000)
struct NPCCharacterModifier_BP_ModifySpawnComponentList final
{
public:
	class UFortAthenaAISpawnerDataComponentList*  OutList;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ComponentOuter;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_BP_ModifySpawnComponentList) == 0x000008, "Wrong alignment on NPCCharacterModifier_BP_ModifySpawnComponentList");
static_assert(sizeof(NPCCharacterModifier_BP_ModifySpawnComponentList) == 0x000010, "Wrong size on NPCCharacterModifier_BP_ModifySpawnComponentList");
static_assert(offsetof(NPCCharacterModifier_BP_ModifySpawnComponentList, OutList) == 0x000000, "Member 'NPCCharacterModifier_BP_ModifySpawnComponentList::OutList' has a wrong offset!");
static_assert(offsetof(NPCCharacterModifier_BP_ModifySpawnComponentList, ComponentOuter) == 0x000008, "Member 'NPCCharacterModifier_BP_ModifySpawnComponentList::ComponentOuter' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier.BP_OnPreSpawned
// 0x0008 (0x0008 - 0x0000)
struct NPCCharacterModifier_BP_OnPreSpawned final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_BP_OnPreSpawned) == 0x000008, "Wrong alignment on NPCCharacterModifier_BP_OnPreSpawned");
static_assert(sizeof(NPCCharacterModifier_BP_OnPreSpawned) == 0x000008, "Wrong size on NPCCharacterModifier_BP_OnPreSpawned");
static_assert(offsetof(NPCCharacterModifier_BP_OnPreSpawned, Pawn) == 0x000000, "Member 'NPCCharacterModifier_BP_OnPreSpawned::Pawn' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier.BP_OnSpawned
// 0x0008 (0x0008 - 0x0000)
struct NPCCharacterModifier_BP_OnSpawned final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_BP_OnSpawned) == 0x000008, "Wrong alignment on NPCCharacterModifier_BP_OnSpawned");
static_assert(sizeof(NPCCharacterModifier_BP_OnSpawned) == 0x000008, "Wrong size on NPCCharacterModifier_BP_OnSpawned");
static_assert(offsetof(NPCCharacterModifier_BP_OnSpawned, Pawn) == 0x000000, "Member 'NPCCharacterModifier_BP_OnSpawned::Pawn' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier.BP_IsDataValid
// 0x0018 (0x0018 - 0x0000)
struct NPCCharacterModifier_BP_IsDataValid final
{
public:
	TArray<class FText>                           OutErrorMessages;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	EDataValidationResult                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NPCCharacterModifier_BP_IsDataValid) == 0x000008, "Wrong alignment on NPCCharacterModifier_BP_IsDataValid");
static_assert(sizeof(NPCCharacterModifier_BP_IsDataValid) == 0x000018, "Wrong size on NPCCharacterModifier_BP_IsDataValid");
static_assert(offsetof(NPCCharacterModifier_BP_IsDataValid, OutErrorMessages) == 0x000000, "Member 'NPCCharacterModifier_BP_IsDataValid::OutErrorMessages' has a wrong offset!");
static_assert(offsetof(NPCCharacterModifier_BP_IsDataValid, ReturnValue) == 0x000010, "Member 'NPCCharacterModifier_BP_IsDataValid::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier.BP_IsNeededForPreview
// 0x0001 (0x0001 - 0x0000)
struct NPCCharacterModifier_BP_IsNeededForPreview final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_BP_IsNeededForPreview) == 0x000001, "Wrong alignment on NPCCharacterModifier_BP_IsNeededForPreview");
static_assert(sizeof(NPCCharacterModifier_BP_IsNeededForPreview) == 0x000001, "Wrong size on NPCCharacterModifier_BP_IsNeededForPreview");
static_assert(offsetof(NPCCharacterModifier_BP_IsNeededForPreview, ReturnValue) == 0x000000, "Member 'NPCCharacterModifier_BP_IsNeededForPreview::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier.GetCharacterDefinition
// 0x0008 (0x0008 - 0x0000)
struct NPCCharacterModifier_GetCharacterDefinition final
{
public:
	class UNPCCharacterDefinition*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_GetCharacterDefinition) == 0x000008, "Wrong alignment on NPCCharacterModifier_GetCharacterDefinition");
static_assert(sizeof(NPCCharacterModifier_GetCharacterDefinition) == 0x000008, "Wrong size on NPCCharacterModifier_GetCharacterDefinition");
static_assert(offsetof(NPCCharacterModifier_GetCharacterDefinition, ReturnValue) == 0x000000, "Member 'NPCCharacterModifier_GetCharacterDefinition::ReturnValue' has a wrong offset!");

// Function VerseFortnite.VerseFortniteMinigameTeamCollection.OnMinigameDestroyed
// 0x0008 (0x0008 - 0x0000)
struct VerseFortniteMinigameTeamCollection_OnMinigameDestroyed final
{
public:
	class AActor*                                 DestroyedMinigame;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteMinigameTeamCollection_OnMinigameDestroyed) == 0x000008, "Wrong alignment on VerseFortniteMinigameTeamCollection_OnMinigameDestroyed");
static_assert(sizeof(VerseFortniteMinigameTeamCollection_OnMinigameDestroyed) == 0x000008, "Wrong size on VerseFortniteMinigameTeamCollection_OnMinigameDestroyed");
static_assert(offsetof(VerseFortniteMinigameTeamCollection_OnMinigameDestroyed, DestroyedMinigame) == 0x000000, "Member 'VerseFortniteMinigameTeamCollection_OnMinigameDestroyed::DestroyedMinigame' has a wrong offset!");

// Function VerseFortnite.VerseFortniteMinigameTeamCollection.OnMinigameSetup
// 0x0008 (0x0008 - 0x0000)
struct VerseFortniteMinigameTeamCollection_OnMinigameSetup final
{
public:
	class AFortMinigame*                          InMinigame;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteMinigameTeamCollection_OnMinigameSetup) == 0x000008, "Wrong alignment on VerseFortniteMinigameTeamCollection_OnMinigameSetup");
static_assert(sizeof(VerseFortniteMinigameTeamCollection_OnMinigameSetup) == 0x000008, "Wrong size on VerseFortniteMinigameTeamCollection_OnMinigameSetup");
static_assert(offsetof(VerseFortniteMinigameTeamCollection_OnMinigameSetup, InMinigame) == 0x000000, "Member 'VerseFortniteMinigameTeamCollection_OnMinigameSetup::InMinigame' has a wrong offset!");

// Function VerseFortnite.FortAthenaAISpawnerDataComponent_Verse.AddUniqueEntityComponent
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent final
{
public:
	TSubclassOf<class UEntityComponent>           EntityComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent) == 0x000008, "Wrong alignment on FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent");
static_assert(sizeof(FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent) == 0x000008, "Wrong size on FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent");
static_assert(offsetof(FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent, EntityComponent) == 0x000000, "Member 'FortAthenaAISpawnerDataComponent_Verse_AddUniqueEntityComponent::EntityComponent' has a wrong offset!");

// Function VerseFortnite.FortAthenaAISpawnerDataComponent_Verse.SetNPCBehaviorScript
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript final
{
public:
	class UNPCBehaviorScript*                     InAIBehaviorScript;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript) == 0x000008, "Wrong alignment on FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript");
static_assert(sizeof(FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript) == 0x000008, "Wrong size on FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript");
static_assert(offsetof(FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript, InAIBehaviorScript) == 0x000000, "Member 'FortAthenaAISpawnerDataComponent_Verse_SetNPCBehaviorScript::InAIBehaviorScript' has a wrong offset!");

// Function VerseFortnite.LoadNPCCharacterDefinitionAsync.LoadCharacterDefinitionAsync
// 0x0040 (0x0040 - 0x0000)
struct LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync final
{
public:
	class UObject*                                ContextObj;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNPCCharacterDefinition> CharacterDefinition;                               // 0x0008(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNPCCharacterModifier*>          AdditionalModifiers;                               // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULoadNPCCharacterDefinitionAsync*       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync) == 0x000008, "Wrong alignment on LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync");
static_assert(sizeof(LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync) == 0x000040, "Wrong size on LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync");
static_assert(offsetof(LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync, ContextObj) == 0x000000, "Member 'LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync::ContextObj' has a wrong offset!");
static_assert(offsetof(LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync, CharacterDefinition) == 0x000008, "Member 'LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync::CharacterDefinition' has a wrong offset!");
static_assert(offsetof(LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync, AdditionalModifiers) == 0x000028, "Member 'LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync::AdditionalModifiers' has a wrong offset!");
static_assert(offsetof(LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync, ReturnValue) == 0x000038, "Member 'LoadNPCCharacterDefinitionAsync_LoadCharacterDefinitionAsync::ReturnValue' has a wrong offset!");

// Function VerseFortnite.LoadAndCreateComponentListAsync.LoadAndCreateComponentListAsync
// 0x0048 (0x0048 - 0x0000)
struct LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync final
{
public:
	class UObject*                                ContextObj;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNPCCharacterDefinition> CharacterDefinition;                               // 0x0008(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNPCCharacterModifier*>          AdditionalModifiers;                               // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bForPreview;                                       // 0x0038(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadAndCreateComponentListAsync*       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync) == 0x000008, "Wrong alignment on LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync");
static_assert(sizeof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync) == 0x000048, "Wrong size on LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync");
static_assert(offsetof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync, ContextObj) == 0x000000, "Member 'LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync::ContextObj' has a wrong offset!");
static_assert(offsetof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync, CharacterDefinition) == 0x000008, "Member 'LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync::CharacterDefinition' has a wrong offset!");
static_assert(offsetof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync, AdditionalModifiers) == 0x000028, "Member 'LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync::AdditionalModifiers' has a wrong offset!");
static_assert(offsetof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync, bForPreview) == 0x000038, "Member 'LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync::bForPreview' has a wrong offset!");
static_assert(offsetof(LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync, ReturnValue) == 0x000040, "Member 'LoadAndCreateComponentListAsync_LoadAndCreateComponentListAsync::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinition.CreateComponentList
// 0x0028 (0x0028 - 0x0000)
struct NPCCharacterDefinition_CreateComponentList final
{
public:
	class UObject*                                Outer_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNPCCharacterModifier*>          AdditionalModifiers;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bForPreview;                                       // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAthenaAISpawnerDataComponentList*  ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinition_CreateComponentList) == 0x000008, "Wrong alignment on NPCCharacterDefinition_CreateComponentList");
static_assert(sizeof(NPCCharacterDefinition_CreateComponentList) == 0x000028, "Wrong size on NPCCharacterDefinition_CreateComponentList");
static_assert(offsetof(NPCCharacterDefinition_CreateComponentList, Outer_0) == 0x000000, "Member 'NPCCharacterDefinition_CreateComponentList::Outer_0' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_CreateComponentList, AdditionalModifiers) == 0x000008, "Member 'NPCCharacterDefinition_CreateComponentList::AdditionalModifiers' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_CreateComponentList, bForPreview) == 0x000018, "Member 'NPCCharacterDefinition_CreateComponentList::bForPreview' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_CreateComponentList, ReturnValue) == 0x000020, "Member 'NPCCharacterDefinition_CreateComponentList::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinition.GetCharacterBlueprint
// 0x0018 (0x0018 - 0x0000)
struct NPCCharacterDefinition_GetCharacterBlueprint final
{
public:
	TArray<class UNPCCharacterModifier*>          AdditionalModifiers;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinition_GetCharacterBlueprint) == 0x000008, "Wrong alignment on NPCCharacterDefinition_GetCharacterBlueprint");
static_assert(sizeof(NPCCharacterDefinition_GetCharacterBlueprint) == 0x000018, "Wrong size on NPCCharacterDefinition_GetCharacterBlueprint");
static_assert(offsetof(NPCCharacterDefinition_GetCharacterBlueprint, AdditionalModifiers) == 0x000000, "Member 'NPCCharacterDefinition_GetCharacterBlueprint::AdditionalModifiers' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_GetCharacterBlueprint, ReturnValue) == 0x000010, "Member 'NPCCharacterDefinition_GetCharacterBlueprint::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinition.GetCharacterCID
// 0x0020 (0x0020 - 0x0000)
struct NPCCharacterDefinition_GetCharacterCID final
{
public:
	class UObject*                                Outer_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNPCCharacterModifier*>          AdditionalModifiers;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class UAthenaCharacterItemDefinition*   ReturnValue;                                       // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinition_GetCharacterCID) == 0x000008, "Wrong alignment on NPCCharacterDefinition_GetCharacterCID");
static_assert(sizeof(NPCCharacterDefinition_GetCharacterCID) == 0x000020, "Wrong size on NPCCharacterDefinition_GetCharacterCID");
static_assert(offsetof(NPCCharacterDefinition_GetCharacterCID, Outer_0) == 0x000000, "Member 'NPCCharacterDefinition_GetCharacterCID::Outer_0' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_GetCharacterCID, AdditionalModifiers) == 0x000008, "Member 'NPCCharacterDefinition_GetCharacterCID::AdditionalModifiers' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_GetCharacterCID, ReturnValue) == 0x000018, "Member 'NPCCharacterDefinition_GetCharacterCID::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinition.GetPreviewMesh
// 0x0030 (0x0030 - 0x0000)
struct NPCCharacterDefinition_GetPreviewMesh final
{
public:
	class UObject*                                Outer_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNPCCharacterModifier*>          AdditionalModifiers;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPreviewMesh>          OutCharacterPreviewMeshes;                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class APawn*                                  OutDefaultPawn;                                    // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinition_GetPreviewMesh) == 0x000008, "Wrong alignment on NPCCharacterDefinition_GetPreviewMesh");
static_assert(sizeof(NPCCharacterDefinition_GetPreviewMesh) == 0x000030, "Wrong size on NPCCharacterDefinition_GetPreviewMesh");
static_assert(offsetof(NPCCharacterDefinition_GetPreviewMesh, Outer_0) == 0x000000, "Member 'NPCCharacterDefinition_GetPreviewMesh::Outer_0' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_GetPreviewMesh, AdditionalModifiers) == 0x000008, "Member 'NPCCharacterDefinition_GetPreviewMesh::AdditionalModifiers' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_GetPreviewMesh, OutCharacterPreviewMeshes) == 0x000018, "Member 'NPCCharacterDefinition_GetPreviewMesh::OutCharacterPreviewMeshes' has a wrong offset!");
static_assert(offsetof(NPCCharacterDefinition_GetPreviewMesh, OutDefaultPawn) == 0x000028, "Member 'NPCCharacterDefinition_GetPreviewMesh::OutDefaultPawn' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinition.GetRequiredAssets
// 0x0010 (0x0010 - 0x0000)
struct NPCCharacterDefinition_GetRequiredAssets final
{
public:
	TArray<struct FSoftObjectPath>                OutAssets;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinition_GetRequiredAssets) == 0x000008, "Wrong alignment on NPCCharacterDefinition_GetRequiredAssets");
static_assert(sizeof(NPCCharacterDefinition_GetRequiredAssets) == 0x000010, "Wrong size on NPCCharacterDefinition_GetRequiredAssets");
static_assert(offsetof(NPCCharacterDefinition_GetRequiredAssets, OutAssets) == 0x000000, "Member 'NPCCharacterDefinition_GetRequiredAssets::OutAssets' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinitionComponent.SetNPCCharacterDefinition
// 0x0020 (0x0020 - 0x0000)
struct NPCCharacterDefinitionComponent_SetNPCCharacterDefinition final
{
public:
	TSoftObjectPtr<class UNPCCharacterDefinition> Definition;                                        // 0x0000(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinitionComponent_SetNPCCharacterDefinition) == 0x000008, "Wrong alignment on NPCCharacterDefinitionComponent_SetNPCCharacterDefinition");
static_assert(sizeof(NPCCharacterDefinitionComponent_SetNPCCharacterDefinition) == 0x000020, "Wrong size on NPCCharacterDefinitionComponent_SetNPCCharacterDefinition");
static_assert(offsetof(NPCCharacterDefinitionComponent_SetNPCCharacterDefinition, Definition) == 0x000000, "Member 'NPCCharacterDefinitionComponent_SetNPCCharacterDefinition::Definition' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinitionComponent.GetNPCCharacterDefinition
// 0x0020 (0x0020 - 0x0000)
struct NPCCharacterDefinitionComponent_GetNPCCharacterDefinition final
{
public:
	TSoftObjectPtr<class UNPCCharacterDefinition> ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinitionComponent_GetNPCCharacterDefinition) == 0x000008, "Wrong alignment on NPCCharacterDefinitionComponent_GetNPCCharacterDefinition");
static_assert(sizeof(NPCCharacterDefinitionComponent_GetNPCCharacterDefinition) == 0x000020, "Wrong size on NPCCharacterDefinitionComponent_GetNPCCharacterDefinition");
static_assert(offsetof(NPCCharacterDefinitionComponent_GetNPCCharacterDefinition, ReturnValue) == 0x000000, "Member 'NPCCharacterDefinitionComponent_GetNPCCharacterDefinition::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterDefinitionComponent.GetNPCCharacterModifiers
// 0x0010 (0x0010 - 0x0000)
struct NPCCharacterDefinitionComponent_GetNPCCharacterModifiers final
{
public:
	TArray<class UNPCCharacterModifier*>          ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterDefinitionComponent_GetNPCCharacterModifiers) == 0x000008, "Wrong alignment on NPCCharacterDefinitionComponent_GetNPCCharacterModifiers");
static_assert(sizeof(NPCCharacterDefinitionComponent_GetNPCCharacterModifiers) == 0x000010, "Wrong size on NPCCharacterDefinitionComponent_GetNPCCharacterModifiers");
static_assert(offsetof(NPCCharacterDefinitionComponent_GetNPCCharacterModifiers, ReturnValue) == 0x000000, "Member 'NPCCharacterDefinitionComponent_GetNPCCharacterModifiers::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier_CosmeticSpawn.GetCharacterCosmetic
// 0x0020 (0x0020 - 0x0000)
struct NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic final
{
public:
	TSoftObjectPtr<class UAthenaCharacterItemDefinition> ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic) == 0x000008, "Wrong alignment on NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic");
static_assert(sizeof(NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic) == 0x000020, "Wrong size on NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic");
static_assert(offsetof(NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic, ReturnValue) == 0x000000, "Member 'NPCCharacterModifier_CosmeticSpawn_GetCharacterCosmetic::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier_Effects.GetCustomEffects
// 0x0010 (0x0010 - 0x0000)
struct NPCCharacterModifier_Effects_GetCustomEffects final
{
public:
	TArray<struct FNPCCustomEffect>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_Effects_GetCustomEffects) == 0x000008, "Wrong alignment on NPCCharacterModifier_Effects_GetCustomEffects");
static_assert(sizeof(NPCCharacterModifier_Effects_GetCustomEffects) == 0x000010, "Wrong size on NPCCharacterModifier_Effects_GetCustomEffects");
static_assert(offsetof(NPCCharacterModifier_Effects_GetCustomEffects, ReturnValue) == 0x000000, "Member 'NPCCharacterModifier_Effects_GetCustomEffects::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterModifier_PatrolPath.GetPatrolPathToAssign
// 0x0010 (0x0010 - 0x0000)
struct NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign final
{
public:
	class AActor*                                 ModifierOwner;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAthenaPatrolPath*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign) == 0x000008, "Wrong alignment on NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign");
static_assert(sizeof(NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign) == 0x000010, "Wrong size on NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign");
static_assert(offsetof(NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign, ModifierOwner) == 0x000000, "Member 'NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign::ModifierOwner' has a wrong offset!");
static_assert(offsetof(NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign, ReturnValue) == 0x000008, "Member 'NPCCharacterModifier_PatrolPath_GetPatrolPathToAssign::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterType.IsPlayerCharacterRequired
// 0x0002 (0x0002 - 0x0000)
struct NPCCharacterType_IsPlayerCharacterRequired final
{
public:
	ECharacterLook                                CharacterLook;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterType_IsPlayerCharacterRequired) == 0x000001, "Wrong alignment on NPCCharacterType_IsPlayerCharacterRequired");
static_assert(sizeof(NPCCharacterType_IsPlayerCharacterRequired) == 0x000002, "Wrong size on NPCCharacterType_IsPlayerCharacterRequired");
static_assert(offsetof(NPCCharacterType_IsPlayerCharacterRequired, CharacterLook) == 0x000000, "Member 'NPCCharacterType_IsPlayerCharacterRequired::CharacterLook' has a wrong offset!");
static_assert(offsetof(NPCCharacterType_IsPlayerCharacterRequired, ReturnValue) == 0x000001, "Member 'NPCCharacterType_IsPlayerCharacterRequired::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterType_FromPreset.GetAIToSpawn
// 0x0020 (0x0020 - 0x0000)
struct NPCCharacterType_FromPreset_GetAIToSpawn final
{
public:
	TSoftClassPtr<class UClass>                   ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterType_FromPreset_GetAIToSpawn) == 0x000008, "Wrong alignment on NPCCharacterType_FromPreset_GetAIToSpawn");
static_assert(sizeof(NPCCharacterType_FromPreset_GetAIToSpawn) == 0x000020, "Wrong size on NPCCharacterType_FromPreset_GetAIToSpawn");
static_assert(offsetof(NPCCharacterType_FromPreset_GetAIToSpawn, ReturnValue) == 0x000000, "Member 'NPCCharacterType_FromPreset_GetAIToSpawn::ReturnValue' has a wrong offset!");

// Function VerseFortnite.NPCCharacterType_FromPreset.GetAvailableAIs
// 0x0010 (0x0010 - 0x0000)
struct NPCCharacterType_FromPreset_GetAvailableAIs final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPCCharacterType_FromPreset_GetAvailableAIs) == 0x000008, "Wrong alignment on NPCCharacterType_FromPreset_GetAvailableAIs");
static_assert(sizeof(NPCCharacterType_FromPreset_GetAvailableAIs) == 0x000010, "Wrong size on NPCCharacterType_FromPreset_GetAvailableAIs");
static_assert(offsetof(NPCCharacterType_FromPreset_GetAvailableAIs, ReturnValue) == 0x000000, "Member 'NPCCharacterType_FromPreset_GetAvailableAIs::ReturnValue' has a wrong offset!");

// Function VerseFortnite.VerseFortniteActorWrapper.OnActorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct VerseFortniteActorWrapper_OnActorDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteActorWrapper_OnActorDestroyed) == 0x000008, "Wrong alignment on VerseFortniteActorWrapper_OnActorDestroyed");
static_assert(sizeof(VerseFortniteActorWrapper_OnActorDestroyed) == 0x000008, "Wrong size on VerseFortniteActorWrapper_OnActorDestroyed");
static_assert(offsetof(VerseFortniteActorWrapper_OnActorDestroyed, DestroyedActor) == 0x000000, "Member 'VerseFortniteActorWrapper_OnActorDestroyed::DestroyedActor' has a wrong offset!");

// Function VerseFortnite.VerseFortniteCharacter.HandlePawnEliminated
// 0x0008 (0x0008 - 0x0000)
struct VerseFortniteCharacter_HandlePawnEliminated final
{
public:
	class AFortPlayerPawnAthena*                  EliminatedPawn;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteCharacter_HandlePawnEliminated) == 0x000008, "Wrong alignment on VerseFortniteCharacter_HandlePawnEliminated");
static_assert(sizeof(VerseFortniteCharacter_HandlePawnEliminated) == 0x000008, "Wrong size on VerseFortniteCharacter_HandlePawnEliminated");
static_assert(offsetof(VerseFortniteCharacter_HandlePawnEliminated, EliminatedPawn) == 0x000000, "Member 'VerseFortniteCharacter_HandlePawnEliminated::EliminatedPawn' has a wrong offset!");

// Function VerseFortnite.VerseFortniteCharacter.HandlePossessedPawnChanged
// 0x0010 (0x0010 - 0x0000)
struct VerseFortniteCharacter_HandlePossessedPawnChanged final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteCharacter_HandlePossessedPawnChanged) == 0x000008, "Wrong alignment on VerseFortniteCharacter_HandlePossessedPawnChanged");
static_assert(sizeof(VerseFortniteCharacter_HandlePossessedPawnChanged) == 0x000010, "Wrong size on VerseFortniteCharacter_HandlePossessedPawnChanged");
static_assert(offsetof(VerseFortniteCharacter_HandlePossessedPawnChanged, OldPawn) == 0x000000, "Member 'VerseFortniteCharacter_HandlePossessedPawnChanged::OldPawn' has a wrong offset!");
static_assert(offsetof(VerseFortniteCharacter_HandlePossessedPawnChanged, NewPawn) == 0x000008, "Member 'VerseFortniteCharacter_HandlePossessedPawnChanged::NewPawn' has a wrong offset!");

// Function VerseFortnite.VerseFortnitePlayspace.OnMinigamePlayerAdded
// 0x0038 (0x0038 - 0x0000)
struct VerseFortnitePlayspace_OnMinigamePlayerAdded final
{
public:
	struct FUniqueNetIdRepl                       UniqueNetId;                                       // 0x0000(0x0030)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocalPlayer;                                    // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VerseFortnitePlayspace_OnMinigamePlayerAdded) == 0x000008, "Wrong alignment on VerseFortnitePlayspace_OnMinigamePlayerAdded");
static_assert(sizeof(VerseFortnitePlayspace_OnMinigamePlayerAdded) == 0x000038, "Wrong size on VerseFortnitePlayspace_OnMinigamePlayerAdded");
static_assert(offsetof(VerseFortnitePlayspace_OnMinigamePlayerAdded, UniqueNetId) == 0x000000, "Member 'VerseFortnitePlayspace_OnMinigamePlayerAdded::UniqueNetId' has a wrong offset!");
static_assert(offsetof(VerseFortnitePlayspace_OnMinigamePlayerAdded, bIsLocalPlayer) == 0x000030, "Member 'VerseFortnitePlayspace_OnMinigamePlayerAdded::bIsLocalPlayer' has a wrong offset!");

// Function VerseFortnite.VerseFortnitePlayspace.OnMinigameSetup
// 0x0008 (0x0008 - 0x0000)
struct VerseFortnitePlayspace_OnMinigameSetup final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortnitePlayspace_OnMinigameSetup) == 0x000008, "Wrong alignment on VerseFortnitePlayspace_OnMinigameSetup");
static_assert(sizeof(VerseFortnitePlayspace_OnMinigameSetup) == 0x000008, "Wrong size on VerseFortnitePlayspace_OnMinigameSetup");
static_assert(offsetof(VerseFortnitePlayspace_OnMinigameSetup, Minigame) == 0x000000, "Member 'VerseFortnitePlayspace_OnMinigameSetup::Minigame' has a wrong offset!");

// Function VerseFortnite.VerseFortniteSubsystem.HandleMinigameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct VerseFortniteSubsystem_HandleMinigameStateChanged final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMinigameState                            NewMinigameState;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VerseFortniteSubsystem_HandleMinigameStateChanged) == 0x000008, "Wrong alignment on VerseFortniteSubsystem_HandleMinigameStateChanged");
static_assert(sizeof(VerseFortniteSubsystem_HandleMinigameStateChanged) == 0x000010, "Wrong size on VerseFortniteSubsystem_HandleMinigameStateChanged");
static_assert(offsetof(VerseFortniteSubsystem_HandleMinigameStateChanged, Minigame) == 0x000000, "Member 'VerseFortniteSubsystem_HandleMinigameStateChanged::Minigame' has a wrong offset!");
static_assert(offsetof(VerseFortniteSubsystem_HandleMinigameStateChanged, NewMinigameState) == 0x000008, "Member 'VerseFortniteSubsystem_HandleMinigameStateChanged::NewMinigameState' has a wrong offset!");

}

