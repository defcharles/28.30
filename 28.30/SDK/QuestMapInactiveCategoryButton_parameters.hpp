#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestMapInactiveCategoryButton

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function QuestMapInactiveCategoryButton.QuestMapInactiveCategoryButton_C.BP_Populate
// 0x0018 (0x0018 - 0x0000)
struct QuestMapInactiveCategoryButton_C_BP_Populate final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuestMapInactiveCategoryButton_C_BP_Populate) == 0x000008, "Wrong alignment on QuestMapInactiveCategoryButton_C_BP_Populate");
static_assert(sizeof(QuestMapInactiveCategoryButton_C_BP_Populate) == 0x000018, "Wrong size on QuestMapInactiveCategoryButton_C_BP_Populate");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_BP_Populate, Title) == 0x000000, "Member 'QuestMapInactiveCategoryButton_C_BP_Populate::Title' has a wrong offset!");

// Function QuestMapInactiveCategoryButton.QuestMapInactiveCategoryButton_C.ExecuteUbergraph_QuestMapInactiveCategoryButton
// 0x0040 (0x0040 - 0x0000)
struct QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Title;                                // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event_bEnabled;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton) == 0x000008, "Wrong alignment on QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton");
static_assert(sizeof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton) == 0x000040, "Wrong size on QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, EntryPoint) == 0x000000, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, Temp_bool_Variable) == 0x000004, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, Temp_byte_Variable) == 0x000005, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, Temp_byte_Variable_1) == 0x000006, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, K2Node_Event_Title) == 0x000008, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::K2Node_Event_Title' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, K2Node_Event_bEnabled) == 0x000020, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000028, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton, K2Node_Select_Default) == 0x000038, "Member 'QuestMapInactiveCategoryButton_C_ExecuteUbergraph_QuestMapInactiveCategoryButton::K2Node_Select_Default' has a wrong offset!");

// Function QuestMapInactiveCategoryButton.QuestMapInactiveCategoryButton_C.ShowNewBang
// 0x0001 (0x0001 - 0x0000)
struct QuestMapInactiveCategoryButton_C_ShowNewBang final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMapInactiveCategoryButton_C_ShowNewBang) == 0x000001, "Wrong alignment on QuestMapInactiveCategoryButton_C_ShowNewBang");
static_assert(sizeof(QuestMapInactiveCategoryButton_C_ShowNewBang) == 0x000001, "Wrong size on QuestMapInactiveCategoryButton_C_ShowNewBang");
static_assert(offsetof(QuestMapInactiveCategoryButton_C_ShowNewBang, bEnabled) == 0x000000, "Member 'QuestMapInactiveCategoryButton_C_ShowNewBang::bEnabled' has a wrong offset!");

}

