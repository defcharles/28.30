#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_KeyArt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LinedNotebook_KeyArt.WBP_LinedNotebook_KeyArt_C
// 0x0060 (0x0320 - 0x02C0)
class UWBP_LinedNotebook_KeyArt_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       KeyArt_CharacterReveal;                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       KeyArt_FlameReveal;                                // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 KeyArt_Action;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_ChestTrail;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_ClawTrailLBottom;                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_ClawTrailLTop;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_ClawTrailRBottom;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_ClawTrailRTop;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_EyeTrailL;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LinedNotebook_FlameFX_C*           KeyArt_EyeTrailR;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KeyArt_Shadow;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LinedNotebook_KeyArt(int32 EntryPoint);
	void FlameFX_LeftHand_Ignite(class UWBP_LinedNotebook_FlameFX_C* FlameFX_LeftHand);
	void FlameFX_RightHand_Ignite(class UWBP_LinedNotebook_FlameFX_C* FlameFX_RightHand);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LinedNotebook_KeyArt_C">();
	}
	static class UWBP_LinedNotebook_KeyArt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LinedNotebook_KeyArt_C>();
	}
};
static_assert(alignof(UWBP_LinedNotebook_KeyArt_C) == 0x000008, "Wrong alignment on UWBP_LinedNotebook_KeyArt_C");
static_assert(sizeof(UWBP_LinedNotebook_KeyArt_C) == 0x000320, "Wrong size on UWBP_LinedNotebook_KeyArt_C");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_LinedNotebook_KeyArt_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_CharacterReveal) == 0x0002C8, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_CharacterReveal' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_FlameReveal) == 0x0002D0, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_FlameReveal' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_Action) == 0x0002D8, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_Action' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_ChestTrail) == 0x0002E0, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_ChestTrail' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_ClawTrailLBottom) == 0x0002E8, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_ClawTrailLBottom' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_ClawTrailLTop) == 0x0002F0, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_ClawTrailLTop' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_ClawTrailRBottom) == 0x0002F8, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_ClawTrailRBottom' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_ClawTrailRTop) == 0x000300, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_ClawTrailRTop' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_EyeTrailL) == 0x000308, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_EyeTrailL' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_EyeTrailR) == 0x000310, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_EyeTrailR' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_KeyArt_C, KeyArt_Shadow) == 0x000318, "Member 'UWBP_LinedNotebook_KeyArt_C::KeyArt_Shadow' has a wrong offset!");

}

