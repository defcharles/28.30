#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_STI_ItemTile

#include "Basic.hpp"

#include "CrewUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_STI_ItemTile.WBP_STI_ItemTile_C
// 0x0040 (0x14E0 - 0x14A0)
class UWBP_STI_ItemTile_C final : public UFortTemporaryItemsTileButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x14A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortTemporaryItemsRewardVM*            FortTemporaryItemsRewardVM;                        // 0x14A8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UImage*                                 baking;                                            // 0x14B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Check;                                             // 0x14B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SubscriptionTemporary;                       // 0x14C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       OwnedText;                                         // 0x14C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Widget_OwnedBorder;                                // 0x14D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsOwned;                                           // 0x14D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_STI_ItemTile(int32 EntryPoint);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnUpdateItemDefinition(class UFortAccountItemDefinition* ItemDefinition);
	void SetFortTemporaryItemsRewardVM(class UFortTemporaryItemsRewardVM* ViewModel);

	ESlateVisibility __165435a7_4697_bb8c_2070_b094cc36bfea_SourceToDest() const;
	ESlateVisibility __7f636a5e_40ff_98f5_e8a7_1a826bf9b26e_SourceToDest() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_STI_ItemTile_C">();
	}
	static class UWBP_STI_ItemTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_STI_ItemTile_C>();
	}
};
static_assert(alignof(UWBP_STI_ItemTile_C) == 0x000010, "Wrong alignment on UWBP_STI_ItemTile_C");
static_assert(sizeof(UWBP_STI_ItemTile_C) == 0x0014E0, "Wrong size on UWBP_STI_ItemTile_C");
static_assert(offsetof(UWBP_STI_ItemTile_C, UberGraphFrame) == 0x0014A0, "Member 'UWBP_STI_ItemTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, FortTemporaryItemsRewardVM) == 0x0014A8, "Member 'UWBP_STI_ItemTile_C::FortTemporaryItemsRewardVM' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, baking) == 0x0014B0, "Member 'UWBP_STI_ItemTile_C::baking' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, Check) == 0x0014B8, "Member 'UWBP_STI_ItemTile_C::Check' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, Image_SubscriptionTemporary) == 0x0014C0, "Member 'UWBP_STI_ItemTile_C::Image_SubscriptionTemporary' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, OwnedText) == 0x0014C8, "Member 'UWBP_STI_ItemTile_C::OwnedText' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, Widget_OwnedBorder) == 0x0014D0, "Member 'UWBP_STI_ItemTile_C::Widget_OwnedBorder' has a wrong offset!");
static_assert(offsetof(UWBP_STI_ItemTile_C, IsOwned) == 0x0014D8, "Member 'UWBP_STI_ItemTile_C::IsOwned' has a wrong offset!");

}

