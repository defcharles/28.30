#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCMS

#include "Basic.hpp"

#include "SparksCMS_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function SparksCMS.CatalogData.IsFromHotfix
// 0x0001 (0x0001 - 0x0000)
struct CatalogData_IsFromHotfix final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CatalogData_IsFromHotfix) == 0x000001, "Wrong alignment on CatalogData_IsFromHotfix");
static_assert(sizeof(CatalogData_IsFromHotfix) == 0x000001, "Wrong size on CatalogData_IsFromHotfix");
static_assert(offsetof(CatalogData_IsFromHotfix, ReturnValue) == 0x000000, "Member 'CatalogData_IsFromHotfix::ReturnValue' has a wrong offset!");

// Function SparksCMS.CatalogData.GetTagForAgeRating
// 0x0004 (0x0004 - 0x0000)
struct CatalogData_GetTagForAgeRating final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CatalogData_GetTagForAgeRating) == 0x000004, "Wrong alignment on CatalogData_GetTagForAgeRating");
static_assert(sizeof(CatalogData_GetTagForAgeRating) == 0x000004, "Wrong size on CatalogData_GetTagForAgeRating");
static_assert(offsetof(CatalogData_GetTagForAgeRating, ReturnValue) == 0x000000, "Member 'CatalogData_GetTagForAgeRating::ReturnValue' has a wrong offset!");

// Function SparksCMS.CatalogData.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct CatalogData_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CatalogData_IsEnabled) == 0x000001, "Wrong alignment on CatalogData_IsEnabled");
static_assert(sizeof(CatalogData_IsEnabled) == 0x000001, "Wrong size on CatalogData_IsEnabled");
static_assert(offsetof(CatalogData_IsEnabled, ReturnValue) == 0x000000, "Member 'CatalogData_IsEnabled::ReturnValue' has a wrong offset!");

// Function SparksCMS.CatalogData.IsEnabledForJam
// 0x0001 (0x0001 - 0x0000)
struct CatalogData_IsEnabledForJam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CatalogData_IsEnabledForJam) == 0x000001, "Wrong alignment on CatalogData_IsEnabledForJam");
static_assert(sizeof(CatalogData_IsEnabledForJam) == 0x000001, "Wrong size on CatalogData_IsEnabledForJam");
static_assert(offsetof(CatalogData_IsEnabledForJam, ReturnValue) == 0x000000, "Member 'CatalogData_IsEnabledForJam::ReturnValue' has a wrong offset!");

// Function SparksCMS.CatalogData.IsEnabledForPilgrim
// 0x0001 (0x0001 - 0x0000)
struct CatalogData_IsEnabledForPilgrim final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CatalogData_IsEnabledForPilgrim) == 0x000001, "Wrong alignment on CatalogData_IsEnabledForPilgrim");
static_assert(sizeof(CatalogData_IsEnabledForPilgrim) == 0x000001, "Wrong size on CatalogData_IsEnabledForPilgrim");
static_assert(offsetof(CatalogData_IsEnabledForPilgrim, ReturnValue) == 0x000000, "Member 'CatalogData_IsEnabledForPilgrim::ReturnValue' has a wrong offset!");

// Function SparksCMS.SparksSongCatalog.GetSongByShortName
// 0x0018 (0x0018 - 0x0000)
struct SparksSongCatalog_GetSongByShortName final
{
public:
	class FString                                 InShortName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCatalogData*                           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongCatalog_GetSongByShortName) == 0x000008, "Wrong alignment on SparksSongCatalog_GetSongByShortName");
static_assert(sizeof(SparksSongCatalog_GetSongByShortName) == 0x000018, "Wrong size on SparksSongCatalog_GetSongByShortName");
static_assert(offsetof(SparksSongCatalog_GetSongByShortName, InShortName) == 0x000000, "Member 'SparksSongCatalog_GetSongByShortName::InShortName' has a wrong offset!");
static_assert(offsetof(SparksSongCatalog_GetSongByShortName, ReturnValue) == 0x000010, "Member 'SparksSongCatalog_GetSongByShortName::ReturnValue' has a wrong offset!");

// Function SparksCMS.SparksSongCatalog.GetSongByTemplateID
// 0x0018 (0x0018 - 0x0000)
struct SparksSongCatalog_GetSongByTemplateID final
{
public:
	class FString                                 InTemplateId;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCatalogData*                           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongCatalog_GetSongByTemplateID) == 0x000008, "Wrong alignment on SparksSongCatalog_GetSongByTemplateID");
static_assert(sizeof(SparksSongCatalog_GetSongByTemplateID) == 0x000018, "Wrong size on SparksSongCatalog_GetSongByTemplateID");
static_assert(offsetof(SparksSongCatalog_GetSongByTemplateID, InTemplateId) == 0x000000, "Member 'SparksSongCatalog_GetSongByTemplateID::InTemplateId' has a wrong offset!");
static_assert(offsetof(SparksSongCatalog_GetSongByTemplateID, ReturnValue) == 0x000010, "Member 'SparksSongCatalog_GetSongByTemplateID::ReturnValue' has a wrong offset!");

// Function SparksCMS.SparksSongCatalog.GetSongByUID
// 0x0018 (0x0018 - 0x0000)
struct SparksSongCatalog_GetSongByUID final
{
public:
	class FString                                 InUID;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCatalogData*                           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongCatalog_GetSongByUID) == 0x000008, "Wrong alignment on SparksSongCatalog_GetSongByUID");
static_assert(sizeof(SparksSongCatalog_GetSongByUID) == 0x000018, "Wrong size on SparksSongCatalog_GetSongByUID");
static_assert(offsetof(SparksSongCatalog_GetSongByUID, InUID) == 0x000000, "Member 'SparksSongCatalog_GetSongByUID::InUID' has a wrong offset!");
static_assert(offsetof(SparksSongCatalog_GetSongByUID, ReturnValue) == 0x000010, "Member 'SparksSongCatalog_GetSongByUID::ReturnValue' has a wrong offset!");

// Function SparksCMS.SparksSongCatalog.GetSongList
// 0x0060 (0x0060 - 0x0000)
struct SparksSongCatalog_GetSongList final
{
public:
	ESongSortMethod                               SortMethod;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESongSortDirection                            SortDirection;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0008(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UCatalogData*>                   OutResults;                                        // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongCatalog_GetSongList) == 0x000008, "Wrong alignment on SparksSongCatalog_GetSongList");
static_assert(sizeof(SparksSongCatalog_GetSongList) == 0x000060, "Wrong size on SparksSongCatalog_GetSongList");
static_assert(offsetof(SparksSongCatalog_GetSongList, SortMethod) == 0x000000, "Member 'SparksSongCatalog_GetSongList::SortMethod' has a wrong offset!");
static_assert(offsetof(SparksSongCatalog_GetSongList, SortDirection) == 0x000001, "Member 'SparksSongCatalog_GetSongList::SortDirection' has a wrong offset!");
static_assert(offsetof(SparksSongCatalog_GetSongList, TagQuery) == 0x000008, "Member 'SparksSongCatalog_GetSongList::TagQuery' has a wrong offset!");
static_assert(offsetof(SparksSongCatalog_GetSongList, OutResults) == 0x000050, "Member 'SparksSongCatalog_GetSongList::OutResults' has a wrong offset!");

// Function SparksCMS.SparksSongCatalog.OnCalendarActiveEventsChanged
// 0x0010 (0x0010 - 0x0000)
struct SparksSongCatalog_OnCalendarActiveEventsChanged final
{
public:
	TArray<class FString>                         ActiveEventFlags;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongCatalog_OnCalendarActiveEventsChanged) == 0x000008, "Wrong alignment on SparksSongCatalog_OnCalendarActiveEventsChanged");
static_assert(sizeof(SparksSongCatalog_OnCalendarActiveEventsChanged) == 0x000010, "Wrong size on SparksSongCatalog_OnCalendarActiveEventsChanged");
static_assert(offsetof(SparksSongCatalog_OnCalendarActiveEventsChanged, ActiveEventFlags) == 0x000000, "Member 'SparksSongCatalog_OnCalendarActiveEventsChanged::ActiveEventFlags' has a wrong offset!");

// Function SparksCMS.SparksSongCatalog.SetCMSSuffix
// 0x0010 (0x0010 - 0x0000)
struct SparksSongCatalog_SetCMSSuffix final
{
public:
	class FString                                 InCMSSuffix;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongCatalog_SetCMSSuffix) == 0x000008, "Wrong alignment on SparksSongCatalog_SetCMSSuffix");
static_assert(sizeof(SparksSongCatalog_SetCMSSuffix) == 0x000010, "Wrong size on SparksSongCatalog_SetCMSSuffix");
static_assert(offsetof(SparksSongCatalog_SetCMSSuffix, InCMSSuffix) == 0x000000, "Member 'SparksSongCatalog_SetCMSSuffix::InCMSSuffix' has a wrong offset!");

}

