#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitTicksUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class HitTicksUI.FortUserWidget_HitTicks
// 0x0180 (0x0450 - 0x02D0)
class UFortUserWidget_HitTicks final : public UFortUserWidget
{
public:
	bool                                          bShield;                                           // 0x02D0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitTime;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        ShieldHitTime;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        TimeSinceHit;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        HitInterval;                                       // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        ShieldIconMaxAlpha;                                // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        FadeDuration;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        AccumulatedDamage;                                 // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 HitMarker;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 ShieldIcon;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHitFeedbackMode                              CurrentHitFeedbackMode;                            // 0x0320(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseNative;                                        // 0x0321(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PrevHitPawn;                                       // 0x0328(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        Damage;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_Elimination2;                                 // 0x0338(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_ShieldCrack;                                  // 0x0340(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BaseColor_BG1;                                     // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ShieldColor_BG1;                                   // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           CritColor_BG1;                                     // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ElimColor_BG1;                                     // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BaseColor_BG2;                                     // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ShieldColor_BG2;                                   // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           CritColor_BG2;                                     // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ElimColor_BG2;                                     // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BaseColor_Outline1;                                // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ShieldColor_Outline1;                              // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           CritColor_Outline1;                                // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ElimColor_Outline1;                                // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BaseColor_Outline2;                                // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ShieldColor_Outline2;                              // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           CritColor_Outline2;                                // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ElimColor_Outline2;                                // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           UseNativeMarkerTag;                                // 0x0448(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HudScaleChanged();
	void OnDisplayHitNotify(double InDamage, bool bInCritical, bool bInFatal, bool bInShield, class AActor* InPawn, const struct FVector& HitLocation, const struct FGameplayTagContainer& Tags);
	void OnPawnSet();
	void OnReticleSettingsChanged();
	void OnShieldBreak(bool bInOverShield);
	void UpdateTickMarkerOpacity(float NewOpacity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortUserWidget_HitTicks">();
	}
	static class UFortUserWidget_HitTicks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortUserWidget_HitTicks>();
	}
};
static_assert(alignof(UFortUserWidget_HitTicks) == 0x000008, "Wrong alignment on UFortUserWidget_HitTicks");
static_assert(sizeof(UFortUserWidget_HitTicks) == 0x000450, "Wrong size on UFortUserWidget_HitTicks");
static_assert(offsetof(UFortUserWidget_HitTicks, bShield) == 0x0002D0, "Member 'UFortUserWidget_HitTicks::bShield' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, HitTime) == 0x0002D8, "Member 'UFortUserWidget_HitTicks::HitTime' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldHitTime) == 0x0002E0, "Member 'UFortUserWidget_HitTicks::ShieldHitTime' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, TimeSinceHit) == 0x0002E8, "Member 'UFortUserWidget_HitTicks::TimeSinceHit' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, HitInterval) == 0x0002F0, "Member 'UFortUserWidget_HitTicks::HitInterval' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldIconMaxAlpha) == 0x0002F8, "Member 'UFortUserWidget_HitTicks::ShieldIconMaxAlpha' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, FadeDuration) == 0x000300, "Member 'UFortUserWidget_HitTicks::FadeDuration' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, AccumulatedDamage) == 0x000308, "Member 'UFortUserWidget_HitTicks::AccumulatedDamage' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, HitMarker) == 0x000310, "Member 'UFortUserWidget_HitTicks::HitMarker' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldIcon) == 0x000318, "Member 'UFortUserWidget_HitTicks::ShieldIcon' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, CurrentHitFeedbackMode) == 0x000320, "Member 'UFortUserWidget_HitTicks::CurrentHitFeedbackMode' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, bUseNative) == 0x000321, "Member 'UFortUserWidget_HitTicks::bUseNative' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, PrevHitPawn) == 0x000328, "Member 'UFortUserWidget_HitTicks::PrevHitPawn' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, Damage) == 0x000330, "Member 'UFortUserWidget_HitTicks::Damage' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, Anim_Elimination2) == 0x000338, "Member 'UFortUserWidget_HitTicks::Anim_Elimination2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, Anim_ShieldCrack) == 0x000340, "Member 'UFortUserWidget_HitTicks::Anim_ShieldCrack' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, BaseColor_BG1) == 0x000348, "Member 'UFortUserWidget_HitTicks::BaseColor_BG1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldColor_BG1) == 0x000358, "Member 'UFortUserWidget_HitTicks::ShieldColor_BG1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, CritColor_BG1) == 0x000368, "Member 'UFortUserWidget_HitTicks::CritColor_BG1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ElimColor_BG1) == 0x000378, "Member 'UFortUserWidget_HitTicks::ElimColor_BG1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, BaseColor_BG2) == 0x000388, "Member 'UFortUserWidget_HitTicks::BaseColor_BG2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldColor_BG2) == 0x000398, "Member 'UFortUserWidget_HitTicks::ShieldColor_BG2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, CritColor_BG2) == 0x0003A8, "Member 'UFortUserWidget_HitTicks::CritColor_BG2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ElimColor_BG2) == 0x0003B8, "Member 'UFortUserWidget_HitTicks::ElimColor_BG2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, BaseColor_Outline1) == 0x0003C8, "Member 'UFortUserWidget_HitTicks::BaseColor_Outline1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldColor_Outline1) == 0x0003D8, "Member 'UFortUserWidget_HitTicks::ShieldColor_Outline1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, CritColor_Outline1) == 0x0003E8, "Member 'UFortUserWidget_HitTicks::CritColor_Outline1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ElimColor_Outline1) == 0x0003F8, "Member 'UFortUserWidget_HitTicks::ElimColor_Outline1' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, BaseColor_Outline2) == 0x000408, "Member 'UFortUserWidget_HitTicks::BaseColor_Outline2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ShieldColor_Outline2) == 0x000418, "Member 'UFortUserWidget_HitTicks::ShieldColor_Outline2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, CritColor_Outline2) == 0x000428, "Member 'UFortUserWidget_HitTicks::CritColor_Outline2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, ElimColor_Outline2) == 0x000438, "Member 'UFortUserWidget_HitTicks::ElimColor_Outline2' has a wrong offset!");
static_assert(offsetof(UFortUserWidget_HitTicks, UseNativeMarkerTag) == 0x000448, "Member 'UFortUserWidget_HitTicks::UseNativeMarkerTag' has a wrong offset!");

}

