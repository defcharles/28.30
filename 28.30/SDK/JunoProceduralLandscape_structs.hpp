#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoProceduralLandscape

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct JunoProceduralLandscape.JunoLandscapeLayerInfo
// 0x0030 (0x0030 - 0x0000)
struct FJunoLandscapeLayerInfo final
{
public:
	class ULandscapeLayerInfoObject*              LandscapeInfo;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LayerName;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         WeightmapTextureIndex;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           WeightmapTextureMask;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                      PhysicsMaterial;                                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumCollisionRelevanceWeight;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoLandscapeLayerInfo) == 0x000008, "Wrong alignment on FJunoLandscapeLayerInfo");
static_assert(sizeof(FJunoLandscapeLayerInfo) == 0x000030, "Wrong size on FJunoLandscapeLayerInfo");
static_assert(offsetof(FJunoLandscapeLayerInfo, LandscapeInfo) == 0x000000, "Member 'FJunoLandscapeLayerInfo::LandscapeInfo' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeLayerInfo, LayerName) == 0x000008, "Member 'FJunoLandscapeLayerInfo::LayerName' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeLayerInfo, WeightmapTextureIndex) == 0x00000C, "Member 'FJunoLandscapeLayerInfo::WeightmapTextureIndex' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeLayerInfo, WeightmapTextureMask) == 0x000010, "Member 'FJunoLandscapeLayerInfo::WeightmapTextureMask' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeLayerInfo, PhysicsMaterial) == 0x000020, "Member 'FJunoLandscapeLayerInfo::PhysicsMaterial' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeLayerInfo, MinimumCollisionRelevanceWeight) == 0x000028, "Member 'FJunoLandscapeLayerInfo::MinimumCollisionRelevanceWeight' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeCustomOutputInfo
// 0x0020 (0x0020 - 0x0000)
struct FJunoLandscapeCustomOutputInfo final
{
public:
	int32                                         InputIndex;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutputIndex;                                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsConstant;                                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ConstantValue;                                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InputObject;                                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLandscapeCustomOutputInfo) == 0x000008, "Wrong alignment on FJunoLandscapeCustomOutputInfo");
static_assert(sizeof(FJunoLandscapeCustomOutputInfo) == 0x000020, "Wrong size on FJunoLandscapeCustomOutputInfo");
static_assert(offsetof(FJunoLandscapeCustomOutputInfo, InputIndex) == 0x000000, "Member 'FJunoLandscapeCustomOutputInfo::InputIndex' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCustomOutputInfo, OutputIndex) == 0x000004, "Member 'FJunoLandscapeCustomOutputInfo::OutputIndex' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCustomOutputInfo, Name) == 0x000008, "Member 'FJunoLandscapeCustomOutputInfo::Name' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCustomOutputInfo, bIsConstant) == 0x00000C, "Member 'FJunoLandscapeCustomOutputInfo::bIsConstant' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCustomOutputInfo, ConstantValue) == 0x000010, "Member 'FJunoLandscapeCustomOutputInfo::ConstantValue' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCustomOutputInfo, InputObject) == 0x000018, "Member 'FJunoLandscapeCustomOutputInfo::InputObject' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeGrassAndPhysics
// 0x0038 (0x0038 - 0x0000)
struct FJunoLandscapeGrassAndPhysics final
{
public:
	uint16                                        ShaderPlatform;                                    // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJunoLandscapeCustomOutputInfo> AvailableGrasses;                                  // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJunoLandscapeCustomOutputInfo> AvailablePhysicsMaterials;                         // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGuid                                  SavedMaterialID;                                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLandscapeGrassAndPhysics) == 0x000008, "Wrong alignment on FJunoLandscapeGrassAndPhysics");
static_assert(sizeof(FJunoLandscapeGrassAndPhysics) == 0x000038, "Wrong size on FJunoLandscapeGrassAndPhysics");
static_assert(offsetof(FJunoLandscapeGrassAndPhysics, ShaderPlatform) == 0x000000, "Member 'FJunoLandscapeGrassAndPhysics::ShaderPlatform' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeGrassAndPhysics, AvailableGrasses) == 0x000008, "Member 'FJunoLandscapeGrassAndPhysics::AvailableGrasses' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeGrassAndPhysics, AvailablePhysicsMaterials) == 0x000018, "Member 'FJunoLandscapeGrassAndPhysics::AvailablePhysicsMaterials' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeGrassAndPhysics, SavedMaterialID) == 0x000028, "Member 'FJunoLandscapeGrassAndPhysics::SavedMaterialID' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeCombinedMaterialInstance
// 0x0030 (0x0030 - 0x0000)
struct FJunoLandscapeCombinedMaterialInstance final
{
public:
	TArray<struct FJunoLandscapeLayerInfo>        LandscapeInfos;                                    // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*              MaterialInstance;                                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*              CPUReadbackMaterialInstance;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               CPUReadbackSharedMID;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VisibilityLayerIndex;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoLandscapeCombinedMaterialInstance) == 0x000008, "Wrong alignment on FJunoLandscapeCombinedMaterialInstance");
static_assert(sizeof(FJunoLandscapeCombinedMaterialInstance) == 0x000030, "Wrong size on FJunoLandscapeCombinedMaterialInstance");
static_assert(offsetof(FJunoLandscapeCombinedMaterialInstance, LandscapeInfos) == 0x000000, "Member 'FJunoLandscapeCombinedMaterialInstance::LandscapeInfos' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCombinedMaterialInstance, MaterialInstance) == 0x000010, "Member 'FJunoLandscapeCombinedMaterialInstance::MaterialInstance' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCombinedMaterialInstance, CPUReadbackMaterialInstance) == 0x000018, "Member 'FJunoLandscapeCombinedMaterialInstance::CPUReadbackMaterialInstance' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCombinedMaterialInstance, CPUReadbackSharedMID) == 0x000020, "Member 'FJunoLandscapeCombinedMaterialInstance::CPUReadbackSharedMID' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCombinedMaterialInstance, VisibilityLayerIndex) == 0x000028, "Member 'FJunoLandscapeCombinedMaterialInstance::VisibilityLayerIndex' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeMaterialCacheKeyBase
// 0x0018 (0x0018 - 0x0000)
struct FJunoLandscapeMaterialCacheKeyBase
{
public:
	TArray<class FName>                           OrderedLayers;                                     // 0x0000(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint32                                        KeyHash;                                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsTextureSorted;                                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoLandscapeMaterialCacheKeyBase) == 0x000008, "Wrong alignment on FJunoLandscapeMaterialCacheKeyBase");
static_assert(sizeof(FJunoLandscapeMaterialCacheKeyBase) == 0x000018, "Wrong size on FJunoLandscapeMaterialCacheKeyBase");
static_assert(offsetof(FJunoLandscapeMaterialCacheKeyBase, OrderedLayers) == 0x000000, "Member 'FJunoLandscapeMaterialCacheKeyBase::OrderedLayers' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeMaterialCacheKeyBase, KeyHash) == 0x000010, "Member 'FJunoLandscapeMaterialCacheKeyBase::KeyHash' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeMaterialCacheKeyBase, bIsTextureSorted) == 0x000014, "Member 'FJunoLandscapeMaterialCacheKeyBase::bIsTextureSorted' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeMaterialInstanceCacheKey
// 0x0000 (0x0018 - 0x0018)
struct FJunoLandscapeMaterialInstanceCacheKey final : public FJunoLandscapeMaterialCacheKeyBase
{
};
static_assert(alignof(FJunoLandscapeMaterialInstanceCacheKey) == 0x000008, "Wrong alignment on FJunoLandscapeMaterialInstanceCacheKey");
static_assert(sizeof(FJunoLandscapeMaterialInstanceCacheKey) == 0x000018, "Wrong size on FJunoLandscapeMaterialInstanceCacheKey");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeCombinedMaterialCacheKey
// 0x0000 (0x0018 - 0x0018)
struct FJunoLandscapeCombinedMaterialCacheKey final : public FJunoLandscapeMaterialCacheKeyBase
{
};
static_assert(alignof(FJunoLandscapeCombinedMaterialCacheKey) == 0x000008, "Wrong alignment on FJunoLandscapeCombinedMaterialCacheKey");
static_assert(sizeof(FJunoLandscapeCombinedMaterialCacheKey) == 0x000018, "Wrong size on FJunoLandscapeCombinedMaterialCacheKey");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeCustomRenderIdentifier
// 0x0008 (0x0008 - 0x0000)
struct FJunoLandscapeCustomRenderIdentifier final
{
public:
	class FName                                   Identifier;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MipIndex;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLandscapeCustomRenderIdentifier) == 0x000004, "Wrong alignment on FJunoLandscapeCustomRenderIdentifier");
static_assert(sizeof(FJunoLandscapeCustomRenderIdentifier) == 0x000008, "Wrong size on FJunoLandscapeCustomRenderIdentifier");
static_assert(offsetof(FJunoLandscapeCustomRenderIdentifier, Identifier) == 0x000000, "Member 'FJunoLandscapeCustomRenderIdentifier::Identifier' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeCustomRenderIdentifier, MipIndex) == 0x000004, "Member 'FJunoLandscapeCustomRenderIdentifier::MipIndex' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeComponentPrecachSettings
// 0x0005 (0x0005 - 0x0000)
struct FJunoLandscapeComponentPrecachSettings final
{
public:
	bool                                          bPrecacheHeights;                                  // 0x0000(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrecachePhysicalMaterials;                        // 0x0001(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrecacheGrass;                                    // 0x0002(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrecacheWeightmaps;                               // 0x0003(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrecacheCustomRenders;                            // 0x0004(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLandscapeComponentPrecachSettings) == 0x000001, "Wrong alignment on FJunoLandscapeComponentPrecachSettings");
static_assert(sizeof(FJunoLandscapeComponentPrecachSettings) == 0x000005, "Wrong size on FJunoLandscapeComponentPrecachSettings");
static_assert(offsetof(FJunoLandscapeComponentPrecachSettings, bPrecacheHeights) == 0x000000, "Member 'FJunoLandscapeComponentPrecachSettings::bPrecacheHeights' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeComponentPrecachSettings, bPrecachePhysicalMaterials) == 0x000001, "Member 'FJunoLandscapeComponentPrecachSettings::bPrecachePhysicalMaterials' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeComponentPrecachSettings, bPrecacheGrass) == 0x000002, "Member 'FJunoLandscapeComponentPrecachSettings::bPrecacheGrass' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeComponentPrecachSettings, bPrecacheWeightmaps) == 0x000003, "Member 'FJunoLandscapeComponentPrecachSettings::bPrecacheWeightmaps' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeComponentPrecachSettings, bPrecacheCustomRenders) == 0x000004, "Member 'FJunoLandscapeComponentPrecachSettings::bPrecacheCustomRenders' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeLayersGroup
// 0x0018 (0x0018 - 0x0000)
struct FJunoLandscapeLayersGroup final
{
public:
	TArray<class FName>                           Layers;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         CombinationIndex;                                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoLandscapeLayersGroup) == 0x000008, "Wrong alignment on FJunoLandscapeLayersGroup");
static_assert(sizeof(FJunoLandscapeLayersGroup) == 0x000018, "Wrong size on FJunoLandscapeLayersGroup");
static_assert(offsetof(FJunoLandscapeLayersGroup, Layers) == 0x000000, "Member 'FJunoLandscapeLayersGroup::Layers' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeLayersGroup, CombinationIndex) == 0x000010, "Member 'FJunoLandscapeLayersGroup::CombinationIndex' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeMaterialCache
// 0x00A0 (0x00A0 - 0x0000)
struct FJunoLandscapeMaterialCache final
{
public:
	TMap<struct FJunoLandscapeCombinedMaterialCacheKey, class UJunoLandscapeCombinedMaterial*> ExternalCombinedMaterials;                         // 0x0000(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FJunoLandscapeCombinedMaterialCacheKey, class UJunoLandscapeCombinedMaterial*> MaterialCombinations;                              // 0x0050(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLandscapeMaterialCache) == 0x000008, "Wrong alignment on FJunoLandscapeMaterialCache");
static_assert(sizeof(FJunoLandscapeMaterialCache) == 0x0000A0, "Wrong size on FJunoLandscapeMaterialCache");
static_assert(offsetof(FJunoLandscapeMaterialCache, ExternalCombinedMaterials) == 0x000000, "Member 'FJunoLandscapeMaterialCache::ExternalCombinedMaterials' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeMaterialCache, MaterialCombinations) == 0x000050, "Member 'FJunoLandscapeMaterialCache::MaterialCombinations' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.JunoLandscapeGenerationData
// 0x0068 (0x0068 - 0x0000)
struct FJunoLandscapeGenerationData final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Generator;                                         // 0x0008(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      LandscapeMaterial;                                 // 0x0028(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UJunoLandscapeLayersData> LayersData;                                        // 0x0048(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoLandscapeGenerationData) == 0x000008, "Wrong alignment on FJunoLandscapeGenerationData");
static_assert(sizeof(FJunoLandscapeGenerationData) == 0x000068, "Wrong size on FJunoLandscapeGenerationData");
static_assert(offsetof(FJunoLandscapeGenerationData, Version) == 0x000000, "Member 'FJunoLandscapeGenerationData::Version' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeGenerationData, Generator) == 0x000008, "Member 'FJunoLandscapeGenerationData::Generator' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeGenerationData, LandscapeMaterial) == 0x000028, "Member 'FJunoLandscapeGenerationData::LandscapeMaterial' has a wrong offset!");
static_assert(offsetof(FJunoLandscapeGenerationData, LayersData) == 0x000048, "Member 'FJunoLandscapeGenerationData::LayersData' has a wrong offset!");

// ScriptStruct JunoProceduralLandscape.DrawToRenderTargetContext_JunoLandscape
// 0x0008 (0x0008 - 0x0000)
struct FDrawToRenderTargetContext_JunoLandscape final
{
public:
	class UJunoLandscapeRenderTarget*             RenderTarget;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDrawToRenderTargetContext_JunoLandscape) == 0x000008, "Wrong alignment on FDrawToRenderTargetContext_JunoLandscape");
static_assert(sizeof(FDrawToRenderTargetContext_JunoLandscape) == 0x000008, "Wrong size on FDrawToRenderTargetContext_JunoLandscape");
static_assert(offsetof(FDrawToRenderTargetContext_JunoLandscape, RenderTarget) == 0x000000, "Member 'FDrawToRenderTargetContext_JunoLandscape::RenderTarget' has a wrong offset!");

}

