#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeistBasesGameplayRuntime

#include "Basic.hpp"

#include "HeistBasesGameplayRuntime_classes.hpp"
#include "HeistBasesGameplayRuntime_parameters.hpp"


namespace SDK
{

// Function HeistBasesGameplayRuntime.FortGameStateComponent_HeistDisplayCaseItemManager.GetDisplayCaseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     DisplayCaseGroupTag                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortGameStateComponent_HeistDisplayCaseItemManager::GetDisplayCaseItem(const struct FGameplayTag& DisplayCaseGroupTag)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDisplayCaseItem");

	Params::FortGameStateComponent_HeistDisplayCaseItemManager_GetDisplayCaseItem Parms{};

	Parms.DisplayCaseGroupTag = std::move(DisplayCaseGroupTag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HeistBasesGameplayRuntime.FortGameStateComponent_HeistDisplayCaseItemManager.HandlePlaylistDataReady
// (Final, Native, Private, HasOutParams)
// Parameters:
// class AFortGameStateAthena*             GameState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlaylist*                    Playlist                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            PlaylistContextTags                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGameStateComponent_HeistDisplayCaseItemManager::HandlePlaylistDataReady(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePlaylistDataReady");

	Params::FortGameStateComponent_HeistDisplayCaseItemManager_HandlePlaylistDataReady Parms{};

	Parms.GameState = GameState;
	Parms.Playlist = Playlist;
	Parms.PlaylistContextTags = std::move(PlaylistContextTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HeistBasesGameplayRuntime.FortGameStateComponent_HeistDisplayCaseItemManager.IsDataReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameStateComponent_HeistDisplayCaseItemManager::IsDataReady() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsDataReady");

	Params::FortGameStateComponent_HeistDisplayCaseItemManager_IsDataReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HeistBasesGameplayRuntime.FortHeistDisplayCase.OnServerNotifyEndDisplayCaseLongUse
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseCompleted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortHeistDisplayCase::OnServerNotifyEndDisplayCaseLongUse(class AFortPlayerPawn* InteractingPawn, bool bUseCompleted)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnServerNotifyEndDisplayCaseLongUse");

	Params::FortHeistDisplayCase_OnServerNotifyEndDisplayCaseLongUse Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.bUseCompleted = bUseCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HeistBasesGameplayRuntime.FortHeistDisplayCase.OnServerNotifyStartDisplayCaseLongUse
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortHeistDisplayCase::OnServerNotifyStartDisplayCaseLongUse(class AFortPlayerPawn* InteractingPawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnServerNotifyStartDisplayCaseLongUse");

	Params::FortHeistDisplayCase_OnServerNotifyStartDisplayCaseLongUse Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);
}

}

