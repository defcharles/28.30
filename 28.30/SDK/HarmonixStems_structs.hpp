#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixStems

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct HarmonixStems.StemConfigurationAudioBus
// 0x0010 (0x0010 - 0x0000)
struct FStemConfigurationAudioBus final
{
public:
	class FName                                   StemName;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioBus*                              AudioBus;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStemConfigurationAudioBus) == 0x000008, "Wrong alignment on FStemConfigurationAudioBus");
static_assert(sizeof(FStemConfigurationAudioBus) == 0x000010, "Wrong size on FStemConfigurationAudioBus");
static_assert(offsetof(FStemConfigurationAudioBus, StemName) == 0x000000, "Member 'FStemConfigurationAudioBus::StemName' has a wrong offset!");
static_assert(offsetof(FStemConfigurationAudioBus, AudioBus) == 0x000008, "Member 'FStemConfigurationAudioBus::AudioBus' has a wrong offset!");

// ScriptStruct HarmonixStems.MusicAssetStemChannel
// 0x0008 (0x0008 - 0x0000)
struct FMusicAssetStemChannel final
{
public:
	int32                                         SourceIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LevelInDecibels;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMusicAssetStemChannel) == 0x000004, "Wrong alignment on FMusicAssetStemChannel");
static_assert(sizeof(FMusicAssetStemChannel) == 0x000008, "Wrong size on FMusicAssetStemChannel");
static_assert(offsetof(FMusicAssetStemChannel, SourceIndex) == 0x000000, "Member 'FMusicAssetStemChannel::SourceIndex' has a wrong offset!");
static_assert(offsetof(FMusicAssetStemChannel, LevelInDecibels) == 0x000004, "Member 'FMusicAssetStemChannel::LevelInDecibels' has a wrong offset!");

// ScriptStruct HarmonixStems.WavesAssetStem
// 0x0020 (0x0020 - 0x0000)
struct FWavesAssetStem final
{
public:
	class FName                                   StemName;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             SoundWave;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ChannelLevelsInDecibels;                           // 0x0010(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWavesAssetStem) == 0x000008, "Wrong alignment on FWavesAssetStem");
static_assert(sizeof(FWavesAssetStem) == 0x000020, "Wrong size on FWavesAssetStem");
static_assert(offsetof(FWavesAssetStem, StemName) == 0x000000, "Member 'FWavesAssetStem::StemName' has a wrong offset!");
static_assert(offsetof(FWavesAssetStem, SoundWave) == 0x000008, "Member 'FWavesAssetStem::SoundWave' has a wrong offset!");
static_assert(offsetof(FWavesAssetStem, ChannelLevelsInDecibels) == 0x000010, "Member 'FWavesAssetStem::ChannelLevelsInDecibels' has a wrong offset!");

// ScriptStruct HarmonixStems.MediaStreamAssetStem
// 0x0018 (0x0018 - 0x0000)
struct FMediaStreamAssetStem final
{
public:
	class FName                                   StemName;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMusicAssetStemChannel>         Channels;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMediaStreamAssetStem) == 0x000008, "Wrong alignment on FMediaStreamAssetStem");
static_assert(sizeof(FMediaStreamAssetStem) == 0x000018, "Wrong size on FMediaStreamAssetStem");
static_assert(offsetof(FMediaStreamAssetStem, StemName) == 0x000000, "Member 'FMediaStreamAssetStem::StemName' has a wrong offset!");
static_assert(offsetof(FMediaStreamAssetStem, Channels) == 0x000008, "Member 'FMediaStreamAssetStem::Channels' has a wrong offset!");

}

