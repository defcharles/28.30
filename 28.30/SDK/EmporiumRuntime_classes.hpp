#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmporiumRuntime

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class EmporiumRuntime.EmporiumAssetsPaths
// 0x03A0 (0x03C8 - 0x0028)
class UEmporiumAssetsPaths final : public UObject
{
public:
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque;                                      // 0x0028(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Clearcoat;                            // 0x0048(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Sheen;                                // 0x0068(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Unlit;                                // 0x0088(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent;                                 // 0x00A8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent_Clearcoat;                       // 0x00C8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Transmission;                                // 0x00E8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_TS;                                   // 0x0108(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Clearcoat_TS;                         // 0x0128(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Sheen_TS;                             // 0x0148(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Unlit_TS;                             // 0x0168(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent_TS;                              // 0x0188(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent_Clearcoat_TS;                    // 0x01A8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Transmission_TS;                             // 0x01C8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque;                                      // 0x01E8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Clearcoat;                            // 0x0208(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Sheen;                                // 0x0228(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent;                                 // 0x0248(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent_Clearcoat;                       // 0x0268(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Transmission;                                // 0x0288(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_TS;                                   // 0x02A8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Clearcoat_TS;                         // 0x02C8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Sheen_TS;                             // 0x02E8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent_TS;                              // 0x0308(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent_Clearcoat_TS;                    // 0x0328(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Transmission_TS;                             // 0x0348(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Foliage_TS;                                  // 0x0368(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Foliage_TS;                                  // 0x0388(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             PlaceholderSphere;                                 // 0x03A8(0x0020)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumAssetsPaths">();
	}
	static class UEmporiumAssetsPaths* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumAssetsPaths>();
	}
};
static_assert(alignof(UEmporiumAssetsPaths) == 0x000008, "Wrong alignment on UEmporiumAssetsPaths");
static_assert(sizeof(UEmporiumAssetsPaths) == 0x0003C8, "Wrong size on UEmporiumAssetsPaths");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque) == 0x000028, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Clearcoat) == 0x000048, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Sheen) == 0x000068, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Sheen' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Unlit) == 0x000088, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Unlit' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent) == 0x0000A8, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent_Clearcoat) == 0x0000C8, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Transmission) == 0x0000E8, "Member 'UEmporiumAssetsPaths::MR_MI_Transmission' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_TS) == 0x000108, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Clearcoat_TS) == 0x000128, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Sheen_TS) == 0x000148, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Sheen_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Unlit_TS) == 0x000168, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Unlit_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent_TS) == 0x000188, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent_Clearcoat_TS) == 0x0001A8, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Transmission_TS) == 0x0001C8, "Member 'UEmporiumAssetsPaths::MR_MI_Transmission_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque) == 0x0001E8, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Clearcoat) == 0x000208, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Sheen) == 0x000228, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Sheen' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent) == 0x000248, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent_Clearcoat) == 0x000268, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Transmission) == 0x000288, "Member 'UEmporiumAssetsPaths::SG_MI_Transmission' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_TS) == 0x0002A8, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Clearcoat_TS) == 0x0002C8, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Sheen_TS) == 0x0002E8, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Sheen_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent_TS) == 0x000308, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent_Clearcoat_TS) == 0x000328, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Transmission_TS) == 0x000348, "Member 'UEmporiumAssetsPaths::SG_MI_Transmission_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Foliage_TS) == 0x000368, "Member 'UEmporiumAssetsPaths::SG_MI_Foliage_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Foliage_TS) == 0x000388, "Member 'UEmporiumAssetsPaths::MR_MI_Foliage_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, PlaceholderSphere) == 0x0003A8, "Member 'UEmporiumAssetsPaths::PlaceholderSphere' has a wrong offset!");

}

