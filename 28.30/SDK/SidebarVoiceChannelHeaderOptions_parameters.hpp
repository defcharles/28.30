#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SidebarVoiceChannelHeaderOptions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OnlineSubsystemMcp_structs.hpp"


namespace SDK::Params
{

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_JoinLeaveButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_BndEvt__SidebarVoiceChannelHeaderOptions_ReportButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.DisplayReportModal
// 0x0001 (0x0001 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_DisplayReportModal final
{
public:
	bool                                          bIsRecording;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_DisplayReportModal) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_DisplayReportModal");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_DisplayReportModal) == 0x000001, "Wrong size on SidebarVoiceChannelHeaderOptions_C_DisplayReportModal");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_DisplayReportModal, bIsRecording) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_DisplayReportModal::bIsRecording' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.DoCustomNavigation_GoUp
// 0x0010 (0x0010 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp) == 0x000010, "Wrong size on SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp, Navigation_0) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp::Navigation_0' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp, ReturnValue) == 0x000008, "Member 'SidebarVoiceChannelHeaderOptions_C_DoCustomNavigation_GoUp::ReturnValue' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.ExecuteUbergraph_SidebarVoiceChannelHeaderOptions
// 0x00A8 (0x00A8 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded_1;                        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsListItemExpanded_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsActiveAndListening;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsActiveOrAvailable;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAvailableAndNotActive;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsListening;                         // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowingRestriction;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isExpanded;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_1;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsRecording_1;                       // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0049(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESocialCommsPermission                        K2Node_Event_VoicePermission;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVoiceReportingIsAvailable;           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsRecording;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanJoinOrLeave;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMightBeAbleToReport;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Old;                            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue_1;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue_2;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue_3;       // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions) == 0x0000A8, "Wrong size on SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, EntryPoint) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::EntryPoint' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, Temp_bool_Variable) == 0x000004, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, Temp_byte_Variable) == 0x000005, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, Temp_byte_Variable_1) == 0x000006, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsExpanded_1) == 0x000007, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsExpanded_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Select_Default) == 0x000008, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_IsListItemExpanded_ReturnValue) == 0x000009, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_IsListItemExpanded_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_GetEndTime_ReturnValue) == 0x00000C, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_ListItemObject) == 0x000018, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsActiveAndListening) == 0x000020, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsActiveAndListening' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsActiveOrAvailable) == 0x000021, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsActiveOrAvailable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsAvailableAndNotActive) == 0x000022, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsAvailableAndNotActive' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsListening) == 0x000023, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsListening' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bShowingRestriction) == 0x000024, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bShowingRestriction' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_CustomEvent_isExpanded) == 0x000025, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_CustomEvent_isExpanded' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_ComponentBoundEvent_Button_1) == 0x000038, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_ComponentBoundEvent_Button) == 0x000040, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsRecording_1) == 0x000048, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsRecording_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsExpanded) == 0x000049, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_VoicePermission) == 0x00004A, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_VoicePermission' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bVoiceReportingIsAvailable) == 0x00004B, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bVoiceReportingIsAvailable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bIsRecording) == 0x00004C, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bIsRecording' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bCanJoinOrLeave) == 0x00004D, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bCanJoinOrLeave' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Event_bMightBeAbleToReport) == 0x00004E, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Event_bMightBeAbleToReport' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_SwitchEnum_CmpSuccess) == 0x00004F, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, Temp_byte_Variable_2) == 0x000050, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, Temp_bool_Variable_1) == 0x000051, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_CustomEvent_Old) == 0x000052, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_CustomEvent_Old' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_3) == 0x000058, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_4) == 0x000060, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, Temp_byte_Variable_3) == 0x000068, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, K2Node_Select_Default_1) == 0x000069, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_PlayAnimation_ReturnValue_5) == 0x000070, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue) == 0x000078, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue_1) == 0x000079, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_GetDesiredSize_ReturnValue) == 0x000080, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_BreakVector2D_X) == 0x000090, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue_2) == 0x0000A1, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions, CallFunc_IsInteractionEnabled_ReturnValue_3) == 0x0000A2, "Member 'SidebarVoiceChannelHeaderOptions_C_ExecuteUbergraph_SidebarVoiceChannelHeaderOptions::CallFunc_IsInteractionEnabled_ReturnValue_3' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.On Options Expansion Changed
// 0x0001 (0x0001 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed final
{
public:
	bool                                          IsExpanded;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed) == 0x000001, "Wrong size on SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed, IsExpanded) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_On_Options_Expansion_Changed::IsExpanded' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.OnListItemObjectSet_1
// 0x0008 (0x0008 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1 final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1) == 0x000008, "Wrong size on SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1, ListItemObject) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_OnListItemObjectSet_1::ListItemObject' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.OnUpdateOptionsVisuals
// 0x0005 (0x0005 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals final
{
public:
	ESocialCommsPermission                        VoicePermission;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVoiceReportingIsAvailable;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRecording;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanJoinOrLeave;                                   // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMightBeAbleToReport;                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals) == 0x000005, "Wrong size on SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, VoicePermission) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::VoicePermission' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bVoiceReportingIsAvailable) == 0x000001, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bVoiceReportingIsAvailable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bIsRecording) == 0x000002, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bIsRecording' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bCanJoinOrLeave) == 0x000003, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bCanJoinOrLeave' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals, bMightBeAbleToReport) == 0x000004, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals::bMightBeAbleToReport' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.OnUpdateVisuals
// 0x0005 (0x0005 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals final
{
public:
	bool                                          bIsActiveAndListening;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsActiveOrAvailable;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAvailableAndNotActive;                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsListening;                                      // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowingRestriction;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals) == 0x000005, "Wrong size on SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsActiveAndListening) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsActiveAndListening' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsActiveOrAvailable) == 0x000001, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsActiveOrAvailable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsAvailableAndNotActive) == 0x000002, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsAvailableAndNotActive' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals, bIsListening) == 0x000003, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals::bIsListening' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals, bShowingRestriction) == 0x000004, "Member 'SidebarVoiceChannelHeaderOptions_C_OnUpdateVisuals::bShowingRestriction' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.Set Header Status Visuals
// 0x0001 (0x0001 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals final
{
public:
	bool                                          Old_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals) == 0x000001, "Wrong size on SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals, Old_0) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_Set_Header_Status_Visuals::Old_0' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.SetActiveAndListeningVisuals
// 0x0070 (0x0070 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals final
{
public:
	bool                                          IsActiveAndListening;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRestricted_0;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJoinChannel_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveChannel_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x001C(0x0014)()
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0014)()
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals) == 0x000070, "Wrong size on SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, IsActiveAndListening) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::IsActiveAndListening' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, IsRestricted_0) == 0x000001, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::IsRestricted_0' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_bool_Variable) == 0x000002, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_byte_Variable) == 0x000010, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_byte_Variable_1) == 0x000011, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_bool_Variable_1) == 0x000012, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, K2Node_Select_Default) == 0x000013, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_byte_Variable_2) == 0x000014, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_byte_Variable_3) == 0x000015, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, K2Node_Select_Default_1) == 0x000016, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000017, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_CanJoinChannel_ReturnValue) == 0x000019, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_CanJoinChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_IsActiveChannel_ReturnValue) == 0x00001A, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_IsActiveChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, K2Node_MakeStruct_SlateColor) == 0x00001C, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_byte_Variable_4) == 0x000030, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_byte_Variable_5) == 0x000031, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, Temp_bool_Variable_2) == 0x000032, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_SelectColor_ReturnValue) == 0x000034, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_SelectColor_ReturnValue_1) == 0x000044, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, K2Node_Select_Default_2) == 0x000054, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x00006C, "Member 'SidebarVoiceChannelHeaderOptions_C_SetActiveAndListeningVisuals::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.SetExpansionState
// 0x0001 (0x0001 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_SetExpansionState final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_SetExpansionState) == 0x000001, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_SetExpansionState");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_SetExpansionState) == 0x000001, "Wrong size on SidebarVoiceChannelHeaderOptions_C_SetExpansionState");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetExpansionState, bIsExpanded) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_SetExpansionState::bIsExpanded' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.SetJoinOrLeaveButton
// 0x0038 (0x0038 - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton final
{
public:
	bool                                          Join;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0020(0x0018)()
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton) == 0x000008, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton) == 0x000038, "Wrong size on SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, Join) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::Join' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000020, "Member 'SidebarVoiceChannelHeaderOptions_C_SetJoinOrLeaveButton::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");

// Function SidebarVoiceChannelHeaderOptions.SidebarVoiceChannelHeaderOptions_C.SetRestrictedVisuals
// 0x004C (0x004C - 0x0000)
struct SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals final
{
public:
	bool                                          IsRestricted_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0014)()
};
static_assert(alignof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals) == 0x000004, "Wrong alignment on SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals");
static_assert(sizeof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals) == 0x00004C, "Wrong size on SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals, IsRestricted_0) == 0x000000, "Member 'SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals::IsRestricted_0' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals, Temp_struct_Variable) == 0x000004, "Member 'SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals, Temp_struct_Variable_1) == 0x000014, "Member 'SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals, Temp_bool_Variable) == 0x000024, "Member 'SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals, K2Node_Select_Default) == 0x000028, "Member 'SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'SidebarVoiceChannelHeaderOptions_C_SetRestrictedVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

