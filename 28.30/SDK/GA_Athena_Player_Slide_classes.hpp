#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Player_Slide

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Player_Slide.GA_Athena_Player_Slide_C
// 0x0EB0 (0x1A10 - 0x0B60)
class UGA_Athena_Player_Slide_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UFortCameraMode>            Camera_Mode_Class;                                 // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           CameraShakeGCNL;                                   // 0x0B78(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraModifier>            CameraModifier;                                    // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        MinAngleForMomentum;                               // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SpeedlinesCue;                                     // 0x0B90(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B94[0x4];                                      // 0x0B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           StartSlideCameraShake;                             // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        AdditionalLaunchVelocityOffRamp;                   // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlidingControlParams                  DefaultSlidingParams;                              // 0x0BA8(0x06C0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlidingControlParams                  PostDashGroundSlidingParams;                       // 0x1268(0x06C0)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        LevelGroundSlideDuration;                          // 0x1928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EndLevelGroundSlideTimerHandle;                    // 0x1930(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DashDuration;                                      // 0x1938(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           CameraFXDelay;                                     // 0x1960(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerGameplayCue;                                 // 0x1968(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196C[0x4];                                     // 0x196C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraShakeDelay;                                  // 0x1970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinAdditionalMomentum;                             // 0x1978(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxAdditionalMomentum;                             // 0x19A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinAngleForAdditionalMomentum;                     // 0x19C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Prev_FallingGracePeriodState;                      // 0x19F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19F1[0x7];                                     // 0x19F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        SlideCameraModifier;                               // 0x19F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AddMomentumTimerHandle;                            // 0x1A00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CameraShakeObjRef;                                 // 0x1A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddMomentum();
	void CameraFX();
	void EndAbilityClientSide();
	void EndAbilityServerSide();
	void EndLevelGroundSlide();
	void ExecuteUbergraph_GA_Athena_Player_Slide(int32 EntryPoint);
	void ForceRemoveSlideGC();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinishedCharacterCustomization_Event_0(class AFortPlayerPawn* Pawn);
	void OnTargetingChanged(bool bIsTargeting);

	bool BuildDataRegistryResolverScope(TArray<class FName>* InOutResolverScopes, int32* InOutPriority) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Player_Slide_C">();
	}
	static class UGA_Athena_Player_Slide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Player_Slide_C>();
	}
};
static_assert(alignof(UGA_Athena_Player_Slide_C) == 0x000008, "Wrong alignment on UGA_Athena_Player_Slide_C");
static_assert(sizeof(UGA_Athena_Player_Slide_C) == 0x001A10, "Wrong size on UGA_Athena_Player_Slide_C");
static_assert(offsetof(UGA_Athena_Player_Slide_C, UberGraphFrame) == 0x000B60, "Member 'UGA_Athena_Player_Slide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShake) == 0x000B68, "Member 'UGA_Athena_Player_Slide_C::CameraShake' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, Camera_Mode_Class) == 0x000B70, "Member 'UGA_Athena_Player_Slide_C::Camera_Mode_Class' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeGCNL) == 0x000B78, "Member 'UGA_Athena_Player_Slide_C::CameraShakeGCNL' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraModifier) == 0x000B80, "Member 'UGA_Athena_Player_Slide_C::CameraModifier' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAngleForMomentum) == 0x000B88, "Member 'UGA_Athena_Player_Slide_C::MinAngleForMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, SpeedlinesCue) == 0x000B90, "Member 'UGA_Athena_Player_Slide_C::SpeedlinesCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, StartSlideCameraShake) == 0x000B98, "Member 'UGA_Athena_Player_Slide_C::StartSlideCameraShake' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, AdditionalLaunchVelocityOffRamp) == 0x000BA0, "Member 'UGA_Athena_Player_Slide_C::AdditionalLaunchVelocityOffRamp' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, DefaultSlidingParams) == 0x000BA8, "Member 'UGA_Athena_Player_Slide_C::DefaultSlidingParams' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, PostDashGroundSlidingParams) == 0x001268, "Member 'UGA_Athena_Player_Slide_C::PostDashGroundSlidingParams' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, LevelGroundSlideDuration) == 0x001928, "Member 'UGA_Athena_Player_Slide_C::LevelGroundSlideDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, EndLevelGroundSlideTimerHandle) == 0x001930, "Member 'UGA_Athena_Player_Slide_C::EndLevelGroundSlideTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, DashDuration) == 0x001938, "Member 'UGA_Athena_Player_Slide_C::DashDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraFXDelay) == 0x001960, "Member 'UGA_Athena_Player_Slide_C::CameraFXDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, PlayerGameplayCue) == 0x001968, "Member 'UGA_Athena_Player_Slide_C::PlayerGameplayCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeDelay) == 0x001970, "Member 'UGA_Athena_Player_Slide_C::CameraShakeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAdditionalMomentum) == 0x001978, "Member 'UGA_Athena_Player_Slide_C::MinAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MaxAdditionalMomentum) == 0x0019A0, "Member 'UGA_Athena_Player_Slide_C::MaxAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAngleForAdditionalMomentum) == 0x0019C8, "Member 'UGA_Athena_Player_Slide_C::MinAngleForAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, Prev_FallingGracePeriodState) == 0x0019F0, "Member 'UGA_Athena_Player_Slide_C::Prev_FallingGracePeriodState' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, SlideCameraModifier) == 0x0019F8, "Member 'UGA_Athena_Player_Slide_C::SlideCameraModifier' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, AddMomentumTimerHandle) == 0x001A00, "Member 'UGA_Athena_Player_Slide_C::AddMomentumTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeObjRef) == 0x001A08, "Member 'UGA_Athena_Player_Slide_C::CameraShakeObjRef' has a wrong offset!");

}

