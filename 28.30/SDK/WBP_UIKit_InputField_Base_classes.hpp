#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_InputField_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "S_UI_BoolFloat_structs.hpp"
#include "Slate_structs.hpp"
#include "S_UI_Image_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UIKit_InputField_Base.WBP_UIKit_InputField_Base_C
// 0x01F0 (0x1690 - 0x14A0)
#pragma pack(push, 0x1)
class alignas(0x10) UWBP_UIKit_InputField_Base_C : public UUIKitModularButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x14A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_UIKit_Block_EditableText_C*        Block_EditableText;                                // 0x14A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Button_Outline_C*            Block_Outline;                                     // 0x14B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Content;                                           // 0x14B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Main;                                              // 0x14C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x14C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_Main;                                         // 0x14D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class FText Text)> OnTextChanged;                                     // 0x14D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FText Text, ETextCommit Commit_method)> OnTextCommited;                                    // 0x14E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Text;                                              // 0x14F8(0x0018)(Edit, BlueprintVisible)
	double                                        Mobile_Text_Size_Multiplier;                       // 0x1510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Hint_Text;                                         // 0x1518(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         Font;                                              // 0x1530(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ETextJustify                                  TextJustification;                                 // 0x1588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1589[0x3];                                     // 0x1589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                TextPadding;                                       // 0x158C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPassword;                                        // 0x159C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReadOnly;                                        // 0x159D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159E[0x2];                                     // 0x159E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UI_BoolFloat                        WidthOverride;                                     // 0x15A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UI_BoolFloat                        HeightOverride;                                    // 0x15B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBackground;                                     // 0x15C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C1[0x7];                                     // 0x15C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UIKit_BlockBackground_Base_C*      Block_Background;                                  // 0x15C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BackgroundClass;                                   // 0x15D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BackgroundMaterial;                                // 0x15D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UseIcon;                                           // 0x15E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E1[0x7];                                     // 0x15E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 IconClass;                                         // 0x15E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_Block_Image_C*               Block_Icon;                                        // 0x15F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x15F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_UI_Image                            IconProperties;                                    // 0x1600(0x0058)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePixels;                                         // 0x1658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1659[0x7];                                     // 0x1659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TopLeft;                                           // 0x1660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TopRight;                                          // 0x1668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomRight;                                       // 0x1670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomLeft;                                        // 0x1678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTextCharacters;                                 // 0x1680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddBackground();
	void AddIcon();
	void BP_OnHovered();
	void BP_OnPressed();
	void BP_OnReleased();
	void BP_OnUnhovered();
	void BP_OnWidgetStyled();
	void Cleanup(class UWidget* Widget);
	void ExecuteUbergraph_WBP_UIKit_InputField_Base(int32 EntryPoint);
	void OnInitialized();
	void OnTextChanged_Event(const class FText& Text_0);
	void OnTextCommitted_Event(const class FText& Text_0, ETextCommit CommitMethod);
	void PreConstruct(bool IsDesignTime);
	void PresetForDesignTime();
	void SetEditableText();
	void SetGridAlignment(class UWidget* Widget, EHorizontalAlignment Horizontal, EVerticalAlignment Vertical);
	void SetGridColumnAndRow(class UWidget* Widget, int32 Row, int32 Row_Span, int32 Column, int32 Column_Span);
	void SetGridLayer(class UWidget* Widget, int32 Layer);
	void SetGridNudge(class UWidget* Widget, const struct FVector2D& Nudge);
	void SetGridPadding(class UWidget* Widget, const struct FMargin& Padding_0);
	void SetHintText(const class FText& Hint_Text_0);
	void SetIcon(class UTexture2D* Icon_0);
	void SetIconProperties(const struct FS_UI_Image& Data);
	void SetMaxTextCharacters(bool* IsTextTrimmed);
	void SetPlacement(class UWidget* Widget, const struct FS_UI_Placement& Placement);
	void SetSize(const struct FS_UI_BoolFloat& Width, const struct FS_UI_BoolFloat& Height);
	void SetText(const class FText& Text_0);
	void UpdateIconVisibility(bool IsVisible_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UIKit_InputField_Base_C">();
	}
	static class UWBP_UIKit_InputField_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UIKit_InputField_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UWBP_UIKit_InputField_Base_C) == 0x000010, "Wrong alignment on UWBP_UIKit_InputField_Base_C");
static_assert(sizeof(UWBP_UIKit_InputField_Base_C) == 0x001690, "Wrong size on UWBP_UIKit_InputField_Base_C");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, UberGraphFrame) == 0x0014A0, "Member 'UWBP_UIKit_InputField_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Block_EditableText) == 0x0014A8, "Member 'UWBP_UIKit_InputField_Base_C::Block_EditableText' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Block_Outline) == 0x0014B0, "Member 'UWBP_UIKit_InputField_Base_C::Block_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Content) == 0x0014B8, "Member 'UWBP_UIKit_InputField_Base_C::Content' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Main) == 0x0014C0, "Member 'UWBP_UIKit_InputField_Base_C::Main' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, SizeBox) == 0x0014C8, "Member 'UWBP_UIKit_InputField_Base_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Slot_Main) == 0x0014D0, "Member 'UWBP_UIKit_InputField_Base_C::Slot_Main' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, OnTextChanged) == 0x0014D8, "Member 'UWBP_UIKit_InputField_Base_C::OnTextChanged' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, OnTextCommited) == 0x0014E8, "Member 'UWBP_UIKit_InputField_Base_C::OnTextCommited' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Text) == 0x0014F8, "Member 'UWBP_UIKit_InputField_Base_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Mobile_Text_Size_Multiplier) == 0x001510, "Member 'UWBP_UIKit_InputField_Base_C::Mobile_Text_Size_Multiplier' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Hint_Text) == 0x001518, "Member 'UWBP_UIKit_InputField_Base_C::Hint_Text' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Font) == 0x001530, "Member 'UWBP_UIKit_InputField_Base_C::Font' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, TextJustification) == 0x001588, "Member 'UWBP_UIKit_InputField_Base_C::TextJustification' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, TextPadding) == 0x00158C, "Member 'UWBP_UIKit_InputField_Base_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, IsPassword) == 0x00159C, "Member 'UWBP_UIKit_InputField_Base_C::IsPassword' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, IsReadOnly) == 0x00159D, "Member 'UWBP_UIKit_InputField_Base_C::IsReadOnly' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, WidthOverride) == 0x0015A0, "Member 'UWBP_UIKit_InputField_Base_C::WidthOverride' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, HeightOverride) == 0x0015B0, "Member 'UWBP_UIKit_InputField_Base_C::HeightOverride' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, UseBackground) == 0x0015C0, "Member 'UWBP_UIKit_InputField_Base_C::UseBackground' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Block_Background) == 0x0015C8, "Member 'UWBP_UIKit_InputField_Base_C::Block_Background' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, BackgroundClass) == 0x0015D0, "Member 'UWBP_UIKit_InputField_Base_C::BackgroundClass' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, BackgroundMaterial) == 0x0015D8, "Member 'UWBP_UIKit_InputField_Base_C::BackgroundMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, UseIcon) == 0x0015E0, "Member 'UWBP_UIKit_InputField_Base_C::UseIcon' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, IconClass) == 0x0015E8, "Member 'UWBP_UIKit_InputField_Base_C::IconClass' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Block_Icon) == 0x0015F0, "Member 'UWBP_UIKit_InputField_Base_C::Block_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, Icon) == 0x0015F8, "Member 'UWBP_UIKit_InputField_Base_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, IconProperties) == 0x001600, "Member 'UWBP_UIKit_InputField_Base_C::IconProperties' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, UsePixels) == 0x001658, "Member 'UWBP_UIKit_InputField_Base_C::UsePixels' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, TopLeft) == 0x001660, "Member 'UWBP_UIKit_InputField_Base_C::TopLeft' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, TopRight) == 0x001668, "Member 'UWBP_UIKit_InputField_Base_C::TopRight' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, BottomRight) == 0x001670, "Member 'UWBP_UIKit_InputField_Base_C::BottomRight' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, BottomLeft) == 0x001678, "Member 'UWBP_UIKit_InputField_Base_C::BottomLeft' has a wrong offset!");
static_assert(offsetof(UWBP_UIKit_InputField_Base_C, MaxTextCharacters) == 0x001680, "Member 'UWBP_UIKit_InputField_Base_C::MaxTextCharacters' has a wrong offset!");

}

