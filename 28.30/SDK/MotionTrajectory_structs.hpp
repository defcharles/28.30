#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MotionTrajectory

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct MotionTrajectory.MotionTrajectorySettings
// 0x0004 (0x0004 - 0x0000)
struct FMotionTrajectorySettings final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMotionTrajectorySettings) == 0x000004, "Wrong alignment on FMotionTrajectorySettings");
static_assert(sizeof(FMotionTrajectorySettings) == 0x000004, "Wrong size on FMotionTrajectorySettings");
static_assert(offsetof(FMotionTrajectorySettings, Seconds) == 0x000000, "Member 'FMotionTrajectorySettings::Seconds' has a wrong offset!");

// ScriptStruct MotionTrajectory.TrajectorySamplingData
// 0x0020 (0x0020 - 0x0000)
struct FTrajectorySamplingData final
{
public:
	float                                         HistoryLengthSeconds;                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HistorySamplesPerSecond;                           // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PredictionLengthSeconds;                           // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PredictionSamplesPerSecond;                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTrajectorySamplingData) == 0x000004, "Wrong alignment on FTrajectorySamplingData");
static_assert(sizeof(FTrajectorySamplingData) == 0x000020, "Wrong size on FTrajectorySamplingData");
static_assert(offsetof(FTrajectorySamplingData, HistoryLengthSeconds) == 0x000000, "Member 'FTrajectorySamplingData::HistoryLengthSeconds' has a wrong offset!");
static_assert(offsetof(FTrajectorySamplingData, HistorySamplesPerSecond) == 0x000004, "Member 'FTrajectorySamplingData::HistorySamplesPerSecond' has a wrong offset!");
static_assert(offsetof(FTrajectorySamplingData, PredictionLengthSeconds) == 0x000008, "Member 'FTrajectorySamplingData::PredictionLengthSeconds' has a wrong offset!");
static_assert(offsetof(FTrajectorySamplingData, PredictionSamplesPerSecond) == 0x00000C, "Member 'FTrajectorySamplingData::PredictionSamplesPerSecond' has a wrong offset!");

// ScriptStruct MotionTrajectory.CharacterTrajectoryData
// 0x01E0 (0x01E0 - 0x0000)
struct alignas(0x10) FCharacterTrajectoryData final
{
public:
	float                                         RotateTowardsMovementSpeed;                        // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxControllerYawRate;                              // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BendVelocityTowardsAcceleration;                   // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpeedRemappingCurve;                           // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     SpeedRemappingCurve;                               // 0x0010(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bUseAccelerationRemappingCurve;                    // 0x0098(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     AccelerationRemappingCurve;                        // 0x00A0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_128[0xB8];                                     // 0x0128(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCharacterTrajectoryData) == 0x000010, "Wrong alignment on FCharacterTrajectoryData");
static_assert(sizeof(FCharacterTrajectoryData) == 0x0001E0, "Wrong size on FCharacterTrajectoryData");
static_assert(offsetof(FCharacterTrajectoryData, RotateTowardsMovementSpeed) == 0x000000, "Member 'FCharacterTrajectoryData::RotateTowardsMovementSpeed' has a wrong offset!");
static_assert(offsetof(FCharacterTrajectoryData, MaxControllerYawRate) == 0x000004, "Member 'FCharacterTrajectoryData::MaxControllerYawRate' has a wrong offset!");
static_assert(offsetof(FCharacterTrajectoryData, BendVelocityTowardsAcceleration) == 0x000008, "Member 'FCharacterTrajectoryData::BendVelocityTowardsAcceleration' has a wrong offset!");
static_assert(offsetof(FCharacterTrajectoryData, bUseSpeedRemappingCurve) == 0x00000C, "Member 'FCharacterTrajectoryData::bUseSpeedRemappingCurve' has a wrong offset!");
static_assert(offsetof(FCharacterTrajectoryData, SpeedRemappingCurve) == 0x000010, "Member 'FCharacterTrajectoryData::SpeedRemappingCurve' has a wrong offset!");
static_assert(offsetof(FCharacterTrajectoryData, bUseAccelerationRemappingCurve) == 0x000098, "Member 'FCharacterTrajectoryData::bUseAccelerationRemappingCurve' has a wrong offset!");
static_assert(offsetof(FCharacterTrajectoryData, AccelerationRemappingCurve) == 0x0000A0, "Member 'FCharacterTrajectoryData::AccelerationRemappingCurve' has a wrong offset!");

}

