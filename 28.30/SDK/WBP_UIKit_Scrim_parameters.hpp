#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Scrim

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.ExecuteUbergraph_WBP_UIKit_Scrim
// 0x000C (0x000C - 0x0000)
struct WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetBlur_Blur_Strength_ImplicitCast;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim) == 0x000004, "Wrong alignment on WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim");
static_assert(sizeof(WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim) == 0x00000C, "Wrong size on WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim");
static_assert(offsetof(WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim, EntryPoint) == 0x000000, "Member 'WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim, CallFunc_SetBlur_Blur_Strength_ImplicitCast) == 0x000008, "Member 'WBP_UIKit_Scrim_C_ExecuteUbergraph_WBP_UIKit_Scrim::CallFunc_SetBlur_Blur_Strength_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.FadeIn
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Scrim_C_FadeIn final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_FadeIn) == 0x000008, "Wrong alignment on WBP_UIKit_Scrim_C_FadeIn");
static_assert(sizeof(WBP_UIKit_Scrim_C_FadeIn) == 0x000008, "Wrong size on WBP_UIKit_Scrim_C_FadeIn");
static_assert(offsetof(WBP_UIKit_Scrim_C_FadeIn, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_UIKit_Scrim_C_FadeIn::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.FadeOut
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Scrim_C_FadeOut final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_FadeOut) == 0x000008, "Wrong alignment on WBP_UIKit_Scrim_C_FadeOut");
static_assert(sizeof(WBP_UIKit_Scrim_C_FadeOut) == 0x000008, "Wrong size on WBP_UIKit_Scrim_C_FadeOut");
static_assert(offsetof(WBP_UIKit_Scrim_C_FadeOut, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_UIKit_Scrim_C_FadeOut::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Scrim_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_Scrim_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_Scrim_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_Scrim_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_Scrim_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_Scrim_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.SetBlur
// 0x0018 (0x0018 - 0x0000)
struct WBP_UIKit_Scrim_C_SetBlur final
{
public:
	float                                         Blur_Strength;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Blur_ImplicitCast;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBlurStrength_InStrength_ImplicitCast;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_SetBlur) == 0x000008, "Wrong alignment on WBP_UIKit_Scrim_C_SetBlur");
static_assert(sizeof(WBP_UIKit_Scrim_C_SetBlur) == 0x000018, "Wrong size on WBP_UIKit_Scrim_C_SetBlur");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetBlur, Blur_Strength) == 0x000000, "Member 'WBP_UIKit_Scrim_C_SetBlur::Blur_Strength' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetBlur, K2Node_VariableSet_Blur_ImplicitCast) == 0x000008, "Member 'WBP_UIKit_Scrim_C_SetBlur::K2Node_VariableSet_Blur_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetBlur, CallFunc_SetBlurStrength_InStrength_ImplicitCast) == 0x000010, "Member 'WBP_UIKit_Scrim_C_SetBlur::CallFunc_SetBlurStrength_InStrength_ImplicitCast' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.SetClickCatch
// 0x0005 (0x0005 - 0x0000)
struct WBP_UIKit_Scrim_C_SetClickCatch final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_SetClickCatch) == 0x000001, "Wrong alignment on WBP_UIKit_Scrim_C_SetClickCatch");
static_assert(sizeof(WBP_UIKit_Scrim_C_SetClickCatch) == 0x000005, "Wrong size on WBP_UIKit_Scrim_C_SetClickCatch");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetClickCatch, Enable) == 0x000000, "Member 'WBP_UIKit_Scrim_C_SetClickCatch::Enable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetClickCatch, Temp_bool_Variable) == 0x000001, "Member 'WBP_UIKit_Scrim_C_SetClickCatch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetClickCatch, Temp_byte_Variable) == 0x000002, "Member 'WBP_UIKit_Scrim_C_SetClickCatch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetClickCatch, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UIKit_Scrim_C_SetClickCatch::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetClickCatch, K2Node_Select_Default) == 0x000004, "Member 'WBP_UIKit_Scrim_C_SetClickCatch::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.SetDimColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Scrim_C_SetDimColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_SetDimColor) == 0x000004, "Wrong alignment on WBP_UIKit_Scrim_C_SetDimColor");
static_assert(sizeof(WBP_UIKit_Scrim_C_SetDimColor) == 0x000010, "Wrong size on WBP_UIKit_Scrim_C_SetDimColor");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetDimColor, Color) == 0x000000, "Member 'WBP_UIKit_Scrim_C_SetDimColor::Color' has a wrong offset!");

// Function WBP_UIKit_Scrim.WBP_UIKit_Scrim_C.SetDimMaterial
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Scrim_C_SetDimMaterial final
{
public:
	class UMaterialInstance*                      Material_Instance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_Scrim_C_SetDimMaterial) == 0x000008, "Wrong alignment on WBP_UIKit_Scrim_C_SetDimMaterial");
static_assert(sizeof(WBP_UIKit_Scrim_C_SetDimMaterial) == 0x000008, "Wrong size on WBP_UIKit_Scrim_C_SetDimMaterial");
static_assert(offsetof(WBP_UIKit_Scrim_C_SetDimMaterial, Material_Instance) == 0x000000, "Member 'WBP_UIKit_Scrim_C_SetDimMaterial::Material_Instance' has a wrong offset!");

}

