#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixStems

#include "Basic.hpp"

#include "HarmonixStems_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class HarmonixStems.StemConfiguration
// 0x0010 (0x0038 - 0x0028)
class UStemConfiguration final : public UObject
{
public:
	TArray<struct FStemConfigurationAudioBus>     Stems;                                             // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StemConfiguration">();
	}
	static class UStemConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStemConfiguration>();
	}
};
static_assert(alignof(UStemConfiguration) == 0x000008, "Wrong alignment on UStemConfiguration");
static_assert(sizeof(UStemConfiguration) == 0x000038, "Wrong size on UStemConfiguration");
static_assert(offsetof(UStemConfiguration, Stems) == 0x000028, "Member 'UStemConfiguration::Stems' has a wrong offset!");

// Class HarmonixStems.StemmedMusicAsset
// 0x0018 (0x0040 - 0x0028)
class UStemmedMusicAsset : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMidiFile*                              MidiFile;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStemConfiguration*                     StemConfiguration;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StemmedMusicAsset">();
	}
	static class UStemmedMusicAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStemmedMusicAsset>();
	}
};
static_assert(alignof(UStemmedMusicAsset) == 0x000008, "Wrong alignment on UStemmedMusicAsset");
static_assert(sizeof(UStemmedMusicAsset) == 0x000040, "Wrong size on UStemmedMusicAsset");
static_assert(offsetof(UStemmedMusicAsset, MidiFile) == 0x000030, "Member 'UStemmedMusicAsset::MidiFile' has a wrong offset!");
static_assert(offsetof(UStemmedMusicAsset, StemConfiguration) == 0x000038, "Member 'UStemmedMusicAsset::StemConfiguration' has a wrong offset!");

// Class HarmonixStems.StemmedWavesAsset
// 0x0018 (0x0058 - 0x0040)
class UStemmedWavesAsset final : public UStemmedMusicAsset
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWavesAssetStem>                WavesStems;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StemmedWavesAsset">();
	}
	static class UStemmedWavesAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStemmedWavesAsset>();
	}
};
static_assert(alignof(UStemmedWavesAsset) == 0x000008, "Wrong alignment on UStemmedWavesAsset");
static_assert(sizeof(UStemmedWavesAsset) == 0x000058, "Wrong size on UStemmedWavesAsset");
static_assert(offsetof(UStemmedWavesAsset, WavesStems) == 0x000048, "Member 'UStemmedWavesAsset::WavesStems' has a wrong offset!");

// Class HarmonixStems.StemmedMediaStreamAsset
// 0x0018 (0x0058 - 0x0040)
class UStemmedMediaStreamAsset final : public UStemmedMusicAsset
{
public:
	class UMediaPlayer*                           MediaPlayer;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMediaStreamAssetStem>          StreamStems;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StemmedMediaStreamAsset">();
	}
	static class UStemmedMediaStreamAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStemmedMediaStreamAsset>();
	}
};
static_assert(alignof(UStemmedMediaStreamAsset) == 0x000008, "Wrong alignment on UStemmedMediaStreamAsset");
static_assert(sizeof(UStemmedMediaStreamAsset) == 0x000058, "Wrong size on UStemmedMediaStreamAsset");
static_assert(offsetof(UStemmedMediaStreamAsset, MediaPlayer) == 0x000040, "Member 'UStemmedMediaStreamAsset::MediaPlayer' has a wrong offset!");
static_assert(offsetof(UStemmedMediaStreamAsset, StreamStems) == 0x000048, "Member 'UStemmedMediaStreamAsset::StreamStems' has a wrong offset!");

}

