#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_VideoSchedule

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CRD_VideoSchedule.VideoScheduleDeviceBase.OnControlVideoPlayer
// 0x0030 (0x0030 - 0x0000)
struct VideoScheduleDeviceBase_OnControlVideoPlayer final
{
public:
	class FString                                 VUID;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              StartTime;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AController*>                    Players;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class ULevelSequence*                   Sequence;                                          // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VideoScheduleDeviceBase_OnControlVideoPlayer) == 0x000008, "Wrong alignment on VideoScheduleDeviceBase_OnControlVideoPlayer");
static_assert(sizeof(VideoScheduleDeviceBase_OnControlVideoPlayer) == 0x000030, "Wrong size on VideoScheduleDeviceBase_OnControlVideoPlayer");
static_assert(offsetof(VideoScheduleDeviceBase_OnControlVideoPlayer, VUID) == 0x000000, "Member 'VideoScheduleDeviceBase_OnControlVideoPlayer::VUID' has a wrong offset!");
static_assert(offsetof(VideoScheduleDeviceBase_OnControlVideoPlayer, StartTime) == 0x000010, "Member 'VideoScheduleDeviceBase_OnControlVideoPlayer::StartTime' has a wrong offset!");
static_assert(offsetof(VideoScheduleDeviceBase_OnControlVideoPlayer, Players) == 0x000018, "Member 'VideoScheduleDeviceBase_OnControlVideoPlayer::Players' has a wrong offset!");
static_assert(offsetof(VideoScheduleDeviceBase_OnControlVideoPlayer, Sequence) == 0x000028, "Member 'VideoScheduleDeviceBase_OnControlVideoPlayer::Sequence' has a wrong offset!");

// Function CRD_VideoSchedule.VideoScheduleDeviceBase.StartSchedule
// 0x0008 (0x0008 - 0x0000)
struct VideoScheduleDeviceBase_StartSchedule final
{
public:
	class AController*                            InPlayer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VideoScheduleDeviceBase_StartSchedule) == 0x000008, "Wrong alignment on VideoScheduleDeviceBase_StartSchedule");
static_assert(sizeof(VideoScheduleDeviceBase_StartSchedule) == 0x000008, "Wrong size on VideoScheduleDeviceBase_StartSchedule");
static_assert(offsetof(VideoScheduleDeviceBase_StartSchedule, InPlayer) == 0x000000, "Member 'VideoScheduleDeviceBase_StartSchedule::InPlayer' has a wrong offset!");

// Function CRD_VideoSchedule.VideoScheduleDeviceBase.StopSchedule
// 0x0008 (0x0008 - 0x0000)
struct VideoScheduleDeviceBase_StopSchedule final
{
public:
	class AController*                            InPlayer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VideoScheduleDeviceBase_StopSchedule) == 0x000008, "Wrong alignment on VideoScheduleDeviceBase_StopSchedule");
static_assert(sizeof(VideoScheduleDeviceBase_StopSchedule) == 0x000008, "Wrong size on VideoScheduleDeviceBase_StopSchedule");
static_assert(offsetof(VideoScheduleDeviceBase_StopSchedule, InPlayer) == 0x000000, "Member 'VideoScheduleDeviceBase_StopSchedule::InPlayer' has a wrong offset!");

// Function CRD_VideoSchedule.VideoScheduleDeviceBase.TestControlVideoPlayer
// 0x0028 (0x0028 - 0x0000)
struct VideoScheduleDeviceBase_TestControlVideoPlayer final
{
public:
	class FString                                 VUID;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              StartTime;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AController*>                    Players;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VideoScheduleDeviceBase_TestControlVideoPlayer) == 0x000008, "Wrong alignment on VideoScheduleDeviceBase_TestControlVideoPlayer");
static_assert(sizeof(VideoScheduleDeviceBase_TestControlVideoPlayer) == 0x000028, "Wrong size on VideoScheduleDeviceBase_TestControlVideoPlayer");
static_assert(offsetof(VideoScheduleDeviceBase_TestControlVideoPlayer, VUID) == 0x000000, "Member 'VideoScheduleDeviceBase_TestControlVideoPlayer::VUID' has a wrong offset!");
static_assert(offsetof(VideoScheduleDeviceBase_TestControlVideoPlayer, StartTime) == 0x000010, "Member 'VideoScheduleDeviceBase_TestControlVideoPlayer::StartTime' has a wrong offset!");
static_assert(offsetof(VideoScheduleDeviceBase_TestControlVideoPlayer, Players) == 0x000018, "Member 'VideoScheduleDeviceBase_TestControlVideoPlayer::Players' has a wrong offset!");

}

