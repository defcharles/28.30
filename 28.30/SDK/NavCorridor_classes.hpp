#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NavCorridor

#include "Basic.hpp"

#include "NavCorridor_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class NavCorridor.NavCorridorTestingComponent
// 0x0120 (0x0670 - 0x0550)
class UNavCorridorTestingComponent final : public UDebugDrawComponent
{
public:
	struct FNavAgentProperties                    NavAgentProps;                                     // 0x0550(0x0030)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNavigationQueryFilter>     FilterClass;                                       // 0x0580(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFindCorridorToGoal;                               // 0x0588(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFollowPathOnGoalCorridor;                         // 0x0589(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58A[0x2];                                      // 0x058A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FollowLookAheadDistance;                           // 0x058C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 GoalActor;                                         // 0x0590(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ANavigationData*                        NavData;                                           // 0x0598(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FNavCorridorParams                     CorridorParams;                                    // 0x05A0(0x0018)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUpdateParametersFromWidth;                        // 0x05B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PathOffset;                                        // 0x05BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PathfindingTimeUs;                                 // 0x05C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CorridorTimeUs;                                    // 0x05C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C8[0xA8];                                     // 0x05C8(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NavCorridorTestingComponent">();
	}
	static class UNavCorridorTestingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavCorridorTestingComponent>();
	}
};
static_assert(alignof(UNavCorridorTestingComponent) == 0x000010, "Wrong alignment on UNavCorridorTestingComponent");
static_assert(sizeof(UNavCorridorTestingComponent) == 0x000670, "Wrong size on UNavCorridorTestingComponent");
static_assert(offsetof(UNavCorridorTestingComponent, NavAgentProps) == 0x000550, "Member 'UNavCorridorTestingComponent::NavAgentProps' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, FilterClass) == 0x000580, "Member 'UNavCorridorTestingComponent::FilterClass' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, bFindCorridorToGoal) == 0x000588, "Member 'UNavCorridorTestingComponent::bFindCorridorToGoal' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, bFollowPathOnGoalCorridor) == 0x000589, "Member 'UNavCorridorTestingComponent::bFollowPathOnGoalCorridor' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, FollowLookAheadDistance) == 0x00058C, "Member 'UNavCorridorTestingComponent::FollowLookAheadDistance' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, GoalActor) == 0x000590, "Member 'UNavCorridorTestingComponent::GoalActor' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, NavData) == 0x000598, "Member 'UNavCorridorTestingComponent::NavData' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, CorridorParams) == 0x0005A0, "Member 'UNavCorridorTestingComponent::CorridorParams' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, bUpdateParametersFromWidth) == 0x0005B8, "Member 'UNavCorridorTestingComponent::bUpdateParametersFromWidth' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, PathOffset) == 0x0005BC, "Member 'UNavCorridorTestingComponent::PathOffset' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, PathfindingTimeUs) == 0x0005C0, "Member 'UNavCorridorTestingComponent::PathfindingTimeUs' has a wrong offset!");
static_assert(offsetof(UNavCorridorTestingComponent, CorridorTimeUs) == 0x0005C4, "Member 'UNavCorridorTestingComponent::CorridorTimeUs' has a wrong offset!");

// Class NavCorridor.NavCorridorTestingActor
// 0x0008 (0x0298 - 0x0290)
class ANavCorridorTestingActor final : public AActor
{
public:
	class UNavCorridorTestingComponent*           DebugComp;                                         // 0x0290(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NavCorridorTestingActor">();
	}
	static class ANavCorridorTestingActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANavCorridorTestingActor>();
	}
};
static_assert(alignof(ANavCorridorTestingActor) == 0x000008, "Wrong alignment on ANavCorridorTestingActor");
static_assert(sizeof(ANavCorridorTestingActor) == 0x000298, "Wrong size on ANavCorridorTestingActor");
static_assert(offsetof(ANavCorridorTestingActor, DebugComp) == 0x000290, "Member 'ANavCorridorTestingActor::DebugComp' has a wrong offset!");

}

