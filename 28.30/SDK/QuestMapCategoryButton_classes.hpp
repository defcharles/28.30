#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestMapCategoryButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuestMapCategoryButton.QuestMapCategoryButton_C
// 0x01B0 (0x1680 - 0x14D0)
class UQuestMapCategoryButton_C final : public UAthenaFullScreenMapQuestCategoryButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x14D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OutOfScreen_text;                                  // 0x14D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reset;                                             // 0x14E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OutOfScreen;                                       // 0x14E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select;                                            // 0x14F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       burst;                                             // 0x14F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_CountdownTimer;                             // 0x1500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_TimeCustom;                                 // 0x1508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CountdownTimerContainer;                           // 0x1510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaChallengeDateTimeTextBlock*      DateTimeText_TimeRemaining;                        // 0x1518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x1520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CheckMark;                                   // 0x1528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Disabled;                                    // 0x1530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Fade;                                        // 0x1538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_inactive;                                    // 0x1540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_OutOfScreen;                                 // 0x1548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Pinned;                                      // 0x1550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              ImageSwitcher;                                     // 0x1558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTimer;                                        // 0x1560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTimer_1;                                      // 0x1568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         LazyImage_Extension;                               // 0x1570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          NewBang;                                           // 0x1578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_Title;                                    // 0x1580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_Title_Unfocused;                          // 0x1588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Text;                                      // 0x1590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_TitleText;                                 // 0x1598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Subtitle;                                     // 0x15A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_TimeCustom;                                   // 0x15A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Unavailable;                                  // 0x15B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TimeCustomContainer;                               // 0x15B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x15C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C1[0x3];                                     // 0x15C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DefaultTimerColor;                                 // 0x15C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultTimerColor_Selected;                        // 0x15D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoursRemainingTimerColor;                          // 0x15E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoursRemainingTimerColor_Selected;                 // 0x15F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UrgentTimerColor;                                  // 0x1604(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UrgentTimerColor_Selected;                         // 0x1614(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1624[0x4];                                     // 0x1624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DebugTitleText;                                    // 0x1628(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DebugSubText;                                      // 0x1640(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	EQuestCategoryButtonTimerState                PreviewTimerType;                                  // 0x1658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaChallengeTimerState                    PreviewTimerState;                                 // 0x1659(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165A[0x6];                                     // 0x165A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NudgeAnimValue;                                    // 0x1660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         TextWidthWithImage;                                // 0x1668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextWidthDefault;                                  // 0x166C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewAllQuestsCompleted;                         // 0x1670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaChallengeTimerState                    Timer_State;                                       // 0x1671(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewCategoryPinned;                             // 0x1672(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOutOfScreen;                                     // 0x1673(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnDeselected();
	void BP_OnFocusLostFromCategories();
	void BP_OnFocusSetToCategories();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnTimerSet(EAthenaChallengeTimerState TimerState);
	void BP_OnUnhovered();
	void BP_Populate(const class FText& Title, const class FText& SubText, const int32 CompletedQuests, const int32 TotalQuest, const bool bIsPinned, const struct FQuestCategoryButtonOverrides& ButtonOverrides, bool bQuestListContentDisabled);
	void Construct();
	void ExecuteUbergraph_QuestMapCategoryButton(int32 EntryPoint);
	void OnMoreInTimerSet(const EAthenaChallengeTimerState TimerState, const struct FTimespan& TimeRemaining);
	void OnTimeRemainingTimerSet(const EAthenaChallengeTimerState TimerState, const EQuestCategoryButtonTimerState TimerType, const class FText& TimerText, const struct FTimespan& TimeRemaining);
	void PlayIsOutOfScreenText(bool Forward);
	void Populate(const class FText& Title, const class FText& SubText, int32 CompletedQuests, int32 TotalQuests, bool IsPinned, struct FQuestCategoryButtonOverrides& Overrides);
	void PreConstruct(bool IsDesignTime);
	void SetImageSwitcherState(bool AllCompleted, bool IsPinned);
	void SetNudgeAnimValue(double Value);
	void SetTimer(const EAthenaChallengeTimerState TimerState, const EQuestCategoryButtonTimerState TimerType, const class FText& TimerText, const struct FTimespan& Timespan);
	void SetTimerStyling(EAthenaChallengeTimerState TimerState);
	void SetTitle(const class FText& Title, const class FText& SubText);
	void SetVisuals(struct FQuestCategoryButtonOverrides& Overrides);
	void ShowNewBang(bool bEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuestMapCategoryButton_C">();
	}
	static class UQuestMapCategoryButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestMapCategoryButton_C>();
	}
};
static_assert(alignof(UQuestMapCategoryButton_C) == 0x000010, "Wrong alignment on UQuestMapCategoryButton_C");
static_assert(sizeof(UQuestMapCategoryButton_C) == 0x001680, "Wrong size on UQuestMapCategoryButton_C");
static_assert(offsetof(UQuestMapCategoryButton_C, UberGraphFrame) == 0x0014D0, "Member 'UQuestMapCategoryButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, OutOfScreen_text) == 0x0014D8, "Member 'UQuestMapCategoryButton_C::OutOfScreen_text' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Reset) == 0x0014E0, "Member 'UQuestMapCategoryButton_C::Reset' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, OutOfScreen) == 0x0014E8, "Member 'UQuestMapCategoryButton_C::OutOfScreen' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Select) == 0x0014F0, "Member 'UQuestMapCategoryButton_C::Select' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, burst) == 0x0014F8, "Member 'UQuestMapCategoryButton_C::burst' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Border_CountdownTimer) == 0x001500, "Member 'UQuestMapCategoryButton_C::Border_CountdownTimer' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Border_TimeCustom) == 0x001508, "Member 'UQuestMapCategoryButton_C::Border_TimeCustom' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, CountdownTimerContainer) == 0x001510, "Member 'UQuestMapCategoryButton_C::CountdownTimerContainer' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, DateTimeText_TimeRemaining) == 0x001518, "Member 'UQuestMapCategoryButton_C::DateTimeText_TimeRemaining' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_BG) == 0x001520, "Member 'UQuestMapCategoryButton_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_CheckMark) == 0x001528, "Member 'UQuestMapCategoryButton_C::Image_CheckMark' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_Disabled) == 0x001530, "Member 'UQuestMapCategoryButton_C::Image_Disabled' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_Fade) == 0x001538, "Member 'UQuestMapCategoryButton_C::Image_Fade' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_inactive) == 0x001540, "Member 'UQuestMapCategoryButton_C::Image_inactive' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_OutOfScreen) == 0x001548, "Member 'UQuestMapCategoryButton_C::Image_OutOfScreen' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Image_Pinned) == 0x001550, "Member 'UQuestMapCategoryButton_C::Image_Pinned' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, ImageSwitcher) == 0x001558, "Member 'UQuestMapCategoryButton_C::ImageSwitcher' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, ImageTimer) == 0x001560, "Member 'UQuestMapCategoryButton_C::ImageTimer' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, ImageTimer_1) == 0x001568, "Member 'UQuestMapCategoryButton_C::ImageTimer_1' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, LazyImage_Extension) == 0x001570, "Member 'UQuestMapCategoryButton_C::LazyImage_Extension' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, NewBang) == 0x001578, "Member 'UQuestMapCategoryButton_C::NewBang' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, RichText_Title) == 0x001580, "Member 'UQuestMapCategoryButton_C::RichText_Title' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, RichText_Title_Unfocused) == 0x001588, "Member 'UQuestMapCategoryButton_C::RichText_Title_Unfocused' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, SizeBox_Text) == 0x001590, "Member 'UQuestMapCategoryButton_C::SizeBox_Text' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, SizeBox_TitleText) == 0x001598, "Member 'UQuestMapCategoryButton_C::SizeBox_TitleText' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Text_Subtitle) == 0x0015A0, "Member 'UQuestMapCategoryButton_C::Text_Subtitle' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Text_TimeCustom) == 0x0015A8, "Member 'UQuestMapCategoryButton_C::Text_TimeCustom' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Text_Unavailable) == 0x0015B0, "Member 'UQuestMapCategoryButton_C::Text_Unavailable' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, TimeCustomContainer) == 0x0015B8, "Member 'UQuestMapCategoryButton_C::TimeCustomContainer' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, IsSelected) == 0x0015C0, "Member 'UQuestMapCategoryButton_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, DefaultTimerColor) == 0x0015C4, "Member 'UQuestMapCategoryButton_C::DefaultTimerColor' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, DefaultTimerColor_Selected) == 0x0015D4, "Member 'UQuestMapCategoryButton_C::DefaultTimerColor_Selected' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, HoursRemainingTimerColor) == 0x0015E4, "Member 'UQuestMapCategoryButton_C::HoursRemainingTimerColor' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, HoursRemainingTimerColor_Selected) == 0x0015F4, "Member 'UQuestMapCategoryButton_C::HoursRemainingTimerColor_Selected' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, UrgentTimerColor) == 0x001604, "Member 'UQuestMapCategoryButton_C::UrgentTimerColor' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, UrgentTimerColor_Selected) == 0x001614, "Member 'UQuestMapCategoryButton_C::UrgentTimerColor_Selected' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, DebugTitleText) == 0x001628, "Member 'UQuestMapCategoryButton_C::DebugTitleText' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, DebugSubText) == 0x001640, "Member 'UQuestMapCategoryButton_C::DebugSubText' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, PreviewTimerType) == 0x001658, "Member 'UQuestMapCategoryButton_C::PreviewTimerType' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, PreviewTimerState) == 0x001659, "Member 'UQuestMapCategoryButton_C::PreviewTimerState' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, NudgeAnimValue) == 0x001660, "Member 'UQuestMapCategoryButton_C::NudgeAnimValue' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, TextWidthWithImage) == 0x001668, "Member 'UQuestMapCategoryButton_C::TextWidthWithImage' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, TextWidthDefault) == 0x00166C, "Member 'UQuestMapCategoryButton_C::TextWidthDefault' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, PreviewAllQuestsCompleted) == 0x001670, "Member 'UQuestMapCategoryButton_C::PreviewAllQuestsCompleted' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, Timer_State) == 0x001671, "Member 'UQuestMapCategoryButton_C::Timer_State' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, PreviewCategoryPinned) == 0x001672, "Member 'UQuestMapCategoryButton_C::PreviewCategoryPinned' has a wrong offset!");
static_assert(offsetof(UQuestMapCategoryButton_C, IsOutOfScreen) == 0x001673, "Member 'UQuestMapCategoryButton_C::IsOutOfScreen' has a wrong offset!");

}

