#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_Rewards

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_LinedNotebook_Rewards.WBP_LinedNotebook_Rewards_C.ExecuteUbergraph_WBP_LinedNotebook_Rewards
// 0x0078 (0x0078 - 0x0000)
struct WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsComplete;                          // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_CompletionText;                       // 0x0008(0x0018)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0058(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortEventScreenData*             K2Node_Event_InEventScreenData;                    // 0x0068(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards) == 0x000008, "Wrong alignment on WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards");
static_assert(sizeof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards) == 0x000078, "Wrong size on WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, EntryPoint) == 0x000000, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_Event_bIsComplete) == 0x000004, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_Event_bIsComplete' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_Event_CompletionText) == 0x000008, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_Event_CompletionText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_SpawnSound2D_ReturnValue) == 0x000028, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_IsMobileGame_ReturnValue) == 0x000030, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_Event_IsDesignTime) == 0x00004C, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_IsValid_ReturnValue_1) == 0x00004D, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000050, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, K2Node_Event_InEventScreenData) == 0x000068, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::K2Node_Event_InEventScreenData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards, CallFunc_IsValid_ReturnValue_3) == 0x000070, "Member 'WBP_LinedNotebook_Rewards_C_ExecuteUbergraph_WBP_LinedNotebook_Rewards::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function WBP_LinedNotebook_Rewards.WBP_LinedNotebook_Rewards_C.OnModuleInitialized
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_Rewards_C_OnModuleInitialized final
{
public:
	const class UFortEventScreenData*             InEventScreenData;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_Rewards_C_OnModuleInitialized) == 0x000008, "Wrong alignment on WBP_LinedNotebook_Rewards_C_OnModuleInitialized");
static_assert(sizeof(WBP_LinedNotebook_Rewards_C_OnModuleInitialized) == 0x000008, "Wrong size on WBP_LinedNotebook_Rewards_C_OnModuleInitialized");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_OnModuleInitialized, InEventScreenData) == 0x000000, "Member 'WBP_LinedNotebook_Rewards_C_OnModuleInitialized::InEventScreenData' has a wrong offset!");

// Function WBP_LinedNotebook_Rewards.WBP_LinedNotebook_Rewards_C.OnPopulateCompletionMessage
// 0x0020 (0x0020 - 0x0000)
struct WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage final
{
public:
	bool                                          bIsComplete;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CompletionText;                                    // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage) == 0x000008, "Wrong alignment on WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage");
static_assert(sizeof(WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage) == 0x000020, "Wrong size on WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage, bIsComplete) == 0x000000, "Member 'WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage::bIsComplete' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage, CompletionText) == 0x000008, "Member 'WBP_LinedNotebook_Rewards_C_OnPopulateCompletionMessage::CompletionText' has a wrong offset!");

// Function WBP_LinedNotebook_Rewards.WBP_LinedNotebook_Rewards_C.PopulateCompletionMessage
// 0x0020 (0x0020 - 0x0000)
struct WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Completed;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage) == 0x000008, "Wrong alignment on WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage");
static_assert(sizeof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage) == 0x000020, "Wrong size on WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage, MessageText) == 0x000000, "Member 'WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage::MessageText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage, Completed) == 0x000018, "Member 'WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage::Completed' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage, Temp_bool_Variable) == 0x000019, "Member 'WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage, Temp_byte_Variable) == 0x00001A, "Member 'WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage, Temp_byte_Variable_1) == 0x00001B, "Member 'WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage, K2Node_Select_Default) == 0x00001C, "Member 'WBP_LinedNotebook_Rewards_C_PopulateCompletionMessage::K2Node_Select_Default' has a wrong offset!");

// Function WBP_LinedNotebook_Rewards.WBP_LinedNotebook_Rewards_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_LinedNotebook_Rewards_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_Rewards_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_LinedNotebook_Rewards_C_PreConstruct");
static_assert(sizeof(WBP_LinedNotebook_Rewards_C_PreConstruct) == 0x000001, "Wrong size on WBP_LinedNotebook_Rewards_C_PreConstruct");
static_assert(offsetof(WBP_LinedNotebook_Rewards_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_LinedNotebook_Rewards_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

