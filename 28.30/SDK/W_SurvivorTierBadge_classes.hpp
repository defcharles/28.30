#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SurvivorTierBadge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SurvivorTierBadge.W_SurvivorTierBadge_C
// 0x0110 (0x03E0 - 0x02D0)
class UW_SurvivorTierBadge_C final : public UFortAthenaSurvivorTierBadge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       MedalSwapAnimation;                                // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_SwapDiamondBurst;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         LazyImage_Icon;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RadialDropShadow;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Tier;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsWaitingForSwapAnimation;                         // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SwapAnim_AfterTier;                                // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     SwapAnim_LoadedNewTier;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SwapAnim_AfterPrestigeLevel;                       // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             WhooshSound;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SlamSound;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         SmallFont;                                         // 0x0328(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         LargeFont;                                         // 0x0380(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ShowTier;                                          // 0x03D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnBadgeSizeChanged();
	void BP_OnPresentAnimation(const int32 BeforeTier, const int32 BeforePrestigeLevel, const int32 AfterTier, const int32 AfterPrestigeLevel);
	void BP_OnSurvivorTierStateChanged(const int32 Tier, const int32 PrestigeLevel);
	void ExecuteUbergraph_W_SurvivorTierBadge(int32 EntryPoint);
	void Finished_14BE81114BD86D931DF58F9138337F25();
	void OnLoaded_FBEF521641111FC35FD02988F301CBCB(class UObject* Loaded);
	void PlayShimmer();
	void PlaySlam();
	void PlaySwapAnimation();
	void PreConstruct(bool IsDesignTime);
	void PreloadPrestigeMaterial(const int32 PrestigeLevel);
	void SequenceEvent__ENTRYPOINTW_SurvivorTierBadge();
	void SequenceEvent__ENTRYPOINTW_SurvivorTierBadge_0();
	void SequenceEvent__ENTRYPOINTW_SurvivorTierBadge_1();
	void SequenceEvent_UpdateVisuals();
	void UpdateTierVisuals(const int32 ProfileTier, const int32 PrestigeLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SurvivorTierBadge_C">();
	}
	static class UW_SurvivorTierBadge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SurvivorTierBadge_C>();
	}
};
static_assert(alignof(UW_SurvivorTierBadge_C) == 0x000008, "Wrong alignment on UW_SurvivorTierBadge_C");
static_assert(sizeof(UW_SurvivorTierBadge_C) == 0x0003E0, "Wrong size on UW_SurvivorTierBadge_C");
static_assert(offsetof(UW_SurvivorTierBadge_C, UberGraphFrame) == 0x0002D0, "Member 'UW_SurvivorTierBadge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, MedalSwapAnimation) == 0x0002D8, "Member 'UW_SurvivorTierBadge_C::MedalSwapAnimation' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, Image_SwapDiamondBurst) == 0x0002E0, "Member 'UW_SurvivorTierBadge_C::Image_SwapDiamondBurst' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, LazyImage_Icon) == 0x0002E8, "Member 'UW_SurvivorTierBadge_C::LazyImage_Icon' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, RadialDropShadow) == 0x0002F0, "Member 'UW_SurvivorTierBadge_C::RadialDropShadow' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, Text_Tier) == 0x0002F8, "Member 'UW_SurvivorTierBadge_C::Text_Tier' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, IsWaitingForSwapAnimation) == 0x000300, "Member 'UW_SurvivorTierBadge_C::IsWaitingForSwapAnimation' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, SwapAnim_AfterTier) == 0x000304, "Member 'UW_SurvivorTierBadge_C::SwapAnim_AfterTier' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, SwapAnim_LoadedNewTier) == 0x000308, "Member 'UW_SurvivorTierBadge_C::SwapAnim_LoadedNewTier' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, SwapAnim_AfterPrestigeLevel) == 0x000310, "Member 'UW_SurvivorTierBadge_C::SwapAnim_AfterPrestigeLevel' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, WhooshSound) == 0x000318, "Member 'UW_SurvivorTierBadge_C::WhooshSound' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, SlamSound) == 0x000320, "Member 'UW_SurvivorTierBadge_C::SlamSound' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, SmallFont) == 0x000328, "Member 'UW_SurvivorTierBadge_C::SmallFont' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, LargeFont) == 0x000380, "Member 'UW_SurvivorTierBadge_C::LargeFont' has a wrong offset!");
static_assert(offsetof(UW_SurvivorTierBadge_C, ShowTier) == 0x0003D8, "Member 'UW_SurvivorTierBadge_C::ShowTier' has a wrong offset!");

}

