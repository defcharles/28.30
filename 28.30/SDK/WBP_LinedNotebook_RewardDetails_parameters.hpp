#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_RewardDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.ExecuteUbergraph_WBP_LinedNotebook_RewardDetails
// 0x0038 (0x0038 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_Event_RewardNames;                          // 0x0008(0x0010)(ConstParm, ReferenceParm)
	const class UFortEventScreenData*             K2Node_Event_InEventScreenData;                    // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_Event_RewardNames_1;                        // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_ResourceNeeded;                       // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails) == 0x000038, "Wrong size on WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails, EntryPoint) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails, K2Node_Event_RewardNames) == 0x000008, "Member 'WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails::K2Node_Event_RewardNames' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails, K2Node_Event_InEventScreenData) == 0x000018, "Member 'WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails::K2Node_Event_InEventScreenData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails, K2Node_Event_RewardNames_1) == 0x000020, "Member 'WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails::K2Node_Event_RewardNames_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails, K2Node_Event_ResourceNeeded) == 0x000030, "Member 'WBP_LinedNotebook_RewardDetails_C_ExecuteUbergraph_WBP_LinedNotebook_RewardDetails::K2Node_Event_ResourceNeeded' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.FormatRewardNames
// 0x01E8 (0x01E8 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_FormatRewardNames final
{
public:
	TArray<class FText>                           RewardNames;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   FormattedText;                                     // 0x0010(0x0018)(Parm, OutParm)
	class FString                                 LockFmt;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   PremiumRewardFmt;                                  // 0x0038(0x0018)(Edit, BlueprintVisible)
	class FText                                   FreeRewardFmt;                                     // 0x0050(0x0018)(Edit, BlueprintVisible)
	class FString                                 WorkingString;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   RewardListDelineator;                              // 0x0078(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x00A8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00C0(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPremiumTrackOwned_ReturnValue;          // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0170(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01C0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_FormatRewardNames");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames) == 0x0001E8, "Wrong size on WBP_LinedNotebook_RewardDetails_C_FormatRewardNames");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, RewardNames) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::RewardNames' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, FormattedText) == 0x000010, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::FormattedText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, LockFmt) == 0x000028, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::LockFmt' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, PremiumRewardFmt) == 0x000038, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::PremiumRewardFmt' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, FreeRewardFmt) == 0x000050, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::FreeRewardFmt' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, WorkingString) == 0x000068, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::WorkingString' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, RewardListDelineator) == 0x000078, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::RewardListDelineator' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_TextToUpper_ReturnValue) == 0x0000C0, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, K2Node_MakeArray_Array) == 0x000130, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000144, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Less_IntInt_ReturnValue_1) == 0x000145, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_IsPremiumTrackOwned_ReturnValue) == 0x000146, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_IsPremiumTrackOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Concat_StrStr_ReturnValue) == 0x000148, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Not_PreBool_ReturnValue) == 0x000158, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_BooleanAND_ReturnValue) == 0x000159, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, Temp_int_Variable) == 0x00015C, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Conv_TextToString_ReturnValue) == 0x000160, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, K2Node_Select_Default) == 0x000170, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Format_ReturnValue) == 0x000188, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001A0, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001B0, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Conv_StringToText_ReturnValue) == 0x0001C0, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_FormatRewardNames, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001D8, "Member 'WBP_LinedNotebook_RewardDetails_C_FormatRewardNames::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.InitializeEventScreenData
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData final
{
public:
	const class UFortEventScreenData*             EventScreenData;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData) == 0x000008, "Wrong size on WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData, EventScreenData) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_InitializeEventScreenData::EventScreenData' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.OnModuleInitialized
// 0x0008 (0x0008 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized final
{
public:
	const class UFortEventScreenData*             InEventScreenData;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized) == 0x000008, "Wrong size on WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized, InEventScreenData) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_OnModuleInitialized::InEventScreenData' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.OnPopulateCompletedReward
// 0x0010 (0x0010 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward final
{
public:
	TArray<class FText>                           RewardNames;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward) == 0x000010, "Wrong size on WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward, RewardNames) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_OnPopulateCompletedReward::RewardNames' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.OnPopulateNextRewardDetails
// 0x0018 (0x0018 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails final
{
public:
	TArray<class FText>                           RewardNames;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ResourceNeeded;                                    // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails) == 0x000018, "Wrong size on WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails, RewardNames) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails::RewardNames' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails, ResourceNeeded) == 0x000010, "Member 'WBP_LinedNotebook_RewardDetails_C_OnPopulateNextRewardDetails::ResourceNeeded' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.Populate Completed Reward
// 0x0028 (0x0028 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward final
{
public:
	TArray<class FText>                           RewardNames;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CallFunc_FormatRewardNames_FormattedText;          // 0x0010(0x0018)()
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward) == 0x000028, "Wrong size on WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward, RewardNames) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward::RewardNames' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward, CallFunc_FormatRewardNames_FormattedText) == 0x000010, "Member 'WBP_LinedNotebook_RewardDetails_C_Populate_Completed_Reward::CallFunc_FormatRewardNames_FormattedText' has a wrong offset!");

// Function WBP_LinedNotebook_RewardDetails.WBP_LinedNotebook_RewardDetails_C.PopulateNextRewardDetails
// 0x0110 (0x0110 - 0x0000)
struct WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails final
{
public:
	TArray<class FText>                           RewardNames;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ResourceNeeded;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class FText                                   CallFunc_FormatRewardNames_FormattedText;          // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
};
static_assert(alignof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails) == 0x000008, "Wrong alignment on WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails");
static_assert(sizeof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails) == 0x000110, "Wrong size on WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, RewardNames) == 0x000000, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::RewardNames' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, ResourceNeeded) == 0x000010, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::ResourceNeeded' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, CallFunc_FormatRewardNames_FormattedText) == 0x000030, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::CallFunc_FormatRewardNames_FormattedText' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'WBP_LinedNotebook_RewardDetails_C_PopulateNextRewardDetails::CallFunc_Format_ReturnValue' has a wrong offset!");

}

