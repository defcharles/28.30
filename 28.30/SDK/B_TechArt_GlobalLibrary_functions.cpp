#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TechArt_GlobalLibrary

#include "Basic.hpp"

#include "B_TechArt_GlobalLibrary_classes.hpp"
#include "B_TechArt_GlobalLibrary_parameters.hpp"


namespace SDK
{

// Function B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C.AddActorTag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_TechArt_GlobalLibrary_C::AddActorTag(class AActor* Actor, const class FName& tag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("AddActorTag");

	Params::B_TechArt_GlobalLibrary_C_AddActorTag Parms{};

	Parms.Actor = Actor;
	Parms.tag = tag;
	Parms.__WorldContext = __WorldContext;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);
}


// Function B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C.AreBoundsOverlapping?
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBox                             BoundsA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FBox                             BoundsB                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    BoundsOverlap_                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_TechArt_GlobalLibrary_C::AreBoundsOverlapping_(const struct FBox& BoundsA, const struct FBox& BoundsB, class UObject* __WorldContext, bool* BoundsOverlap_)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("AreBoundsOverlapping?");

	Params::B_TechArt_GlobalLibrary_C_AreBoundsOverlapping_ Parms{};

	Parms.BoundsA = std::move(BoundsA);
	Parms.BoundsB = std::move(BoundsB);
	Parms.__WorldContext = __WorldContext;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (BoundsOverlap_ != nullptr)
		*BoundsOverlap_ = Parms.BoundsOverlap_;
}


// Function B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C.GetDynamicMaterialInstance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   MaterialIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Material_Instance_Dynamic                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_TechArt_GlobalLibrary_C::GetDynamicMaterialInstance(class UMeshComponent* MeshComponent, int32 MaterialIndex, class UObject* __WorldContext, class UMaterialInstanceDynamic** Material_Instance_Dynamic)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetDynamicMaterialInstance");

	Params::B_TechArt_GlobalLibrary_C_GetDynamicMaterialInstance Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.MaterialIndex = MaterialIndex;
	Parms.__WorldContext = __WorldContext;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (Material_Instance_Dynamic != nullptr)
		*Material_Instance_Dynamic = Parms.Material_Instance_Dynamic;
}


// Function B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C.HoudiniInstanceHISMBuilder
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInstancedStaticMeshComponent*    InstancedStaticMeshComponent                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UDataTable*                       InstanceDataTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  InstancesCountToImport                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RandomScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RandomScaleMin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RandomScaleMax                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RandomRotationZ                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RandomRotationZMin                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RandomRotationZMax                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseWorldSpacePositions                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_TechArt_GlobalLibrary_C::HoudiniInstanceHISMBuilder(class UInstancedStaticMeshComponent* InstancedStaticMeshComponent, class UDataTable* InstanceDataTable, double InstancesCountToImport, bool RandomScale, double RandomScaleMin, double RandomScaleMax, bool RandomRotationZ, double RandomRotationZMin, double RandomRotationZMax, bool UseWorldSpacePositions, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("HoudiniInstanceHISMBuilder");

	Params::B_TechArt_GlobalLibrary_C_HoudiniInstanceHISMBuilder Parms{};

	Parms.InstancedStaticMeshComponent = InstancedStaticMeshComponent;
	Parms.InstanceDataTable = InstanceDataTable;
	Parms.InstancesCountToImport = InstancesCountToImport;
	Parms.RandomScale = RandomScale;
	Parms.RandomScaleMin = RandomScaleMin;
	Parms.RandomScaleMax = RandomScaleMax;
	Parms.RandomRotationZ = RandomRotationZ;
	Parms.RandomRotationZMin = RandomRotationZMin;
	Parms.RandomRotationZMax = RandomRotationZMax;
	Parms.UseWorldSpacePositions = UseWorldSpacePositions;
	Parms.__WorldContext = __WorldContext;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);
}


// Function B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C.IsLumenEnabled
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_TechArt_GlobalLibrary_C::IsLumenEnabled(class UObject* __WorldContext, bool* IsEnabled)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsLumenEnabled");

	Params::B_TechArt_GlobalLibrary_C_IsLumenEnabled Parms{};

	Parms.__WorldContext = __WorldContext;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function B_TechArt_GlobalLibrary.B_TechArt_GlobalLibrary_C.BindScalabilitySettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       Delegate                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_TechArt_GlobalLibrary_C::BindScalabilitySettings(const TDelegate<void()>& Delegate, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BindScalabilitySettings");

	Params::B_TechArt_GlobalLibrary_C_BindScalabilitySettings Parms{};

	Parms.Delegate = Delegate;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}

}

