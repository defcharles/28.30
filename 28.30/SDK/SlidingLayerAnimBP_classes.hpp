#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "SlidingLayerAnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SlidingLayerAnimBP.SlidingLayerAnimBP_C
// 0x1650 (0x1B40 - 0x04F0)
class USlidingLayerAnimBP_C final : public UFortSlidingLayerAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct SlidingLayerAnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x04F8(0x0040)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0538(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0540(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x0548(0x00B0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x05F8(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x06A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x06C8(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0778(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0798(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0848(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0868(0x00B0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_5;            // 0x0918(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x09E8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0A08(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0A78(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0AC0(0x0010)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0AD0(0x0070)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_4;            // 0x0B40(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0C10(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0C30(0x00B0)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x0CE0(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0D90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0DB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0DE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0E08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0E30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0E58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0E80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0EA8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0ED0(0x0048)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x0F18(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0FE8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x1030(0x0070)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x10A0(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x1170(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x11E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1228(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1248(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x12B8(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x12D8(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x13A8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x13F0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1460(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x1480(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1550(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1598(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1608(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1628(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x16F0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1768(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x17B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x17D8(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x1800(0x00B0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x18B0(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1960(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1980(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1A30(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1A78(0x0020)()
	bool                                          IsKneeSliding;                                     // 0x1A98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_KneeSlideNote_bTransition_FullBody_Sprinting;    // 0x1A99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9A[0x6];                                     // 0x1A9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               KneeSlideLowerBodyInitialRot_0;                    // 0x1AA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               KneeSlideLowerBodyInitialRotSmooth_0;              // 0x1AB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        FortPlayerPawn_0;                                  // 0x1AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                Fort_Player_Anim_Instance;                         // 0x1AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Time_;                                       // 0x1AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideLowerBodyYawOffset;                       // 0x1AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideRootYawOffset_0;                          // 0x1AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityAimYawDelta_0;                             // 0x1AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideSlopeAngle_0;                             // 0x1B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideSlopeYaw_0;                               // 0x1B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideSlopeYawMinusRootRot_0;                   // 0x1B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionToKneeSlide;                             // 0x1B18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B19[0x7];                                     // 0x1B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KneeSlideForwardVectorVelocityDelta_0;             // 0x1B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitiatedSlideUpHill;                              // 0x1B28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BypassEntry_0;                                     // 0x1B29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2A[0x6];                                     // 0x1B2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpineTweakLean_0;                                  // 0x1B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SlidingLayerAnimBP_AnimGraphNode_ApplyMeshSpaceAdditive_CA45D1154A0385BF8F15FBB40CA66AD6();
	void ExecuteUbergraph_SlidingLayerAnimBP(int32 EntryPoint);
	void MovementMode_AimOffset(const struct FPoseLink& InAimOffsetsPose, const struct FPoseLink& InSourcePosePreAimOffsets, struct FPoseLink* MovementMode_AimOffset_0);
	void MovementMode_FinalPoseOverride(const struct FPoseLink& InFinalPose, struct FPoseLink* MovementMode_FinalPoseOverride_0);
	void MovementMode_FullBodyOverride(const struct FPoseLink& InputPoseFullBody, struct FPoseLink* MovementMode_FullBodyOverride_0);
	void MovementMode_LocomotionAdditives(const struct FPoseLink& InLocomotionAdditivesPose, struct FPoseLink* MovementMode_LocomotionAdditives_0);
	void MovementMode_LowerBodyOverride(const struct FPoseLink& InLowerBodyPose, const struct FPoseLink& InSourcePose, struct FPoseLink* MovementMode_LowerBodyOverride_0);
	void MovementMode_SourcePose(const struct FPoseLink& InSourcePoseBase, struct FPoseLink* MovementMode_SourcePose_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SlidingLayerAnimBP_C">();
	}
	static class USlidingLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlidingLayerAnimBP_C>();
	}
};
static_assert(alignof(USlidingLayerAnimBP_C) == 0x000010, "Wrong alignment on USlidingLayerAnimBP_C");
static_assert(sizeof(USlidingLayerAnimBP_C) == 0x001B40, "Wrong size on USlidingLayerAnimBP_C");
static_assert(offsetof(USlidingLayerAnimBP_C, UberGraphFrame) == 0x0004F0, "Member 'USlidingLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, __AnimBlueprintMutables) == 0x0004F8, "Member 'USlidingLayerAnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000538, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_Base) == 0x000540, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_7) == 0x000548, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_6) == 0x0005F8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_6) == 0x0006A8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_5) == 0x0006C8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_5) == 0x000778, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_4) == 0x000798, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_4) == 0x000848, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_3) == 0x000868, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_5) == 0x000918, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_3) == 0x0009E8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000A08, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x000A78, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_IdentityPose) == 0x000AC0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000AD0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_4) == 0x000B40, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_2) == 0x000C10, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_2) == 0x000C30, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone_1) == 0x000CE0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000D90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000DB8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000DE0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000E08, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000E30, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000E58, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000E80, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x000EA8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000ED0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x000F18, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000FE8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x001030, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x0010A0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x001170, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0011E0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x001228, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001248, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x0012B8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x0012D8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0013A8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0013F0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x001460, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x001480, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001550, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x001598, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult) == 0x001608, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateMachine) == 0x001628, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0016F0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x001768, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x0017B0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x0017D8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone) == 0x001800, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x0018B0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_1) == 0x001960, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x001980, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x001A30, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root) == 0x001A78, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, IsKneeSliding) == 0x001A98, "Member 'USlidingLayerAnimBP_C::IsKneeSliding' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, b_KneeSlideNote_bTransition_FullBody_Sprinting) == 0x001A99, "Member 'USlidingLayerAnimBP_C::b_KneeSlideNote_bTransition_FullBody_Sprinting' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRot_0) == 0x001AA0, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRotSmooth_0) == 0x001AB8, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRotSmooth_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, FortPlayerPawn_0) == 0x001AD0, "Member 'USlidingLayerAnimBP_C::FortPlayerPawn_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Fort_Player_Anim_Instance) == 0x001AD8, "Member 'USlidingLayerAnimBP_C::Fort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Delta_Time_) == 0x001AE0, "Member 'USlidingLayerAnimBP_C::Delta_Time_' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyYawOffset) == 0x001AE8, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyYawOffset' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideRootYawOffset_0) == 0x001AF0, "Member 'USlidingLayerAnimBP_C::KneeSlideRootYawOffset_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, VelocityAimYawDelta_0) == 0x001AF8, "Member 'USlidingLayerAnimBP_C::VelocityAimYawDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeAngle_0) == 0x001B00, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeAngle_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYaw_0) == 0x001B08, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYaw_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYawMinusRootRot_0) == 0x001B10, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYawMinusRootRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, TransitionToKneeSlide) == 0x001B18, "Member 'USlidingLayerAnimBP_C::TransitionToKneeSlide' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideForwardVectorVelocityDelta_0) == 0x001B20, "Member 'USlidingLayerAnimBP_C::KneeSlideForwardVectorVelocityDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, InitiatedSlideUpHill) == 0x001B28, "Member 'USlidingLayerAnimBP_C::InitiatedSlideUpHill' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, BypassEntry_0) == 0x001B29, "Member 'USlidingLayerAnimBP_C::BypassEntry_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, SpineTweakLean_0) == 0x001B30, "Member 'USlidingLayerAnimBP_C::SpineTweakLean_0' has a wrong offset!");

}

