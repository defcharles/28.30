#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayInteractionsModule

#include "Basic.hpp"

#include "SmartObjectsModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GameplayInteractionsModule.AITask_UseGameplayInteraction.MoveToAndUseSmartObjectWithGameplayInteraction
// 0x0038 (0x0038 - 0x0000)
struct AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bLockAILogic;                                      // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_UseGameplayInteraction*         ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction) == 0x000008, "Wrong alignment on AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction");
static_assert(sizeof(AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction) == 0x000038, "Wrong size on AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction");
static_assert(offsetof(AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction, Controller) == 0x000000, "Member 'AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction::Controller' has a wrong offset!");
static_assert(offsetof(AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction, ClaimHandle) == 0x000008, "Member 'AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction::ClaimHandle' has a wrong offset!");
static_assert(offsetof(AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction, bLockAILogic) == 0x000028, "Member 'AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction::bLockAILogic' has a wrong offset!");
static_assert(offsetof(AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction, ReturnValue) == 0x000030, "Member 'AITask_UseGameplayInteraction_MoveToAndUseSmartObjectWithGameplayInteraction::ReturnValue' has a wrong offset!");

// Function GameplayInteractionsModule.AITask_UseGameplayInteraction.UseSmartObjectWithGameplayInteraction
// 0x0038 (0x0038 - 0x0000)
struct AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bLockAILogic;                                      // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_UseGameplayInteraction*         ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction) == 0x000008, "Wrong alignment on AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction");
static_assert(sizeof(AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction) == 0x000038, "Wrong size on AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction");
static_assert(offsetof(AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction, Controller) == 0x000000, "Member 'AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction::Controller' has a wrong offset!");
static_assert(offsetof(AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction, ClaimHandle) == 0x000008, "Member 'AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction::ClaimHandle' has a wrong offset!");
static_assert(offsetof(AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction, bLockAILogic) == 0x000028, "Member 'AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction::bLockAILogic' has a wrong offset!");
static_assert(offsetof(AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction, ReturnValue) == 0x000030, "Member 'AITask_UseGameplayInteraction_UseSmartObjectWithGameplayInteraction::ReturnValue' has a wrong offset!");

// Function GameplayInteractionsModule.StateTreeTask_PlayContextualAnim_InstanceData.OnMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded final
{
public:
	const class UAnimMontage*                     EndedMontage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded) == 0x000008, "Wrong alignment on StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded");
static_assert(sizeof(StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded) == 0x000010, "Wrong size on StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded");
static_assert(offsetof(StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded, EndedMontage) == 0x000000, "Member 'StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded::EndedMontage' has a wrong offset!");
static_assert(offsetof(StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded, bInterrupted) == 0x000008, "Member 'StateTreeTask_PlayContextualAnim_InstanceData_OnMontageEnded::bInterrupted' has a wrong offset!");

// Function GameplayInteractionsModule.StateTreeTask_PlayContextualAnim_InstanceData.OnNotifyBeginReceived
// 0x0028 (0x0028 - 0x0000)
struct StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBranchingPointNotifyPayload           BranchingPointNotifyPayload;                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived) == 0x000008, "Wrong alignment on StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived");
static_assert(sizeof(StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived) == 0x000028, "Wrong size on StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived");
static_assert(offsetof(StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived, NotifyName) == 0x000000, "Member 'StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived::NotifyName' has a wrong offset!");
static_assert(offsetof(StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived, BranchingPointNotifyPayload) == 0x000008, "Member 'StateTreeTask_PlayContextualAnim_InstanceData_OnNotifyBeginReceived::BranchingPointNotifyPayload' has a wrong offset!");

}

