#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MANG_PatrolLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "MANG_PatrolLayerAnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MANG_PatrolLayerAnimBP.MANG_PatrolLayerAnimBP_C
// 0x0BD0 (0x10C0 - 0x04F0)
class UMANG_PatrolLayerAnimBP_C final : public UFortPatrolAnimLayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct MANG_PatrolLayerAnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x04F8(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0518(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0520(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0528(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0548(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x05F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0618(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x06C8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x07B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x07D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0828(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0850(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x08C0(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x09B0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x09D8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x09F8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0A20(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0A40(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0AB0(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0B78(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0C68(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0C90(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0D00(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0D20(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0D48(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E78(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0F40(0x0078)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0FB8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0FE0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1028(0x0078)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x10A0(0x0020)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void CharacterSkeletalControlPostLegIK(const struct FPoseLink& InPosePostLegIK, struct FPoseLink* CharacterSkeletalControlPostLegIK_0);
	void ExecuteUbergraph_MANG_PatrolLayerAnimBP(int32 EntryPoint);
	void FullBodyOverride(const struct FPoseLink& PassThroughFullBodyPose, struct FPoseLink* FullBodyOverride_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MANG_PatrolLayerAnimBP_C">();
	}
	static class UMANG_PatrolLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMANG_PatrolLayerAnimBP_C>();
	}
};
static_assert(alignof(UMANG_PatrolLayerAnimBP_C) == 0x000010, "Wrong alignment on UMANG_PatrolLayerAnimBP_C");
static_assert(sizeof(UMANG_PatrolLayerAnimBP_C) == 0x0010C0, "Wrong size on UMANG_PatrolLayerAnimBP_C");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, UberGraphFrame) == 0x0004F0, "Member 'UMANG_PatrolLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, __AnimBlueprintMutables) == 0x0004F8, "Member 'UMANG_PatrolLayerAnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000518, "Member 'UMANG_PatrolLayerAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimBlueprintExtension_Base) == 0x000520, "Member 'UMANG_PatrolLayerAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_Root_2) == 0x000528, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x000548, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_Root_1) == 0x0005F8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x000618, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x0006C8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000710, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000738, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000760, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000788, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0007B0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x0007D8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000800, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x000828, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000850, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0008C0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x0009B0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x0009D8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x0009F8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x000A20, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000A40, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x000AB0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000B78, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x000C68, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000C90, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x000D00, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x000D20, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000D48, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000E10, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult) == 0x000E58, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateMachine) == 0x000E78, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x000F40, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x000FB8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000FE0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001028, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_Root) == 0x0010A0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");

}

