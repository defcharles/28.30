#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterDynamicsControlRuntime

#include "Basic.hpp"

#include "CharacterDynamicsControlRuntime_classes.hpp"
#include "CharacterDynamicsControlRuntime_parameters.hpp"


namespace SDK
{

// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetCharacterState
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortAnimInstance*                InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCharacterDynamicsControlBPLibrary::GetCharacterState(const class UFortAnimInstance* InAnimInstance)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetCharacterState");

	Params::CharacterDynamicsControlBPLibrary_GetCharacterState Parms{};

	Parms.InAnimInstance = InAnimInstance;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetProperty
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortAnimInstance*                InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPropertyName                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterDynamicsControlBPLibrary::GetProperty(const class UFortAnimInstance* InAnimInstance, const class FName InPropertyName)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetProperty");

	Params::CharacterDynamicsControlBPLibrary_GetProperty Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.InPropertyName = InPropertyName;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.SetProperty
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UFortAnimInstance*                InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPropertyName                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterDynamicsControlBPLibrary::SetProperty(const class UFortAnimInstance* InAnimInstance, const class FName InPropertyName, bool InValue)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("SetProperty");

	Params::CharacterDynamicsControlBPLibrary_SetProperty Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.InPropertyName = InPropertyName;
	Parms.InValue = InValue;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.UpdateRigidBodyWithControlNodeParameters
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               UpdateContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FRigidBodyWithControlReference   RigidBodyWithControl                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FRigidBodyWithControlReference   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRigidBodyWithControlReference UCharacterDynamicsControlBPLibrary::UpdateRigidBodyWithControlNodeParameters(const struct FAnimUpdateContext& UpdateContext, const struct FRigidBodyWithControlReference& RigidBodyWithControl)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("UpdateRigidBodyWithControlNodeParameters");

	Params::CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters Parms{};

	Parms.UpdateContext = std::move(UpdateContext);
	Parms.RigidBodyWithControl = std::move(RigidBodyWithControl);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetGravityOverrideVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector UFortCharacterDynamicsComponent::GetGravityOverrideVector()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetGravityOverrideVector");

	Params::FortCharacterDynamicsComponent_GetGravityOverrideVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetTransitionParameters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPhysicsControlControlAndModifierParametersReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FPhysicsControlControlAndModifierParameters UFortCharacterDynamicsComponent::GetTransitionParameters()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTransitionParameters");

	Params::FortCharacterDynamicsComponent_GetTransitionParameters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.ParameterIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCharacterDynamicsComponent::ParameterIndex()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ParameterIndex");

	Params::FortCharacterDynamicsComponent_ParameterIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.PreviousStateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCharacterDynamicsComponent::PreviousStateName()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PreviousStateName");

	Params::FortCharacterDynamicsComponent_PreviousStateName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.SetProperty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PropertyValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCharacterDynamicsComponent::SetProperty(const class FName PropertyName, const bool PropertyValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetProperty");

	Params::FortCharacterDynamicsComponent_SetProperty Parms{};

	Parms.PropertyName = PropertyName;
	Parms.PropertyValue = PropertyValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.StateIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCharacterDynamicsComponent::StateIndex()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StateIndex");

	Params::FortCharacterDynamicsComponent_StateIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.StateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCharacterDynamicsComponent::StateName()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StateName");

	Params::FortCharacterDynamicsComponent_StateName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetProperty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterDynamicsComponent::GetProperty(const class FName PropertyName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetProperty");

	Params::FortCharacterDynamicsComponent_GetProperty Parms{};

	Parms.PropertyName = PropertyName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetTimeInCurrentStateSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortCharacterDynamicsComponent::GetTimeInCurrentStateSeconds() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTimeInCurrentStateSeconds");

	Params::FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

