#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MLDeformerFramework

#include "Basic.hpp"


namespace SDK
{

// Enum MLDeformerFramework.EMLDeformerVizMode
// NumValues: 0x0002
enum class EMLDeformerVizMode : uint8
{
	TrainingData                             = 0,
	TestData                                 = 1,
};

// Enum MLDeformerFramework.EMLDeformerHeatMapMode
// NumValues: 0x0002
enum class EMLDeformerHeatMapMode : uint8
{
	Activations                              = 0,
	GroundTruth                              = 1,
};

// Enum MLDeformerFramework.EMLDeformerMaskChannel
// NumValues: 0x0005
enum class EMLDeformerMaskChannel : uint8
{
	Disabled                                 = 0,
	VertexColorRed                           = 1,
	VertexColorGreen                         = 2,
	VertexColorBlue                          = 3,
	VertexColorAlpha                         = 4,
};

// ScriptStruct MLDeformerFramework.MLDeformerCurveReference
// 0x0004 (0x0004 - 0x0000)
struct FMLDeformerCurveReference final
{
public:
	class FName                                   CurveName;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMLDeformerCurveReference) == 0x000004, "Wrong alignment on FMLDeformerCurveReference");
static_assert(sizeof(FMLDeformerCurveReference) == 0x000004, "Wrong size on FMLDeformerCurveReference");
static_assert(offsetof(FMLDeformerCurveReference, CurveName) == 0x000000, "Member 'FMLDeformerCurveReference::CurveName' has a wrong offset!");

// ScriptStruct MLDeformerFramework.MLDeformerTrainingInputAnim
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FMLDeformerTrainingInputAnim
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMLDeformerTrainingInputAnim) == 0x000008, "Wrong alignment on FMLDeformerTrainingInputAnim");
static_assert(sizeof(FMLDeformerTrainingInputAnim) == 0x000008, "Wrong size on FMLDeformerTrainingInputAnim");

// ScriptStruct MLDeformerFramework.MLDeformerGeomCacheTrainingInputAnim
// 0x0000 (0x0008 - 0x0008)
struct FMLDeformerGeomCacheTrainingInputAnim final : public FMLDeformerTrainingInputAnim
{
};
static_assert(alignof(FMLDeformerGeomCacheTrainingInputAnim) == 0x000008, "Wrong alignment on FMLDeformerGeomCacheTrainingInputAnim");
static_assert(sizeof(FMLDeformerGeomCacheTrainingInputAnim) == 0x000008, "Wrong size on FMLDeformerGeomCacheTrainingInputAnim");

// ScriptStruct MLDeformerFramework.MLDeformerMorphModelQualityLevel
// 0x0004 (0x0004 - 0x0000)
struct FMLDeformerMorphModelQualityLevel final
{
public:
	int32                                         MaxActiveMorphs;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMLDeformerMorphModelQualityLevel) == 0x000004, "Wrong alignment on FMLDeformerMorphModelQualityLevel");
static_assert(sizeof(FMLDeformerMorphModelQualityLevel) == 0x000004, "Wrong size on FMLDeformerMorphModelQualityLevel");
static_assert(offsetof(FMLDeformerMorphModelQualityLevel, MaxActiveMorphs) == 0x000000, "Member 'FMLDeformerMorphModelQualityLevel::MaxActiveMorphs' has a wrong offset!");

// ScriptStruct MLDeformerFramework.MLDeformerCompareActor
// 0x0028 (0x0028 - 0x0000)
struct FMLDeformerCompareActor final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMLDeformerAsset>        DeformerAsset;                                     // 0x0008(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMLDeformerCompareActor) == 0x000008, "Wrong alignment on FMLDeformerCompareActor");
static_assert(sizeof(FMLDeformerCompareActor) == 0x000028, "Wrong size on FMLDeformerCompareActor");
static_assert(offsetof(FMLDeformerCompareActor, Name) == 0x000000, "Member 'FMLDeformerCompareActor::Name' has a wrong offset!");
static_assert(offsetof(FMLDeformerCompareActor, DeformerAsset) == 0x000008, "Member 'FMLDeformerCompareActor::DeformerAsset' has a wrong offset!");

}

