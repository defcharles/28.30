#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Ascender_Smash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GA_Athena_ZipLine_SmashParent_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Ascender_Smash.GA_Athena_Ascender_Smash_C
// 0x0060 (0x0C88 - 0x0C28)
class UGA_Athena_Ascender_Smash_C final : public UGA_Athena_ZipLine_SmashParent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Athena_Ascender_Smash_C;         // 0x0C28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPrimitiveComponent*                    ZiplineInteractComponent_0;                        // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_Athena_Zipline_Ascender_C*           AscenderZipline;                                   // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DescendingTag;                                     // 0x0C40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C44[0x4];                                      // 0x0C44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           M_AscendingAnim;                                   // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           M_DescendingAnim;                                  // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            DescendingGE_Handle;                               // 0x0C58(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            AscendingGE_Handle;                                // 0x0C60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           F_AscendingAnim;                                   // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           F_DescendingAnim;                                  // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ZiplinePassiveGE;                                  // 0x0C78(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bHolsterApplied;                                   // 0x0C80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoFailSafeUnholster();
	void DoHolster();
	void DoUnholster();
	void ExecuteUbergraph_GA_Athena_Ascender_Smash(int32 EntryPoint);
	void FallingTagRemoved();
	void GameplayTagEvent_ZiplineEnter(const struct FGameplayEventData& EventData);
	void GameplayTagEvent_ZiplineExit(const struct FGameplayEventData& EventData);
	void HandleGameplayEventTag(const struct FGameplayEventData& EventData);
	bool IsPlayerUsingHandle();
	void OnBlendOut_899182BF4C098785CCBCFD85AA84455F();
	void OnCancelled_899182BF4C098785CCBCFD85AA84455F();
	void OnCompleted_899182BF4C098785CCBCFD85AA84455F();
	void OnInterrupted_899182BF4C098785CCBCFD85AA84455F();
	void Pre_BeginZiplinging();
	void SurroundingsCheck_MotorCheck();
	void SurroundingsCheck_SmashObjects();
	void ZiplinePostBegin_Event();
	void ZipliningComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Ascender_Smash_C">();
	}
	static class UGA_Athena_Ascender_Smash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Ascender_Smash_C>();
	}
};
static_assert(alignof(UGA_Athena_Ascender_Smash_C) == 0x000008, "Wrong alignment on UGA_Athena_Ascender_Smash_C");
static_assert(sizeof(UGA_Athena_Ascender_Smash_C) == 0x000C88, "Wrong size on UGA_Athena_Ascender_Smash_C");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, UberGraphFrame_GA_Athena_Ascender_Smash_C) == 0x000C28, "Member 'UGA_Athena_Ascender_Smash_C::UberGraphFrame_GA_Athena_Ascender_Smash_C' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, ZiplineInteractComponent_0) == 0x000C30, "Member 'UGA_Athena_Ascender_Smash_C::ZiplineInteractComponent_0' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, AscenderZipline) == 0x000C38, "Member 'UGA_Athena_Ascender_Smash_C::AscenderZipline' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, DescendingTag) == 0x000C40, "Member 'UGA_Athena_Ascender_Smash_C::DescendingTag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, M_AscendingAnim) == 0x000C48, "Member 'UGA_Athena_Ascender_Smash_C::M_AscendingAnim' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, M_DescendingAnim) == 0x000C50, "Member 'UGA_Athena_Ascender_Smash_C::M_DescendingAnim' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, DescendingGE_Handle) == 0x000C58, "Member 'UGA_Athena_Ascender_Smash_C::DescendingGE_Handle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, AscendingGE_Handle) == 0x000C60, "Member 'UGA_Athena_Ascender_Smash_C::AscendingGE_Handle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, F_AscendingAnim) == 0x000C68, "Member 'UGA_Athena_Ascender_Smash_C::F_AscendingAnim' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, F_DescendingAnim) == 0x000C70, "Member 'UGA_Athena_Ascender_Smash_C::F_DescendingAnim' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, ZiplinePassiveGE) == 0x000C78, "Member 'UGA_Athena_Ascender_Smash_C::ZiplinePassiveGE' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Ascender_Smash_C, bHolsterApplied) == 0x000C80, "Member 'UGA_Athena_Ascender_Smash_C::bHolsterApplied' has a wrong offset!");

}

