#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoFrontendUI

#include "Basic.hpp"

#include "JunoFrontendUI_classes.hpp"
#include "JunoFrontendUI_parameters.hpp"


namespace SDK
{

// Function JunoFrontendUI.JunoWorldManagementViewModel.DisableDataRefresh
// (Final, Native, Public, BlueprintCallable)

void UJunoWorldManagementViewModel::DisableDataRefresh()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DisableDataRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoFrontendUI.JunoWorldManagementViewModel.EnableDataRefresh
// (Final, Native, Public, BlueprintCallable)

void UJunoWorldManagementViewModel::EnableDataRefresh()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnableDataRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoFrontendUI.JunoWorldManagementViewModel.FetchWorldData
// (Final, Native, Public, BlueprintCallable)

void UJunoWorldManagementViewModel::FetchWorldData()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FetchWorldData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoFrontendUI.JunoWorldManagementViewModel.InitWorldData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UDataTable>        InSettingDataTable                                     (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UDataTable>        InWorldImageDataTable                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoWorldManagementViewModel::InitWorldData(const TSoftObjectPtr<class UDataTable>& InSettingDataTable, const TSoftObjectPtr<class UDataTable>& InWorldImageDataTable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitWorldData");

	Params::JunoWorldManagementViewModel_InitWorldData Parms{};

	Parms.InSettingDataTable = InSettingDataTable;
	Parms.InWorldImageDataTable = InWorldImageDataTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoFrontendUI.JunoWorldManagementViewModel.RemoveSelectedWorldFromList
// (Final, Native, Public, BlueprintCallable)

void UJunoWorldManagementViewModel::RemoveSelectedWorldFromList()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveSelectedWorldFromList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JunoFrontendUI.JunoWorldManagementViewModel.StartMatchmakingInModeratorMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InWorldId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoWorldManagementViewModel::StartMatchmakingInModeratorMode(const class FString& InWorldId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartMatchmakingInModeratorMode");

	Params::JunoWorldManagementViewModel_StartMatchmakingInModeratorMode Parms{};

	Parms.InWorldId = std::move(InWorldId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoFrontendUI.JunoWorldManagementViewModel.GetIsCreateFlowSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UJunoWorldManagementViewModel::GetIsCreateFlowSelected() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsCreateFlowSelected");

	Params::JunoWorldManagementViewModel_GetIsCreateFlowSelected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

