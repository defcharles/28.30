#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEngineExperimental

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugBoxInternal
// 0x0070 (0x0070 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugBoxInternal final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Extent;                                            // 0x0018(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Rotation;                                          // 0x0030(0x0020)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0050(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0054(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0058(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x005C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0060(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0064(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugBoxInternal) == 0x000010, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugBoxInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugBoxInternal) == 0x000070, "Wrong size on ControllerComponentDebugDraw_DrawDebugBoxInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, Center) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::Center' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, Extent) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::Extent' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, Rotation) == 0x000030, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::Rotation' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, Color) == 0x000050, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, bPersistentLines) == 0x000054, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, Lifetime) == 0x000058, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, Thickness) == 0x00005C, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, ChannelId) == 0x000060, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugBoxInternal, InstanceID) == 0x000064, "Member 'ControllerComponentDebugDraw_DrawDebugBoxInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugCapsuleInternal
// 0x0060 (0x0060 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugCapsuleInternal final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfHeight;                                        // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Rotation;                                          // 0x0020(0x0020)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0044(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x004C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0050(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0054(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal) == 0x000010, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugCapsuleInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal) == 0x000060, "Wrong size on ControllerComponentDebugDraw_DrawDebugCapsuleInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, Center) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::Center' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, HalfHeight) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::HalfHeight' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, Radius) == 0x00001C, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::Radius' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, Rotation) == 0x000020, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::Rotation' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, Color) == 0x000040, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, bPersistentLines) == 0x000044, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, Lifetime) == 0x000048, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, Thickness) == 0x00004C, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, ChannelId) == 0x000050, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCapsuleInternal, InstanceID) == 0x000054, "Member 'ControllerComponentDebugDraw_DrawDebugCapsuleInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugConeInternal
// 0x0058 (0x0058 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugConeInternal final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleWidth;                                        // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleHeight;                                       // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSides;                                          // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0044(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x004C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0050(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0054(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugConeInternal) == 0x000008, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugConeInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugConeInternal) == 0x000058, "Wrong size on ControllerComponentDebugDraw_DrawDebugConeInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, Origin) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::Origin' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, Direction) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::Direction' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, Length) == 0x000030, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::Length' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, AngleWidth) == 0x000034, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::AngleWidth' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, AngleHeight) == 0x000038, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::AngleHeight' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, NumSides) == 0x00003C, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::NumSides' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, Color) == 0x000040, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, bPersistentLines) == 0x000044, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, Lifetime) == 0x000048, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, Thickness) == 0x00004C, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, ChannelId) == 0x000050, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugConeInternal, InstanceID) == 0x000054, "Member 'ControllerComponentDebugDraw_DrawDebugConeInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugCylinderInternal
// 0x0050 (0x0050 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugCylinderInternal final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0018(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Segments;                                          // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x003C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x0044(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x004C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugCylinderInternal) == 0x000008, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugCylinderInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugCylinderInternal) == 0x000050, "Wrong size on ControllerComponentDebugDraw_DrawDebugCylinderInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, Start) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::Start' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, End) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::End' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, Radius) == 0x000030, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::Radius' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, Segments) == 0x000034, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::Segments' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, Color) == 0x000038, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, bPersistentLines) == 0x00003C, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, Lifetime) == 0x000040, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, Thickness) == 0x000044, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, ChannelId) == 0x000048, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugCylinderInternal, InstanceID) == 0x00004C, "Member 'ControllerComponentDebugDraw_DrawDebugCylinderInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugDirectionalArrowInternal
// 0x0050 (0x0050 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal final
{
public:
	struct FVector                                LineStart;                                         // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LineEnd;                                           // 0x0018(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArrowSize;                                         // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0038(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x003C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0044(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0048(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal) == 0x000008, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal) == 0x000050, "Wrong size on ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, LineStart) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::LineStart' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, LineEnd) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::LineEnd' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, ArrowSize) == 0x000030, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::ArrowSize' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, Color) == 0x000034, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, bPersistentLines) == 0x000038, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, Lifetime) == 0x00003C, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, Thickness) == 0x000040, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, ChannelId) == 0x000044, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal, InstanceID) == 0x000048, "Member 'ControllerComponentDebugDraw_DrawDebugDirectionalArrowInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugLineInternal
// 0x0048 (0x0048 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugLineInternal final
{
public:
	struct FVector                                LineStart;                                         // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LineEnd;                                           // 0x0018(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0034(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x003C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0044(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugLineInternal) == 0x000008, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugLineInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugLineInternal) == 0x000048, "Wrong size on ControllerComponentDebugDraw_DrawDebugLineInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, LineStart) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::LineStart' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, LineEnd) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::LineEnd' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, Color) == 0x000030, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, bPersistentLines) == 0x000034, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, Lifetime) == 0x000038, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, Thickness) == 0x00003C, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, ChannelId) == 0x000040, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugLineInternal, InstanceID) == 0x000044, "Member 'ControllerComponentDebugDraw_DrawDebugLineInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugPointInternal
// 0x0030 (0x0030 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugPointInternal final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Size;                                              // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0024(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x002C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugPointInternal) == 0x000008, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugPointInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugPointInternal) == 0x000030, "Wrong size on ControllerComponentDebugDraw_DrawDebugPointInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, Position) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::Position' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, Size) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::Size' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, Color) == 0x00001C, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, bPersistentLines) == 0x000020, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, Lifetime) == 0x000024, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, ChannelId) == 0x000028, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugPointInternal, InstanceID) == 0x00002C, "Member 'ControllerComponentDebugDraw_DrawDebugPointInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.DrawDebugSphereInternal
// 0x0038 (0x0038 - 0x0000)
struct ControllerComponentDebugDraw_DrawDebugSphereInternal final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Segments;                                          // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifetime;                                          // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x002C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelId;                                         // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_DrawDebugSphereInternal) == 0x000008, "Wrong alignment on ControllerComponentDebugDraw_DrawDebugSphereInternal");
static_assert(sizeof(ControllerComponentDebugDraw_DrawDebugSphereInternal) == 0x000038, "Wrong size on ControllerComponentDebugDraw_DrawDebugSphereInternal");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, Center) == 0x000000, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::Center' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, Radius) == 0x000018, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::Radius' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, Segments) == 0x00001C, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::Segments' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, Color) == 0x000020, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::Color' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, bPersistentLines) == 0x000024, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::bPersistentLines' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, Lifetime) == 0x000028, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::Lifetime' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, Thickness) == 0x00002C, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::Thickness' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, ChannelId) == 0x000030, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_DrawDebugSphereInternal, InstanceID) == 0x000034, "Member 'ControllerComponentDebugDraw_DrawDebugSphereInternal::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.SetDebugDrawEnabled
// 0x0008 (0x0008 - 0x0000)
struct ControllerComponentDebugDraw_SetDebugDrawEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        ChannelId;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_SetDebugDrawEnabled) == 0x000004, "Wrong alignment on ControllerComponentDebugDraw_SetDebugDrawEnabled");
static_assert(sizeof(ControllerComponentDebugDraw_SetDebugDrawEnabled) == 0x000008, "Wrong size on ControllerComponentDebugDraw_SetDebugDrawEnabled");
static_assert(offsetof(ControllerComponentDebugDraw_SetDebugDrawEnabled, bEnabled) == 0x000000, "Member 'ControllerComponentDebugDraw_SetDebugDrawEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_SetDebugDrawEnabled, ChannelId) == 0x000004, "Member 'ControllerComponentDebugDraw_SetDebugDrawEnabled::ChannelId' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.Clear
// 0x0008 (0x0008 - 0x0000)
struct ControllerComponentDebugDraw_Clear final
{
public:
	uint32                                        ChannelId;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        InstanceID;                                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_Clear) == 0x000004, "Wrong alignment on ControllerComponentDebugDraw_Clear");
static_assert(sizeof(ControllerComponentDebugDraw_Clear) == 0x000008, "Wrong size on ControllerComponentDebugDraw_Clear");
static_assert(offsetof(ControllerComponentDebugDraw_Clear, ChannelId) == 0x000000, "Member 'ControllerComponentDebugDraw_Clear::ChannelId' has a wrong offset!");
static_assert(offsetof(ControllerComponentDebugDraw_Clear, InstanceID) == 0x000004, "Member 'ControllerComponentDebugDraw_Clear::InstanceID' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.ClearChannel
// 0x0004 (0x0004 - 0x0000)
struct ControllerComponentDebugDraw_ClearChannel final
{
public:
	uint32                                        ChannelId;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_ClearChannel) == 0x000004, "Wrong alignment on ControllerComponentDebugDraw_ClearChannel");
static_assert(sizeof(ControllerComponentDebugDraw_ClearChannel) == 0x000004, "Wrong size on ControllerComponentDebugDraw_ClearChannel");
static_assert(offsetof(ControllerComponentDebugDraw_ClearChannel, ChannelId) == 0x000000, "Member 'ControllerComponentDebugDraw_ClearChannel::ChannelId' has a wrong offset!");

// Function UnrealEngineExperimental.ControllerComponentDebugDraw.Reset
// 0x0004 (0x0004 - 0x0000)
struct ControllerComponentDebugDraw_Reset final
{
public:
	uint32                                        ChannelId;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ControllerComponentDebugDraw_Reset) == 0x000004, "Wrong alignment on ControllerComponentDebugDraw_Reset");
static_assert(sizeof(ControllerComponentDebugDraw_Reset) == 0x000004, "Wrong size on ControllerComponentDebugDraw_Reset");
static_assert(offsetof(ControllerComponentDebugDraw_Reset, ChannelId) == 0x000000, "Member 'ControllerComponentDebugDraw_Reset::ChannelId' has a wrong offset!");

}

