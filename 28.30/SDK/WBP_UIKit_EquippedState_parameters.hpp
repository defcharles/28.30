#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_EquippedState

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_EquippedState.WBP_UIKit_EquippedState_C.ExecuteUbergraph_WBP_UIKit_EquippedState
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState) == 0x000004, "Wrong alignment on WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState");
static_assert(sizeof(WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState) == 0x000008, "Wrong size on WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState");
static_assert(offsetof(WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState, EntryPoint) == 0x000000, "Member 'WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UIKit_EquippedState_C_ExecuteUbergraph_WBP_UIKit_EquippedState::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_EquippedState.WBP_UIKit_EquippedState_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_EquippedState_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_EquippedState_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UIKit_EquippedState_C_PreConstruct");
static_assert(sizeof(WBP_UIKit_EquippedState_C_PreConstruct) == 0x000001, "Wrong size on WBP_UIKit_EquippedState_C_PreConstruct");
static_assert(offsetof(WBP_UIKit_EquippedState_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UIKit_EquippedState_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UIKit_EquippedState.WBP_UIKit_EquippedState_C.SetEquippedState
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_UIKit_EquippedState_C_SetEquippedState final
{
public:
	bool                                          IsCurrentSlotEquipped;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplaySlot;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   EquippedSlot;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UIKit_EquippedState_C_SetEquippedState) == 0x000008, "Wrong alignment on WBP_UIKit_EquippedState_C_SetEquippedState");
static_assert(sizeof(WBP_UIKit_EquippedState_C_SetEquippedState) == 0x0000A0, "Wrong size on WBP_UIKit_EquippedState_C_SetEquippedState");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, IsCurrentSlotEquipped) == 0x000000, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::IsCurrentSlotEquipped' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, DisplaySlot) == 0x000001, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::DisplaySlot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, EquippedSlot) == 0x000008, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::EquippedSlot' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_struct_Variable) == 0x000020, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_struct_Variable_1) == 0x000030, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_bool_Variable) == 0x000040, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_struct_Variable_2) == 0x000044, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_struct_Variable_3) == 0x000054, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_bool_Variable_1) == 0x000064, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_byte_Variable) == 0x000065, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, K2Node_Select_Default) == 0x000068, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_byte_Variable_1) == 0x000078, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, K2Node_Select_Default_1) == 0x00007C, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, Temp_bool_Variable_2) == 0x00008C, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, K2Node_Select_Default_2) == 0x00008D, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000090, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UIKit_EquippedState_C_SetEquippedState, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000098, "Member 'WBP_UIKit_EquippedState_C_SetEquippedState::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

}

