#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MPItemShop_VaultWorld

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.TransitionBackgroundForward
// 0x0030 (0x0030 - 0x0000)
struct MPItemShop_VaultWorld_C_TransitionBackgroundForward final
{
public:
	double                                        Forward;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FXTransitionFade;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_TransitionBackgroundForward) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_TransitionBackgroundForward");
static_assert(sizeof(MPItemShop_VaultWorld_C_TransitionBackgroundForward) == 0x000030, "Wrong size on MPItemShop_VaultWorld_C_TransitionBackgroundForward");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, Forward) == 0x000000, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::Forward' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, FXTransitionFade) == 0x000008, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::FXTransitionFade' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, Mid) == 0x000010, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::Mid' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundForward, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00002C, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundForward::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.TransitionBackgroundBackward
// 0x0030 (0x0030 - 0x0000)
struct MPItemShop_VaultWorld_C_TransitionBackgroundBackward final
{
public:
	double                                        Backward;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FXTransitionFade;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_TransitionBackgroundBackward");
static_assert(sizeof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward) == 0x000030, "Wrong size on MPItemShop_VaultWorld_C_TransitionBackgroundBackward");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, Backward) == 0x000000, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::Backward' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, FXTransitionFade) == 0x000008, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::FXTransitionFade' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, Mid) == 0x000010, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::Mid' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_TransitionBackgroundBackward, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00002C, "Member 'MPItemShop_VaultWorld_C_TransitionBackgroundBackward::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.SetupBackgroundMaterial
// 0x0070 (0x0070 - 0x0000)
struct MPItemShop_VaultWorld_C_SetupBackgroundMaterial final
{
public:
	class UTexture2D*                             TextureBackground;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFloor;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstTimeSetup;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_7;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_4;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_SetupBackgroundMaterial");
static_assert(sizeof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial) == 0x000070, "Wrong size on MPItemShop_VaultWorld_C_SetupBackgroundMaterial");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, TextureBackground) == 0x000000, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::TextureBackground' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Mid) == 0x000008, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Mid' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, IsFloor) == 0x000010, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::IsFloor' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, FirstTimeSetup) == 0x000011, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::FirstTimeSetup' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable) == 0x000012, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable) == 0x000014, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_1) == 0x000018, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_1) == 0x00001C, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_2) == 0x000020, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_3) == 0x000024, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_2) == 0x000028, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_4) == 0x00002C, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_5) == 0x000030, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_3) == 0x000034, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_real_Variable) == 0x000038, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_real_Variable_1) == 0x00003C, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_6) == 0x000040, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default) == 0x000044, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_1) == 0x00004C, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_7) == 0x000054, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_2) == 0x000058, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_3) == 0x00005C, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_4) == 0x000060, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_4) == 0x000064, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_SetupBackgroundMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'MPItemShop_VaultWorld_C_SetupBackgroundMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.Set Background from Child Actor
// 0x0010 (0x0010 - 0x0000)
struct MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor final
{
public:
	class AFortStaticMeshActor*                   K2Node_DynamicCast_AsFort_Static_Mesh_Actor;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor");
static_assert(sizeof(MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor) == 0x000010, "Wrong size on MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor");
static_assert(offsetof(MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor, K2Node_DynamicCast_AsFort_Static_Mesh_Actor) == 0x000000, "Member 'MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor::K2Node_DynamicCast_AsFort_Static_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'MPItemShop_VaultWorld_C_Set_Background_from_Child_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnTransitionBackground
// 0x0002 (0x0002 - 0x0000)
struct MPItemShop_VaultWorld_C_OnTransitionBackground final
{
public:
	bool                                          bPlayForward;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackgroundIntensityLevel                     IntensityTransition;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_OnTransitionBackground) == 0x000001, "Wrong alignment on MPItemShop_VaultWorld_C_OnTransitionBackground");
static_assert(sizeof(MPItemShop_VaultWorld_C_OnTransitionBackground) == 0x000002, "Wrong size on MPItemShop_VaultWorld_C_OnTransitionBackground");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnTransitionBackground, bPlayForward) == 0x000000, "Member 'MPItemShop_VaultWorld_C_OnTransitionBackground::bPlayForward' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnTransitionBackground, IntensityTransition) == 0x000001, "Member 'MPItemShop_VaultWorld_C_OnTransitionBackground::IntensityTransition' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnSetupTextureBackground
// 0x0060 (0x0060 - 0x0000)
struct MPItemShop_VaultWorld_C_OnSetupTextureBackground final
{
public:
	const class UTexture2D*                       LoadedBackgroundTexture;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVaultWorldBackgroundData              BackgroundInfo;                                    // 0x0008(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MPItemShop_VaultWorld_C_OnSetupTextureBackground) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_OnSetupTextureBackground");
static_assert(sizeof(MPItemShop_VaultWorld_C_OnSetupTextureBackground) == 0x000060, "Wrong size on MPItemShop_VaultWorld_C_OnSetupTextureBackground");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnSetupTextureBackground, LoadedBackgroundTexture) == 0x000000, "Member 'MPItemShop_VaultWorld_C_OnSetupTextureBackground::LoadedBackgroundTexture' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnSetupTextureBackground, BackgroundInfo) == 0x000008, "Member 'MPItemShop_VaultWorld_C_OnSetupTextureBackground::BackgroundInfo' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnUpdateDisplay
// 0x0002 (0x0002 - 0x0000)
struct MPItemShop_VaultWorld_C_OnUpdateDisplay final
{
public:
	bool                                          bShowFloor;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowEffects;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_OnUpdateDisplay) == 0x000001, "Wrong alignment on MPItemShop_VaultWorld_C_OnUpdateDisplay");
static_assert(sizeof(MPItemShop_VaultWorld_C_OnUpdateDisplay) == 0x000002, "Wrong size on MPItemShop_VaultWorld_C_OnUpdateDisplay");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnUpdateDisplay, bShowFloor) == 0x000000, "Member 'MPItemShop_VaultWorld_C_OnUpdateDisplay::bShowFloor' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnUpdateDisplay, bShowEffects) == 0x000001, "Member 'MPItemShop_VaultWorld_C_OnUpdateDisplay::bShowEffects' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnSetupMaterialBackground
// 0x0060 (0x0060 - 0x0000)
struct MPItemShop_VaultWorld_C_OnSetupMaterialBackground final
{
public:
	const class UMaterialInterface*               LoadedBackgroundMaterial;                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVaultWorldBackgroundData              BackgroundInfo;                                    // 0x0008(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MPItemShop_VaultWorld_C_OnSetupMaterialBackground) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_OnSetupMaterialBackground");
static_assert(sizeof(MPItemShop_VaultWorld_C_OnSetupMaterialBackground) == 0x000060, "Wrong size on MPItemShop_VaultWorld_C_OnSetupMaterialBackground");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnSetupMaterialBackground, LoadedBackgroundMaterial) == 0x000000, "Member 'MPItemShop_VaultWorld_C_OnSetupMaterialBackground::LoadedBackgroundMaterial' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnSetupMaterialBackground, BackgroundInfo) == 0x000008, "Member 'MPItemShop_VaultWorld_C_OnSetupMaterialBackground::BackgroundInfo' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.HandleTextureBackground
// 0x0008 (0x0008 - 0x0000)
struct MPItemShop_VaultWorld_C_HandleTextureBackground final
{
public:
	class UTexture2D*                             TextureBackground;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_HandleTextureBackground) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_HandleTextureBackground");
static_assert(sizeof(MPItemShop_VaultWorld_C_HandleTextureBackground) == 0x000008, "Wrong size on MPItemShop_VaultWorld_C_HandleTextureBackground");
static_assert(offsetof(MPItemShop_VaultWorld_C_HandleTextureBackground, TextureBackground) == 0x000000, "Member 'MPItemShop_VaultWorld_C_HandleTextureBackground::TextureBackground' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnNewSceneBackgroundChildActor
// 0x0008 (0x0008 - 0x0000)
struct MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor final
{
public:
	class AFortStaticMeshActor*                   NewActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor");
static_assert(sizeof(MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor) == 0x000008, "Wrong size on MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor");
static_assert(offsetof(MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor, NewActor) == 0x000000, "Member 'MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor::NewActor' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.HandleMaterialBackground
// 0x0018 (0x0018 - 0x0000)
struct MPItemShop_VaultWorld_C_HandleMaterialBackground final
{
public:
	const class UMaterialInterface*               MaterialBackground;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_HandleMaterialBackground) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_HandleMaterialBackground");
static_assert(sizeof(MPItemShop_VaultWorld_C_HandleMaterialBackground) == 0x000018, "Wrong size on MPItemShop_VaultWorld_C_HandleMaterialBackground");
static_assert(offsetof(MPItemShop_VaultWorld_C_HandleMaterialBackground, MaterialBackground) == 0x000000, "Member 'MPItemShop_VaultWorld_C_HandleMaterialBackground::MaterialBackground' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_HandleMaterialBackground, Temp_object_Variable) == 0x000008, "Member 'MPItemShop_VaultWorld_C_HandleMaterialBackground::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_HandleMaterialBackground, Temp_object_Variable_1) == 0x000010, "Member 'MPItemShop_VaultWorld_C_HandleMaterialBackground::Temp_object_Variable_1' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.ExecuteUbergraph_MPItemShop_VaultWorld
// 0x0100 (0x0100 - 0x0000)
struct MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortStaticMeshActor*                   K2Node_Event_NewActor;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlayForward;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackgroundIntensityLevel                     K2Node_Event_IntensityTransition;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture2D*                       K2Node_Event_LoadedBackgroundTexture;              // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVaultWorldBackgroundData              K2Node_Event_BackgroundInfo_1;                     // 0x0020(0x0058)(ConstParm)
	const class UMaterialInterface*               K2Node_Event_LoadedBackgroundMaterial;             // 0x0078(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVaultWorldBackgroundData              K2Node_Event_BackgroundInfo;                       // 0x0080(0x0058)(ConstParm)
	bool                                          K2Node_Event_bShowFloor;                           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowEffects;                         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TransitionBackgroundForward_FXTransitionFade_ImplicitCast; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TransitionBackgroundForward_FXTransitionFade_ImplicitCast_1; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TransitionBackgroundForward_Forward_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TransitionBackgroundForward_Forward_ImplicitCast_1; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld");
static_assert(sizeof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld) == 0x000100, "Wrong size on MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, EntryPoint) == 0x000000, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::EntryPoint' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_NewActor) == 0x000008, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_NewActor' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_bPlayForward) == 0x000010, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_bPlayForward' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_IntensityTransition) == 0x000011, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_IntensityTransition' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_LoadedBackgroundTexture) == 0x000018, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_LoadedBackgroundTexture' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_BackgroundInfo_1) == 0x000020, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_BackgroundInfo_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_LoadedBackgroundMaterial) == 0x000078, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_LoadedBackgroundMaterial' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_BackgroundInfo) == 0x000080, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_BackgroundInfo' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_bShowFloor) == 0x0000D8, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_bShowFloor' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, K2Node_Event_bShowEffects) == 0x0000D9, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::K2Node_Event_bShowEffects' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, CallFunc_TransitionBackgroundForward_FXTransitionFade_ImplicitCast) == 0x0000E0, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::CallFunc_TransitionBackgroundForward_FXTransitionFade_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, CallFunc_TransitionBackgroundForward_FXTransitionFade_ImplicitCast_1) == 0x0000E8, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::CallFunc_TransitionBackgroundForward_FXTransitionFade_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, CallFunc_TransitionBackgroundForward_Forward_ImplicitCast) == 0x0000F0, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::CallFunc_TransitionBackgroundForward_Forward_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld, CallFunc_TransitionBackgroundForward_Forward_ImplicitCast_1) == 0x0000F8, "Member 'MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld::CallFunc_TransitionBackgroundForward_Forward_ImplicitCast_1' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.AssignFloorMaterial
// 0x0010 (0x0010 - 0x0000)
struct MPItemShop_VaultWorld_C_AssignFloorMaterial final
{
public:
	class UMaterialInterface*                     SourceMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_AssignFloorMaterial) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_AssignFloorMaterial");
static_assert(sizeof(MPItemShop_VaultWorld_C_AssignFloorMaterial) == 0x000010, "Wrong size on MPItemShop_VaultWorld_C_AssignFloorMaterial");
static_assert(offsetof(MPItemShop_VaultWorld_C_AssignFloorMaterial, SourceMaterial) == 0x000000, "Member 'MPItemShop_VaultWorld_C_AssignFloorMaterial::SourceMaterial' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_AssignFloorMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'MPItemShop_VaultWorld_C_AssignFloorMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.AssignBackgroundMaterial
// 0x0010 (0x0010 - 0x0000)
struct MPItemShop_VaultWorld_C_AssignBackgroundMaterial final
{
public:
	class UMaterialInterface*                     SourceMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPItemShop_VaultWorld_C_AssignBackgroundMaterial) == 0x000008, "Wrong alignment on MPItemShop_VaultWorld_C_AssignBackgroundMaterial");
static_assert(sizeof(MPItemShop_VaultWorld_C_AssignBackgroundMaterial) == 0x000010, "Wrong size on MPItemShop_VaultWorld_C_AssignBackgroundMaterial");
static_assert(offsetof(MPItemShop_VaultWorld_C_AssignBackgroundMaterial, SourceMaterial) == 0x000000, "Member 'MPItemShop_VaultWorld_C_AssignBackgroundMaterial::SourceMaterial' has a wrong offset!");
static_assert(offsetof(MPItemShop_VaultWorld_C_AssignBackgroundMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'MPItemShop_VaultWorld_C_AssignBackgroundMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

