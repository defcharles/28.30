#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCosmeticsRuntime

#include "Basic.hpp"

#include "SparksCoreRuntime_structs.hpp"
#include "FMJamCoreRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SparksCosmeticsRuntime_structs.hpp"


namespace SDK::Params
{

// Function SparksCosmeticsRuntime.FortAnimNotifyState_SpawnSparksProp.InitNewNotify
// 0x0060 (0x0060 - 0x0000)
struct FortAnimNotifyState_SpawnSparksProp_InitNewNotify final
{
public:
	ESparksInstrumentType                         InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InLeftHand;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InAuxMesh;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InSocketName;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      InSkipActorsWithTag;                               // 0x0008(0x0048)(Parm, NativeAccessSpecifierPublic)
	int32                                         InPropId;                                          // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          InDefaultMesh;                                     // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify) == 0x000008, "Wrong alignment on FortAnimNotifyState_SpawnSparksProp_InitNewNotify");
static_assert(sizeof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify) == 0x000060, "Wrong size on FortAnimNotifyState_SpawnSparksProp_InitNewNotify");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InType) == 0x000000, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InType' has a wrong offset!");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InLeftHand) == 0x000001, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InLeftHand' has a wrong offset!");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InAuxMesh) == 0x000002, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InAuxMesh' has a wrong offset!");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InSocketName) == 0x000004, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InSocketName' has a wrong offset!");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InSkipActorsWithTag) == 0x000008, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InSkipActorsWithTag' has a wrong offset!");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InPropId) == 0x000050, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InPropId' has a wrong offset!");
static_assert(offsetof(FortAnimNotifyState_SpawnSparksProp_InitNewNotify, InDefaultMesh) == 0x000058, "Member 'FortAnimNotifyState_SpawnSparksProp_InitNewNotify::InDefaultMesh' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksAccountItemDefinition.GetInstrumentType
// 0x0001 (0x0001 - 0x0000)
struct SparksAccountItemDefinition_GetInstrumentType final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksAccountItemDefinition_GetInstrumentType) == 0x000001, "Wrong alignment on SparksAccountItemDefinition_GetInstrumentType");
static_assert(sizeof(SparksAccountItemDefinition_GetInstrumentType) == 0x000001, "Wrong size on SparksAccountItemDefinition_GetInstrumentType");
static_assert(offsetof(SparksAccountItemDefinition_GetInstrumentType, ReturnValue) == 0x000000, "Member 'SparksAccountItemDefinition_GetInstrumentType::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksAccountItemDefinition.GetItemSubtype
// 0x0001 (0x0001 - 0x0000)
struct SparksAccountItemDefinition_GetItemSubtype final
{
public:
	ESparksAccountItemSubtype                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksAccountItemDefinition_GetItemSubtype) == 0x000001, "Wrong alignment on SparksAccountItemDefinition_GetItemSubtype");
static_assert(sizeof(SparksAccountItemDefinition_GetItemSubtype) == 0x000001, "Wrong size on SparksAccountItemDefinition_GetItemSubtype");
static_assert(offsetof(SparksAccountItemDefinition_GetItemSubtype, ReturnValue) == 0x000000, "Member 'SparksAccountItemDefinition_GetItemSubtype::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksAccountItemDefinition.GetVariantChannelOptionNames
// 0x0030 (0x0030 - 0x0000)
struct SparksAccountItemDefinition_GetVariantChannelOptionNames final
{
public:
	struct FGameplayTag                           ChannelTag;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutChannelName;                                    // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         OutNames;                                          // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksAccountItemDefinition_GetVariantChannelOptionNames) == 0x000008, "Wrong alignment on SparksAccountItemDefinition_GetVariantChannelOptionNames");
static_assert(sizeof(SparksAccountItemDefinition_GetVariantChannelOptionNames) == 0x000030, "Wrong size on SparksAccountItemDefinition_GetVariantChannelOptionNames");
static_assert(offsetof(SparksAccountItemDefinition_GetVariantChannelOptionNames, ChannelTag) == 0x000000, "Member 'SparksAccountItemDefinition_GetVariantChannelOptionNames::ChannelTag' has a wrong offset!");
static_assert(offsetof(SparksAccountItemDefinition_GetVariantChannelOptionNames, OutChannelName) == 0x000008, "Member 'SparksAccountItemDefinition_GetVariantChannelOptionNames::OutChannelName' has a wrong offset!");
static_assert(offsetof(SparksAccountItemDefinition_GetVariantChannelOptionNames, OutNames) == 0x000020, "Member 'SparksAccountItemDefinition_GetVariantChannelOptionNames::OutNames' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksAccountItemDefinition.GetVariantChannelTags
// 0x0010 (0x0010 - 0x0000)
struct SparksAccountItemDefinition_GetVariantChannelTags final
{
public:
	TArray<struct FGameplayTag>                   OutChannelTags;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksAccountItemDefinition_GetVariantChannelTags) == 0x000008, "Wrong alignment on SparksAccountItemDefinition_GetVariantChannelTags");
static_assert(sizeof(SparksAccountItemDefinition_GetVariantChannelTags) == 0x000010, "Wrong size on SparksAccountItemDefinition_GetVariantChannelTags");
static_assert(offsetof(SparksAccountItemDefinition_GetVariantChannelTags, OutChannelTags) == 0x000000, "Member 'SparksAccountItemDefinition_GetVariantChannelTags::OutChannelTags' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticCatalog.GetSparksCosmeticCatalog
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticCatalog_GetSparksCosmeticCatalog final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USparksCosmeticCatalog*                 ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticCatalog_GetSparksCosmeticCatalog) == 0x000008, "Wrong alignment on SparksCosmeticCatalog_GetSparksCosmeticCatalog");
static_assert(sizeof(SparksCosmeticCatalog_GetSparksCosmeticCatalog) == 0x000010, "Wrong size on SparksCosmeticCatalog_GetSparksCosmeticCatalog");
static_assert(offsetof(SparksCosmeticCatalog_GetSparksCosmeticCatalog, WorldContextObject) == 0x000000, "Member 'SparksCosmeticCatalog_GetSparksCosmeticCatalog::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SparksCosmeticCatalog_GetSparksCosmeticCatalog, ReturnValue) == 0x000008, "Member 'SparksCosmeticCatalog_GetSparksCosmeticCatalog::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticCatalog.GetItemDefFromAssetID
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticCatalog_GetItemDefFromAssetID final
{
public:
	struct FPrimaryAssetId                        AssetId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USparksAccountItemDefinition*           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticCatalog_GetItemDefFromAssetID) == 0x000008, "Wrong alignment on SparksCosmeticCatalog_GetItemDefFromAssetID");
static_assert(sizeof(SparksCosmeticCatalog_GetItemDefFromAssetID) == 0x000010, "Wrong size on SparksCosmeticCatalog_GetItemDefFromAssetID");
static_assert(offsetof(SparksCosmeticCatalog_GetItemDefFromAssetID, AssetId) == 0x000000, "Member 'SparksCosmeticCatalog_GetItemDefFromAssetID::AssetId' has a wrong offset!");
static_assert(offsetof(SparksCosmeticCatalog_GetItemDefFromAssetID, ReturnValue) == 0x000008, "Member 'SparksCosmeticCatalog_GetItemDefFromAssetID::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticCatalog.GetActiveItemDefNamesForSubtype
// 0x0018 (0x0018 - 0x0000)
struct SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype final
{
public:
	ESparksAccountItemSubtype                     Subtype;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype) == 0x000008, "Wrong alignment on SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype");
static_assert(sizeof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype) == 0x000018, "Wrong size on SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype");
static_assert(offsetof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype, Subtype) == 0x000000, "Member 'SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype::Subtype' has a wrong offset!");
static_assert(offsetof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype, ReturnValue) == 0x000008, "Member 'SparksCosmeticCatalog_GetActiveItemDefNamesForSubtype::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticCatalog.GetActiveItemDefNamesForSubtypeAndInstrument
// 0x0018 (0x0018 - 0x0000)
struct SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument final
{
public:
	ESparksAccountItemSubtype                     Subtype;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         Instrument;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument) == 0x000008, "Wrong alignment on SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument");
static_assert(sizeof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument) == 0x000018, "Wrong size on SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument");
static_assert(offsetof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument, Subtype) == 0x000000, "Member 'SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument::Subtype' has a wrong offset!");
static_assert(offsetof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument, Instrument) == 0x000001, "Member 'SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument::Instrument' has a wrong offset!");
static_assert(offsetof(SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument, ReturnValue) == 0x000008, "Member 'SparksCosmeticCatalog_GetActiveItemDefNamesForSubtypeAndInstrument::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticCatalog.GetItemDef
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticCatalog_GetItemDef final
{
public:
	class FName                                   InItemName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USparksAccountItemDefinition*           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticCatalog_GetItemDef) == 0x000008, "Wrong alignment on SparksCosmeticCatalog_GetItemDef");
static_assert(sizeof(SparksCosmeticCatalog_GetItemDef) == 0x000010, "Wrong size on SparksCosmeticCatalog_GetItemDef");
static_assert(offsetof(SparksCosmeticCatalog_GetItemDef, InItemName) == 0x000000, "Member 'SparksCosmeticCatalog_GetItemDef::InItemName' has a wrong offset!");
static_assert(offsetof(SparksCosmeticCatalog_GetItemDef, ReturnValue) == 0x000008, "Member 'SparksCosmeticCatalog_GetItemDef::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.Debug_BP_ShowCosmeticPicker
// 0x0001 (0x0001 - 0x0000)
struct SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker) == 0x000001, "Wrong alignment on SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker");
static_assert(sizeof(SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker) == 0x000001, "Wrong size on SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker");
static_assert(offsetof(SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker, bShow) == 0x000000, "Member 'SparksCosmeticComponent_Debug_BP_ShowCosmeticPicker::bShow' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.DebugForceAuraState
// 0x0001 (0x0001 - 0x0000)
struct SparksCosmeticComponent_DebugForceAuraState final
{
public:
	bool                                          bShouldBeActive;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_DebugForceAuraState) == 0x000001, "Wrong alignment on SparksCosmeticComponent_DebugForceAuraState");
static_assert(sizeof(SparksCosmeticComponent_DebugForceAuraState) == 0x000001, "Wrong size on SparksCosmeticComponent_DebugForceAuraState");
static_assert(offsetof(SparksCosmeticComponent_DebugForceAuraState, bShouldBeActive) == 0x000000, "Member 'SparksCosmeticComponent_DebugForceAuraState::bShouldBeActive' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetCosmeticItems
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticComponent_GetCosmeticItems final
{
public:
	TArray<class USparksAccountItemDefinition*>   ItemDefs;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetCosmeticItems) == 0x000008, "Wrong alignment on SparksCosmeticComponent_GetCosmeticItems");
static_assert(sizeof(SparksCosmeticComponent_GetCosmeticItems) == 0x000010, "Wrong size on SparksCosmeticComponent_GetCosmeticItems");
static_assert(offsetof(SparksCosmeticComponent_GetCosmeticItems, ItemDefs) == 0x000000, "Member 'SparksCosmeticComponent_GetCosmeticItems::ItemDefs' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetEquippedJamSongShortnameForIndex
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex) == 0x000004, "Wrong alignment on SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex");
static_assert(sizeof(SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex) == 0x000008, "Wrong size on SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex");
static_assert(offsetof(SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex, Index_0) == 0x000000, "Member 'SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex::Index_0' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex, ReturnValue) == 0x000004, "Member 'SparksCosmeticComponent_GetEquippedJamSongShortnameForIndex::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetOwnedJamSongShortnameForIndex
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex) == 0x000004, "Wrong alignment on SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex");
static_assert(sizeof(SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex) == 0x000008, "Wrong size on SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex");
static_assert(offsetof(SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex, Index_0) == 0x000000, "Member 'SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex::Index_0' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex, ReturnValue) == 0x000004, "Member 'SparksCosmeticComponent_GetOwnedJamSongShortnameForIndex::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetOwnedJamTracksCount
// 0x0004 (0x0004 - 0x0000)
struct SparksCosmeticComponent_GetOwnedJamTracksCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetOwnedJamTracksCount) == 0x000004, "Wrong alignment on SparksCosmeticComponent_GetOwnedJamTracksCount");
static_assert(sizeof(SparksCosmeticComponent_GetOwnedJamTracksCount) == 0x000004, "Wrong size on SparksCosmeticComponent_GetOwnedJamTracksCount");
static_assert(offsetof(SparksCosmeticComponent_GetOwnedJamTracksCount, ReturnValue) == 0x000000, "Member 'SparksCosmeticComponent_GetOwnedJamTracksCount::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.OnMaterialOverridesCleared
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_OnMaterialOverridesCleared final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_OnMaterialOverridesCleared) == 0x000008, "Wrong alignment on SparksCosmeticComponent_OnMaterialOverridesCleared");
static_assert(sizeof(SparksCosmeticComponent_OnMaterialOverridesCleared) == 0x000008, "Wrong size on SparksCosmeticComponent_OnMaterialOverridesCleared");
static_assert(offsetof(SparksCosmeticComponent_OnMaterialOverridesCleared, Pawn) == 0x000000, "Member 'SparksCosmeticComponent_OnMaterialOverridesCleared::Pawn' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.OnWeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticComponent_OnWeaponChanged final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_OnWeaponChanged) == 0x000008, "Wrong alignment on SparksCosmeticComponent_OnWeaponChanged");
static_assert(sizeof(SparksCosmeticComponent_OnWeaponChanged) == 0x000010, "Wrong size on SparksCosmeticComponent_OnWeaponChanged");
static_assert(offsetof(SparksCosmeticComponent_OnWeaponChanged, NewWeapon) == 0x000000, "Member 'SparksCosmeticComponent_OnWeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_OnWeaponChanged, PrevWeapon) == 0x000008, "Member 'SparksCosmeticComponent_OnWeaponChanged::PrevWeapon' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.SetActiveAuraItemDef
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_SetActiveAuraItemDef final
{
public:
	class USparksAuraItemDefinition*              NewAuraItemDef;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_SetActiveAuraItemDef) == 0x000008, "Wrong alignment on SparksCosmeticComponent_SetActiveAuraItemDef");
static_assert(sizeof(SparksCosmeticComponent_SetActiveAuraItemDef) == 0x000008, "Wrong size on SparksCosmeticComponent_SetActiveAuraItemDef");
static_assert(offsetof(SparksCosmeticComponent_SetActiveAuraItemDef, NewAuraItemDef) == 0x000000, "Member 'SparksCosmeticComponent_SetActiveAuraItemDef::NewAuraItemDef' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.SetActiveInstrumentItemDef
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_SetActiveInstrumentItemDef final
{
public:
	class USparksInstrumentItemDefBase*           InstrumentItemDef;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_SetActiveInstrumentItemDef) == 0x000008, "Wrong alignment on SparksCosmeticComponent_SetActiveInstrumentItemDef");
static_assert(sizeof(SparksCosmeticComponent_SetActiveInstrumentItemDef) == 0x000008, "Wrong size on SparksCosmeticComponent_SetActiveInstrumentItemDef");
static_assert(offsetof(SparksCosmeticComponent_SetActiveInstrumentItemDef, InstrumentItemDef) == 0x000000, "Member 'SparksCosmeticComponent_SetActiveInstrumentItemDef::InstrumentItemDef' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.SetActiveItemDef
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_SetActiveItemDef final
{
public:
	class USparksAccountItemDefinition*           NewItemDef;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_SetActiveItemDef) == 0x000008, "Wrong alignment on SparksCosmeticComponent_SetActiveItemDef");
static_assert(sizeof(SparksCosmeticComponent_SetActiveItemDef) == 0x000008, "Wrong size on SparksCosmeticComponent_SetActiveItemDef");
static_assert(offsetof(SparksCosmeticComponent_SetActiveItemDef, NewItemDef) == 0x000000, "Member 'SparksCosmeticComponent_SetActiveItemDef::NewItemDef' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.SetActiveSpotlightAnimDef
// 0x0008 (0x0008 - 0x0000)
struct SparksCosmeticComponent_SetActiveSpotlightAnimDef final
{
public:
	class USparksSpotlightAnimDefinition*         NewSpotlightDef;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_SetActiveSpotlightAnimDef) == 0x000008, "Wrong alignment on SparksCosmeticComponent_SetActiveSpotlightAnimDef");
static_assert(sizeof(SparksCosmeticComponent_SetActiveSpotlightAnimDef) == 0x000008, "Wrong size on SparksCosmeticComponent_SetActiveSpotlightAnimDef");
static_assert(offsetof(SparksCosmeticComponent_SetActiveSpotlightAnimDef, NewSpotlightDef) == 0x000000, "Member 'SparksCosmeticComponent_SetActiveSpotlightAnimDef::NewSpotlightDef' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.SetAuraState
// 0x0001 (0x0001 - 0x0000)
struct SparksCosmeticComponent_SetAuraState final
{
public:
	bool                                          bShouldBeActive;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_SetAuraState) == 0x000001, "Wrong alignment on SparksCosmeticComponent_SetAuraState");
static_assert(sizeof(SparksCosmeticComponent_SetAuraState) == 0x000001, "Wrong size on SparksCosmeticComponent_SetAuraState");
static_assert(offsetof(SparksCosmeticComponent_SetAuraState, bShouldBeActive) == 0x000000, "Member 'SparksCosmeticComponent_SetAuraState::bShouldBeActive' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.SetVariantChoice
// 0x0018 (0x0018 - 0x0000)
struct SparksCosmeticComponent_SetVariantChoice final
{
public:
	ESparksAccountItemSubtype                     Subtype;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         InstrumentType;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           VariantChannel;                                    // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_SetVariantChoice) == 0x000008, "Wrong alignment on SparksCosmeticComponent_SetVariantChoice");
static_assert(sizeof(SparksCosmeticComponent_SetVariantChoice) == 0x000018, "Wrong size on SparksCosmeticComponent_SetVariantChoice");
static_assert(offsetof(SparksCosmeticComponent_SetVariantChoice, Subtype) == 0x000000, "Member 'SparksCosmeticComponent_SetVariantChoice::Subtype' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_SetVariantChoice, InstrumentType) == 0x000001, "Member 'SparksCosmeticComponent_SetVariantChoice::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_SetVariantChoice, VariantChannel) == 0x000004, "Member 'SparksCosmeticComponent_SetVariantChoice::VariantChannel' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_SetVariantChoice, Value) == 0x000008, "Member 'SparksCosmeticComponent_SetVariantChoice::Value' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetAccountItemTypeFromInstrumentType
// 0x0002 (0x0002 - 0x0000)
struct SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType final
{
public:
	ESparksInstrumentType                         Instrument;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksAccountItemSubtype                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType) == 0x000001, "Wrong alignment on SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType");
static_assert(sizeof(SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType) == 0x000002, "Wrong size on SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType");
static_assert(offsetof(SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType, Instrument) == 0x000000, "Member 'SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType::Instrument' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType, ReturnValue) == 0x000001, "Member 'SparksCosmeticComponent_GetAccountItemTypeFromInstrumentType::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetChoice
// 0x0028 (0x0028 - 0x0000)
struct SparksCosmeticComponent_GetChoice final
{
public:
	struct FSparksVariantChoice                   OutChoice;                                         // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	ESparksAccountItemSubtype                     Subtype;                                           // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         InstrumentType;                                    // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           VariantChannel;                                    // 0x001C(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksCosmeticComponent_GetChoice) == 0x000008, "Wrong alignment on SparksCosmeticComponent_GetChoice");
static_assert(sizeof(SparksCosmeticComponent_GetChoice) == 0x000028, "Wrong size on SparksCosmeticComponent_GetChoice");
static_assert(offsetof(SparksCosmeticComponent_GetChoice, OutChoice) == 0x000000, "Member 'SparksCosmeticComponent_GetChoice::OutChoice' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetChoice, Subtype) == 0x000018, "Member 'SparksCosmeticComponent_GetChoice::Subtype' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetChoice, InstrumentType) == 0x000019, "Member 'SparksCosmeticComponent_GetChoice::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetChoice, VariantChannel) == 0x00001C, "Member 'SparksCosmeticComponent_GetChoice::VariantChannel' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetChoice, ReturnValue) == 0x000020, "Member 'SparksCosmeticComponent_GetChoice::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetCosmeticItem
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticComponent_GetCosmeticItem final
{
public:
	ESparksAccountItemSubtype                     Subtype;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         Instrument;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class USparksAccountItemDefinition*     ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetCosmeticItem) == 0x000008, "Wrong alignment on SparksCosmeticComponent_GetCosmeticItem");
static_assert(sizeof(SparksCosmeticComponent_GetCosmeticItem) == 0x000010, "Wrong size on SparksCosmeticComponent_GetCosmeticItem");
static_assert(offsetof(SparksCosmeticComponent_GetCosmeticItem, Subtype) == 0x000000, "Member 'SparksCosmeticComponent_GetCosmeticItem::Subtype' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetCosmeticItem, Instrument) == 0x000001, "Member 'SparksCosmeticComponent_GetCosmeticItem::Instrument' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetCosmeticItem, ReturnValue) == 0x000008, "Member 'SparksCosmeticComponent_GetCosmeticItem::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetEquippedJamTracksCount
// 0x0004 (0x0004 - 0x0000)
struct SparksCosmeticComponent_GetEquippedJamTracksCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetEquippedJamTracksCount) == 0x000004, "Wrong alignment on SparksCosmeticComponent_GetEquippedJamTracksCount");
static_assert(sizeof(SparksCosmeticComponent_GetEquippedJamTracksCount) == 0x000004, "Wrong size on SparksCosmeticComponent_GetEquippedJamTracksCount");
static_assert(offsetof(SparksCosmeticComponent_GetEquippedJamTracksCount, ReturnValue) == 0x000000, "Member 'SparksCosmeticComponent_GetEquippedJamTracksCount::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetInstrumentAuxiliaryCosmetics
// 0x0028 (0x0028 - 0x0000)
struct SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics final
{
public:
	ESparksInstrumentType                         InstrumentType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          OutMesh;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      OutMaterial;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      OutMaterial2;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics) == 0x000008, "Wrong alignment on SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics");
static_assert(sizeof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics) == 0x000028, "Wrong size on SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics, InstrumentType) == 0x000000, "Member 'SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics, OutMesh) == 0x000008, "Member 'SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics::OutMesh' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics, OutMaterial) == 0x000010, "Member 'SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics::OutMaterial' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics, OutMaterial2) == 0x000018, "Member 'SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics::OutMaterial2' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics, ReturnValue) == 0x000020, "Member 'SparksCosmeticComponent_GetInstrumentAuxiliaryCosmetics::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetInstrumentCosmetics
// 0x0030 (0x0030 - 0x0000)
struct SparksCosmeticComponent_GetInstrumentCosmetics final
{
public:
	ESparksInstrumentType                         InstrumentType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          OutMesh;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      OutMaterial;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          OutLHMesh;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      OutLHMaterial;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksCosmeticComponent_GetInstrumentCosmetics) == 0x000008, "Wrong alignment on SparksCosmeticComponent_GetInstrumentCosmetics");
static_assert(sizeof(SparksCosmeticComponent_GetInstrumentCosmetics) == 0x000030, "Wrong size on SparksCosmeticComponent_GetInstrumentCosmetics");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentCosmetics, InstrumentType) == 0x000000, "Member 'SparksCosmeticComponent_GetInstrumentCosmetics::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentCosmetics, OutMesh) == 0x000008, "Member 'SparksCosmeticComponent_GetInstrumentCosmetics::OutMesh' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentCosmetics, OutMaterial) == 0x000010, "Member 'SparksCosmeticComponent_GetInstrumentCosmetics::OutMaterial' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentCosmetics, OutLHMesh) == 0x000018, "Member 'SparksCosmeticComponent_GetInstrumentCosmetics::OutLHMesh' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentCosmetics, OutLHMaterial) == 0x000020, "Member 'SparksCosmeticComponent_GetInstrumentCosmetics::OutLHMaterial' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetInstrumentCosmetics, ReturnValue) == 0x000028, "Member 'SparksCosmeticComponent_GetInstrumentCosmetics::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksCosmeticComponent.GetSpotlightAnim
// 0x0010 (0x0010 - 0x0000)
struct SparksCosmeticComponent_GetSpotlightAnim final
{
public:
	ESparksInstrumentType                         InstrumentType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksCosmeticComponent_GetSpotlightAnim) == 0x000008, "Wrong alignment on SparksCosmeticComponent_GetSpotlightAnim");
static_assert(sizeof(SparksCosmeticComponent_GetSpotlightAnim) == 0x000010, "Wrong size on SparksCosmeticComponent_GetSpotlightAnim");
static_assert(offsetof(SparksCosmeticComponent_GetSpotlightAnim, InstrumentType) == 0x000000, "Member 'SparksCosmeticComponent_GetSpotlightAnim::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksCosmeticComponent_GetSpotlightAnim, ReturnValue) == 0x000008, "Member 'SparksCosmeticComponent_GetSpotlightAnim::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentComponentBase.GetInstrumentType
// 0x0001 (0x0001 - 0x0000)
struct SparksInstrumentComponentBase_GetInstrumentType final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentComponentBase_GetInstrumentType) == 0x000001, "Wrong alignment on SparksInstrumentComponentBase_GetInstrumentType");
static_assert(sizeof(SparksInstrumentComponentBase_GetInstrumentType) == 0x000001, "Wrong size on SparksInstrumentComponentBase_GetInstrumentType");
static_assert(offsetof(SparksInstrumentComponentBase_GetInstrumentType, ReturnValue) == 0x000000, "Member 'SparksInstrumentComponentBase_GetInstrumentType::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetAuxFXSystem
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetAuxFXSystem final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetAuxFXSystem) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetAuxFXSystem");
static_assert(sizeof(SparksInstrumentItemDefBase_GetAuxFXSystem) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetAuxFXSystem");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxFXSystem, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetAuxFXSystem::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxFXSystem, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetAuxFXSystem::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetAuxiliaryMaterial
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetAuxiliaryMaterial final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetAuxiliaryMaterial");
static_assert(sizeof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetAuxiliaryMaterial");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetAuxiliaryMaterial::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetAuxiliaryMaterial::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetAuxiliaryMaterial2
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetAuxiliaryMaterial2 final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial2) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetAuxiliaryMaterial2");
static_assert(sizeof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial2) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetAuxiliaryMaterial2");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial2, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetAuxiliaryMaterial2::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxiliaryMaterial2, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetAuxiliaryMaterial2::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetAuxiliaryMesh
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetAuxiliaryMesh final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetAuxiliaryMesh) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetAuxiliaryMesh");
static_assert(sizeof(SparksInstrumentItemDefBase_GetAuxiliaryMesh) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetAuxiliaryMesh");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxiliaryMesh, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetAuxiliaryMesh::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetAuxiliaryMesh, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetAuxiliaryMesh::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetLeftHandMaterial
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetLeftHandMaterial final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetLeftHandMaterial) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetLeftHandMaterial");
static_assert(sizeof(SparksInstrumentItemDefBase_GetLeftHandMaterial) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetLeftHandMaterial");
static_assert(offsetof(SparksInstrumentItemDefBase_GetLeftHandMaterial, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetLeftHandMaterial::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetLeftHandMaterial, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetLeftHandMaterial::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetLeftHandMesh
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetLeftHandMesh final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetLeftHandMesh) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetLeftHandMesh");
static_assert(sizeof(SparksInstrumentItemDefBase_GetLeftHandMesh) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetLeftHandMesh");
static_assert(offsetof(SparksInstrumentItemDefBase_GetLeftHandMesh, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetLeftHandMesh::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetLeftHandMesh, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetLeftHandMesh::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetLHFXSystem
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetLHFXSystem final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetLHFXSystem) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetLHFXSystem");
static_assert(sizeof(SparksInstrumentItemDefBase_GetLHFXSystem) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetLHFXSystem");
static_assert(offsetof(SparksInstrumentItemDefBase_GetLHFXSystem, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetLHFXSystem::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetLHFXSystem, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetLHFXSystem::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetMainFXSystem
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetMainFXSystem final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetMainFXSystem) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetMainFXSystem");
static_assert(sizeof(SparksInstrumentItemDefBase_GetMainFXSystem) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetMainFXSystem");
static_assert(offsetof(SparksInstrumentItemDefBase_GetMainFXSystem, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetMainFXSystem::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetMainFXSystem, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetMainFXSystem::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetMaterial
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetMaterial final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetMaterial) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetMaterial");
static_assert(sizeof(SparksInstrumentItemDefBase_GetMaterial) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetMaterial");
static_assert(offsetof(SparksInstrumentItemDefBase_GetMaterial, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetMaterial::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetMaterial, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetMaterial::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentItemDefBase.GetMesh
// 0x0058 (0x0058 - 0x0000)
struct SparksInstrumentItemDefBase_GetMesh final
{
public:
	struct FSparksVariantChoices                  Choices;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentItemDefBase_GetMesh) == 0x000008, "Wrong alignment on SparksInstrumentItemDefBase_GetMesh");
static_assert(sizeof(SparksInstrumentItemDefBase_GetMesh) == 0x000058, "Wrong size on SparksInstrumentItemDefBase_GetMesh");
static_assert(offsetof(SparksInstrumentItemDefBase_GetMesh, Choices) == 0x000000, "Member 'SparksInstrumentItemDefBase_GetMesh::Choices' has a wrong offset!");
static_assert(offsetof(SparksInstrumentItemDefBase_GetMesh, ReturnValue) == 0x000050, "Member 'SparksInstrumentItemDefBase_GetMesh::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksInstrumentPreviewActor.GetCurrentChoices
// 0x0050 (0x0050 - 0x0000)
struct SparksInstrumentPreviewActor_GetCurrentChoices final
{
public:
	struct FSparksVariantChoices                  ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksInstrumentPreviewActor_GetCurrentChoices) == 0x000008, "Wrong alignment on SparksInstrumentPreviewActor_GetCurrentChoices");
static_assert(sizeof(SparksInstrumentPreviewActor_GetCurrentChoices) == 0x000050, "Wrong size on SparksInstrumentPreviewActor_GetCurrentChoices");
static_assert(offsetof(SparksInstrumentPreviewActor_GetCurrentChoices, ReturnValue) == 0x000000, "Member 'SparksInstrumentPreviewActor_GetCurrentChoices::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksItemPreviewOffPawnActor.GetInstrumentType
// 0x0001 (0x0001 - 0x0000)
struct SparksItemPreviewOffPawnActor_GetInstrumentType final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksItemPreviewOffPawnActor_GetInstrumentType) == 0x000001, "Wrong alignment on SparksItemPreviewOffPawnActor_GetInstrumentType");
static_assert(sizeof(SparksItemPreviewOffPawnActor_GetInstrumentType) == 0x000001, "Wrong size on SparksItemPreviewOffPawnActor_GetInstrumentType");
static_assert(offsetof(SparksItemPreviewOffPawnActor_GetInstrumentType, ReturnValue) == 0x000000, "Member 'SparksItemPreviewOffPawnActor_GetInstrumentType::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksJamEmoteItemDefinition.GetJamLoopType
// 0x0001 (0x0001 - 0x0000)
struct SparksJamEmoteItemDefinition_GetJamLoopType final
{
public:
	EFMJamLoopType                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksJamEmoteItemDefinition_GetJamLoopType) == 0x000001, "Wrong alignment on SparksJamEmoteItemDefinition_GetJamLoopType");
static_assert(sizeof(SparksJamEmoteItemDefinition_GetJamLoopType) == 0x000001, "Wrong size on SparksJamEmoteItemDefinition_GetJamLoopType");
static_assert(offsetof(SparksJamEmoteItemDefinition_GetJamLoopType, ReturnValue) == 0x000000, "Member 'SparksJamEmoteItemDefinition_GetJamLoopType::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksJamEmoteItemDefinition.GetJamSongMetaData
// 0x0010 (0x0010 - 0x0000)
struct SparksJamEmoteItemDefinition_GetJamSongMetaData final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCatalogData*                     ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksJamEmoteItemDefinition_GetJamSongMetaData) == 0x000008, "Wrong alignment on SparksJamEmoteItemDefinition_GetJamSongMetaData");
static_assert(sizeof(SparksJamEmoteItemDefinition_GetJamSongMetaData) == 0x000010, "Wrong size on SparksJamEmoteItemDefinition_GetJamSongMetaData");
static_assert(offsetof(SparksJamEmoteItemDefinition_GetJamSongMetaData, WorldContextObject) == 0x000000, "Member 'SparksJamEmoteItemDefinition_GetJamSongMetaData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SparksJamEmoteItemDefinition_GetJamSongMetaData, ReturnValue) == 0x000008, "Member 'SparksJamEmoteItemDefinition_GetJamSongMetaData::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksJamEmoteItemDefinition.GetJamSongShortName
// 0x0010 (0x0010 - 0x0000)
struct SparksJamEmoteItemDefinition_GetJamSongShortName final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksJamEmoteItemDefinition_GetJamSongShortName) == 0x000008, "Wrong alignment on SparksJamEmoteItemDefinition_GetJamSongShortName");
static_assert(sizeof(SparksJamEmoteItemDefinition_GetJamSongShortName) == 0x000010, "Wrong size on SparksJamEmoteItemDefinition_GetJamSongShortName");
static_assert(offsetof(SparksJamEmoteItemDefinition_GetJamSongShortName, WorldContextObject) == 0x000000, "Member 'SparksJamEmoteItemDefinition_GetJamSongShortName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SparksJamEmoteItemDefinition_GetJamSongShortName, ReturnValue) == 0x000008, "Member 'SparksJamEmoteItemDefinition_GetJamSongShortName::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksJamEmoteItemDefinition.GetSongItemDef
// 0x0008 (0x0008 - 0x0000)
struct SparksJamEmoteItemDefinition_GetSongItemDef final
{
public:
	class USparksSongItemDefinition*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksJamEmoteItemDefinition_GetSongItemDef) == 0x000008, "Wrong alignment on SparksJamEmoteItemDefinition_GetSongItemDef");
static_assert(sizeof(SparksJamEmoteItemDefinition_GetSongItemDef) == 0x000008, "Wrong size on SparksJamEmoteItemDefinition_GetSongItemDef");
static_assert(offsetof(SparksJamEmoteItemDefinition_GetSongItemDef, ReturnValue) == 0x000000, "Member 'SparksJamEmoteItemDefinition_GetSongItemDef::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksJamEmoteItemDefinition.IsJamLoopEnabled
// 0x0010 (0x0010 - 0x0000)
struct SparksJamEmoteItemDefinition_IsJamLoopEnabled final
{
public:
	const class AFortPlayerController*            PlayerController;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksJamEmoteItemDefinition_IsJamLoopEnabled) == 0x000008, "Wrong alignment on SparksJamEmoteItemDefinition_IsJamLoopEnabled");
static_assert(sizeof(SparksJamEmoteItemDefinition_IsJamLoopEnabled) == 0x000010, "Wrong size on SparksJamEmoteItemDefinition_IsJamLoopEnabled");
static_assert(offsetof(SparksJamEmoteItemDefinition_IsJamLoopEnabled, PlayerController) == 0x000000, "Member 'SparksJamEmoteItemDefinition_IsJamLoopEnabled::PlayerController' has a wrong offset!");
static_assert(offsetof(SparksJamEmoteItemDefinition_IsJamLoopEnabled, ReturnValue) == 0x000008, "Member 'SparksJamEmoteItemDefinition_IsJamLoopEnabled::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksPlayerStateComponent.SetSparksInstrumentChoice
// 0x0001 (0x0001 - 0x0000)
struct SparksPlayerStateComponent_SetSparksInstrumentChoice final
{
public:
	ESparksInstrumentType                         Instrument;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksPlayerStateComponent_SetSparksInstrumentChoice) == 0x000001, "Wrong alignment on SparksPlayerStateComponent_SetSparksInstrumentChoice");
static_assert(sizeof(SparksPlayerStateComponent_SetSparksInstrumentChoice) == 0x000001, "Wrong size on SparksPlayerStateComponent_SetSparksInstrumentChoice");
static_assert(offsetof(SparksPlayerStateComponent_SetSparksInstrumentChoice, Instrument) == 0x000000, "Member 'SparksPlayerStateComponent_SetSparksInstrumentChoice::Instrument' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksPlayerStateComponent.GetSparksInstrumentChoice
// 0x0001 (0x0001 - 0x0000)
struct SparksPlayerStateComponent_GetSparksInstrumentChoice final
{
public:
	ESparksInstrumentType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksPlayerStateComponent_GetSparksInstrumentChoice) == 0x000001, "Wrong alignment on SparksPlayerStateComponent_GetSparksInstrumentChoice");
static_assert(sizeof(SparksPlayerStateComponent_GetSparksInstrumentChoice) == 0x000001, "Wrong size on SparksPlayerStateComponent_GetSparksInstrumentChoice");
static_assert(offsetof(SparksPlayerStateComponent_GetSparksInstrumentChoice, ReturnValue) == 0x000000, "Member 'SparksPlayerStateComponent_GetSparksInstrumentChoice::ReturnValue' has a wrong offset!");

// Function SparksCosmeticsRuntime.SparksSongPreviewActor.OnSongTextureLoaded
// 0x0008 (0x0008 - 0x0000)
struct SparksSongPreviewActor_OnSongTextureLoaded final
{
public:
	class UTexture2D*                             CoverArt;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksSongPreviewActor_OnSongTextureLoaded) == 0x000008, "Wrong alignment on SparksSongPreviewActor_OnSongTextureLoaded");
static_assert(sizeof(SparksSongPreviewActor_OnSongTextureLoaded) == 0x000008, "Wrong size on SparksSongPreviewActor_OnSongTextureLoaded");
static_assert(offsetof(SparksSongPreviewActor_OnSongTextureLoaded, CoverArt) == 0x000000, "Member 'SparksSongPreviewActor_OnSongTextureLoaded::CoverArt' has a wrong offset!");

}

