#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerRiderComponent

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function PlayerRiderComponent.PlayerRiderComponent_C.EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6");
static_assert(sizeof(PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6) == 0x0000B0, "Wrong size on PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6");
static_assert(offsetof(PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6, Payload) == 0x000000, "Member 'PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6::Payload' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.EventReceived_E5B5FB5340DB5660002329825657B406
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406");
static_assert(sizeof(PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406) == 0x0000B0, "Wrong size on PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406");
static_assert(offsetof(PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406, Payload) == 0x000000, "Member 'PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406::Payload' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.ExecuteUbergraph_PlayerRiderComponent
// 0x0B30 (0x0B30 - 0x0000)
struct PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0008(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URidableComponent*                      K2Node_Event_Ridable_1;                            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URidableComponent*                      K2Node_Event_Ridable;                              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue; // 0x00CC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_TargetObject;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseAltRidingMessage;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRidingGeneric_Interafce_C> K2Node_DynamicCast_AsRiding_Generic_Interafce;     // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToggleRiding_bChangedRiding;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0138(0x00B0)()
	double                                        K2Node_CustomEvent_targetHealth;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Name;                           // 0x01F0(0x0018)()
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_CustomEvent_Icon;                           // 0x0210(0x00C0)()
	class AActor*                                 K2Node_CustomEvent_Ridable_1;                      // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Ridable;                        // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x02E0(0x00B0)()
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue;              // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B[0x5];                                      // 0x039B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x03B4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue_1;            // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayEvent*        CallFunc_WaitGameplayEventToActor_ReturnValue;     // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayEvent*        CallFunc_WaitGameplayEventToActor_ReturnValue_1;   // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x03E8(0x00B0)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x04A0(0x00B0)()
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue;    // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue_1;  // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0570(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_9;                   // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x3];                                      // 0x0661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0664(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_10;                  // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreatureBaseRidableComponent_C*        K2Node_DynamicCast_AsCreature_Base_Ridable_Component; // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x06D8(0x00D0)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_11;                  // 0x07A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_2;                  // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_12;                  // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue_1;               // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRidingActor_ReturnValue;                // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x07CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CB[0x5];                                      // 0x07CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_13;                  // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x07DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBePet_ReturnValue;                     // 0x07DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DC[0x4];                                      // 0x07DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_14;                  // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_1; // 0x07F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_15;                  // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_2; // 0x0810(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0818(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0820(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_912[0x2];                                      // 0x0912(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0920(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0938(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0968(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0990(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AC[0x4];                                      // 0x09AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestIfValidForRidingAttempt_Success;      // 0x09E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E2[0x6];                                      // 0x09E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_TestIfValidForRidingAttempt_TargetObject; // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestIfValidForRidingAttempt_UseAltRidingMessage; // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x09F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_16;                  // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue_2;  // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0A10(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0A1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1E[0x2];                                      // 0x0A1E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_17;                  // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1; // 0x0A28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0A40(0x00B0)()
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0AF0(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B11[0x3];                                      // 0x0B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0B14(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast; // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent) == 0x000010, "Wrong alignment on PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent");
static_assert(sizeof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent) == 0x000B30, "Wrong size on PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, EntryPoint) == 0x000000, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_struct_Variable) == 0x000008, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_bool_Variable) == 0x000029, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000040, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x000048, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000058, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAuthority_ReturnValue_2) == 0x00006D, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_Event_Ridable_1) == 0x000070, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_Event_Ridable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_Event_Ridable) == 0x000078, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_Event_Ridable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000080, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_4) == 0x000088, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsFort_Pawn) == 0x000090, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsFort_Pawn_1) == 0x0000A0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_5) == 0x0000B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetLocalRole_ReturnValue) == 0x0000B8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x0000C0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue) == 0x0000CC, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D4, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x0000E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_6) == 0x0000E8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_TargetObject) == 0x0000F0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_UseAltRidingMessage) == 0x0000F8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000100, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsRiding_Generic_Interafce) == 0x000110, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsRiding_Generic_Interafce' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsActor) == 0x000128, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_4) == 0x000130, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_ToggleRiding_bChangedRiding) == 0x000131, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_ToggleRiding_bChangedRiding' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_struct_Variable_1) == 0x000138, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_targetHealth) == 0x0001E8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_targetHealth' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Name) == 0x0001F0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Icon) == 0x000210, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Ridable_1) == 0x0002D0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Ridable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Ridable) == 0x0002D8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Ridable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Payload_1) == 0x0002E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Character) == 0x000390, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_PrevMovementMode) == 0x000398, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_PreviousCustomMode) == 0x000399, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_StopRidingActor_ReturnValue) == 0x00039A, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_StopRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0003A0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_5) == 0x0003B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_bool_IsClosed_Variable) == 0x0003B1, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0003B2, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_2) == 0x0003B3, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003B4, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_7) == 0x0003C0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_StopRidingActor_ReturnValue_1) == 0x0003C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_StopRidingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayEventToActor_ReturnValue) == 0x0003D0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayEventToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayEventToActor_ReturnValue_1) == 0x0003D8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayEventToActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_3) == 0x0003E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_4) == 0x0003E1, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_struct_Variable_2) == 0x0003E8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_8) == 0x000498, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Payload) == 0x0004A0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayTagAddToActor_ReturnValue) == 0x000550, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayTagAddToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_5) == 0x000558, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayTagAddToActor_ReturnValue_1) == 0x000560, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayTagAddToActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_6) == 0x000568, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Hit) == 0x000570, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_9) == 0x000658, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000660, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000664, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_7) == 0x000670, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_10) == 0x000678, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000680, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetVelocity_ReturnValue) == 0x000698, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsCreature_Base_Ridable_Component) == 0x0006B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsCreature_Base_Ridable_Component' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_6) == 0x0006B8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakVector_X) == 0x0006C0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakVector_Y) == 0x0006C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakVector_Z) == 0x0006D0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0006D8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_11) == 0x0007A8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsFort_Pawn_2) == 0x0007B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsFort_Pawn_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_7) == 0x0007B8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_12) == 0x0007C0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetLocalRole_ReturnValue_1) == 0x0007C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetLocalRole_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsRidingActor_ReturnValue) == 0x0007C9, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0007CA, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_13) == 0x0007D0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_8) == 0x0007D8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_9) == 0x0007D9, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAuthority_ReturnValue_3) == 0x0007DA, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_CanBePet_ReturnValue) == 0x0007DB, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_CanBePet_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_14) == 0x0007E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_10) == 0x0007E8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_1) == 0x0007F0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_11) == 0x0007F8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_15) == 0x000800, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_12) == 0x000808, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_2) == 0x000810, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000818, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_Event_HitResult) == 0x000820, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000908, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_bBlockingHit) == 0x000910, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_bInitialOverlap) == 0x000911, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Time) == 0x000914, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Distance) == 0x000918, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Location) == 0x000920, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_ImpactPoint) == 0x000938, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Normal) == 0x000950, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_ImpactNormal) == 0x000968, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_PhysMat) == 0x000980, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitActor) == 0x000988, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitComponent) == 0x000990, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitBoneName) == 0x000998, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_BoneName) == 0x00099C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitItem) == 0x0009A0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_ElementIndex) == 0x0009A4, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_FaceIndex) == 0x0009A8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_TraceStart) == 0x0009B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_TraceEnd) == 0x0009C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_13) == 0x0009E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_TestIfValidForRidingAttempt_Success) == 0x0009E1, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_TestIfValidForRidingAttempt_Success' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_TestIfValidForRidingAttempt_TargetObject) == 0x0009E8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_TestIfValidForRidingAttempt_TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_TestIfValidForRidingAttempt_UseAltRidingMessage) == 0x0009F0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_TestIfValidForRidingAttempt_UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetQuestManager_ReturnValue) == 0x0009F8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_16) == 0x000A00, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayTagAddToActor_ReturnValue_2) == 0x000A08, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayTagAddToActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_5) == 0x000A10, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_14) == 0x000A1C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_15) == 0x000A1D, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_17) == 0x000A20, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1) == 0x000A28, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_8) == 0x000A38, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_MakeStruct_GameplayEventData) == 0x000A40, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000AF0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_16) == 0x000B10, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_6) == 0x000B14, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast) == 0x000B20, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.GetJumpInfo
// 0x0040 (0x0040 - 0x0000)
struct PlayerRiderComponent_C_GetJumpInfo final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        TargetActorComponent;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        JumpAttach_GroundHeightMin;                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpAttach_GroundHeightBuffer;                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreatureBaseNonRidableComponent_C*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCreatureBaseRidableComponent_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_GetJumpInfo) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_GetJumpInfo");
static_assert(sizeof(PlayerRiderComponent_C_GetJumpInfo) == 0x000040, "Wrong size on PlayerRiderComponent_C_GetJumpInfo");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, TargetActor) == 0x000000, "Member 'PlayerRiderComponent_C_GetJumpInfo::TargetActor' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, TargetActorComponent) == 0x000008, "Member 'PlayerRiderComponent_C_GetJumpInfo::TargetActorComponent' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, JumpAttach_GroundHeightMin) == 0x000010, "Member 'PlayerRiderComponent_C_GetJumpInfo::JumpAttach_GroundHeightMin' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, JumpAttach_GroundHeightBuffer) == 0x000018, "Member 'PlayerRiderComponent_C_GetJumpInfo::JumpAttach_GroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, UseAltRidingMessage) == 0x000020, "Member 'PlayerRiderComponent_C_GetJumpInfo::UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000030, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.GetRidingInfoFromTarget
// 0x0018 (0x0018 - 0x0000)
struct PlayerRiderComponent_C_GetRidingInfoFromTarget final
{
public:
	double                                        JumpAttachGroundHeightMin;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpAttachGroundHeightBuffer;                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesAltRidingMessage;                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_GetRidingInfoFromTarget) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_GetRidingInfoFromTarget");
static_assert(sizeof(PlayerRiderComponent_C_GetRidingInfoFromTarget) == 0x000018, "Wrong size on PlayerRiderComponent_C_GetRidingInfoFromTarget");
static_assert(offsetof(PlayerRiderComponent_C_GetRidingInfoFromTarget, JumpAttachGroundHeightMin) == 0x000000, "Member 'PlayerRiderComponent_C_GetRidingInfoFromTarget::JumpAttachGroundHeightMin' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetRidingInfoFromTarget, JumpAttachGroundHeightBuffer) == 0x000008, "Member 'PlayerRiderComponent_C_GetRidingInfoFromTarget::JumpAttachGroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetRidingInfoFromTarget, UsesAltRidingMessage) == 0x000010, "Member 'PlayerRiderComponent_C_GetRidingInfoFromTarget::UsesAltRidingMessage' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.HandleRidableFound
// 0x00E8 (0x00E8 - 0x0000)
struct PlayerRiderComponent_C_HandleRidableFound final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerRiderComponent_C_HandleRidableFound) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_HandleRidableFound");
static_assert(sizeof(PlayerRiderComponent_C_HandleRidableFound) == 0x0000E8, "Wrong size on PlayerRiderComponent_C_HandleRidableFound");
static_assert(offsetof(PlayerRiderComponent_C_HandleRidableFound, HitResult) == 0x000000, "Member 'PlayerRiderComponent_C_HandleRidableFound::HitResult' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.HandleStartedRiding
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_HandleStartedRiding final
{
public:
	class URidableComponent*                      Ridable;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_HandleStartedRiding) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_HandleStartedRiding");
static_assert(sizeof(PlayerRiderComponent_C_HandleStartedRiding) == 0x000008, "Wrong size on PlayerRiderComponent_C_HandleStartedRiding");
static_assert(offsetof(PlayerRiderComponent_C_HandleStartedRiding, Ridable) == 0x000000, "Member 'PlayerRiderComponent_C_HandleStartedRiding::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.HandleStoppedRiding
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_HandleStoppedRiding final
{
public:
	class URidableComponent*                      Ridable;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_HandleStoppedRiding) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_HandleStoppedRiding");
static_assert(sizeof(PlayerRiderComponent_C_HandleStoppedRiding) == 0x000008, "Wrong size on PlayerRiderComponent_C_HandleStoppedRiding");
static_assert(offsetof(PlayerRiderComponent_C_HandleStoppedRiding, Ridable) == 0x000000, "Member 'PlayerRiderComponent_C_HandleStoppedRiding::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.MountLanded
// 0x00E8 (0x00E8 - 0x0000)
struct PlayerRiderComponent_C_MountLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerRiderComponent_C_MountLanded) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_MountLanded");
static_assert(sizeof(PlayerRiderComponent_C_MountLanded) == 0x0000E8, "Wrong size on PlayerRiderComponent_C_MountLanded");
static_assert(offsetof(PlayerRiderComponent_C_MountLanded, Hit) == 0x000000, "Member 'PlayerRiderComponent_C_MountLanded::Hit' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.MovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct PlayerRiderComponent_C_MovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_MovementModeChanged) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_MovementModeChanged");
static_assert(sizeof(PlayerRiderComponent_C_MovementModeChanged) == 0x000010, "Wrong size on PlayerRiderComponent_C_MovementModeChanged");
static_assert(offsetof(PlayerRiderComponent_C_MovementModeChanged, Character) == 0x000000, "Member 'PlayerRiderComponent_C_MovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_MovementModeChanged, PrevMovementMode) == 0x000008, "Member 'PlayerRiderComponent_C_MovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_MovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'PlayerRiderComponent_C_MovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.RiderUIEndClient
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_RiderUIEndClient final
{
public:
	class AActor*                                 Ridable;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_RiderUIEndClient) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_RiderUIEndClient");
static_assert(sizeof(PlayerRiderComponent_C_RiderUIEndClient) == 0x000008, "Wrong size on PlayerRiderComponent_C_RiderUIEndClient");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIEndClient, Ridable) == 0x000000, "Member 'PlayerRiderComponent_C_RiderUIEndClient::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.RiderUIStartClient
// 0x00F0 (0x00F0 - 0x0000)
struct PlayerRiderComponent_C_RiderUIStartClient final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Icon;                                              // 0x0020(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Ridable;                                           // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_RiderUIStartClient) == 0x000010, "Wrong alignment on PlayerRiderComponent_C_RiderUIStartClient");
static_assert(sizeof(PlayerRiderComponent_C_RiderUIStartClient) == 0x0000F0, "Wrong size on PlayerRiderComponent_C_RiderUIStartClient");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIStartClient, Name_0) == 0x000000, "Member 'PlayerRiderComponent_C_RiderUIStartClient::Name_0' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIStartClient, Icon) == 0x000020, "Member 'PlayerRiderComponent_C_RiderUIStartClient::Icon' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIStartClient, Ridable) == 0x0000E0, "Member 'PlayerRiderComponent_C_RiderUIStartClient::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.SetTargetHealth
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_SetTargetHealth final
{
public:
	double                                        targetHealth_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_SetTargetHealth) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_SetTargetHealth");
static_assert(sizeof(PlayerRiderComponent_C_SetTargetHealth) == 0x000008, "Wrong size on PlayerRiderComponent_C_SetTargetHealth");
static_assert(offsetof(PlayerRiderComponent_C_SetTargetHealth, targetHealth_0) == 0x000000, "Member 'PlayerRiderComponent_C_SetTargetHealth::targetHealth_0' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.TestIfValidForRidingAttempt
// 0x0148 (0x0148 - 0x0000)
struct PlayerRiderComponent_C_TestIfValidForRidingAttempt final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                TargetObject;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_GetJumpInfo_TargetActorComponent;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetJumpInfo_JumpAttach_GroundHeightMin;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetJumpInfo_JumpAttach_GroundHeightBuffer; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJumpInfo_UseAltRidingMessage;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortPawnComponent_Convert*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOnlyLeaderInteraction_ReturnValue;     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetConverterPawn_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_TestIfValidForRidingAttempt) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_TestIfValidForRidingAttempt");
static_assert(sizeof(PlayerRiderComponent_C_TestIfValidForRidingAttempt) == 0x000148, "Wrong size on PlayerRiderComponent_C_TestIfValidForRidingAttempt");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, Object) == 0x000000, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::Object' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, Success) == 0x000008, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::Success' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, TargetObject) == 0x000010, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, UseAltRidingMessage) == 0x000018, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, Temp_bool_Variable) == 0x000019, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, K2Node_DynamicCast_AsFort_Pawn) == 0x000020, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_TargetActorComponent) == 0x000048, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_TargetActorComponent' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_JumpAttach_GroundHeightMin) == 0x000050, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_JumpAttach_GroundHeightMin' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_JumpAttach_GroundHeightBuffer) == 0x000058, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_JumpAttach_GroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_UseAltRidingMessage) == 0x000060, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_X) == 0x000068, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Y) == 0x000070, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Z) == 0x000078, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, K2Node_Select_Default) == 0x000088, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetComponentByClass_ReturnValue) == 0x000090, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000098, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue_2) == 0x00009C, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetOnlyLeaderInteraction_ReturnValue) == 0x0000A8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetOnlyLeaderInteraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetConverterPawn_ReturnValue) == 0x0000B0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetConverterPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000BA, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BooleanOR_ReturnValue) == 0x0000BB, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue_4) == 0x0000BC, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x0000C0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_X_1) == 0x0000C8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Y_1) == 0x0000D0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Z_1) == 0x0000D8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_X_2) == 0x000100, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Y_2) == 0x000108, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Z_2) == 0x000110, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000128, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000130, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BooleanAND_ReturnValue) == 0x000131, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BooleanAND_ReturnValue_1) == 0x000132, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000138, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000140, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.ToggleRiding
// 0x0068 (0x0068 - 0x0000)
struct PlayerRiderComponent_C_ToggleRiding final
{
public:
	class AActor*                                 PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRide;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangedRiding;                                    // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URiderComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartRidingActor_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UControllingRiderComponent*             K2Node_DynamicCast_AsControlling_Rider_Component;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_ToggleRiding) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_ToggleRiding");
static_assert(sizeof(PlayerRiderComponent_C_ToggleRiding) == 0x000068, "Wrong size on PlayerRiderComponent_C_ToggleRiding");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, PlayerPawn) == 0x000000, "Member 'PlayerRiderComponent_C_ToggleRiding::PlayerPawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, Target) == 0x000008, "Member 'PlayerRiderComponent_C_ToggleRiding::Target' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, ShouldRide) == 0x000010, "Member 'PlayerRiderComponent_C_ToggleRiding::ShouldRide' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, bChangedRiding) == 0x000011, "Member 'PlayerRiderComponent_C_ToggleRiding::bChangedRiding' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000018, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1) == 0x000030, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_StopRidingActor_ReturnValue) == 0x000051, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_StopRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_StartRidingActor_ReturnValue) == 0x000052, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_StartRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_AsControlling_Rider_Component) == 0x000058, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_AsControlling_Rider_Component' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, Temp_bool_Variable) == 0x000062, "Member 'PlayerRiderComponent_C_ToggleRiding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000063, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, Temp_bool_Variable_1) == 0x000065, "Member 'PlayerRiderComponent_C_ToggleRiding::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_Not_PreBool_ReturnValue_1) == 0x000066, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.ToggleRidingOnServer
// 0x0010 (0x0010 - 0x0000)
struct PlayerRiderComponent_C_ToggleRidingOnServer final
{
public:
	class UObject*                                TargetObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_ToggleRidingOnServer) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_ToggleRidingOnServer");
static_assert(sizeof(PlayerRiderComponent_C_ToggleRidingOnServer) == 0x000010, "Wrong size on PlayerRiderComponent_C_ToggleRidingOnServer");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRidingOnServer, TargetObject) == 0x000000, "Member 'PlayerRiderComponent_C_ToggleRidingOnServer::TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRidingOnServer, UseAltRidingMessage) == 0x000008, "Member 'PlayerRiderComponent_C_ToggleRidingOnServer::UseAltRidingMessage' has a wrong offset!");

}

