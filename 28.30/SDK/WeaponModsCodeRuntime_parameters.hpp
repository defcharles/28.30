#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponModsCodeRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WeaponModsCodeRuntime_structs.hpp"


namespace SDK::Params
{

// Function WeaponModsCodeRuntime.FortModStation_WeaponUICapture.RefreshCaptureWhenPSOPrecachingDone
// 0x0008 (0x0008 - 0x0000)
struct FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone final
{
public:
	class UMeshComponent*                         PreviewMeshComponent;                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone) == 0x000008, "Wrong alignment on FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone");
static_assert(sizeof(FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone) == 0x000008, "Wrong size on FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone");
static_assert(offsetof(FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone, PreviewMeshComponent) == 0x000000, "Member 'FortModStation_WeaponUICapture_RefreshCaptureWhenPSOPrecachingDone::PreviewMeshComponent' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModManagementComponent.HandleWeaponUnequip
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponModManagementComponent_HandleWeaponUnequip final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModManagementComponent_HandleWeaponUnequip) == 0x000008, "Wrong alignment on FortWeaponModManagementComponent_HandleWeaponUnequip");
static_assert(sizeof(FortWeaponModManagementComponent_HandleWeaponUnequip) == 0x000008, "Wrong size on FortWeaponModManagementComponent_HandleWeaponUnequip");
static_assert(offsetof(FortWeaponModManagementComponent_HandleWeaponUnequip, Weapon) == 0x000000, "Member 'FortWeaponModManagementComponent_HandleWeaponUnequip::Weapon' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModManagementComponent.ServerRequestAddModToWeaponFromInventory
// 0x0020 (0x0020 - 0x0000)
struct FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory final
{
public:
	struct FGuid                                  WeaponModItemGUID;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  WeaponItemGuid;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory) == 0x000004, "Wrong alignment on FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory");
static_assert(sizeof(FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory) == 0x000020, "Wrong size on FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory");
static_assert(offsetof(FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory, WeaponModItemGUID) == 0x000000, "Member 'FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory::WeaponModItemGUID' has a wrong offset!");
static_assert(offsetof(FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory, WeaponItemGuid) == 0x000010, "Member 'FortWeaponModManagementComponent_ServerRequestAddModToWeaponFromInventory::WeaponItemGuid' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModManagementComponent.ServerRequestRemoveModFromWeaponToInventory
// 0x0018 (0x0018 - 0x0000)
struct FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory final
{
public:
	class UFortWeaponModItemDefinition*           WeaponModDef;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  WeaponItemGuid;                                    // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory) == 0x000008, "Wrong alignment on FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory");
static_assert(sizeof(FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory) == 0x000018, "Wrong size on FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory");
static_assert(offsetof(FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory, WeaponModDef) == 0x000000, "Member 'FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory::WeaponModDef' has a wrong offset!");
static_assert(offsetof(FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory, WeaponItemGuid) == 0x000008, "Member 'FortWeaponModManagementComponent_ServerRequestRemoveModFromWeaponToInventory::WeaponItemGuid' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationBase.GetModCostOverride
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponModStationBase_GetModCostOverride final
{
public:
	float                                         OutModCostOverride;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortWeaponModStationBase_GetModCostOverride) == 0x000004, "Wrong alignment on FortWeaponModStationBase_GetModCostOverride");
static_assert(sizeof(FortWeaponModStationBase_GetModCostOverride) == 0x000008, "Wrong size on FortWeaponModStationBase_GetModCostOverride");
static_assert(offsetof(FortWeaponModStationBase_GetModCostOverride, OutModCostOverride) == 0x000000, "Member 'FortWeaponModStationBase_GetModCostOverride::OutModCostOverride' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationBase_GetModCostOverride, ReturnValue) == 0x000004, "Member 'FortWeaponModStationBase_GetModCostOverride::ReturnValue' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationBase.GetTransactionCurrency
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponModStationBase_GetTransactionCurrency final
{
public:
	class UFortResourceItemDefinition*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationBase_GetTransactionCurrency) == 0x000008, "Wrong alignment on FortWeaponModStationBase_GetTransactionCurrency");
static_assert(sizeof(FortWeaponModStationBase_GetTransactionCurrency) == 0x000008, "Wrong size on FortWeaponModStationBase_GetTransactionCurrency");
static_assert(offsetof(FortWeaponModStationBase_GetTransactionCurrency, ReturnValue) == 0x000000, "Member 'FortWeaponModStationBase_GetTransactionCurrency::ReturnValue' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.ClientStartInteractWithWorkbenchActor
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor final
{
public:
	class AFortWeaponModStationBase*              NewInteractingWeaponModStation;                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor");
static_assert(sizeof(FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor) == 0x000008, "Wrong size on FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor");
static_assert(offsetof(FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor, NewInteractingWeaponModStation) == 0x000000, "Member 'FortWeaponModStationComponent_ClientStartInteractWithWorkbenchActor::NewInteractingWeaponModStation' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.LocalPurchaseRemoveMod
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponModStationComponent_LocalPurchaseRemoveMod final
{
public:
	class UFortWeaponModItemDefinition*           WeaponMod;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            Weapon;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_LocalPurchaseRemoveMod) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_LocalPurchaseRemoveMod");
static_assert(sizeof(FortWeaponModStationComponent_LocalPurchaseRemoveMod) == 0x000010, "Wrong size on FortWeaponModStationComponent_LocalPurchaseRemoveMod");
static_assert(offsetof(FortWeaponModStationComponent_LocalPurchaseRemoveMod, WeaponMod) == 0x000000, "Member 'FortWeaponModStationComponent_LocalPurchaseRemoveMod::WeaponMod' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_LocalPurchaseRemoveMod, Weapon) == 0x000008, "Member 'FortWeaponModStationComponent_LocalPurchaseRemoveMod::Weapon' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.LocalPurchaseWeaponModForWeapon
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon final
{
public:
	class UFortWeaponModItemDefinition*           WeaponMod;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            Weapon;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon");
static_assert(sizeof(FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon) == 0x000010, "Wrong size on FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon");
static_assert(offsetof(FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon, WeaponMod) == 0x000000, "Member 'FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon::WeaponMod' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon, Weapon) == 0x000008, "Member 'FortWeaponModStationComponent_LocalPurchaseWeaponModForWeapon::Weapon' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.ServerPurchaseRemoveMod
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponModStationComponent_ServerPurchaseRemoveMod final
{
public:
	class UFortWeaponModItemDefinition*           WeaponMod;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            Weapon;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_ServerPurchaseRemoveMod) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_ServerPurchaseRemoveMod");
static_assert(sizeof(FortWeaponModStationComponent_ServerPurchaseRemoveMod) == 0x000010, "Wrong size on FortWeaponModStationComponent_ServerPurchaseRemoveMod");
static_assert(offsetof(FortWeaponModStationComponent_ServerPurchaseRemoveMod, WeaponMod) == 0x000000, "Member 'FortWeaponModStationComponent_ServerPurchaseRemoveMod::WeaponMod' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_ServerPurchaseRemoveMod, Weapon) == 0x000008, "Member 'FortWeaponModStationComponent_ServerPurchaseRemoveMod::Weapon' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.ServerPurchaseWeaponModForWeapon
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon final
{
public:
	class UFortWeaponModItemDefinition*           WeaponMod;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            Weapon;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon");
static_assert(sizeof(FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon) == 0x000010, "Wrong size on FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon");
static_assert(offsetof(FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon, WeaponMod) == 0x000000, "Member 'FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon::WeaponMod' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon, Weapon) == 0x000008, "Member 'FortWeaponModStationComponent_ServerPurchaseWeaponModForWeapon::Weapon' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.ServerStopInteractWithWorkbenchActor
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor final
{
public:
	class AFortWeaponModStationBase*              NewInteractingWeaponModStation;                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor");
static_assert(sizeof(FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor) == 0x000008, "Wrong size on FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor");
static_assert(offsetof(FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor, NewInteractingWeaponModStation) == 0x000000, "Member 'FortWeaponModStationComponent_ServerStopInteractWithWorkbenchActor::NewInteractingWeaponModStation' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.StartInteractWithWorkbenchActor
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponModStationComponent_StartInteractWithWorkbenchActor final
{
public:
	class AFortWeaponModStationBase*              NewInteractingWeaponModStation;                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWeaponModStationComponent_StartInteractWithWorkbenchActor) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_StartInteractWithWorkbenchActor");
static_assert(sizeof(FortWeaponModStationComponent_StartInteractWithWorkbenchActor) == 0x000008, "Wrong size on FortWeaponModStationComponent_StartInteractWithWorkbenchActor");
static_assert(offsetof(FortWeaponModStationComponent_StartInteractWithWorkbenchActor, NewInteractingWeaponModStation) == 0x000000, "Member 'FortWeaponModStationComponent_StartInteractWithWorkbenchActor::NewInteractingWeaponModStation' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.CanPlayerAffordModForWeapon
// 0x0020 (0x0020 - 0x0000)
struct FortWeaponModStationComponent_CanPlayerAffordModForWeapon final
{
public:
	const class UFortWeaponModItemDefinition*     WeaponMod;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AFortWeapon*                      Weapon;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AController*                      Controller;                                        // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortWeaponModStationComponent_CanPlayerAffordModForWeapon) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_CanPlayerAffordModForWeapon");
static_assert(sizeof(FortWeaponModStationComponent_CanPlayerAffordModForWeapon) == 0x000020, "Wrong size on FortWeaponModStationComponent_CanPlayerAffordModForWeapon");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordModForWeapon, WeaponMod) == 0x000000, "Member 'FortWeaponModStationComponent_CanPlayerAffordModForWeapon::WeaponMod' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordModForWeapon, Weapon) == 0x000008, "Member 'FortWeaponModStationComponent_CanPlayerAffordModForWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordModForWeapon, Controller) == 0x000010, "Member 'FortWeaponModStationComponent_CanPlayerAffordModForWeapon::Controller' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordModForWeapon, ReturnValue) == 0x000018, "Member 'FortWeaponModStationComponent_CanPlayerAffordModForWeapon::ReturnValue' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.CanPlayerAffordRemoveModFromWeapon
// 0x0020 (0x0020 - 0x0000)
struct FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon final
{
public:
	const class UFortWeaponModItemDefinition*     WeaponMod;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AFortWeapon*                      Weapon;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AController*                      Controller;                                        // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon");
static_assert(sizeof(FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon) == 0x000020, "Wrong size on FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon, WeaponMod) == 0x000000, "Member 'FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon::WeaponMod' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon, Weapon) == 0x000008, "Member 'FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon, Controller) == 0x000010, "Member 'FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon::Controller' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon, ReturnValue) == 0x000018, "Member 'FortWeaponModStationComponent_CanPlayerAffordRemoveModFromWeapon::ReturnValue' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortWeaponModStationComponent.DoesCurrentWorkbenchHaveModsForWeapon
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon) == 0x000008, "Wrong alignment on FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon");
static_assert(sizeof(FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon) == 0x000010, "Wrong size on FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon");
static_assert(offsetof(FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon, Weapon) == 0x000000, "Member 'FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon, ReturnValue) == 0x000008, "Member 'FortWeaponModStationComponent_DoesCurrentWorkbenchHaveModsForWeapon::ReturnValue' has a wrong offset!");

// Function WeaponModsCodeRuntime.FortPickupInteractOverrideComponent_WeaponMods.ServerApplyWeaponModFromPickup
// 0x0018 (0x0018 - 0x0000)
struct FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup final
{
public:
	class AFortPickup*                            Pickup;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortWeaponModItemDefinition*     WeaponModDef;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            Weapon;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup) == 0x000008, "Wrong alignment on FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup");
static_assert(sizeof(FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup) == 0x000018, "Wrong size on FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup");
static_assert(offsetof(FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup, Pickup) == 0x000000, "Member 'FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup::Pickup' has a wrong offset!");
static_assert(offsetof(FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup, WeaponModDef) == 0x000008, "Member 'FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup::WeaponModDef' has a wrong offset!");
static_assert(offsetof(FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup, Weapon) == 0x000010, "Member 'FortPickupInteractOverrideComponent_WeaponMods_ServerApplyWeaponModFromPickup::Weapon' has a wrong offset!");

}

