#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LinedNotebook_RewardTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EventScreenBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LinedNotebook_RewardTile.WBP_LinedNotebook_RewardTile_C
// 0x0138 (0x0488 - 0x0350)
class UWBP_LinedNotebook_RewardTile_C final : public UFortEventRewardWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Selected_PreviewUpgrade;                           // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Deselected;                                        // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected_Preview;                                  // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Previewed;                                         // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnGaugeFull;                                       // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      InputPrompt_Preview;                               // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ItemCard;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_Remaining;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_StatusIndicator_C*           StatusIndicator_Locked;                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_StatusIndicator_C*           StatusIndicator_Owned;                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_State;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UIKit_Block_Outline_C*             WBP_UIKit_Block_Outline;                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            Accent_Color;                                      // 0x03C0(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Progress_Required_Label;                           // 0x03D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Progress_Icon_Rich_Text;                           // 0x03F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              InputIconScale;                                    // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Progress_Material;                                 // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInCompletedState;                                // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstProgressInit;                                 // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RewardProgressPercent;                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TileProgress;                                      // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TextOpacityValuePreviewed;                         // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        TextOpacityValueGauge;                             // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPreviewed;                                       // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CheckmarkSound;                                    // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   RequiredResourceFormat;                            // 0x0458(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             TileClickedSound;                                  // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TileHoverSound;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TileUnhoverSound;                                  // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__WBP_EventRewardTile_Button_RewardPreview_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void ExecuteUbergraph_WBP_LinedNotebook_RewardTile(int32 EntryPoint);
	double GetTileTextBaseOpacity();
	void OnButtonUnhovered_Event(class UCommonButtonLegacy* Button);
	void OnEventScreenDataSet(const class UFortEventScreenData* InEventScreenData);
	void OnInputMethodChanged(const ECommonInputType NewInputType);
	void OnRewardWidgetReset();
	void OnSetRewardItem(const int32 RequiredProgress, const int32 RemainingProgress, const float RewardProgressPercent_0, const float PreviewProgressPercent, const float OverallProgressPercent, const bool bInPreviewMode);
	void PlayHoverAnims(bool Forward);
	void PreConstruct(bool IsDesignTime);
	void SetAllRewardsCollected(const bool bAllCollected);
	void SetAllRewardsCollectedVisuals(const bool AllCollected);
	void SetCustomItemIcon(const class UTexture2D* CustomItemIcon);
	void SetDoubleWidth(const bool bDoubleWidth);
	void SetEventScreenData(class UFortEventScreenData* EventScreenData);
	void SetInPremiumUpgradeState(const bool bHighlighted);
	void SetInPreviewedState(const bool bPreviewed);
	void SetInPreviewSelectedState(const bool bSelected);
	void SetInSelectedState(const bool bSelected);
	void SetIsBannerItem(const bool bIsBanner);
	void SetProgress(float ProgressPercent);
	void SetProgressPercent(const float Percent);
	void SetRewardItemVisuals(const int32 RequiredProgress, const int32 RemainingProgress, double RewardProgressPercent_0, const float OverallProgressPercent, bool InPreviewMode);
	void SetTrackData(const struct FEventScreenTrackData& TrackData, const bool bIsOwned);
	void UpdateBackgroundColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LinedNotebook_RewardTile_C">();
	}
	static class UWBP_LinedNotebook_RewardTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LinedNotebook_RewardTile_C>();
	}
};
static_assert(alignof(UWBP_LinedNotebook_RewardTile_C) == 0x000008, "Wrong alignment on UWBP_LinedNotebook_RewardTile_C");
static_assert(sizeof(UWBP_LinedNotebook_RewardTile_C) == 0x000488, "Wrong size on UWBP_LinedNotebook_RewardTile_C");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, UberGraphFrame) == 0x000350, "Member 'UWBP_LinedNotebook_RewardTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Selected_PreviewUpgrade) == 0x000358, "Member 'UWBP_LinedNotebook_RewardTile_C::Selected_PreviewUpgrade' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Deselected) == 0x000360, "Member 'UWBP_LinedNotebook_RewardTile_C::Deselected' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Selected_Preview) == 0x000368, "Member 'UWBP_LinedNotebook_RewardTile_C::Selected_Preview' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Selected) == 0x000370, "Member 'UWBP_LinedNotebook_RewardTile_C::Selected' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Previewed) == 0x000378, "Member 'UWBP_LinedNotebook_RewardTile_C::Previewed' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, OnGaugeFull) == 0x000380, "Member 'UWBP_LinedNotebook_RewardTile_C::OnGaugeFull' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, InputPrompt_Preview) == 0x000388, "Member 'UWBP_LinedNotebook_RewardTile_C::InputPrompt_Preview' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Overlay_ItemCard) == 0x000390, "Member 'UWBP_LinedNotebook_RewardTile_C::Overlay_ItemCard' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, RichText_Remaining) == 0x000398, "Member 'UWBP_LinedNotebook_RewardTile_C::RichText_Remaining' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, StatusIndicator_Locked) == 0x0003A0, "Member 'UWBP_LinedNotebook_RewardTile_C::StatusIndicator_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, StatusIndicator_Owned) == 0x0003A8, "Member 'UWBP_LinedNotebook_RewardTile_C::StatusIndicator_Owned' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Switcher_State) == 0x0003B0, "Member 'UWBP_LinedNotebook_RewardTile_C::Switcher_State' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, WBP_UIKit_Block_Outline) == 0x0003B8, "Member 'UWBP_LinedNotebook_RewardTile_C::WBP_UIKit_Block_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Accent_Color) == 0x0003C0, "Member 'UWBP_LinedNotebook_RewardTile_C::Accent_Color' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Progress_Required_Label) == 0x0003D8, "Member 'UWBP_LinedNotebook_RewardTile_C::Progress_Required_Label' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Progress_Icon_Rich_Text) == 0x0003F0, "Member 'UWBP_LinedNotebook_RewardTile_C::Progress_Icon_Rich_Text' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, InputIconScale) == 0x000408, "Member 'UWBP_LinedNotebook_RewardTile_C::InputIconScale' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, Progress_Material) == 0x000418, "Member 'UWBP_LinedNotebook_RewardTile_C::Progress_Material' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, IsInCompletedState) == 0x000420, "Member 'UWBP_LinedNotebook_RewardTile_C::IsInCompletedState' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, FirstProgressInit) == 0x000421, "Member 'UWBP_LinedNotebook_RewardTile_C::FirstProgressInit' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, RewardProgressPercent) == 0x000428, "Member 'UWBP_LinedNotebook_RewardTile_C::RewardProgressPercent' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, TileProgress) == 0x000430, "Member 'UWBP_LinedNotebook_RewardTile_C::TileProgress' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, TextOpacityValuePreviewed) == 0x000438, "Member 'UWBP_LinedNotebook_RewardTile_C::TextOpacityValuePreviewed' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, TextOpacityValueGauge) == 0x000440, "Member 'UWBP_LinedNotebook_RewardTile_C::TextOpacityValueGauge' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, IsPreviewed) == 0x000448, "Member 'UWBP_LinedNotebook_RewardTile_C::IsPreviewed' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, CheckmarkSound) == 0x000450, "Member 'UWBP_LinedNotebook_RewardTile_C::CheckmarkSound' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, RequiredResourceFormat) == 0x000458, "Member 'UWBP_LinedNotebook_RewardTile_C::RequiredResourceFormat' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, TileClickedSound) == 0x000470, "Member 'UWBP_LinedNotebook_RewardTile_C::TileClickedSound' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, TileHoverSound) == 0x000478, "Member 'UWBP_LinedNotebook_RewardTile_C::TileHoverSound' has a wrong offset!");
static_assert(offsetof(UWBP_LinedNotebook_RewardTile_C, TileUnhoverSound) == 0x000480, "Member 'UWBP_LinedNotebook_RewardTile_C::TileUnhoverSound' has a wrong offset!");

}

