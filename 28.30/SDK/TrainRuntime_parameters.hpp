#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrainRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TrainRuntime.FortTrainCheatManager.SetTrainMoveInPositiveRailDirection
// 0x0001 (0x0001 - 0x0000)
struct FortTrainCheatManager_SetTrainMoveInPositiveRailDirection final
{
public:
	bool                                          bMoveInPositiveRailDirection;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTrainCheatManager_SetTrainMoveInPositiveRailDirection) == 0x000001, "Wrong alignment on FortTrainCheatManager_SetTrainMoveInPositiveRailDirection");
static_assert(sizeof(FortTrainCheatManager_SetTrainMoveInPositiveRailDirection) == 0x000001, "Wrong size on FortTrainCheatManager_SetTrainMoveInPositiveRailDirection");
static_assert(offsetof(FortTrainCheatManager_SetTrainMoveInPositiveRailDirection, bMoveInPositiveRailDirection) == 0x000000, "Member 'FortTrainCheatManager_SetTrainMoveInPositiveRailDirection::bMoveInPositiveRailDirection' has a wrong offset!");

// Function TrainRuntime.TrainCar.OnActorTargetedForImpulse
// 0x0008 (0x0008 - 0x0000)
struct TrainCar_OnActorTargetedForImpulse final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrainCar_OnActorTargetedForImpulse) == 0x000008, "Wrong alignment on TrainCar_OnActorTargetedForImpulse");
static_assert(sizeof(TrainCar_OnActorTargetedForImpulse) == 0x000008, "Wrong size on TrainCar_OnActorTargetedForImpulse");
static_assert(offsetof(TrainCar_OnActorTargetedForImpulse, Actor) == 0x000000, "Member 'TrainCar_OnActorTargetedForImpulse::Actor' has a wrong offset!");

// Function TrainRuntime.TrainCar.OnPawnBasedOnTrainCar
// 0x0008 (0x0008 - 0x0000)
struct TrainCar_OnPawnBasedOnTrainCar final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrainCar_OnPawnBasedOnTrainCar) == 0x000008, "Wrong alignment on TrainCar_OnPawnBasedOnTrainCar");
static_assert(sizeof(TrainCar_OnPawnBasedOnTrainCar) == 0x000008, "Wrong size on TrainCar_OnPawnBasedOnTrainCar");
static_assert(offsetof(TrainCar_OnPawnBasedOnTrainCar, Pawn) == 0x000000, "Member 'TrainCar_OnPawnBasedOnTrainCar::Pawn' has a wrong offset!");

// Function TrainRuntime.TrainCar.OnPawnDebasedTrainCar
// 0x0010 (0x0010 - 0x0000)
struct TrainCar_OnPawnDebasedTrainCar final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewBase;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrainCar_OnPawnDebasedTrainCar) == 0x000008, "Wrong alignment on TrainCar_OnPawnDebasedTrainCar");
static_assert(sizeof(TrainCar_OnPawnDebasedTrainCar) == 0x000010, "Wrong size on TrainCar_OnPawnDebasedTrainCar");
static_assert(offsetof(TrainCar_OnPawnDebasedTrainCar, Pawn) == 0x000000, "Member 'TrainCar_OnPawnDebasedTrainCar::Pawn' has a wrong offset!");
static_assert(offsetof(TrainCar_OnPawnDebasedTrainCar, NewBase) == 0x000008, "Member 'TrainCar_OnPawnDebasedTrainCar::NewBase' has a wrong offset!");

// Function TrainRuntime.TrainCar.GetCarIndex
// 0x0004 (0x0004 - 0x0000)
struct TrainCar_GetCarIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrainCar_GetCarIndex) == 0x000004, "Wrong alignment on TrainCar_GetCarIndex");
static_assert(sizeof(TrainCar_GetCarIndex) == 0x000004, "Wrong size on TrainCar_GetCarIndex");
static_assert(offsetof(TrainCar_GetCarIndex, ReturnValue) == 0x000000, "Member 'TrainCar_GetCarIndex::ReturnValue' has a wrong offset!");

// Function TrainRuntime.TrainCar.GetTrainManager
// 0x0008 (0x0008 - 0x0000)
struct TrainCar_GetTrainManager final
{
public:
	class UFortTrainManager*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrainCar_GetTrainManager) == 0x000008, "Wrong alignment on TrainCar_GetTrainManager");
static_assert(sizeof(TrainCar_GetTrainManager) == 0x000008, "Wrong size on TrainCar_GetTrainManager");
static_assert(offsetof(TrainCar_GetTrainManager, ReturnValue) == 0x000000, "Member 'TrainCar_GetTrainManager::ReturnValue' has a wrong offset!");

// Function TrainRuntime.TrainCar.GetTransformAtServerTime
// 0x0070 (0x0070 - 0x0000)
struct TrainCar_GetTransformAtServerTime final
{
public:
	float                                         ServerTime;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrainCar_GetTransformAtServerTime) == 0x000010, "Wrong alignment on TrainCar_GetTransformAtServerTime");
static_assert(sizeof(TrainCar_GetTransformAtServerTime) == 0x000070, "Wrong size on TrainCar_GetTransformAtServerTime");
static_assert(offsetof(TrainCar_GetTransformAtServerTime, ServerTime) == 0x000000, "Member 'TrainCar_GetTransformAtServerTime::ServerTime' has a wrong offset!");
static_assert(offsetof(TrainCar_GetTransformAtServerTime, ReturnValue) == 0x000010, "Member 'TrainCar_GetTransformAtServerTime::ReturnValue' has a wrong offset!");

// Function TrainRuntime.FortTrainManager.MoveAlongRail
// 0x0008 (0x0008 - 0x0000)
struct FortTrainManager_MoveAlongRail final
{
public:
	float                                         DeltaDistance;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateReplicatedMovementData;                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTrainManager_MoveAlongRail) == 0x000004, "Wrong alignment on FortTrainManager_MoveAlongRail");
static_assert(sizeof(FortTrainManager_MoveAlongRail) == 0x000008, "Wrong size on FortTrainManager_MoveAlongRail");
static_assert(offsetof(FortTrainManager_MoveAlongRail, DeltaDistance) == 0x000000, "Member 'FortTrainManager_MoveAlongRail::DeltaDistance' has a wrong offset!");
static_assert(offsetof(FortTrainManager_MoveAlongRail, bUpdateReplicatedMovementData) == 0x000004, "Member 'FortTrainManager_MoveAlongRail::bUpdateReplicatedMovementData' has a wrong offset!");

// Function TrainRuntime.FortTrainManager.MoveToPositionOnRail
// 0x0008 (0x0008 - 0x0000)
struct FortTrainManager_MoveToPositionOnRail final
{
public:
	float                                         RailDistance;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateReplicatedMovementData;                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTrainManager_MoveToPositionOnRail) == 0x000004, "Wrong alignment on FortTrainManager_MoveToPositionOnRail");
static_assert(sizeof(FortTrainManager_MoveToPositionOnRail) == 0x000008, "Wrong size on FortTrainManager_MoveToPositionOnRail");
static_assert(offsetof(FortTrainManager_MoveToPositionOnRail, RailDistance) == 0x000000, "Member 'FortTrainManager_MoveToPositionOnRail::RailDistance' has a wrong offset!");
static_assert(offsetof(FortTrainManager_MoveToPositionOnRail, bUpdateReplicatedMovementData) == 0x000004, "Member 'FortTrainManager_MoveToPositionOnRail::bUpdateReplicatedMovementData' has a wrong offset!");

// Function TrainRuntime.FortTrainManager.MoveToPositionOnRailAtCurrentServerTime
// 0x0001 (0x0001 - 0x0000)
struct FortTrainManager_MoveToPositionOnRailAtCurrentServerTime final
{
public:
	bool                                          bUpdateReplicatedMovementData;                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTrainManager_MoveToPositionOnRailAtCurrentServerTime) == 0x000001, "Wrong alignment on FortTrainManager_MoveToPositionOnRailAtCurrentServerTime");
static_assert(sizeof(FortTrainManager_MoveToPositionOnRailAtCurrentServerTime) == 0x000001, "Wrong size on FortTrainManager_MoveToPositionOnRailAtCurrentServerTime");
static_assert(offsetof(FortTrainManager_MoveToPositionOnRailAtCurrentServerTime, bUpdateReplicatedMovementData) == 0x000000, "Member 'FortTrainManager_MoveToPositionOnRailAtCurrentServerTime::bUpdateReplicatedMovementData' has a wrong offset!");

// Function TrainRuntime.FortTrainManager.MoveToTimeAlongRail
// 0x0008 (0x0008 - 0x0000)
struct FortTrainManager_MoveToTimeAlongRail final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateReplicatedMovementData;                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTrainManager_MoveToTimeAlongRail) == 0x000004, "Wrong alignment on FortTrainManager_MoveToTimeAlongRail");
static_assert(sizeof(FortTrainManager_MoveToTimeAlongRail) == 0x000008, "Wrong size on FortTrainManager_MoveToTimeAlongRail");
static_assert(offsetof(FortTrainManager_MoveToTimeAlongRail, Time) == 0x000000, "Member 'FortTrainManager_MoveToTimeAlongRail::Time' has a wrong offset!");
static_assert(offsetof(FortTrainManager_MoveToTimeAlongRail, bUpdateReplicatedMovementData) == 0x000004, "Member 'FortTrainManager_MoveToTimeAlongRail::bUpdateReplicatedMovementData' has a wrong offset!");

// Function TrainRuntime.FortTrainManager.GetWorldLocationAtServerTime
// 0x0020 (0x0020 - 0x0000)
struct FortTrainManager_GetWorldLocationAtServerTime final
{
public:
	float                                         ServerTime;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTrainManager_GetWorldLocationAtServerTime) == 0x000008, "Wrong alignment on FortTrainManager_GetWorldLocationAtServerTime");
static_assert(sizeof(FortTrainManager_GetWorldLocationAtServerTime) == 0x000020, "Wrong size on FortTrainManager_GetWorldLocationAtServerTime");
static_assert(offsetof(FortTrainManager_GetWorldLocationAtServerTime, ServerTime) == 0x000000, "Member 'FortTrainManager_GetWorldLocationAtServerTime::ServerTime' has a wrong offset!");
static_assert(offsetof(FortTrainManager_GetWorldLocationAtServerTime, ReturnValue) == 0x000008, "Member 'FortTrainManager_GetWorldLocationAtServerTime::ReturnValue' has a wrong offset!");

// Function TrainRuntime.FortTrainRail.GetTimeFromNextTrainArrival
// 0x0008 (0x0008 - 0x0000)
struct FortTrainRail_GetTimeFromNextTrainArrival final
{
public:
	struct FGameplayTag                           StationIdentifierTag;                              // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTrainRail_GetTimeFromNextTrainArrival) == 0x000004, "Wrong alignment on FortTrainRail_GetTimeFromNextTrainArrival");
static_assert(sizeof(FortTrainRail_GetTimeFromNextTrainArrival) == 0x000008, "Wrong size on FortTrainRail_GetTimeFromNextTrainArrival");
static_assert(offsetof(FortTrainRail_GetTimeFromNextTrainArrival, StationIdentifierTag) == 0x000000, "Member 'FortTrainRail_GetTimeFromNextTrainArrival::StationIdentifierTag' has a wrong offset!");
static_assert(offsetof(FortTrainRail_GetTimeFromNextTrainArrival, ReturnValue) == 0x000004, "Member 'FortTrainRail_GetTimeFromNextTrainArrival::ReturnValue' has a wrong offset!");

// Function TrainRuntime.FortTrainMovingPlatformComponent.FindOrGetTrainManager
// 0x0008 (0x0008 - 0x0000)
struct FortTrainMovingPlatformComponent_FindOrGetTrainManager final
{
public:
	class UFortTrainManager*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTrainMovingPlatformComponent_FindOrGetTrainManager) == 0x000008, "Wrong alignment on FortTrainMovingPlatformComponent_FindOrGetTrainManager");
static_assert(sizeof(FortTrainMovingPlatformComponent_FindOrGetTrainManager) == 0x000008, "Wrong size on FortTrainMovingPlatformComponent_FindOrGetTrainManager");
static_assert(offsetof(FortTrainMovingPlatformComponent_FindOrGetTrainManager, ReturnValue) == 0x000000, "Member 'FortTrainMovingPlatformComponent_FindOrGetTrainManager::ReturnValue' has a wrong offset!");

}

