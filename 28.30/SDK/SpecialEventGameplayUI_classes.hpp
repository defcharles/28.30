#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventGameplayUI

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "SpecialEventGameplayUI_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class SpecialEventGameplayUI.FortGameplayCinematicHostWidget
// 0x0038 (0x0360 - 0x0328)
class UFortGameplayCinematicHostWidget final : public UFortHUDElementWidget
{
public:
	class FName                                   IntroWidgetEntryName;                              // 0x0328(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCinematicWidgetData>           WidgetEntries;                                     // 0x0330(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UAthenaLoadingScreenItemDefinition*     LoadingScreenDefinition;                           // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_348[0x18];                                     // 0x0348(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayCinematicHostWidget">();
	}
	static class UFortGameplayCinematicHostWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayCinematicHostWidget>();
	}
};
static_assert(alignof(UFortGameplayCinematicHostWidget) == 0x000008, "Wrong alignment on UFortGameplayCinematicHostWidget");
static_assert(sizeof(UFortGameplayCinematicHostWidget) == 0x000360, "Wrong size on UFortGameplayCinematicHostWidget");
static_assert(offsetof(UFortGameplayCinematicHostWidget, IntroWidgetEntryName) == 0x000328, "Member 'UFortGameplayCinematicHostWidget::IntroWidgetEntryName' has a wrong offset!");
static_assert(offsetof(UFortGameplayCinematicHostWidget, WidgetEntries) == 0x000330, "Member 'UFortGameplayCinematicHostWidget::WidgetEntries' has a wrong offset!");
static_assert(offsetof(UFortGameplayCinematicHostWidget, LoadingScreenDefinition) == 0x000340, "Member 'UFortGameplayCinematicHostWidget::LoadingScreenDefinition' has a wrong offset!");

// Class SpecialEventGameplayUI.FortGameplayCinematicWidget
// 0x0020 (0x0420 - 0x0400)
class UFortGameplayCinematicWidget final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x8];                                      // 0x0400(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSkipCinematics;                                   // 0x0408(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_409[0x17];                                     // 0x0409(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCinematicFinished();
	void OnStartCinematic();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayCinematicWidget">();
	}
	static class UFortGameplayCinematicWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayCinematicWidget>();
	}
};
static_assert(alignof(UFortGameplayCinematicWidget) == 0x000008, "Wrong alignment on UFortGameplayCinematicWidget");
static_assert(sizeof(UFortGameplayCinematicWidget) == 0x000420, "Wrong size on UFortGameplayCinematicWidget");
static_assert(offsetof(UFortGameplayCinematicWidget, bSkipCinematics) == 0x000408, "Member 'UFortGameplayCinematicWidget::bSkipCinematics' has a wrong offset!");

// Class SpecialEventGameplayUI.FortGameplayIntroPanelWidget
// 0x0020 (0x0420 - 0x0400)
class UFortGameplayIntroPanelWidget final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x20];                                     // 0x0400(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnIntroFinished();
	void OnStartIntro();
	void OnWaitingForMinTime();
	void OnWaitingForPawn();
	void OnWaitingForReadyForGameplay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayIntroPanelWidget">();
	}
	static class UFortGameplayIntroPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayIntroPanelWidget>();
	}
};
static_assert(alignof(UFortGameplayIntroPanelWidget) == 0x000008, "Wrong alignment on UFortGameplayIntroPanelWidget");
static_assert(sizeof(UFortGameplayIntroPanelWidget) == 0x000420, "Wrong size on UFortGameplayIntroPanelWidget");

// Class SpecialEventGameplayUI.SpecialEventCursorWidget
// 0x0020 (0x02E0 - 0x02C0)
class USpecialEventCursorWidget final : public UUserWidget
{
public:
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAutomaticallyChangeVisibility;                    // 0x02C8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpecialEventCursorPawnComponent*       CursorPawnComponent;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnCursorModeChanged(class USpecialEventCursorPawnComponent* InCursorPawnComponent, const struct FGameplayTag& NewCursorModeTag, const struct FGameplayTag& OldCursorModeTag);
	void BP_OnDesiredVisibilityChanged(class USpecialEventCursorPawnComponent* InCursorPawnComponent, const struct FGameplayTag& CursorModeTag, const bool bShouldBeVisible);
	void OnCursorModeChanged(class USpecialEventCursorPawnComponent* InCursorPawnComponent, const struct FGameplayTag& NewCursorModeTag, const struct FGameplayTag& OldCursorModeTag);
	void OnDesiredVisibilityChanged(class USpecialEventCursorPawnComponent* InCursorPawnComponent, const struct FGameplayTag& CursorModeTag, const bool bShouldBeVisible);
	void OnViewportLocationChanged(class USpecialEventCursorPawnComponent* InCursorPawnComponent, const struct FVector2D& NormalizedLocation, const struct FVector2D& ViewportLocation);

	struct FGameplayTagContainer GetCursorModeTags() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventCursorWidget">();
	}
	static class USpecialEventCursorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventCursorWidget>();
	}
};
static_assert(alignof(USpecialEventCursorWidget) == 0x000008, "Wrong alignment on USpecialEventCursorWidget");
static_assert(sizeof(USpecialEventCursorWidget) == 0x0002E0, "Wrong size on USpecialEventCursorWidget");
static_assert(offsetof(USpecialEventCursorWidget, bAutomaticallyChangeVisibility) == 0x0002C8, "Member 'USpecialEventCursorWidget::bAutomaticallyChangeVisibility' has a wrong offset!");
static_assert(offsetof(USpecialEventCursorWidget, CursorPawnComponent) == 0x0002D0, "Member 'USpecialEventCursorWidget::CursorPawnComponent' has a wrong offset!");

// Class SpecialEventGameplayUI.SpecialEventPlayerInfoWidget
// 0x0020 (0x0348 - 0x0328)
class USpecialEventPlayerInfoWidget final : public UFortHUDElementWidget
{
public:
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AFortPlayerStateAthena* OldPlayerState, class AFortPlayerStateAthena* NewPlayerState)> OnRepresentedPlayerStateChanged;                   // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_340[0x8];                                      // 0x0340(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AFortPlayerStateAthena* GetRepresentedPlayerState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventPlayerInfoWidget">();
	}
	static class USpecialEventPlayerInfoWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventPlayerInfoWidget>();
	}
};
static_assert(alignof(USpecialEventPlayerInfoWidget) == 0x000008, "Wrong alignment on USpecialEventPlayerInfoWidget");
static_assert(sizeof(USpecialEventPlayerInfoWidget) == 0x000348, "Wrong size on USpecialEventPlayerInfoWidget");
static_assert(offsetof(USpecialEventPlayerInfoWidget, OnRepresentedPlayerStateChanged) == 0x000330, "Member 'USpecialEventPlayerInfoWidget::OnRepresentedPlayerStateChanged' has a wrong offset!");

// Class SpecialEventGameplayUI.SpecialEventUILibrary
// 0x0000 (0x0028 - 0x0028)
class USpecialEventUILibrary final : public UBlueprintFunctionLibrary
{
public:
	static void HideFrontEndStateWidget(const class UObject* WorldContextObject, bool bNewlyHidden);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventUILibrary">();
	}
	static class USpecialEventUILibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventUILibrary>();
	}
};
static_assert(alignof(USpecialEventUILibrary) == 0x000008, "Wrong alignment on USpecialEventUILibrary");
static_assert(sizeof(USpecialEventUILibrary) == 0x000028, "Wrong size on USpecialEventUILibrary");

}

