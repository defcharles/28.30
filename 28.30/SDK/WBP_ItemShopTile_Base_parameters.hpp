#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemShopTile_Base

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "S_TagTitle_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_UIKit_ItemDescription_TextWrapType_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "E_PriceSwitcherState_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.ClearTimers
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_ClearTimers final
{
public:
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_ClearTimers) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_ClearTimers");
static_assert(sizeof(WBP_ItemShopTile_Base_C_ClearTimers) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_ClearTimers");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ClearTimers, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_ClearTimers::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.CreatePriceSwitcher
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_CreatePriceSwitcher final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PriceSwitcher_Base_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_CreatePriceSwitcher) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_CreatePriceSwitcher");
static_assert(sizeof(WBP_ItemShopTile_Base_C_CreatePriceSwitcher) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_CreatePriceSwitcher");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreatePriceSwitcher, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_CreatePriceSwitcher::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreatePriceSwitcher, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_CreatePriceSwitcher::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreatePriceSwitcher, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_CreatePriceSwitcher::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreatePriceSwitcher, CallFunc_AddChildToOverlay_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_CreatePriceSwitcher::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.CreateTagRotator
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemShopTile_Base_C_CreateTagRotator final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MPItemShop_TagRotator_Base_C*      CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_CreateTagRotator) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_CreateTagRotator");
static_assert(sizeof(WBP_ItemShopTile_Base_C_CreateTagRotator) == 0x000020, "Wrong size on WBP_ItemShopTile_Base_C_CreateTagRotator");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateTagRotator, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_CreateTagRotator::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateTagRotator, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_CreateTagRotator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateTagRotator, CallFunc_AddChildToOverlay_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_CreateTagRotator::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateTagRotator, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_CreateTagRotator::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateTagRotator, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_CreateTagRotator::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.CreateViolator
// 0x0028 (0x0028 - 0x0000)
struct WBP_ItemShopTile_Base_C_CreateViolator final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Violator_Base_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_CreateViolator) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_CreateViolator");
static_assert(sizeof(WBP_ItemShopTile_Base_C_CreateViolator) == 0x000028, "Wrong size on WBP_ItemShopTile_Base_C_CreateViolator");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateViolator, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_CreateViolator::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateViolator, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_CreateViolator::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateViolator, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_CreateViolator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateViolator, CallFunc_AddChildToOverlay_ReturnValue) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_CreateViolator::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_CreateViolator, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_CreateViolator::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.ExecuteUbergraph_WBP_ItemShopTile_Base
// 0x0080 (0x0080 - 0x0000)
struct WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextPresentationIndex_ReturnValue;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0070(0x0008)(NoDestructor)
	bool                                          CallFunc_InEditorOrPIE_ReturnValue;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base");
static_assert(sizeof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base) == 0x000080, "Wrong size on WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, EntryPoint) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, Temp_bool_Variable) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, Temp_byte_Variable) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_GetNextPresentationIndex_ReturnValue) == 0x000024, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_GetNextPresentationIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_IsHovered_ReturnValue) == 0x000029, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_GetEndTime_ReturnValue) == 0x00002C, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_CustomEvent_bNewInputType) == 0x00003C, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_IsUsingTouch_ReturnValue) == 0x00003D, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000040, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000048, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_Select_Default) == 0x000060, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, K2Node_Event_InFocusEvent) == 0x000070, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_InEditorOrPIE_ReturnValue) == 0x000078, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_InEditorOrPIE_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x00007C, "Member 'WBP_ItemShopTile_Base_C_ExecuteUbergraph_WBP_ItemShopTile_Base::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.GetNextPresentationIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemShopTile_Base_C_GetNextPresentationIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Wrap_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_GetNextPresentationIndex) == 0x000004, "Wrong alignment on WBP_ItemShopTile_Base_C_GetNextPresentationIndex");
static_assert(sizeof(WBP_ItemShopTile_Base_C_GetNextPresentationIndex) == 0x000010, "Wrong size on WBP_ItemShopTile_Base_C_GetNextPresentationIndex");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetNextPresentationIndex, ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_GetNextPresentationIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetNextPresentationIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_GetNextPresentationIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetNextPresentationIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_GetNextPresentationIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetNextPresentationIndex, CallFunc_Wrap_ReturnValue) == 0x00000C, "Member 'WBP_ItemShopTile_Base_C_GetNextPresentationIndex::CallFunc_Wrap_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.GetTileAnchor
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_ItemShopTile_Base_C_GetTileAnchor final
{
public:
	struct FVector2D                              PixelPosition;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPreviousColumnFull;                              // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TileColumn;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0020(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbsolutePosition_ReturnValue;          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_GetTileAnchor) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_GetTileAnchor");
static_assert(sizeof(WBP_ItemShopTile_Base_C_GetTileAnchor) == 0x0000C8, "Wrong size on WBP_ItemShopTile_Base_C_GetTileAnchor");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, PixelPosition) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::PixelPosition' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, IsPreviousColumnFull) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::IsPreviousColumnFull' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, TileColumn) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::TileColumn' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_GetCachedGeometry_ReturnValue) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_BreakVector2D_X) == 0x000058, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000068, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_GetAbsolutePosition_ReturnValue) == 0x000078, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_GetAbsolutePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_BreakVector2D_X_1) == 0x000088, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_BreakVector2D_Y_1) == 0x000090, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetTileAnchor, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000B8, "Member 'WBP_ItemShopTile_Base_C_GetTileAnchor::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_HandleInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_HandleInputMethodChanged) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_HandleInputMethodChanged");
static_assert(sizeof(WBP_ItemShopTile_Base_C_HandleInputMethodChanged) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_HandleInputMethodChanged");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HandleInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_HandleInputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.HideOfferDetails
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemShopTile_Base_C_HideOfferDetails final
{
public:
	bool                                          IsImmediate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_HideOfferDetails) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_HideOfferDetails");
static_assert(sizeof(WBP_ItemShopTile_Base_C_HideOfferDetails) == 0x000010, "Wrong size on WBP_ItemShopTile_Base_C_HideOfferDetails");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HideOfferDetails, IsImmediate) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_HideOfferDetails::IsImmediate' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HideOfferDetails, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_HideOfferDetails::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.InitializeMaterials
// 0x0028 (0x0028 - 0x0000)
struct WBP_ItemShopTile_Base_C_InitializeMaterials final
{
public:
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_2;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_InitializeMaterials) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_InitializeMaterials");
static_assert(sizeof(WBP_ItemShopTile_Base_C_InitializeMaterials) == 0x000028, "Wrong size on WBP_ItemShopTile_Base_C_InitializeMaterials");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeMaterials, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_InitializeMaterials::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeMaterials, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_InitializeMaterials::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeMaterials, CallFunc_Conv_BoolToDouble_ReturnValue_2) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_InitializeMaterials::CallFunc_Conv_BoolToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeMaterials, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_InitializeMaterials::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeMaterials, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x00001C, "Member 'WBP_ItemShopTile_Base_C_InitializeMaterials::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeMaterials, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_InitializeMaterials::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.InitializeTile
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemShopTile_Base_C_InitializeTile final
{
public:
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_InitializeTile) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_InitializeTile");
static_assert(sizeof(WBP_ItemShopTile_Base_C_InitializeTile) == 0x000010, "Wrong size on WBP_ItemShopTile_Base_C_InitializeTile");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeTile, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_InitializeTile::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeTile, CallFunc_GetCurrentInputType_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_InitializeTile::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeTile, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_ItemShopTile_Base_C_InitializeTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.InitializeVisualState
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemShopTile_Base_C_InitializeVisualState final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasForcingToShowOfferDetails;                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_2;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_InitializeVisualState) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_InitializeVisualState");
static_assert(sizeof(WBP_ItemShopTile_Base_C_InitializeVisualState) == 0x000020, "Wrong size on WBP_ItemShopTile_Base_C_InitializeVisualState");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CurrentInputType) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CurrentInputType' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, WasForcingToShowOfferDetails) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::WasForcingToShowOfferDetails' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_IsHovered_ReturnValue) == 0x000003, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_IsHovered_ReturnValue_1) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_IsHovered_ReturnValue_2) == 0x00001B, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_IsHovered_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001C, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_Not_PreBool_ReturnValue_3) == 0x00001D, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_BooleanAND_ReturnValue_1) == 0x00001E, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_InitializeVisualState, CallFunc_BooleanAND_ReturnValue_2) == 0x00001F, "Member 'WBP_ItemShopTile_Base_C_InitializeVisualState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.IsMobileFrontend
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_IsMobileFrontend final
{
public:
	bool                                          bIsMobileFrontend;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_IsMobileFrontend) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_IsMobileFrontend");
static_assert(sizeof(WBP_ItemShopTile_Base_C_IsMobileFrontend) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_IsMobileFrontend");
static_assert(offsetof(WBP_ItemShopTile_Base_C_IsMobileFrontend, bIsMobileFrontend) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_IsMobileFrontend::bIsMobileFrontend' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_IsMobileFrontend, CallFunc_IsMobileGame_ReturnValue) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_IsMobileFrontend::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_IsMobileFrontend, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_IsMobileFrontend::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_IsMobileFrontend, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_IsMobileFrontend::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemShopTile_Base_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_ItemShopTile_Base_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_ItemShopTile_Base_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_ItemShopTile_Base_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_ItemShopTile_Base_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_PreConstruct");
static_assert(sizeof(WBP_ItemShopTile_Base_C_PreConstruct) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_PreConstruct");
static_assert(offsetof(WBP_ItemShopTile_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.Set Unfocused Hover
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemShopTile_Base_C_Set_Unfocused_Hover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyResetAnimation;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_Set_Unfocused_Hover");
static_assert(sizeof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover) == 0x000020, "Wrong size on WBP_ItemShopTile_Base_C_Set_Unfocused_Hover");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, IsHovered_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::IsHovered_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, OnlyResetAnimation) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::OnlyResetAnimation' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, Temp_bool_Variable) == 0x000002, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, Temp_byte_Variable) == 0x000003, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, K2Node_Select_Default) == 0x00000C, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_Set_Unfocused_Hover, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_Set_Unfocused_Hover::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetActiveState
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetActiveState final
{
public:
	bool                                          IsActiveState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOfferShown;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetActiveState) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetActiveState");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetActiveState) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetActiveState");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, IsActiveState) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::IsActiveState' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, IsOfferShown) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::IsOfferShown' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x000012, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetActiveState, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000013, "Member 'WBP_ItemShopTile_Base_C_SetActiveState::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetBottomInfoActiveWidget
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget final
{
public:
	E_PriceSwitcherState                          PriceSwitcherState;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget, PriceSwitcherState) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetBottomInfoActiveWidget::PriceSwitcherState' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetCurrency
// 0x0014 (0x0014 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetCurrency final
{
public:
	EItemShopCurrency                             CurrencyType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopCurrency                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetCurrency) == 0x000004, "Wrong alignment on WBP_ItemShopTile_Base_C_SetCurrency");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetCurrency) == 0x000014, "Wrong size on WBP_ItemShopTile_Base_C_SetCurrency");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetCurrency, CurrencyType) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetCurrency::CurrencyType' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetCurrency, Temp_byte_Variable) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_SetCurrency::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetCurrency, K2Node_Select_Default) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_SetCurrency::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetDescriptionOffsetAnimValue
// 0x0060 (0x0060 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue) == 0x000060, "Wrong size on WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, Value) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_GetDesiredSize_ReturnValue) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_BreakVector2D_X) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, K2Node_MakeStruct_Margin) == 0x000048, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000058, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionOffsetAnimValue::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetDescriptionVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetDescriptionVisibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetDescriptionVisibility) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_SetDescriptionVisibility");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetDescriptionVisibility) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_SetDescriptionVisibility");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetDescriptionVisibility, Visibility_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetDescriptionVisibility::Visibility_0' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetHoveredState
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetHoveredState final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetHoveredState) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetHoveredState");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetHoveredState) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetHoveredState");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredState, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetHoveredState::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredState, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetHoveredState::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredState, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetHoveredState::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetHoveredStateVisual
// 0x0028 (0x0028 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetHoveredStateVisual final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NextImageOfferMID;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ImageOfferMID;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetHoveredStateVisual");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual) == 0x000028, "Wrong size on WBP_ItemShopTile_Base_C_SetHoveredStateVisual");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual, IsHovered_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetHoveredStateVisual::IsHovered_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual, NextImageOfferMID) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetHoveredStateVisual::NextImageOfferMID' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual, ImageOfferMID) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetHoveredStateVisual::ImageOfferMID' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetHoveredStateVisual::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetHoveredStateVisual, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetHoveredStateVisual::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetOfferDescription
// 0x0048 (0x0048 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetOfferDescription final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetOfferDescription) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetOfferDescription");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetOfferDescription) == 0x000048, "Wrong size on WBP_ItemShopTile_Base_C_SetOfferDescription");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, Text) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, Temp_bool_Variable) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, Temp_real_Variable) == 0x00001C, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, Temp_real_Variable_1) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, CallFunc_IsMobileGame_ReturnValue) == 0x000024, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, K2Node_Select_Default) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferDescription, K2Node_MakeStruct_Margin) == 0x000034, "Member 'WBP_ItemShopTile_Base_C_SetOfferDescription::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetOfferMaterial
// 0x0038 (0x0038 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetOfferMaterial final
{
public:
	TDelegate<void()>                             PresentationSwapDelegate;                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetOfferMaterial) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetOfferMaterial");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetOfferMaterial) == 0x000038, "Wrong size on WBP_ItemShopTile_Base_C_SetOfferMaterial");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferMaterial, PresentationSwapDelegate) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetOfferMaterial::PresentationSwapDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferMaterial, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetOfferMaterial::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferMaterial, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetOfferMaterial::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferMaterial, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetOfferMaterial::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferMaterial, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_SetOfferMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferMaterial, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetOfferMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetOfferName
// 0x0048 (0x0048 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetOfferName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetOfferName) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetOfferName");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetOfferName) == 0x000048, "Wrong size on WBP_ItemShopTile_Base_C_SetOfferName");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, Text) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, Temp_bool_Variable) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, Temp_real_Variable) == 0x00001C, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, CallFunc_IsMobileGame_ReturnValue) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, K2Node_Select_Default) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferName, K2Node_MakeStruct_Margin) == 0x000034, "Member 'WBP_ItemShopTile_Base_C_SetOfferName::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetOfferNameTextLayout
// 0x0030 (0x0030 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetOfferNameTextLayout final
{
public:
	E_UIKit_ItemDescription_TextWrapType          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UIKit_ItemDescription_TextWrapType          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetOfferNameTextLayout");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout) == 0x000030, "Wrong size on WBP_ItemShopTile_Base_C_SetOfferNameTextLayout");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_byte_Variable) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_bool_Variable) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_bool_Variable_2) == 0x000003, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_bool_Variable_3) == 0x000005, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_bool_Variable_4) == 0x000006, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, Temp_bool_Variable_5) == 0x000007, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, CallFunc_IsMobileGame_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, K2Node_Select_Default) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, K2Node_Select_Default_1) == 0x000019, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, CallFunc_SelectFloat_B_ImplicitCast) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetOfferNameTextLayout, CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_SetOfferNameTextLayout::CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetPeekState
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetPeekState final
{
public:
	bool                                          IsInPeekState_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileFrontend_bIsMobileFrontend;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetPeekState) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetPeekState");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetPeekState) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetPeekState");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPeekState, IsInPeekState_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetPeekState::IsInPeekState_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPeekState, CallFunc_IsMobileFrontend_bIsMobileFrontend) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_SetPeekState::CallFunc_IsMobileFrontend_bIsMobileFrontend' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPeekState, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetPeekState::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPeekState, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetPeekState::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetPresentations
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetPresentations final
{
public:
	TArray<class UMaterialInterface*>             Presentations_0;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetPresentations) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetPresentations");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetPresentations) == 0x000010, "Wrong size on WBP_ItemShopTile_Base_C_SetPresentations");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPresentations, Presentations_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetPresentations::Presentations_0' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetPresentationsLoadingState
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetPresentationsLoadingState final
{
public:
	bool                                          IsLoading;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldClearPresentationsArray;                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetPresentationsLoadingState) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_SetPresentationsLoadingState");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetPresentationsLoadingState) == 0x000002, "Wrong size on WBP_ItemShopTile_Base_C_SetPresentationsLoadingState");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPresentationsLoadingState, IsLoading) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetPresentationsLoadingState::IsLoading' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPresentationsLoadingState, ShouldClearPresentationsArray) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_SetPresentationsLoadingState::ShouldClearPresentationsArray' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetPreviewData
// 0x0110 (0x0110 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetPreviewData final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              DescriptionVisibility;                             // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopTileSize                             TileSize_0;                                        // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      RarityColor_0;                                     // 0x0034(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Presentations_0;                                   // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Price_0;                                           // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RegularPrice_0;                                    // 0x009C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopCurrency                             Currency_0;                                        // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PriceSwitcherState                          PriceState;                                        // 0x00A1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ViolatorText_0;                                    // 0x00A8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EViolatorIntensity                            ViolatorIntensity_0;                               // 0x00C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           TagTexts_0;                                        // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CallFunc_GetPriceFormattedText_PriceText;          // 0x00D8(0x0018)()
	class FText                                   CallFunc_GetPriceFormattedText_PriceText_1;        // 0x00F0(0x0018)()
	ESlateVisibility                              CallFunc_GetStrikethroughPriceVisibility_StrikethroughPriceVisibility; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetPreviewData) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetPreviewData");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetPreviewData) == 0x000110, "Wrong size on WBP_ItemShopTile_Base_C_SetPreviewData");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, Name_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, Description) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::Description' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, DescriptionVisibility) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::DescriptionVisibility' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, TileSize_0) == 0x000031, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::TileSize_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, RarityColor_0) == 0x000034, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::RarityColor_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, Presentations_0) == 0x000088, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::Presentations_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, Price_0) == 0x000098, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::Price_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, RegularPrice_0) == 0x00009C, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::RegularPrice_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, Currency_0) == 0x0000A0, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::Currency_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, PriceState) == 0x0000A1, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::PriceState' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, ViolatorText_0) == 0x0000A8, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::ViolatorText_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, ViolatorIntensity_0) == 0x0000C0, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::ViolatorIntensity_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, TagTexts_0) == 0x0000C8, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::TagTexts_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, CallFunc_GetPriceFormattedText_PriceText) == 0x0000D8, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::CallFunc_GetPriceFormattedText_PriceText' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, CallFunc_GetPriceFormattedText_PriceText_1) == 0x0000F0, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::CallFunc_GetPriceFormattedText_PriceText_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPreviewData, CallFunc_GetStrikethroughPriceVisibility_StrikethroughPriceVisibility) == 0x000108, "Member 'WBP_ItemShopTile_Base_C_SetPreviewData::CallFunc_GetStrikethroughPriceVisibility_StrikethroughPriceVisibility' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetPrice
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetPrice final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetPrice) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetPrice");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetPrice) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetPrice");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetPrice, Value) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetPrice::Value' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetRarityStripColor
// 0x0050 (0x0050 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetRarityStripColor final
{
public:
	struct FFortColorPalette                      Color;                                             // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetRarityStripColor) == 0x000004, "Wrong alignment on WBP_ItemShopTile_Base_C_SetRarityStripColor");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetRarityStripColor) == 0x000050, "Wrong size on WBP_ItemShopTile_Base_C_SetRarityStripColor");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRarityStripColor, Color) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetRarityStripColor::Color' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetRegularPrice
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetRegularPrice final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetRegularPrice) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetRegularPrice");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetRegularPrice) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetRegularPrice");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRegularPrice, Value) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetRegularPrice::Value' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetRegularPriceVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetRegularPriceVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetRegularPriceVisibility) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_SetRegularPriceVisibility");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetRegularPriceVisibility) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_SetRegularPriceVisibility");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRegularPriceVisibility, InVisibility) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetRegularPriceVisibility::InVisibility' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetRimBrushColor
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetRimBrushColor final
{
public:
	class UCommonActionWidget*                    IconRim;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0014)()
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00C0)()
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetRimBrushColor) == 0x000010, "Wrong alignment on WBP_ItemShopTile_Base_C_SetRimBrushColor");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetRimBrushColor) == 0x0000F0, "Wrong size on WBP_ItemShopTile_Base_C_SetRimBrushColor");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRimBrushColor, IconRim) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetRimBrushColor::IconRim' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRimBrushColor, Color) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetRimBrushColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRimBrushColor, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetRimBrushColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetRimBrushColor, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetRimBrushColor::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetSubInfoText
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetSubInfoText final
{
public:
	class FText                                   SubInfoText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetSubInfoText) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetSubInfoText");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetSubInfoText) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetSubInfoText");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetSubInfoText, SubInfoText) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetSubInfoText::SubInfoText' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetTagOffsetAnimValue
// 0x0078 (0x0078 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue) == 0x000078, "Wrong size on WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, Value) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_GetDesiredSize_ReturnValue) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, K2Node_MakeStruct_Margin) == 0x000060, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000070, "Member 'WBP_ItemShopTile_Base_C_SetTagOffsetAnimValue::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetTagTexts
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetTagTexts final
{
public:
	TArray<class FText>                           TagTexts_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_TagTitle>                    TagTitles_Local;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetTagTexts) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetTagTexts");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetTagTexts) == 0x000020, "Wrong size on WBP_ItemShopTile_Base_C_SetTagTexts");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagTexts, TagTexts_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetTagTexts::TagTexts_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTagTexts, TagTitles_Local) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetTagTexts::TagTitles_Local' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetTileSize
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetTileSize final
{
public:
	struct FVector2D                              TileSize_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSizeBox_MaxDesiredWidth_ImplicitCast;  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast_1; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetTileSize) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetTileSize");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetTileSize) == 0x000098, "Wrong size on WBP_ItemShopTile_Base_C_SetTileSize");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, TileSize_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::TileSize_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, Height) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::Height' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, Width) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::Width' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000038, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast) == 0x000064, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000078, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000080, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000088, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_SetSizeBox_MaxDesiredWidth_ImplicitCast) == 0x00008C, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_SetSizeBox_MaxDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000090, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetTileSize, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast_1) == 0x000094, "Member 'WBP_ItemShopTile_Base_C_SetTileSize::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast_1' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetUnhoveredState
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetUnhoveredState final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetUnhoveredState) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetUnhoveredState");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetUnhoveredState) == 0x000018, "Wrong size on WBP_ItemShopTile_Base_C_SetUnhoveredState");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetUnhoveredState, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetUnhoveredState::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetUnhoveredState, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_SetUnhoveredState::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetUnhoveredState, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_SetUnhoveredState::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetupModularBlocks
// 0x0034 (0x0034 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetupModularBlocks final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIKitBlockTiming                      K2Node_MakeStruct_UIKitBlockTiming;                // 0x0004(0x002C)(NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetupModularBlocks) == 0x000004, "Wrong alignment on WBP_ItemShopTile_Base_C_SetupModularBlocks");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetupModularBlocks) == 0x000034, "Wrong size on WBP_ItemShopTile_Base_C_SetupModularBlocks");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetupModularBlocks, Temp_bool_Variable) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetupModularBlocks::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetupModularBlocks, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_ItemShopTile_Base_C_SetupModularBlocks::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetupModularBlocks, K2Node_MakeStruct_UIKitBlockTiming) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_SetupModularBlocks::K2Node_MakeStruct_UIKitBlockTiming' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetupModularBlocks, K2Node_Select_Default) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_SetupModularBlocks::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetViolatorIntensity
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetViolatorIntensity final
{
public:
	EViolatorIntensity                            ViolatorIntensity_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetViolatorIntensity) == 0x000001, "Wrong alignment on WBP_ItemShopTile_Base_C_SetViolatorIntensity");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetViolatorIntensity) == 0x000001, "Wrong size on WBP_ItemShopTile_Base_C_SetViolatorIntensity");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetViolatorIntensity, ViolatorIntensity_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetViolatorIntensity::ViolatorIntensity_0' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.SetViolatorText
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemShopTile_Base_C_SetViolatorText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_SetViolatorText) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_SetViolatorText");
static_assert(sizeof(WBP_ItemShopTile_Base_C_SetViolatorText) == 0x000020, "Wrong size on WBP_ItemShopTile_Base_C_SetViolatorText");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetViolatorText, Text) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_SetViolatorText::Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_SetViolatorText, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_SetViolatorText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.ShowOfferDetails
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemShopTile_Base_C_ShowOfferDetails final
{
public:
	bool                                          IsImmediate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_ShowOfferDetails) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_ShowOfferDetails");
static_assert(sizeof(WBP_ItemShopTile_Base_C_ShowOfferDetails) == 0x000010, "Wrong size on WBP_ItemShopTile_Base_C_ShowOfferDetails");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ShowOfferDetails, IsImmediate) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_ShowOfferDetails::IsImmediate' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_ShowOfferDetails, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_ShowOfferDetails::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.UpdateGradientHeight
// 0x0068 (0x0068 - 0x0000)
struct WBP_ItemShopTile_Base_C_UpdateGradientHeight final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_UpdateGradientHeight) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_UpdateGradientHeight");
static_assert(sizeof(WBP_ItemShopTile_Base_C_UpdateGradientHeight) == 0x000068, "Wrong size on WBP_ItemShopTile_Base_C_UpdateGradientHeight");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, Mid) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::Mid' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000038, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_BreakVector2D_Y_1) == 0x000050, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateGradientHeight, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000060, "Member 'WBP_ItemShopTile_Base_C_UpdateGradientHeight::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.UpdateImagesPresentations
// 0x0030 (0x0030 - 0x0000)
struct WBP_ItemShopTile_Base_C_UpdateImagesPresentations final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPresentationIndex_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_UpdateImagesPresentations");
static_assert(sizeof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations) == 0x000030, "Wrong size on WBP_ItemShopTile_Base_C_UpdateImagesPresentations");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_GetNextPresentationIndex_ReturnValue) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_GetNextPresentationIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_GetEndTime_ReturnValue) == 0x000014, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateImagesPresentations, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WBP_ItemShopTile_Base_C_UpdateImagesPresentations::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.UpdateItemLivePreview
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemShopTile_Base_C_UpdateItemLivePreview final
{
public:
	class UFortThumbnailRenderer*                 ThumbnailRendererPtr;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortItemCaptureActor*                  CaptureActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureItem_C*                      K2Node_DynamicCast_AsBP_Capture_Item;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_UpdateItemLivePreview) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_UpdateItemLivePreview");
static_assert(sizeof(WBP_ItemShopTile_Base_C_UpdateItemLivePreview) == 0x000020, "Wrong size on WBP_ItemShopTile_Base_C_UpdateItemLivePreview");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateItemLivePreview, ThumbnailRendererPtr) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_UpdateItemLivePreview::ThumbnailRendererPtr' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateItemLivePreview, CaptureActor) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_UpdateItemLivePreview::CaptureActor' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateItemLivePreview, K2Node_DynamicCast_AsBP_Capture_Item) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_UpdateItemLivePreview::K2Node_DynamicCast_AsBP_Capture_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_UpdateItemLivePreview, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_UpdateItemLivePreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.GetPriceFormattedText
// 0x0068 (0x0068 - 0x0000)
struct WBP_ItemShopTile_Base_C_GetPriceFormattedText final
{
public:
	int32                                         Price_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemShopCurrency                             Currency_0;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrencySubType;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   PriceText;                                         // 0x0018(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsCurrencyBase_ReturnValue;               // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
};
static_assert(alignof(WBP_ItemShopTile_Base_C_GetPriceFormattedText) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_GetPriceFormattedText");
static_assert(sizeof(WBP_ItemShopTile_Base_C_GetPriceFormattedText) == 0x000068, "Wrong size on WBP_ItemShopTile_Base_C_GetPriceFormattedText");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, Price_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::Price_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, Currency_0) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::Currency_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, CurrencySubType) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::CurrencySubType' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, PriceText) == 0x000018, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::PriceText' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, CallFunc_AsCurrencyBase_ReturnValue) == 0x000038, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::CallFunc_AsCurrencyBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetPriceFormattedText, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_ItemShopTile_Base_C_GetPriceFormattedText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.GetStrikethroughPriceVisibility
// 0x0014 (0x0014 - 0x0000)
struct WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility final
{
public:
	int32                                         Price_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RegularPrice_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuppressStrikethrough;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              StrikethroughPriceVisibility;                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility) == 0x000004, "Wrong alignment on WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility");
static_assert(sizeof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility) == 0x000014, "Wrong size on WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, Price_0) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::Price_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, RegularPrice_0) == 0x000004, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::RegularPrice_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, SuppressStrikethrough) == 0x000008, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::SuppressStrikethrough' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, StrikethroughPriceVisibility) == 0x000009, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::StrikethroughPriceVisibility' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, Temp_bool_Variable) == 0x00000A, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, Temp_byte_Variable) == 0x00000D, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, Temp_byte_Variable_1) == 0x00000F, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility, K2Node_Select_Default) == 0x000010, "Member 'WBP_ItemShopTile_Base_C_GetStrikethroughPriceVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemShopTile_Base.WBP_ItemShopTile_Base_C.HasTransference
// 0x0060 (0x0060 - 0x0000)
struct WBP_ItemShopTile_Base_C_HasTransference final
{
public:
	TSet<ECosmeticCompatibleMode>                 CompatibleModes;                                   // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          HasTransference_0;                                 // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECosmeticCompatibleMode                       Temp_byte_Variable;                                // 0x0051(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemShopTile_Base_C_HasTransference) == 0x000008, "Wrong alignment on WBP_ItemShopTile_Base_C_HasTransference");
static_assert(sizeof(WBP_ItemShopTile_Base_C_HasTransference) == 0x000060, "Wrong size on WBP_ItemShopTile_Base_C_HasTransference");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, CompatibleModes) == 0x000000, "Member 'WBP_ItemShopTile_Base_C_HasTransference::CompatibleModes' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, HasTransference_0) == 0x000050, "Member 'WBP_ItemShopTile_Base_C_HasTransference::HasTransference_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, Temp_byte_Variable) == 0x000051, "Member 'WBP_ItemShopTile_Base_C_HasTransference::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, CallFunc_Set_Length_ReturnValue) == 0x000054, "Member 'WBP_ItemShopTile_Base_C_HasTransference::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'WBP_ItemShopTile_Base_C_HasTransference::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, CallFunc_Set_Contains_ReturnValue) == 0x000059, "Member 'WBP_ItemShopTile_Base_C_HasTransference::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemShopTile_Base_C_HasTransference, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'WBP_ItemShopTile_Base_C_HasTransference::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

