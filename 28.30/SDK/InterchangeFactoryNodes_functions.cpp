#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InterchangeFactoryNodes

#include "Basic.hpp"

#include "InterchangeFactoryNodes_classes.hpp"
#include "InterchangeFactoryNodes_parameters.hpp"


namespace SDK
{

// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.SetCustomActorClassName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::SetCustomActorClassName(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomActorClassName");

	Params::InterchangeActorFactoryNode_SetCustomActorClassName Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.SetCustomGlobalTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       AttributeValue                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::SetCustomGlobalTransform(const struct FTransform& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomGlobalTransform");

	Params::InterchangeActorFactoryNode_SetCustomGlobalTransform Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.SetCustomLocalTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       AttributeValue                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::SetCustomLocalTransform(const struct FTransform& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLocalTransform");

	Params::InterchangeActorFactoryNode_SetCustomLocalTransform Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.SetCustomMobility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::SetCustomMobility(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMobility");

	Params::InterchangeActorFactoryNode_SetCustomMobility Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.GetCustomActorClassName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::GetCustomActorClassName(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomActorClassName");

	Params::InterchangeActorFactoryNode_GetCustomActorClassName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.GetCustomGlobalTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       AttributeValue                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::GetCustomGlobalTransform(struct FTransform* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomGlobalTransform");

	Params::InterchangeActorFactoryNode_GetCustomGlobalTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.GetCustomLocalTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       AttributeValue                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::GetCustomLocalTransform(struct FTransform* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLocalTransform");

	Params::InterchangeActorFactoryNode_GetCustomLocalTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeActorFactoryNode.GetCustomMobility
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeActorFactoryNode::GetCustomMobility(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMobility");

	Params::InterchangeActorFactoryNode_GetCustomMobility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.SetCustomFocalLength
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::SetCustomFocalLength(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomFocalLength");

	Params::InterchangePhysicalCameraFactoryNode_SetCustomFocalLength Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.SetCustomFocusMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECameraFocusMethod                      AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::SetCustomFocusMethod(const ECameraFocusMethod& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomFocusMethod");

	Params::InterchangePhysicalCameraFactoryNode_SetCustomFocusMethod Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.SetCustomSensorHeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::SetCustomSensorHeight(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSensorHeight");

	Params::InterchangePhysicalCameraFactoryNode_SetCustomSensorHeight Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.SetCustomSensorWidth
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::SetCustomSensorWidth(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSensorWidth");

	Params::InterchangePhysicalCameraFactoryNode_SetCustomSensorWidth Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.GetCustomFocalLength
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::GetCustomFocalLength(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomFocalLength");

	Params::InterchangePhysicalCameraFactoryNode_GetCustomFocalLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.GetCustomFocusMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraFocusMethod                      AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::GetCustomFocusMethod(ECameraFocusMethod* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomFocusMethod");

	Params::InterchangePhysicalCameraFactoryNode_GetCustomFocusMethod Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.GetCustomSensorHeight
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::GetCustomSensorHeight(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSensorHeight");

	Params::InterchangePhysicalCameraFactoryNode_GetCustomSensorHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicalCameraFactoryNode.GetCustomSensorWidth
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicalCameraFactoryNode::GetCustomSensorWidth(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSensorWidth");

	Params::InterchangePhysicalCameraFactoryNode_GetCustomSensorWidth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.SetCustomAspectRatio
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::SetCustomAspectRatio(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAspectRatio");

	Params::InterchangeStandardCameraFactoryNode_SetCustomAspectRatio Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.SetCustomFarClipPlane
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::SetCustomFarClipPlane(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomFarClipPlane");

	Params::InterchangeStandardCameraFactoryNode_SetCustomFarClipPlane Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.SetCustomFieldOfView
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::SetCustomFieldOfView(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomFieldOfView");

	Params::InterchangeStandardCameraFactoryNode_SetCustomFieldOfView Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.SetCustomNearClipPlane
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::SetCustomNearClipPlane(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomNearClipPlane");

	Params::InterchangeStandardCameraFactoryNode_SetCustomNearClipPlane Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.SetCustomProjectionMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECameraProjectionMode                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::SetCustomProjectionMode(const ECameraProjectionMode& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomProjectionMode");

	Params::InterchangeStandardCameraFactoryNode_SetCustomProjectionMode Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.SetCustomWidth
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::SetCustomWidth(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomWidth");

	Params::InterchangeStandardCameraFactoryNode_SetCustomWidth Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.GetCustomAspectRatio
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::GetCustomAspectRatio(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAspectRatio");

	Params::InterchangeStandardCameraFactoryNode_GetCustomAspectRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.GetCustomFarClipPlane
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::GetCustomFarClipPlane(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomFarClipPlane");

	Params::InterchangeStandardCameraFactoryNode_GetCustomFarClipPlane Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.GetCustomFieldOfView
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::GetCustomFieldOfView(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomFieldOfView");

	Params::InterchangeStandardCameraFactoryNode_GetCustomFieldOfView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.GetCustomNearClipPlane
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::GetCustomNearClipPlane(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomNearClipPlane");

	Params::InterchangeStandardCameraFactoryNode_GetCustomNearClipPlane Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.GetCustomProjectionMode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraProjectionMode                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::GetCustomProjectionMode(ECameraProjectionMode* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomProjectionMode");

	Params::InterchangeStandardCameraFactoryNode_GetCustomProjectionMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode.GetCustomWidth
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStandardCameraFactoryNode::GetCustomWidth(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomWidth");

	Params::InterchangeStandardCameraFactoryNode_GetCustomWidth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.SetCustomDecalMaterialPathName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalActorFactoryNode::SetCustomDecalMaterialPathName(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDecalMaterialPathName");

	Params::InterchangeDecalActorFactoryNode_SetCustomDecalMaterialPathName Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.SetCustomDecalSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalActorFactoryNode::SetCustomDecalSize(const struct FVector& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDecalSize");

	Params::InterchangeDecalActorFactoryNode_SetCustomDecalSize Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.SetCustomSortOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalActorFactoryNode::SetCustomSortOrder(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSortOrder");

	Params::InterchangeDecalActorFactoryNode_SetCustomSortOrder Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.GetCustomDecalMaterialPathName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalActorFactoryNode::GetCustomDecalMaterialPathName(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDecalMaterialPathName");

	Params::InterchangeDecalActorFactoryNode_GetCustomDecalMaterialPathName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.GetCustomDecalSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalActorFactoryNode::GetCustomDecalSize(struct FVector* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDecalSize");

	Params::InterchangeDecalActorFactoryNode_GetCustomDecalSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.GetCustomSortOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalActorFactoryNode::GetCustomSortOrder(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSortOrder");

	Params::InterchangeDecalActorFactoryNode_GetCustomSortOrder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalActorFactoryNode.GetObjectClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeDecalActorFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeDecalActorFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalMaterialFactoryNode.SetCustomDiffuseTexturePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalMaterialFactoryNode::SetCustomDiffuseTexturePath(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDiffuseTexturePath");

	Params::InterchangeDecalMaterialFactoryNode_SetCustomDiffuseTexturePath Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalMaterialFactoryNode.SetCustomNormalTexturePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalMaterialFactoryNode::SetCustomNormalTexturePath(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomNormalTexturePath");

	Params::InterchangeDecalMaterialFactoryNode_SetCustomNormalTexturePath Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalMaterialFactoryNode.GetCustomDiffuseTexturePath
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalMaterialFactoryNode::GetCustomDiffuseTexturePath(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDiffuseTexturePath");

	Params::InterchangeDecalMaterialFactoryNode_GetCustomDiffuseTexturePath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalMaterialFactoryNode.GetCustomNormalTexturePath
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeDecalMaterialFactoryNode::GetCustomNormalTexturePath(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomNormalTexturePath");

	Params::InterchangeDecalMaterialFactoryNode_GetCustomNormalTexturePath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeDecalMaterialFactoryNode.GetObjectClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeDecalMaterialFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeDecalMaterialFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.AddCustomAnimationTrackUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AnimationTrackUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLevelSequenceFactoryNode::AddCustomAnimationTrackUid(const class FString& AnimationTrackUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddCustomAnimationTrackUid");

	Params::InterchangeLevelSequenceFactoryNode_AddCustomAnimationTrackUid Parms{};

	Parms.AnimationTrackUid = std::move(AnimationTrackUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.RemoveCustomAnimationTrackUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AnimationTrackUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLevelSequenceFactoryNode::RemoveCustomAnimationTrackUid(const class FString& AnimationTrackUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveCustomAnimationTrackUid");

	Params::InterchangeLevelSequenceFactoryNode_RemoveCustomAnimationTrackUid Parms{};

	Parms.AnimationTrackUid = std::move(AnimationTrackUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.SetCustomFrameRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLevelSequenceFactoryNode::SetCustomFrameRate(const float& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomFrameRate");

	Params::InterchangeLevelSequenceFactoryNode_SetCustomFrameRate Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.GetCustomAnimationTrackUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutAnimationTrackUid                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeLevelSequenceFactoryNode::GetCustomAnimationTrackUid(const int32 Index_0, class FString* OutAnimationTrackUid) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAnimationTrackUid");

	Params::InterchangeLevelSequenceFactoryNode_GetCustomAnimationTrackUid Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimationTrackUid != nullptr)
		*OutAnimationTrackUid = std::move(Parms.OutAnimationTrackUid);
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.GetCustomAnimationTrackUidCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeLevelSequenceFactoryNode::GetCustomAnimationTrackUidCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAnimationTrackUidCount");

	Params::InterchangeLevelSequenceFactoryNode_GetCustomAnimationTrackUidCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.GetCustomAnimationTrackUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutAnimationTrackUids                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeLevelSequenceFactoryNode::GetCustomAnimationTrackUids(TArray<class FString>* OutAnimationTrackUids) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAnimationTrackUids");

	Params::InterchangeLevelSequenceFactoryNode_GetCustomAnimationTrackUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimationTrackUids != nullptr)
		*OutAnimationTrackUids = std::move(Parms.OutAnimationTrackUids);
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.GetCustomFrameRate
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLevelSequenceFactoryNode::GetCustomFrameRate(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomFrameRate");

	Params::InterchangeLevelSequenceFactoryNode_GetCustomFrameRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLevelSequenceFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeLevelSequenceFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeLevelSequenceFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.SetCustomIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::SetCustomIntensity(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomIntensity");

	Params::InterchangeBaseLightFactoryNode_SetCustomIntensity Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.SetCustomLightColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::SetCustomLightColor(const struct FColor& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLightColor");

	Params::InterchangeBaseLightFactoryNode_SetCustomLightColor Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.SetCustomTemperature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::SetCustomTemperature(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomTemperature");

	Params::InterchangeBaseLightFactoryNode_SetCustomTemperature Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.SetCustomUseTemperature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::SetCustomUseTemperature(bool AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseTemperature");

	Params::InterchangeBaseLightFactoryNode_SetCustomUseTemperature Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.GetCustomIntensity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::GetCustomIntensity(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomIntensity");

	Params::InterchangeBaseLightFactoryNode_GetCustomIntensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.GetCustomLightColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::GetCustomLightColor(struct FColor* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLightColor");

	Params::InterchangeBaseLightFactoryNode_GetCustomLightColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.GetCustomTemperature
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::GetCustomTemperature(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomTemperature");

	Params::InterchangeBaseLightFactoryNode_GetCustomTemperature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeBaseLightFactoryNode.GetCustomUseTemperature
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeBaseLightFactoryNode::GetCustomUseTemperature(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseTemperature");

	Params::InterchangeBaseLightFactoryNode_GetCustomUseTemperature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLightFactoryNode.SetCustomAttenuationRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLightFactoryNode::SetCustomAttenuationRadius(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAttenuationRadius");

	Params::InterchangeLightFactoryNode_SetCustomAttenuationRadius Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLightFactoryNode.SetCustomIESTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLightFactoryNode::SetCustomIESTexture(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomIESTexture");

	Params::InterchangeLightFactoryNode_SetCustomIESTexture Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLightFactoryNode.SetCustomIntensityUnits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELightUnits                             AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLightFactoryNode::SetCustomIntensityUnits(ELightUnits AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomIntensityUnits");

	Params::InterchangeLightFactoryNode_SetCustomIntensityUnits Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLightFactoryNode.GetCustomAttenuationRadius
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLightFactoryNode::GetCustomAttenuationRadius(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAttenuationRadius");

	Params::InterchangeLightFactoryNode_GetCustomAttenuationRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLightFactoryNode.GetCustomIESTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLightFactoryNode::GetCustomIESTexture(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomIESTexture");

	Params::InterchangeLightFactoryNode_GetCustomIESTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeLightFactoryNode.GetCustomIntensityUnits
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ELightUnits                             AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeLightFactoryNode::GetCustomIntensityUnits(ELightUnits* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomIntensityUnits");

	Params::InterchangeLightFactoryNode_GetCustomIntensityUnits Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeRectLightFactoryNode.SetCustomSourceHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeRectLightFactoryNode::SetCustomSourceHeight(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSourceHeight");

	Params::InterchangeRectLightFactoryNode_SetCustomSourceHeight Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeRectLightFactoryNode.SetCustomSourceWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeRectLightFactoryNode::SetCustomSourceWidth(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSourceWidth");

	Params::InterchangeRectLightFactoryNode_SetCustomSourceWidth Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeRectLightFactoryNode.GetCustomSourceHeight
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeRectLightFactoryNode::GetCustomSourceHeight(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSourceHeight");

	Params::InterchangeRectLightFactoryNode_GetCustomSourceHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeRectLightFactoryNode.GetCustomSourceWidth
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeRectLightFactoryNode::GetCustomSourceWidth(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSourceWidth");

	Params::InterchangeRectLightFactoryNode_GetCustomSourceWidth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePointLightFactoryNode.SetCustomLightFalloffExponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePointLightFactoryNode::SetCustomLightFalloffExponent(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLightFalloffExponent");

	Params::InterchangePointLightFactoryNode_SetCustomLightFalloffExponent Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePointLightFactoryNode.SetCustomUseInverseSquaredFalloff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePointLightFactoryNode::SetCustomUseInverseSquaredFalloff(bool AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseInverseSquaredFalloff");

	Params::InterchangePointLightFactoryNode_SetCustomUseInverseSquaredFalloff Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePointLightFactoryNode.GetCustomLightFalloffExponent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePointLightFactoryNode::GetCustomLightFalloffExponent(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLightFalloffExponent");

	Params::InterchangePointLightFactoryNode_GetCustomLightFalloffExponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePointLightFactoryNode.GetCustomUseInverseSquaredFalloff
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePointLightFactoryNode::GetCustomUseInverseSquaredFalloff(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseInverseSquaredFalloff");

	Params::InterchangePointLightFactoryNode_GetCustomUseInverseSquaredFalloff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSpotLightFactoryNode.SetCustomInnerConeAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSpotLightFactoryNode::SetCustomInnerConeAngle(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomInnerConeAngle");

	Params::InterchangeSpotLightFactoryNode_SetCustomInnerConeAngle Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSpotLightFactoryNode.SetCustomOuterConeAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSpotLightFactoryNode::SetCustomOuterConeAngle(float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomOuterConeAngle");

	Params::InterchangeSpotLightFactoryNode_SetCustomOuterConeAngle Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSpotLightFactoryNode.GetCustomInnerConeAngle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSpotLightFactoryNode::GetCustomInnerConeAngle(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomInnerConeAngle");

	Params::InterchangeSpotLightFactoryNode_GetCustomInnerConeAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSpotLightFactoryNode.GetCustomOuterConeAngle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSpotLightFactoryNode::GetCustomOuterConeAngle(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomOuterConeAngle");

	Params::InterchangeSpotLightFactoryNode_GetCustomOuterConeAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode.InitializePhysicsAssetNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InAssetClass                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangePhysicsAssetFactoryNode::InitializePhysicsAssetNode(const class FString& UniqueID, const class FString& DisplayLabel, const class FString& InAssetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializePhysicsAssetNode");

	Params::InterchangePhysicsAssetFactoryNode_InitializePhysicsAssetNode Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.DisplayLabel = std::move(DisplayLabel);
	Parms.InAssetClass = std::move(InAssetClass);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode.SetCustomSkeletalMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicsAssetFactoryNode::SetCustomSkeletalMeshUid(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSkeletalMeshUid");

	Params::InterchangePhysicsAssetFactoryNode_SetCustomSkeletalMeshUid Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode.GetCustomSkeletalMeshUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangePhysicsAssetFactoryNode::GetCustomSkeletalMeshUid(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSkeletalMeshUid");

	Params::InterchangePhysicsAssetFactoryNode_GetCustomSkeletalMeshUid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangePhysicsAssetFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangePhysicsAssetFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSceneVariantSetsFactoryNode.AddCustomVariantSetUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           VariantUID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSceneVariantSetsFactoryNode::AddCustomVariantSetUid(const class FString& VariantUID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddCustomVariantSetUid");

	Params::InterchangeSceneVariantSetsFactoryNode_AddCustomVariantSetUid Parms{};

	Parms.VariantUID = std::move(VariantUID);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSceneVariantSetsFactoryNode.RemoveCustomVariantSetUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           VariantUID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSceneVariantSetsFactoryNode::RemoveCustomVariantSetUid(const class FString& VariantUID)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveCustomVariantSetUid");

	Params::InterchangeSceneVariantSetsFactoryNode_RemoveCustomVariantSetUid Parms{};

	Parms.VariantUID = std::move(VariantUID);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSceneVariantSetsFactoryNode.GetCustomVariantSetUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutVariantUid                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeSceneVariantSetsFactoryNode::GetCustomVariantSetUid(const int32 Index_0, class FString* OutVariantUid) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVariantSetUid");

	Params::InterchangeSceneVariantSetsFactoryNode_GetCustomVariantSetUid Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutVariantUid != nullptr)
		*OutVariantUid = std::move(Parms.OutVariantUid);
}


// Function InterchangeFactoryNodes.InterchangeSceneVariantSetsFactoryNode.GetCustomVariantSetUidCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeSceneVariantSetsFactoryNode::GetCustomVariantSetUidCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVariantSetUidCount");

	Params::InterchangeSceneVariantSetsFactoryNode_GetCustomVariantSetUidCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSceneVariantSetsFactoryNode.GetCustomVariantSetUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutVariantUids                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeSceneVariantSetsFactoryNode::GetCustomVariantSetUids(TArray<class FString>* OutVariantUids) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVariantSetUids");

	Params::InterchangeSceneVariantSetsFactoryNode_GetCustomVariantSetUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutVariantUids != nullptr)
		*OutVariantUids = std::move(Parms.OutVariantUids);
}


// Function InterchangeFactoryNodes.InterchangeSceneVariantSetsFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeSceneVariantSetsFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeSceneVariantSetsFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.InitializeSkeletonNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InAssetClass                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeSkeletonFactoryNode::InitializeSkeletonNode(const class FString& UniqueID, const class FString& DisplayLabel, const class FString& InAssetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeSkeletonNode");

	Params::InterchangeSkeletonFactoryNode_InitializeSkeletonNode Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.DisplayLabel = std::move(DisplayLabel);
	Parms.InAssetClass = std::move(InAssetClass);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.SetCustomRootJointUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletonFactoryNode::SetCustomRootJointUid(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomRootJointUid");

	Params::InterchangeSkeletonFactoryNode_SetCustomRootJointUid Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.SetCustomSkeletalMeshFactoryNodeUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletonFactoryNode::SetCustomSkeletalMeshFactoryNodeUid(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSkeletalMeshFactoryNodeUid");

	Params::InterchangeSkeletonFactoryNode_SetCustomSkeletalMeshFactoryNodeUid Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.SetCustomUseTimeZeroForBindPose
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletonFactoryNode::SetCustomUseTimeZeroForBindPose(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseTimeZeroForBindPose");

	Params::InterchangeSkeletonFactoryNode_SetCustomUseTimeZeroForBindPose Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.GetCustomRootJointUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletonFactoryNode::GetCustomRootJointUid(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomRootJointUid");

	Params::InterchangeSkeletonFactoryNode_GetCustomRootJointUid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.GetCustomSkeletalMeshFactoryNodeUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletonFactoryNode::GetCustomSkeletalMeshFactoryNodeUid(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSkeletalMeshFactoryNodeUid");

	Params::InterchangeSkeletonFactoryNode_GetCustomSkeletalMeshFactoryNodeUid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.GetCustomUseTimeZeroForBindPose
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletonFactoryNode::GetCustomUseTimeZeroForBindPose(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseTimeZeroForBindPose");

	Params::InterchangeSkeletonFactoryNode_GetCustomUseTimeZeroForBindPose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletonFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeSkeletonFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeSkeletonFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.InitializeTextureNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InAssetName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeTextureFactoryNode::InitializeTextureNode(const class FString& UniqueID, const class FString& DisplayLabel, const class FString& InAssetName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeTextureNode");

	Params::InterchangeTextureFactoryNode_InitializeTextureNode Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.DisplayLabel = std::move(DisplayLabel);
	Parms.InAssetName = std::move(InAssetName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustBrightness
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustBrightness(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustBrightness");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustBrightness Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustBrightnessCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustBrightnessCurve(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustBrightnessCurve");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustBrightnessCurve Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustHue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustHue(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustHue");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustHue Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustMaxAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustMaxAlpha(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustMaxAlpha");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustMaxAlpha Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustMinAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustMinAlpha(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustMinAlpha");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustMinAlpha Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustRGBCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustRGBCurve(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustRGBCurve");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustRGBCurve Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustSaturation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustSaturation(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustSaturation");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustSaturation Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAdjustVibrance
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAdjustVibrance(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAdjustVibrance");

	Params::InterchangeTextureFactoryNode_SetCustomAdjustVibrance Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAllowNonPowerOfTwo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAllowNonPowerOfTwo(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAllowNonPowerOfTwo");

	Params::InterchangeTextureFactoryNode_SetCustomAllowNonPowerOfTwo Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomAlphaCoverageThresholds
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4                         AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomAlphaCoverageThresholds(const struct FVector4& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAlphaCoverageThresholds");

	Params::InterchangeTextureFactoryNode_SetCustomAlphaCoverageThresholds Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustombChromaKeyTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustombChromaKeyTexture(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustombChromaKeyTexture");

	Params::InterchangeTextureFactoryNode_SetCustombChromaKeyTexture Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustombDoScaleMipsForAlphaCoverage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustombDoScaleMipsForAlphaCoverage(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustombDoScaleMipsForAlphaCoverage");

	Params::InterchangeTextureFactoryNode_SetCustombDoScaleMipsForAlphaCoverage Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustombFlipGreenChannel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustombFlipGreenChannel(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustombFlipGreenChannel");

	Params::InterchangeTextureFactoryNode_SetCustombFlipGreenChannel Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustombPreserveBorder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustombPreserveBorder(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustombPreserveBorder");

	Params::InterchangeTextureFactoryNode_SetCustombPreserveBorder Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustombUseLegacyGamma
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustombUseLegacyGamma(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustombUseLegacyGamma");

	Params::InterchangeTextureFactoryNode_SetCustombUseLegacyGamma Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomChromaKeyColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomChromaKeyColor(const struct FColor& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomChromaKeyColor");

	Params::InterchangeTextureFactoryNode_SetCustomChromaKeyColor Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomChromaKeyThreshold
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomChromaKeyThreshold(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomChromaKeyThreshold");

	Params::InterchangeTextureFactoryNode_SetCustomChromaKeyThreshold Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomCompositePower
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomCompositePower(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomCompositePower");

	Params::InterchangeTextureFactoryNode_SetCustomCompositePower Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomCompositeTextureMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomCompositeTextureMode(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomCompositeTextureMode");

	Params::InterchangeTextureFactoryNode_SetCustomCompositeTextureMode Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomCompressionNoAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomCompressionNoAlpha(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomCompressionNoAlpha");

	Params::InterchangeTextureFactoryNode_SetCustomCompressionNoAlpha Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomCompressionQuality
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomCompressionQuality(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomCompressionQuality");

	Params::InterchangeTextureFactoryNode_SetCustomCompressionQuality Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomCompressionSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomCompressionSettings(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomCompressionSettings");

	Params::InterchangeTextureFactoryNode_SetCustomCompressionSettings Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomDeferCompression
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomDeferCompression(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDeferCompression");

	Params::InterchangeTextureFactoryNode_SetCustomDeferCompression Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomDownscale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomDownscale(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDownscale");

	Params::InterchangeTextureFactoryNode_SetCustomDownscale Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomDownscaleOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomDownscaleOptions(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDownscaleOptions");

	Params::InterchangeTextureFactoryNode_SetCustomDownscaleOptions Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomFilter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomFilter(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomFilter");

	Params::InterchangeTextureFactoryNode_SetCustomFilter Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomLODBias
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomLODBias(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLODBias");

	Params::InterchangeTextureFactoryNode_SetCustomLODBias Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomLODGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomLODGroup(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLODGroup");

	Params::InterchangeTextureFactoryNode_SetCustomLODGroup Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomLossyCompressionAmount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomLossyCompressionAmount(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLossyCompressionAmount");

	Params::InterchangeTextureFactoryNode_SetCustomLossyCompressionAmount Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomMaxTextureSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomMaxTextureSize(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMaxTextureSize");

	Params::InterchangeTextureFactoryNode_SetCustomMaxTextureSize Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomMipGenSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomMipGenSettings(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMipGenSettings");

	Params::InterchangeTextureFactoryNode_SetCustomMipGenSettings Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomMipLoadOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomMipLoadOptions(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMipLoadOptions");

	Params::InterchangeTextureFactoryNode_SetCustomMipLoadOptions Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomPaddingColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomPaddingColor(const struct FColor& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomPaddingColor");

	Params::InterchangeTextureFactoryNode_SetCustomPaddingColor Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomPowerOfTwoMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomPowerOfTwoMode(const uint8& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomPowerOfTwoMode");

	Params::InterchangeTextureFactoryNode_SetCustomPowerOfTwoMode Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomPreferCompressedSourceData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomPreferCompressedSourceData(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomPreferCompressedSourceData");

	Params::InterchangeTextureFactoryNode_SetCustomPreferCompressedSourceData Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomSRGB
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomSRGB(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSRGB");

	Params::InterchangeTextureFactoryNode_SetCustomSRGB Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomTranslatedTextureNodeUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomTranslatedTextureNodeUid(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomTranslatedTextureNodeUid");

	Params::InterchangeTextureFactoryNode_SetCustomTranslatedTextureNodeUid Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.SetCustomVirtualTextureStreaming
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::SetCustomVirtualTextureStreaming(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomVirtualTextureStreaming");

	Params::InterchangeTextureFactoryNode_SetCustomVirtualTextureStreaming Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustBrightness
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustBrightness(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustBrightness");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustBrightness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustBrightnessCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustBrightnessCurve(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustBrightnessCurve");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustBrightnessCurve Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustHue
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustHue(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustHue");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustHue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustMaxAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustMaxAlpha(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustMaxAlpha");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustMaxAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustMinAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustMinAlpha(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustMinAlpha");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustMinAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustRGBCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustRGBCurve(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustRGBCurve");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustRGBCurve Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustSaturation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustSaturation(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustSaturation");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustSaturation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAdjustVibrance
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAdjustVibrance(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAdjustVibrance");

	Params::InterchangeTextureFactoryNode_GetCustomAdjustVibrance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAllowNonPowerOfTwo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAllowNonPowerOfTwo(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAllowNonPowerOfTwo");

	Params::InterchangeTextureFactoryNode_GetCustomAllowNonPowerOfTwo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomAlphaCoverageThresholds
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector4                         AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomAlphaCoverageThresholds(struct FVector4* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAlphaCoverageThresholds");

	Params::InterchangeTextureFactoryNode_GetCustomAlphaCoverageThresholds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustombChromaKeyTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustombChromaKeyTexture(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustombChromaKeyTexture");

	Params::InterchangeTextureFactoryNode_GetCustombChromaKeyTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustombDoScaleMipsForAlphaCoverage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustombDoScaleMipsForAlphaCoverage(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustombDoScaleMipsForAlphaCoverage");

	Params::InterchangeTextureFactoryNode_GetCustombDoScaleMipsForAlphaCoverage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustombFlipGreenChannel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustombFlipGreenChannel(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustombFlipGreenChannel");

	Params::InterchangeTextureFactoryNode_GetCustombFlipGreenChannel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustombPreserveBorder
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustombPreserveBorder(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustombPreserveBorder");

	Params::InterchangeTextureFactoryNode_GetCustombPreserveBorder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustombUseLegacyGamma
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustombUseLegacyGamma(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustombUseLegacyGamma");

	Params::InterchangeTextureFactoryNode_GetCustombUseLegacyGamma Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomChromaKeyColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomChromaKeyColor(struct FColor* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomChromaKeyColor");

	Params::InterchangeTextureFactoryNode_GetCustomChromaKeyColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomChromaKeyThreshold
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomChromaKeyThreshold(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomChromaKeyThreshold");

	Params::InterchangeTextureFactoryNode_GetCustomChromaKeyThreshold Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomCompositePower
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomCompositePower(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomCompositePower");

	Params::InterchangeTextureFactoryNode_GetCustomCompositePower Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomCompositeTextureMode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomCompositeTextureMode(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomCompositeTextureMode");

	Params::InterchangeTextureFactoryNode_GetCustomCompositeTextureMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomCompressionNoAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomCompressionNoAlpha(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomCompressionNoAlpha");

	Params::InterchangeTextureFactoryNode_GetCustomCompressionNoAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomCompressionQuality
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomCompressionQuality(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomCompressionQuality");

	Params::InterchangeTextureFactoryNode_GetCustomCompressionQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomCompressionSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomCompressionSettings(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomCompressionSettings");

	Params::InterchangeTextureFactoryNode_GetCustomCompressionSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomDeferCompression
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomDeferCompression(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDeferCompression");

	Params::InterchangeTextureFactoryNode_GetCustomDeferCompression Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomDownscale
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomDownscale(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDownscale");

	Params::InterchangeTextureFactoryNode_GetCustomDownscale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomDownscaleOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomDownscaleOptions(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDownscaleOptions");

	Params::InterchangeTextureFactoryNode_GetCustomDownscaleOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomFilter
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomFilter(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomFilter");

	Params::InterchangeTextureFactoryNode_GetCustomFilter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomLODBias
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomLODBias(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLODBias");

	Params::InterchangeTextureFactoryNode_GetCustomLODBias Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomLODGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomLODGroup(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLODGroup");

	Params::InterchangeTextureFactoryNode_GetCustomLODGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomLossyCompressionAmount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomLossyCompressionAmount(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLossyCompressionAmount");

	Params::InterchangeTextureFactoryNode_GetCustomLossyCompressionAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomMaxTextureSize
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomMaxTextureSize(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMaxTextureSize");

	Params::InterchangeTextureFactoryNode_GetCustomMaxTextureSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomMipGenSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomMipGenSettings(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMipGenSettings");

	Params::InterchangeTextureFactoryNode_GetCustomMipGenSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomMipLoadOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomMipLoadOptions(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMipLoadOptions");

	Params::InterchangeTextureFactoryNode_GetCustomMipLoadOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomPaddingColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomPaddingColor(struct FColor* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomPaddingColor");

	Params::InterchangeTextureFactoryNode_GetCustomPaddingColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomPowerOfTwoMode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomPowerOfTwoMode(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomPowerOfTwoMode");

	Params::InterchangeTextureFactoryNode_GetCustomPowerOfTwoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomPreferCompressedSourceData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomPreferCompressedSourceData(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomPreferCompressedSourceData");

	Params::InterchangeTextureFactoryNode_GetCustomPreferCompressedSourceData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomSRGB
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomSRGB(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSRGB");

	Params::InterchangeTextureFactoryNode_GetCustomSRGB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomTranslatedTextureNodeUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomTranslatedTextureNodeUid(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomTranslatedTextureNodeUid");

	Params::InterchangeTextureFactoryNode_GetCustomTranslatedTextureNodeUid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetCustomVirtualTextureStreaming
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureFactoryNode::GetCustomVirtualTextureStreaming(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVirtualTextureStreaming");

	Params::InterchangeTextureFactoryNode_GetCustomVirtualTextureStreaming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeTextureFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeTextureFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DArrayFactoryNode.SetCustomAddressZ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   AttributeValue                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DArrayFactoryNode::SetCustomAddressZ(const uint8 AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAddressZ");

	Params::InterchangeTexture2DArrayFactoryNode_SetCustomAddressZ Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DArrayFactoryNode.GetCustomAddressX
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DArrayFactoryNode::GetCustomAddressX(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAddressX");

	Params::InterchangeTexture2DArrayFactoryNode_GetCustomAddressX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DArrayFactoryNode.GetCustomAddressY
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DArrayFactoryNode::GetCustomAddressY(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAddressY");

	Params::InterchangeTexture2DArrayFactoryNode_GetCustomAddressY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DArrayFactoryNode.GetCustomAddressZ
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DArrayFactoryNode::GetCustomAddressZ(uint8* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAddressZ");

	Params::InterchangeTexture2DArrayFactoryNode_GetCustomAddressZ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.SetCustomAddressX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextureAddress                         AttributeValue                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DFactoryNode::SetCustomAddressX(const ETextureAddress AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAddressX");

	Params::InterchangeTexture2DFactoryNode_SetCustomAddressX Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.SetCustomAddressY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextureAddress                         AttributeValue                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DFactoryNode::SetCustomAddressY(const ETextureAddress AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAddressY");

	Params::InterchangeTexture2DFactoryNode_SetCustomAddressY Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.SetSourceBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   BlockIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InSourceFile                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeTexture2DFactoryNode::SetSourceBlock(int32 BlockIndex, const class FString& InSourceFile)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSourceBlock");

	Params::InterchangeTexture2DFactoryNode_SetSourceBlock Parms{};

	Parms.BlockIndex = BlockIndex;
	Parms.InSourceFile = std::move(InSourceFile);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.SetSourceBlockByCoordinates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InSourceFile                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeTexture2DFactoryNode::SetSourceBlockByCoordinates(int32 X, int32 Y, const class FString& InSourceFile)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSourceBlockByCoordinates");

	Params::InterchangeTexture2DFactoryNode_SetSourceBlockByCoordinates Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.InSourceFile = std::move(InSourceFile);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.SetSourceBlocks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<int32, class FString>              InSourceBlocks                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UInterchangeTexture2DFactoryNode::SetSourceBlocks(const TMap<int32, class FString>& InSourceBlocks)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSourceBlocks");

	Params::InterchangeTexture2DFactoryNode_SetSourceBlocks Parms{};

	Parms.InSourceBlocks = std::move(InSourceBlocks);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.GetCustomAddressX
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETextureAddress                         AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DFactoryNode::GetCustomAddressX(ETextureAddress* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAddressX");

	Params::InterchangeTexture2DFactoryNode_GetCustomAddressX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.GetCustomAddressY
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETextureAddress                         AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DFactoryNode::GetCustomAddressY(ETextureAddress* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAddressY");

	Params::InterchangeTexture2DFactoryNode_GetCustomAddressY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.GetSourceBlock
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   BlockIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutSourceFile                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DFactoryNode::GetSourceBlock(int32 BlockIndex, class FString* OutSourceFile) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSourceBlock");

	Params::InterchangeTexture2DFactoryNode_GetSourceBlock Parms{};

	Parms.BlockIndex = BlockIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSourceFile != nullptr)
		*OutSourceFile = std::move(Parms.OutSourceFile);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.GetSourceBlockByCoordinates
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutSourceFile                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTexture2DFactoryNode::GetSourceBlockByCoordinates(int32 X, int32 Y, class FString* OutSourceFile) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSourceBlockByCoordinates");

	Params::InterchangeTexture2DFactoryNode_GetSourceBlockByCoordinates Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSourceFile != nullptr)
		*OutSourceFile = std::move(Parms.OutSourceFile);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTexture2DFactoryNode.GetSourceBlocks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int32, class FString>              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class FString> UInterchangeTexture2DFactoryNode::GetSourceBlocks() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSourceBlocks");

	Params::InterchangeTexture2DFactoryNode_GetSourceBlocks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode.SetCustomBrightness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureLightProfileFactoryNode::SetCustomBrightness(const float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomBrightness");

	Params::InterchangeTextureLightProfileFactoryNode_SetCustomBrightness Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode.SetCustomTextureMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureLightProfileFactoryNode::SetCustomTextureMultiplier(const float AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomTextureMultiplier");

	Params::InterchangeTextureLightProfileFactoryNode_SetCustomTextureMultiplier Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode.GetCustomBrightness
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureLightProfileFactoryNode::GetCustomBrightness(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomBrightness");

	Params::InterchangeTextureLightProfileFactoryNode_GetCustomBrightness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode.GetCustomTextureMultiplier
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeTextureLightProfileFactoryNode::GetCustomTextureMultiplier(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomTextureMultiplier");

	Params::InterchangeTextureLightProfileFactoryNode_GetCustomTextureMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.InitializeAnimSequenceNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::InitializeAnimSequenceNode(const class FString& UniqueID, const class FString& DisplayLabel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeAnimSequenceNode");

	Params::InterchangeAnimSequenceFactoryNode_InitializeAnimSequenceNode Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.DisplayLabel = std::move(DisplayLabel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.RemoveAnimatedAttributeCurveName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeCurveName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::RemoveAnimatedAttributeCurveName(const class FString& AttributeCurveName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAnimatedAttributeCurveName");

	Params::InterchangeAnimSequenceFactoryNode_RemoveAnimatedAttributeCurveName Parms{};

	Parms.AttributeCurveName = std::move(AttributeCurveName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.RemoveAnimatedAttributeStepCurveName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeStepCurveName                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::RemoveAnimatedAttributeStepCurveName(const class FString& AttributeStepCurveName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAnimatedAttributeStepCurveName");

	Params::InterchangeAnimSequenceFactoryNode_RemoveAnimatedAttributeStepCurveName Parms{};

	Parms.AttributeStepCurveName = std::move(AttributeStepCurveName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.RemoveAnimatedMaterialCurveSuffixe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MaterialCurveSuffixe                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::RemoveAnimatedMaterialCurveSuffixe(const class FString& MaterialCurveSuffixe)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAnimatedMaterialCurveSuffixe");

	Params::InterchangeAnimSequenceFactoryNode_RemoveAnimatedMaterialCurveSuffixe Parms{};

	Parms.MaterialCurveSuffixe = std::move(MaterialCurveSuffixe);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetAnimatedAttributeCurveName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeCurveName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetAnimatedAttributeCurveName(const class FString& AttributeCurveName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAnimatedAttributeCurveName");

	Params::InterchangeAnimSequenceFactoryNode_SetAnimatedAttributeCurveName Parms{};

	Parms.AttributeCurveName = std::move(AttributeCurveName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetAnimatedAttributeStepCurveName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeStepCurveName                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetAnimatedAttributeStepCurveName(const class FString& AttributeStepCurveName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAnimatedAttributeStepCurveName");

	Params::InterchangeAnimSequenceFactoryNode_SetAnimatedAttributeStepCurveName Parms{};

	Parms.AttributeStepCurveName = std::move(AttributeStepCurveName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetAnimatedMaterialCurveSuffixe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MaterialCurveSuffixe                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetAnimatedMaterialCurveSuffixe(const class FString& MaterialCurveSuffixe)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAnimatedMaterialCurveSuffixe");

	Params::InterchangeAnimSequenceFactoryNode_SetAnimatedMaterialCurveSuffixe Parms{};

	Parms.MaterialCurveSuffixe = std::move(MaterialCurveSuffixe);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetAnimationPayloadKeysForMorphTargetNodeUids
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString>      MorphTargetAnimationPayloadKeyUids                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<class FString, uint8>              MorphTargetAnimationPayloadKeyTypes                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::SetAnimationPayloadKeysForMorphTargetNodeUids(const TMap<class FString, class FString>& MorphTargetAnimationPayloadKeyUids, const TMap<class FString, uint8>& MorphTargetAnimationPayloadKeyTypes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAnimationPayloadKeysForMorphTargetNodeUids");

	Params::InterchangeAnimSequenceFactoryNode_SetAnimationPayloadKeysForMorphTargetNodeUids Parms{};

	Parms.MorphTargetAnimationPayloadKeyUids = std::move(MorphTargetAnimationPayloadKeyUids);
	Parms.MorphTargetAnimationPayloadKeyTypes = std::move(MorphTargetAnimationPayloadKeyTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetAnimationPayloadKeysForSceneNodeUids
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString>      SceneNodeAnimationPayloadKeyUids                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<class FString, uint8>              SceneNodeAnimationPayloadKeyTypes                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::SetAnimationPayloadKeysForSceneNodeUids(const TMap<class FString, class FString>& SceneNodeAnimationPayloadKeyUids, const TMap<class FString, uint8>& SceneNodeAnimationPayloadKeyTypes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetAnimationPayloadKeysForSceneNodeUids");

	Params::InterchangeAnimSequenceFactoryNode_SetAnimationPayloadKeysForSceneNodeUids Parms{};

	Parms.SceneNodeAnimationPayloadKeyUids = std::move(SceneNodeAnimationPayloadKeyUids);
	Parms.SceneNodeAnimationPayloadKeyTypes = std::move(SceneNodeAnimationPayloadKeyTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomAddCurveMetadataToSkeleton
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomAddCurveMetadataToSkeleton(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAddCurveMetadataToSkeleton");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomAddCurveMetadataToSkeleton Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomDeleteExistingCustomAttributeCurves
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomDeleteExistingCustomAttributeCurves(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDeleteExistingCustomAttributeCurves");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomDeleteExistingCustomAttributeCurves Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomDeleteExistingMorphTargetCurves
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomDeleteExistingMorphTargetCurves(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDeleteExistingMorphTargetCurves");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomDeleteExistingMorphTargetCurves Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomDeleteExistingNonCurveCustomAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomDeleteExistingNonCurveCustomAttributes(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDeleteExistingNonCurveCustomAttributes");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomDeleteExistingNonCurveCustomAttributes Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomDoNotImportCurveWithZero
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomDoNotImportCurveWithZero(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDoNotImportCurveWithZero");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomDoNotImportCurveWithZero Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomImportAttributeCurves
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomImportAttributeCurves(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportAttributeCurves");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomImportAttributeCurves Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomImportBoneTracks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomImportBoneTracks(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportBoneTracks");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomImportBoneTracks Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomImportBoneTracksRangeStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// double                                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomImportBoneTracksRangeStart(const double& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportBoneTracksRangeStart");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomImportBoneTracksRangeStart Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomImportBoneTracksRangeStop
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// double                                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomImportBoneTracksRangeStop(const double& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportBoneTracksRangeStop");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomImportBoneTracksRangeStop Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomImportBoneTracksSampleRate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// double                                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomImportBoneTracksSampleRate(const double& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportBoneTracksSampleRate");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomImportBoneTracksSampleRate Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomMaterialDriveParameterOnCustomAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomMaterialDriveParameterOnCustomAttribute(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMaterialDriveParameterOnCustomAttribute");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomMaterialDriveParameterOnCustomAttribute Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomRemoveCurveRedundantKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomRemoveCurveRedundantKeys(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomRemoveCurveRedundantKeys");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomRemoveCurveRedundantKeys Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomSkeletonFactoryNodeUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomSkeletonFactoryNodeUid(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSkeletonFactoryNodeUid");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomSkeletonFactoryNodeUid Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.SetCustomSkeletonSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::SetCustomSkeletonSoftObjectPath(const struct FSoftObjectPath& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSkeletonSoftObjectPath");

	Params::InterchangeAnimSequenceFactoryNode_SetCustomSkeletonSoftObjectPath Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedAttributeCurveName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutAttributeCurveName                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetAnimatedAttributeCurveName(const int32 Index_0, class FString* OutAttributeCurveName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedAttributeCurveName");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedAttributeCurveName Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAttributeCurveName != nullptr)
		*OutAttributeCurveName = std::move(Parms.OutAttributeCurveName);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedAttributeCurveNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutAttributeCurveNames                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetAnimatedAttributeCurveNames(TArray<class FString>* OutAttributeCurveNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedAttributeCurveNames");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedAttributeCurveNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAttributeCurveNames != nullptr)
		*OutAttributeCurveNames = std::move(Parms.OutAttributeCurveNames);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedAttributeCurveNamesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeAnimSequenceFactoryNode::GetAnimatedAttributeCurveNamesCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedAttributeCurveNamesCount");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedAttributeCurveNamesCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedAttributeStepCurveName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutAttributeStepCurveName                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetAnimatedAttributeStepCurveName(const int32 Index_0, class FString* OutAttributeStepCurveName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedAttributeStepCurveName");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedAttributeStepCurveName Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAttributeStepCurveName != nullptr)
		*OutAttributeStepCurveName = std::move(Parms.OutAttributeStepCurveName);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedAttributeStepCurveNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutAttributeStepCurveNames                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetAnimatedAttributeStepCurveNames(TArray<class FString>* OutAttributeStepCurveNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedAttributeStepCurveNames");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedAttributeStepCurveNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAttributeStepCurveNames != nullptr)
		*OutAttributeStepCurveNames = std::move(Parms.OutAttributeStepCurveNames);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedAttributeStepCurveNamesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeAnimSequenceFactoryNode::GetAnimatedAttributeStepCurveNamesCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedAttributeStepCurveNamesCount");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedAttributeStepCurveNamesCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedMaterialCurveSuffixe
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutMaterialCurveSuffixe                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetAnimatedMaterialCurveSuffixe(const int32 Index_0, class FString* OutMaterialCurveSuffixe) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedMaterialCurveSuffixe");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedMaterialCurveSuffixe Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaterialCurveSuffixe != nullptr)
		*OutMaterialCurveSuffixe = std::move(Parms.OutMaterialCurveSuffixe);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedMaterialCurveSuffixes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMaterialCurveSuffixes                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetAnimatedMaterialCurveSuffixes(TArray<class FString>* OutMaterialCurveSuffixes) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedMaterialCurveSuffixes");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedMaterialCurveSuffixes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaterialCurveSuffixes != nullptr)
		*OutMaterialCurveSuffixes = std::move(Parms.OutMaterialCurveSuffixes);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetAnimatedMaterialCurveSuffixesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeAnimSequenceFactoryNode::GetAnimatedMaterialCurveSuffixesCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnimatedMaterialCurveSuffixesCount");

	Params::InterchangeAnimSequenceFactoryNode_GetAnimatedMaterialCurveSuffixesCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomAddCurveMetadataToSkeleton
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomAddCurveMetadataToSkeleton(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAddCurveMetadataToSkeleton");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomAddCurveMetadataToSkeleton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomDeleteExistingCustomAttributeCurves
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomDeleteExistingCustomAttributeCurves(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDeleteExistingCustomAttributeCurves");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomDeleteExistingCustomAttributeCurves Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomDeleteExistingMorphTargetCurves
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomDeleteExistingMorphTargetCurves(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDeleteExistingMorphTargetCurves");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomDeleteExistingMorphTargetCurves Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomDeleteExistingNonCurveCustomAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomDeleteExistingNonCurveCustomAttributes(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDeleteExistingNonCurveCustomAttributes");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomDeleteExistingNonCurveCustomAttributes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomDoNotImportCurveWithZero
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomDoNotImportCurveWithZero(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDoNotImportCurveWithZero");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomDoNotImportCurveWithZero Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomImportAttributeCurves
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomImportAttributeCurves(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportAttributeCurves");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomImportAttributeCurves Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomImportBoneTracks
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomImportBoneTracks(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportBoneTracks");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomImportBoneTracks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomImportBoneTracksRangeStart
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomImportBoneTracksRangeStart(double* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportBoneTracksRangeStart");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomImportBoneTracksRangeStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomImportBoneTracksRangeStop
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomImportBoneTracksRangeStop(double* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportBoneTracksRangeStop");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomImportBoneTracksRangeStop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomImportBoneTracksSampleRate
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomImportBoneTracksSampleRate(double* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportBoneTracksSampleRate");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomImportBoneTracksSampleRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomMaterialDriveParameterOnCustomAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomMaterialDriveParameterOnCustomAttribute(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMaterialDriveParameterOnCustomAttribute");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomMaterialDriveParameterOnCustomAttribute Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomRemoveCurveRedundantKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomRemoveCurveRedundantKeys(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomRemoveCurveRedundantKeys");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomRemoveCurveRedundantKeys Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomSkeletonFactoryNodeUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomSkeletonFactoryNodeUid(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSkeletonFactoryNodeUid");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomSkeletonFactoryNodeUid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetCustomSkeletonSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeAnimSequenceFactoryNode::GetCustomSkeletonSoftObjectPath(struct FSoftObjectPath* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSkeletonSoftObjectPath");

	Params::InterchangeAnimSequenceFactoryNode_GetCustomSkeletonSoftObjectPath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetMorphTargetNodeAnimationPayloadKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, struct FInterchangeAnimationPayLoadKey>OutMorphTargetNodeAnimationPayloads                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetMorphTargetNodeAnimationPayloadKeys(TMap<class FString, struct FInterchangeAnimationPayLoadKey>* OutMorphTargetNodeAnimationPayloads) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMorphTargetNodeAnimationPayloadKeys");

	Params::InterchangeAnimSequenceFactoryNode_GetMorphTargetNodeAnimationPayloadKeys Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMorphTargetNodeAnimationPayloads != nullptr)
		*OutMorphTargetNodeAnimationPayloads = std::move(Parms.OutMorphTargetNodeAnimationPayloads);
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeAnimSequenceFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeAnimSequenceFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeAnimSequenceFactoryNode.GetSceneNodeAnimationPayloadKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, struct FInterchangeAnimationPayLoadKey>OutSceneNodeAnimationPayloadKeys                       (Parm, OutParm, NativeAccessSpecifierPublic)

void UInterchangeAnimSequenceFactoryNode::GetSceneNodeAnimationPayloadKeys(TMap<class FString, struct FInterchangeAnimationPayLoadKey>* OutSceneNodeAnimationPayloadKeys) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSceneNodeAnimationPayloadKeys");

	Params::InterchangeAnimSequenceFactoryNode_GetSceneNodeAnimationPayloadKeys Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSceneNodeAnimationPayloadKeys != nullptr)
		*OutSceneNodeAnimationPayloadKeys = std::move(Parms.OutSceneNodeAnimationPayloadKeys);
}


// Function InterchangeFactoryNodes.InterchangeCommonPipelineDataFactoryNode.SetBakeMeshes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UInterchangeBaseNodeContainer*    NodeContainer                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeCommonPipelineDataFactoryNode::SetBakeMeshes(const class UInterchangeBaseNodeContainer* NodeContainer, const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBakeMeshes");

	Params::InterchangeCommonPipelineDataFactoryNode_SetBakeMeshes Parms{};

	Parms.NodeContainer = NodeContainer;
	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeCommonPipelineDataFactoryNode.SetCustomGlobalOffsetTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UInterchangeBaseNodeContainer*    NodeContainer                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       AttributeValue                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeCommonPipelineDataFactoryNode::SetCustomGlobalOffsetTransform(const class UInterchangeBaseNodeContainer* NodeContainer, const struct FTransform& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomGlobalOffsetTransform");

	Params::InterchangeCommonPipelineDataFactoryNode_SetCustomGlobalOffsetTransform Parms{};

	Parms.NodeContainer = NodeContainer;
	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeCommonPipelineDataFactoryNode.GetBakeMeshes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeCommonPipelineDataFactoryNode::GetBakeMeshes(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBakeMeshes");

	Params::InterchangeCommonPipelineDataFactoryNode_GetBakeMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeCommonPipelineDataFactoryNode.GetCustomGlobalOffsetTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       AttributeValue                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeCommonPipelineDataFactoryNode::GetCustomGlobalOffsetTransform(struct FTransform* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomGlobalOffsetTransform");

	Params::InterchangeCommonPipelineDataFactoryNode_GetCustomGlobalOffsetTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToAnisotropy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToAnisotropy(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToAnisotropy");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToAnisotropy Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToBaseColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToBaseColor(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToBaseColor");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToBaseColor Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToClearCoat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToClearCoat(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToClearCoat");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToClearCoat Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToClearCoatNormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToClearCoatNormal(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToClearCoatNormal");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToClearCoatNormal Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToClearCoatRoughness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToClearCoatRoughness(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToClearCoatRoughness");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToClearCoatRoughness Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToCloth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToCloth(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToCloth");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToCloth Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToEmissiveColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToEmissiveColor(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToEmissiveColor");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToEmissiveColor Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToFuzzColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToFuzzColor(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToFuzzColor");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToFuzzColor Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToMetallic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToMetallic(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToMetallic");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToMetallic Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToNormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToNormal(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToNormal");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToNormal Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToOcclusion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToOcclusion(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToOcclusion");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToOcclusion Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToOpacity(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToOpacity");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToOpacity Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToRefraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToRefraction(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToRefraction");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToRefraction Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToRoughness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToRoughness(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToRoughness");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToRoughness Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToSpecular
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToSpecular(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToSpecular");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToSpecular Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToSubsurface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToSubsurface(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToSubsurface");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToSubsurface Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToTangent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToTangent(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToTangent");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToTangent Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectOutputToTransmissionColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectOutputToTransmissionColor(const class FString& ExpressionNodeUid, const class FString& OutputName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectOutputToTransmissionColor");

	Params::InterchangeMaterialFactoryNode_ConnectOutputToTransmissionColor Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);
	Parms.OutputName = std::move(OutputName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToAnisotropy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToAnisotropy(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToAnisotropy");

	Params::InterchangeMaterialFactoryNode_ConnectToAnisotropy Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToBaseColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToBaseColor(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToBaseColor");

	Params::InterchangeMaterialFactoryNode_ConnectToBaseColor Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToClearCoat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToClearCoat(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToClearCoat");

	Params::InterchangeMaterialFactoryNode_ConnectToClearCoat Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToClearCoatNormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToClearCoatNormal(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToClearCoatNormal");

	Params::InterchangeMaterialFactoryNode_ConnectToClearCoatNormal Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToClearCoatRoughness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToClearCoatRoughness(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToClearCoatRoughness");

	Params::InterchangeMaterialFactoryNode_ConnectToClearCoatRoughness Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToCloth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToCloth(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToCloth");

	Params::InterchangeMaterialFactoryNode_ConnectToCloth Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToEmissiveColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToEmissiveColor(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToEmissiveColor");

	Params::InterchangeMaterialFactoryNode_ConnectToEmissiveColor Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToFuzzColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToFuzzColor(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToFuzzColor");

	Params::InterchangeMaterialFactoryNode_ConnectToFuzzColor Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToMetallic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToMetallic(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToMetallic");

	Params::InterchangeMaterialFactoryNode_ConnectToMetallic Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToNormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToNormal(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToNormal");

	Params::InterchangeMaterialFactoryNode_ConnectToNormal Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToOcclusion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToOcclusion(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToOcclusion");

	Params::InterchangeMaterialFactoryNode_ConnectToOcclusion Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToOpacity(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToOpacity");

	Params::InterchangeMaterialFactoryNode_ConnectToOpacity Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToRefraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToRefraction(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToRefraction");

	Params::InterchangeMaterialFactoryNode_ConnectToRefraction Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToRoughness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToRoughness(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToRoughness");

	Params::InterchangeMaterialFactoryNode_ConnectToRoughness Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToSpecular
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToSpecular(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToSpecular");

	Params::InterchangeMaterialFactoryNode_ConnectToSpecular Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToSubsurface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToSubsurface(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToSubsurface");

	Params::InterchangeMaterialFactoryNode_ConnectToSubsurface Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToTangent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToTangent(const class FString& ExpressionNodeUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToTangent");

	Params::InterchangeMaterialFactoryNode_ConnectToTangent Parms{};

	Parms.ExpressionNodeUid = std::move(ExpressionNodeUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.ConnectToTransmissionColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::ConnectToTransmissionColor(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToTransmissionColor");

	Params::InterchangeMaterialFactoryNode_ConnectToTransmissionColor Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomBlendMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EBlendMode                              AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomBlendMode(const EBlendMode& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomBlendMode");

	Params::InterchangeMaterialFactoryNode_SetCustomBlendMode Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomOpacityMaskClipValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomOpacityMaskClipValue(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomOpacityMaskClipValue");

	Params::InterchangeMaterialFactoryNode_SetCustomOpacityMaskClipValue Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomRefractionMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ERefractionMode                         AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomRefractionMethod(const ERefractionMode& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomRefractionMethod");

	Params::InterchangeMaterialFactoryNode_SetCustomRefractionMethod Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomScreenSpaceReflections
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomScreenSpaceReflections(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomScreenSpaceReflections");

	Params::InterchangeMaterialFactoryNode_SetCustomScreenSpaceReflections Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomShadingModel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EMaterialShadingModel                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomShadingModel(const EMaterialShadingModel& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomShadingModel");

	Params::InterchangeMaterialFactoryNode_SetCustomShadingModel Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomTranslucencyLightingMode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ETranslucencyLightingMode               AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomTranslucencyLightingMode(const ETranslucencyLightingMode& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomTranslucencyLightingMode");

	Params::InterchangeMaterialFactoryNode_SetCustomTranslucencyLightingMode Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.SetCustomTwoSided
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::SetCustomTwoSided(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomTwoSided");

	Params::InterchangeMaterialFactoryNode_SetCustomTwoSided Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetAnisotropyConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetAnisotropyConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAnisotropyConnection");

	Params::InterchangeMaterialFactoryNode_GetAnisotropyConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetBaseColorConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetBaseColorConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBaseColorConnection");

	Params::InterchangeMaterialFactoryNode_GetBaseColorConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetClearCoatConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetClearCoatConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClearCoatConnection");

	Params::InterchangeMaterialFactoryNode_GetClearCoatConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetClearCoatNormalConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetClearCoatNormalConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClearCoatNormalConnection");

	Params::InterchangeMaterialFactoryNode_GetClearCoatNormalConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetClearCoatRoughnessConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetClearCoatRoughnessConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClearCoatRoughnessConnection");

	Params::InterchangeMaterialFactoryNode_GetClearCoatRoughnessConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetClothConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetClothConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClothConnection");

	Params::InterchangeMaterialFactoryNode_GetClothConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomBlendMode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBlendMode                              AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomBlendMode(EBlendMode* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomBlendMode");

	Params::InterchangeMaterialFactoryNode_GetCustomBlendMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomOpacityMaskClipValue
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomOpacityMaskClipValue(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomOpacityMaskClipValue");

	Params::InterchangeMaterialFactoryNode_GetCustomOpacityMaskClipValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomRefractionMethod
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERefractionMode                         AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomRefractionMethod(ERefractionMode* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomRefractionMethod");

	Params::InterchangeMaterialFactoryNode_GetCustomRefractionMethod Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomScreenSpaceReflections
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomScreenSpaceReflections(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomScreenSpaceReflections");

	Params::InterchangeMaterialFactoryNode_GetCustomScreenSpaceReflections Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomShadingModel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMaterialShadingModel                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomShadingModel(EMaterialShadingModel* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomShadingModel");

	Params::InterchangeMaterialFactoryNode_GetCustomShadingModel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomTranslucencyLightingMode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETranslucencyLightingMode               AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomTranslucencyLightingMode(ETranslucencyLightingMode* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomTranslucencyLightingMode");

	Params::InterchangeMaterialFactoryNode_GetCustomTranslucencyLightingMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetCustomTwoSided
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetCustomTwoSided(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomTwoSided");

	Params::InterchangeMaterialFactoryNode_GetCustomTwoSided Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetEmissiveColorConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetEmissiveColorConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetEmissiveColorConnection");

	Params::InterchangeMaterialFactoryNode_GetEmissiveColorConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetFuzzColorConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetFuzzColorConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetFuzzColorConnection");

	Params::InterchangeMaterialFactoryNode_GetFuzzColorConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetMetallicConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetMetallicConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMetallicConnection");

	Params::InterchangeMaterialFactoryNode_GetMetallicConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetNormalConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetNormalConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNormalConnection");

	Params::InterchangeMaterialFactoryNode_GetNormalConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeMaterialFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeMaterialFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetOcclusionConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetOcclusionConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOcclusionConnection");

	Params::InterchangeMaterialFactoryNode_GetOcclusionConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetOpacityConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetOpacityConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOpacityConnection");

	Params::InterchangeMaterialFactoryNode_GetOpacityConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetRefractionConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetRefractionConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRefractionConnection");

	Params::InterchangeMaterialFactoryNode_GetRefractionConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetRoughnessConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetRoughnessConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRoughnessConnection");

	Params::InterchangeMaterialFactoryNode_GetRoughnessConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetSpecularConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetSpecularConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSpecularConnection");

	Params::InterchangeMaterialFactoryNode_GetSpecularConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetSubsurfaceConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetSubsurfaceConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSubsurfaceConnection");

	Params::InterchangeMaterialFactoryNode_GetSubsurfaceConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetTangentConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetTangentConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTangentConnection");

	Params::InterchangeMaterialFactoryNode_GetTangentConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFactoryNode.GetTransmissionColorConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFactoryNode::GetTransmissionColorConnection(class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTransmissionColorConnection");

	Params::InterchangeMaterialFactoryNode_GetTransmissionColorConnection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialExpressionFactoryNode.SetCustomExpressionClassName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialExpressionFactoryNode::SetCustomExpressionClassName(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomExpressionClassName");

	Params::InterchangeMaterialExpressionFactoryNode_SetCustomExpressionClassName Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialExpressionFactoryNode.GetCustomExpressionClassName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialExpressionFactoryNode::GetCustomExpressionClassName(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomExpressionClassName");

	Params::InterchangeMaterialExpressionFactoryNode_GetCustomExpressionClassName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialInstanceFactoryNode.SetCustomInstanceClassName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialInstanceFactoryNode::SetCustomInstanceClassName(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomInstanceClassName");

	Params::InterchangeMaterialInstanceFactoryNode_SetCustomInstanceClassName Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialInstanceFactoryNode.SetCustomParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialInstanceFactoryNode::SetCustomParent(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomParent");

	Params::InterchangeMaterialInstanceFactoryNode_SetCustomParent Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialInstanceFactoryNode.GetCustomInstanceClassName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialInstanceFactoryNode::GetCustomInstanceClassName(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomInstanceClassName");

	Params::InterchangeMaterialInstanceFactoryNode_GetCustomInstanceClassName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialInstanceFactoryNode.GetCustomParent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialInstanceFactoryNode::GetCustomParent(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomParent");

	Params::InterchangeMaterialInstanceFactoryNode_GetCustomParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFunctionCallExpressionFactoryNode.SetCustomMaterialFunctionDependency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFunctionCallExpressionFactoryNode::SetCustomMaterialFunctionDependency(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMaterialFunctionDependency");

	Params::InterchangeMaterialFunctionCallExpressionFactoryNode_SetCustomMaterialFunctionDependency Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFunctionCallExpressionFactoryNode.GetCustomMaterialFunctionDependency
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFunctionCallExpressionFactoryNode::GetCustomMaterialFunctionDependency(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMaterialFunctionDependency");

	Params::InterchangeMaterialFunctionCallExpressionFactoryNode_GetCustomMaterialFunctionDependency Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFunctionFactoryNode.GetInputConnection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           InputName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ExpressionNodeUid                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutputName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMaterialFunctionFactoryNode::GetInputConnection(const class FString& InputName, class FString* ExpressionNodeUid, class FString* OutputName) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInputConnection");

	Params::InterchangeMaterialFunctionFactoryNode_GetInputConnection Parms{};

	Parms.InputName = std::move(InputName);

	UObject::ProcessEvent(Func, &Parms);

	if (ExpressionNodeUid != nullptr)
		*ExpressionNodeUid = std::move(Parms.ExpressionNodeUid);

	if (OutputName != nullptr)
		*OutputName = std::move(Parms.OutputName);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMaterialFunctionFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeMaterialFunctionFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeMaterialFunctionFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.RemoveSlotMaterialDependencyUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::RemoveSlotMaterialDependencyUid(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveSlotMaterialDependencyUid");

	Params::InterchangeMeshActorFactoryNode_RemoveSlotMaterialDependencyUid Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.SetCustomAnimationAssetUidToPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::SetCustomAnimationAssetUidToPlay(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomAnimationAssetUidToPlay");

	Params::InterchangeMeshActorFactoryNode_SetCustomAnimationAssetUidToPlay Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.SetCustomGeometricTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       AttributeValue                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::SetCustomGeometricTransform(const struct FTransform& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomGeometricTransform");

	Params::InterchangeMeshActorFactoryNode_SetCustomGeometricTransform Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.SetSlotMaterialDependencyUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MaterialDependencyUid                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::SetSlotMaterialDependencyUid(const class FString& SlotName, const class FString& MaterialDependencyUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSlotMaterialDependencyUid");

	Params::InterchangeMeshActorFactoryNode_SetSlotMaterialDependencyUid Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.MaterialDependencyUid = std::move(MaterialDependencyUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.GetCustomAnimationAssetUidToPlay
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::GetCustomAnimationAssetUidToPlay(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomAnimationAssetUidToPlay");

	Params::InterchangeMeshActorFactoryNode_GetCustomAnimationAssetUidToPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.GetCustomGeometricTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       AttributeValue                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::GetCustomGeometricTransform(struct FTransform* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomGeometricTransform");

	Params::InterchangeMeshActorFactoryNode_GetCustomGeometricTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.GetSlotMaterialDependencies
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, class FString>      OutMaterialDependencies                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UInterchangeMeshActorFactoryNode::GetSlotMaterialDependencies(TMap<class FString, class FString>* OutMaterialDependencies) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlotMaterialDependencies");

	Params::InterchangeMeshActorFactoryNode_GetSlotMaterialDependencies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaterialDependencies != nullptr)
		*OutMaterialDependencies = std::move(Parms.OutMaterialDependencies);
}


// Function InterchangeFactoryNodes.InterchangeMeshActorFactoryNode.GetSlotMaterialDependencyUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutMaterialDependency                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshActorFactoryNode::GetSlotMaterialDependencyUid(const class FString& SlotName, class FString* OutMaterialDependency) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlotMaterialDependencyUid");

	Params::InterchangeMeshActorFactoryNode_GetSlotMaterialDependencyUid Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaterialDependency != nullptr)
		*OutMaterialDependency = std::move(Parms.OutMaterialDependency);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.AddLodDataUniqueId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LodDataUniqueId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::AddLodDataUniqueId(const class FString& LodDataUniqueId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddLodDataUniqueId");

	Params::InterchangeMeshFactoryNode_AddLodDataUniqueId Parms{};

	Parms.LodDataUniqueId = std::move(LodDataUniqueId);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.RemoveLodDataUniqueId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LodDataUniqueId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::RemoveLodDataUniqueId(const class FString& LodDataUniqueId)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveLodDataUniqueId");

	Params::InterchangeMeshFactoryNode_RemoveLodDataUniqueId Parms{};

	Parms.LodDataUniqueId = std::move(LodDataUniqueId);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.RemoveSlotMaterialDependencyUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::RemoveSlotMaterialDependencyUid(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveSlotMaterialDependencyUid");

	Params::InterchangeMeshFactoryNode_RemoveSlotMaterialDependencyUid Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomComputeWeightedNormals
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomComputeWeightedNormals(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomComputeWeightedNormals");

	Params::InterchangeMeshFactoryNode_SetCustomComputeWeightedNormals Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomLODGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomLODGroup(const class FName& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomLODGroup");

	Params::InterchangeMeshFactoryNode_SetCustomLODGroup Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomRecomputeNormals
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomRecomputeNormals(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomRecomputeNormals");

	Params::InterchangeMeshFactoryNode_SetCustomRecomputeNormals Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomRecomputeTangents
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomRecomputeTangents(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomRecomputeTangents");

	Params::InterchangeMeshFactoryNode_SetCustomRecomputeTangents Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomRemoveDegenerates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomRemoveDegenerates(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomRemoveDegenerates");

	Params::InterchangeMeshFactoryNode_SetCustomRemoveDegenerates Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomUseBackwardsCompatibleF16TruncUVs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomUseBackwardsCompatibleF16TruncUVs(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseBackwardsCompatibleF16TruncUVs");

	Params::InterchangeMeshFactoryNode_SetCustomUseBackwardsCompatibleF16TruncUVs Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomUseFullPrecisionUVs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomUseFullPrecisionUVs(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseFullPrecisionUVs");

	Params::InterchangeMeshFactoryNode_SetCustomUseFullPrecisionUVs Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomUseHighPrecisionTangentBasis
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomUseHighPrecisionTangentBasis(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseHighPrecisionTangentBasis");

	Params::InterchangeMeshFactoryNode_SetCustomUseHighPrecisionTangentBasis Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomUseMikkTSpace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomUseMikkTSpace(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseMikkTSpace");

	Params::InterchangeMeshFactoryNode_SetCustomUseMikkTSpace Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomVertexColorIgnore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomVertexColorIgnore(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomVertexColorIgnore");

	Params::InterchangeMeshFactoryNode_SetCustomVertexColorIgnore Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomVertexColorOverride
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomVertexColorOverride(const struct FColor& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomVertexColorOverride");

	Params::InterchangeMeshFactoryNode_SetCustomVertexColorOverride Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetCustomVertexColorReplace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetCustomVertexColorReplace(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomVertexColorReplace");

	Params::InterchangeMeshFactoryNode_SetCustomVertexColorReplace Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.SetSlotMaterialDependencyUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MaterialDependencyUid                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::SetSlotMaterialDependencyUid(const class FString& SlotName, const class FString& MaterialDependencyUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSlotMaterialDependencyUid");

	Params::InterchangeMeshFactoryNode_SetSlotMaterialDependencyUid Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.MaterialDependencyUid = std::move(MaterialDependencyUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomComputeWeightedNormals
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomComputeWeightedNormals(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomComputeWeightedNormals");

	Params::InterchangeMeshFactoryNode_GetCustomComputeWeightedNormals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomLODGroup
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomLODGroup(class FName* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomLODGroup");

	Params::InterchangeMeshFactoryNode_GetCustomLODGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomRecomputeNormals
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomRecomputeNormals(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomRecomputeNormals");

	Params::InterchangeMeshFactoryNode_GetCustomRecomputeNormals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomRecomputeTangents
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomRecomputeTangents(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomRecomputeTangents");

	Params::InterchangeMeshFactoryNode_GetCustomRecomputeTangents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomRemoveDegenerates
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomRemoveDegenerates(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomRemoveDegenerates");

	Params::InterchangeMeshFactoryNode_GetCustomRemoveDegenerates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomUseBackwardsCompatibleF16TruncUVs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomUseBackwardsCompatibleF16TruncUVs(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseBackwardsCompatibleF16TruncUVs");

	Params::InterchangeMeshFactoryNode_GetCustomUseBackwardsCompatibleF16TruncUVs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomUseFullPrecisionUVs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomUseFullPrecisionUVs(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseFullPrecisionUVs");

	Params::InterchangeMeshFactoryNode_GetCustomUseFullPrecisionUVs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomUseHighPrecisionTangentBasis
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomUseHighPrecisionTangentBasis(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseHighPrecisionTangentBasis");

	Params::InterchangeMeshFactoryNode_GetCustomUseHighPrecisionTangentBasis Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomUseMikkTSpace
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomUseMikkTSpace(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseMikkTSpace");

	Params::InterchangeMeshFactoryNode_GetCustomUseMikkTSpace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomVertexColorIgnore
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomVertexColorIgnore(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVertexColorIgnore");

	Params::InterchangeMeshFactoryNode_GetCustomVertexColorIgnore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomVertexColorOverride
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomVertexColorOverride(struct FColor* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVertexColorOverride");

	Params::InterchangeMeshFactoryNode_GetCustomVertexColorOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetCustomVertexColorReplace
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetCustomVertexColorReplace(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomVertexColorReplace");

	Params::InterchangeMeshFactoryNode_GetCustomVertexColorReplace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetLodDataCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeMeshFactoryNode::GetLodDataCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLodDataCount");

	Params::InterchangeMeshFactoryNode_GetLodDataCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetLodDataUniqueIds
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutLodDataUniqueIds                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeMeshFactoryNode::GetLodDataUniqueIds(TArray<class FString>* OutLodDataUniqueIds) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLodDataUniqueIds");

	Params::InterchangeMeshFactoryNode_GetLodDataUniqueIds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLodDataUniqueIds != nullptr)
		*OutLodDataUniqueIds = std::move(Parms.OutLodDataUniqueIds);
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetSlotMaterialDependencies
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, class FString>      OutMaterialDependencies                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UInterchangeMeshFactoryNode::GetSlotMaterialDependencies(TMap<class FString, class FString>* OutMaterialDependencies) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlotMaterialDependencies");

	Params::InterchangeMeshFactoryNode_GetSlotMaterialDependencies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaterialDependencies != nullptr)
		*OutMaterialDependencies = std::move(Parms.OutMaterialDependencies);
}


// Function InterchangeFactoryNodes.InterchangeMeshFactoryNode.GetSlotMaterialDependencyUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutMaterialDependency                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeMeshFactoryNode::GetSlotMaterialDependencyUid(const class FString& SlotName, class FString* OutMaterialDependency) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSlotMaterialDependencyUid");

	Params::InterchangeMeshFactoryNode_GetSlotMaterialDependencyUid Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);

	if (OutMaterialDependency != nullptr)
		*OutMaterialDependency = std::move(Parms.OutMaterialDependency);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.InitializeSkeletalMeshNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InAssetClass                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeSkeletalMeshFactoryNode::InitializeSkeletalMeshNode(const class FString& UniqueID, const class FString& DisplayLabel, const class FString& InAssetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeSkeletalMeshNode");

	Params::InterchangeSkeletalMeshFactoryNode_InitializeSkeletalMeshNode Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.DisplayLabel = std::move(DisplayLabel);
	Parms.InAssetClass = std::move(InAssetClass);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomBoneInfluenceLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomBoneInfluenceLimit(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomBoneInfluenceLimit");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomBoneInfluenceLimit Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomCreatePhysicsAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomCreatePhysicsAsset(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomCreatePhysicsAsset");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomCreatePhysicsAsset Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomImportContentType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EInterchangeSkeletalMeshContentType     AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomImportContentType(const EInterchangeSkeletalMeshContentType& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportContentType");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomImportContentType Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomImportMorphTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomImportMorphTarget(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportMorphTarget");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomImportMorphTarget Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomImportVertexAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomImportVertexAttributes(const bool& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomImportVertexAttributes");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomImportVertexAttributes Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomMorphThresholdPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomMorphThresholdPosition(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMorphThresholdPosition");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomMorphThresholdPosition Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomPhysicAssetSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomPhysicAssetSoftObjectPath(const struct FSoftObjectPath& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomPhysicAssetSoftObjectPath");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomPhysicAssetSoftObjectPath Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomSkeletonSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomSkeletonSoftObjectPath(const struct FSoftObjectPath& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSkeletonSoftObjectPath");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomSkeletonSoftObjectPath Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomThresholdPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomThresholdPosition(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomThresholdPosition");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomThresholdPosition Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomThresholdTangentNormal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomThresholdTangentNormal(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomThresholdTangentNormal");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomThresholdTangentNormal Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomThresholdUV
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomThresholdUV(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomThresholdUV");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomThresholdUV Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.SetCustomUseHighPrecisionSkinWeights
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::SetCustomUseHighPrecisionSkinWeights(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomUseHighPrecisionSkinWeights");

	Params::InterchangeSkeletalMeshFactoryNode_SetCustomUseHighPrecisionSkinWeights Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomBoneInfluenceLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomBoneInfluenceLimit(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomBoneInfluenceLimit");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomBoneInfluenceLimit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomCreatePhysicsAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomCreatePhysicsAsset(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomCreatePhysicsAsset");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomCreatePhysicsAsset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomImportContentType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EInterchangeSkeletalMeshContentType     AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomImportContentType(EInterchangeSkeletalMeshContentType* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportContentType");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomImportContentType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomImportMorphTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomImportMorphTarget(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportMorphTarget");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomImportMorphTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomImportVertexAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomImportVertexAttributes(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomImportVertexAttributes");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomImportVertexAttributes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomMorphThresholdPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomMorphThresholdPosition(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMorphThresholdPosition");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomMorphThresholdPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomPhysicAssetSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomPhysicAssetSoftObjectPath(struct FSoftObjectPath* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomPhysicAssetSoftObjectPath");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomPhysicAssetSoftObjectPath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomSkeletonSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomSkeletonSoftObjectPath(struct FSoftObjectPath* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSkeletonSoftObjectPath");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomSkeletonSoftObjectPath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomThresholdPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomThresholdPosition(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomThresholdPosition");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomThresholdPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomThresholdTangentNormal
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomThresholdTangentNormal(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomThresholdTangentNormal");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomThresholdTangentNormal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomThresholdUV
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomThresholdUV(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomThresholdUV");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomThresholdUV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetCustomUseHighPrecisionSkinWeights
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshFactoryNode::GetCustomUseHighPrecisionSkinWeights(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomUseHighPrecisionSkinWeights");

	Params::InterchangeSkeletalMeshFactoryNode_GetCustomUseHighPrecisionSkinWeights Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeSkeletalMeshFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeSkeletalMeshFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.AddMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshLodDataNode::AddMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMeshUid");

	Params::InterchangeSkeletalMeshLodDataNode_AddMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.RemoveAllMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshLodDataNode::RemoveAllMeshes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllMeshes");

	Params::InterchangeSkeletalMeshLodDataNode_RemoveAllMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.RemoveMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshLodDataNode::RemoveMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveMeshUid");

	Params::InterchangeSkeletalMeshLodDataNode_RemoveMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.SetCustomSkeletonUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttributeValue                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshLodDataNode::SetCustomSkeletonUid(const class FString& AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSkeletonUid");

	Params::InterchangeSkeletalMeshLodDataNode_SetCustomSkeletonUid Parms{};

	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.GetCustomSkeletonUid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeSkeletalMeshLodDataNode::GetCustomSkeletonUid(class FString* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSkeletonUid");

	Params::InterchangeSkeletalMeshLodDataNode_GetCustomSkeletonUid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.GetMeshUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMeshNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeSkeletalMeshLodDataNode::GetMeshUids(TArray<class FString>* OutMeshNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMeshUids");

	Params::InterchangeSkeletalMeshLodDataNode_GetMeshUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMeshNames != nullptr)
		*OutMeshNames = std::move(Parms.OutMeshNames);
}


// Function InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode.GetMeshUidsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeSkeletalMeshLodDataNode::GetMeshUidsCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMeshUidsCount");

	Params::InterchangeSkeletalMeshLodDataNode_GetMeshUidsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.AddSocketUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SocketUid                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::AddSocketUid(const class FString& SocketUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddSocketUid");

	Params::InterchangeStaticMeshFactoryNode_AddSocketUid Parms{};

	Parms.SocketUid = std::move(SocketUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.AddSocketUids
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InSocketUids                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::AddSocketUids(const TArray<class FString>& InSocketUids)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddSocketUids");

	Params::InterchangeStaticMeshFactoryNode_AddSocketUids Parms{};

	Parms.InSocketUids = std::move(InSocketUids);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.InitializeStaticMeshNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InAssetClass                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshFactoryNode::InitializeStaticMeshNode(const class FString& UniqueID, const class FString& DisplayLabel, const class FString& InAssetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("InitializeStaticMeshNode");

	Params::InterchangeStaticMeshFactoryNode_InitializeStaticMeshNode Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.DisplayLabel = std::move(DisplayLabel);
	Parms.InAssetClass = std::move(InAssetClass);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.RemoveSocketUd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SocketUid                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::RemoveSocketUd(const class FString& SocketUid)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveSocketUd");

	Params::InterchangeStaticMeshFactoryNode_RemoveSocketUd Parms{};

	Parms.SocketUid = std::move(SocketUid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomBuildNanite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomBuildNanite(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomBuildNanite");

	Params::InterchangeStaticMeshFactoryNode_SetCustomBuildNanite Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomBuildReversedIndexBuffer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomBuildReversedIndexBuffer(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomBuildReversedIndexBuffer");

	Params::InterchangeStaticMeshFactoryNode_SetCustomBuildReversedIndexBuffer Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomBuildScale3D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomBuildScale3D(const struct FVector& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomBuildScale3D");

	Params::InterchangeStaticMeshFactoryNode_SetCustomBuildScale3D Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomDistanceFieldReplacementMesh
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomDistanceFieldReplacementMesh(const struct FSoftObjectPath& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDistanceFieldReplacementMesh");

	Params::InterchangeStaticMeshFactoryNode_SetCustomDistanceFieldReplacementMesh Parms{};

	Parms.AttributeValue = std::move(AttributeValue);
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomDistanceFieldResolutionScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomDistanceFieldResolutionScale(const float& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDistanceFieldResolutionScale");

	Params::InterchangeStaticMeshFactoryNode_SetCustomDistanceFieldResolutionScale Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomDstLightmapIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomDstLightmapIndex(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomDstLightmapIndex");

	Params::InterchangeStaticMeshFactoryNode_SetCustomDstLightmapIndex Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomGenerateDistanceFieldAsIfTwoSided
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomGenerateDistanceFieldAsIfTwoSided(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomGenerateDistanceFieldAsIfTwoSided");

	Params::InterchangeStaticMeshFactoryNode_SetCustomGenerateDistanceFieldAsIfTwoSided Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomGenerateLightmapUVs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomGenerateLightmapUVs(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomGenerateLightmapUVs");

	Params::InterchangeStaticMeshFactoryNode_SetCustomGenerateLightmapUVs Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomMaxLumenMeshCards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomMaxLumenMeshCards(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMaxLumenMeshCards");

	Params::InterchangeStaticMeshFactoryNode_SetCustomMaxLumenMeshCards Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomMinLightmapResolution
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomMinLightmapResolution(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomMinLightmapResolution");

	Params::InterchangeStaticMeshFactoryNode_SetCustomMinLightmapResolution Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomSrcLightmapIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomSrcLightmapIndex(const int32& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSrcLightmapIndex");

	Params::InterchangeStaticMeshFactoryNode_SetCustomSrcLightmapIndex Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.SetCustomSupportFaceRemap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddApplyDelegate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::SetCustomSupportFaceRemap(const bool& AttributeValue, bool bAddApplyDelegate)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCustomSupportFaceRemap");

	Params::InterchangeStaticMeshFactoryNode_SetCustomSupportFaceRemap Parms{};

	Parms.AttributeValue = AttributeValue;
	Parms.bAddApplyDelegate = bAddApplyDelegate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomBuildNanite
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomBuildNanite(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomBuildNanite");

	Params::InterchangeStaticMeshFactoryNode_GetCustomBuildNanite Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomBuildReversedIndexBuffer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomBuildReversedIndexBuffer(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomBuildReversedIndexBuffer");

	Params::InterchangeStaticMeshFactoryNode_GetCustomBuildReversedIndexBuffer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomBuildScale3D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomBuildScale3D(struct FVector* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomBuildScale3D");

	Params::InterchangeStaticMeshFactoryNode_GetCustomBuildScale3D Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomDistanceFieldReplacementMesh
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSoftObjectPath                  AttributeValue                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomDistanceFieldReplacementMesh(struct FSoftObjectPath* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDistanceFieldReplacementMesh");

	Params::InterchangeStaticMeshFactoryNode_GetCustomDistanceFieldReplacementMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = std::move(Parms.AttributeValue);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomDistanceFieldResolutionScale
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomDistanceFieldResolutionScale(float* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDistanceFieldResolutionScale");

	Params::InterchangeStaticMeshFactoryNode_GetCustomDistanceFieldResolutionScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomDstLightmapIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomDstLightmapIndex(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomDstLightmapIndex");

	Params::InterchangeStaticMeshFactoryNode_GetCustomDstLightmapIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomGenerateDistanceFieldAsIfTwoSided
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomGenerateDistanceFieldAsIfTwoSided(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomGenerateDistanceFieldAsIfTwoSided");

	Params::InterchangeStaticMeshFactoryNode_GetCustomGenerateDistanceFieldAsIfTwoSided Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomGenerateLightmapUVs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomGenerateLightmapUVs(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomGenerateLightmapUVs");

	Params::InterchangeStaticMeshFactoryNode_GetCustomGenerateLightmapUVs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomMaxLumenMeshCards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomMaxLumenMeshCards(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMaxLumenMeshCards");

	Params::InterchangeStaticMeshFactoryNode_GetCustomMaxLumenMeshCards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomMinLightmapResolution
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomMinLightmapResolution(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomMinLightmapResolution");

	Params::InterchangeStaticMeshFactoryNode_GetCustomMinLightmapResolution Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomSrcLightmapIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomSrcLightmapIndex(int32* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSrcLightmapIndex");

	Params::InterchangeStaticMeshFactoryNode_GetCustomSrcLightmapIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetCustomSupportFaceRemap
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshFactoryNode::GetCustomSupportFaceRemap(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCustomSupportFaceRemap");

	Params::InterchangeStaticMeshFactoryNode_GetCustomSupportFaceRemap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetObjectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UInterchangeStaticMeshFactoryNode::GetObjectClass() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetObjectClass");

	Params::InterchangeStaticMeshFactoryNode_GetObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetSocketUidCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeStaticMeshFactoryNode::GetSocketUidCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSocketUidCount");

	Params::InterchangeStaticMeshFactoryNode_GetSocketUidCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshFactoryNode.GetSocketUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutSocketUids                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshFactoryNode::GetSocketUids(TArray<class FString>* OutSocketUids) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSocketUids");

	Params::InterchangeStaticMeshFactoryNode_GetSocketUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSocketUids != nullptr)
		*OutSocketUids = std::move(Parms.OutSocketUids);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.AddBoxCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::AddBoxCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddBoxCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_AddBoxCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.AddCapsuleCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::AddCapsuleCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddCapsuleCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_AddCapsuleCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.AddConvexCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::AddConvexCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddConvexCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_AddConvexCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.AddMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::AddMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddMeshUid");

	Params::InterchangeStaticMeshLodDataNode_AddMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.AddSphereCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::AddSphereCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddSphereCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_AddSphereCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveAllBoxCollisionMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveAllBoxCollisionMeshes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllBoxCollisionMeshes");

	Params::InterchangeStaticMeshLodDataNode_RemoveAllBoxCollisionMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveAllCapsuleCollisionMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveAllCapsuleCollisionMeshes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllCapsuleCollisionMeshes");

	Params::InterchangeStaticMeshLodDataNode_RemoveAllCapsuleCollisionMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveAllConvexCollisionMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveAllConvexCollisionMeshes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllConvexCollisionMeshes");

	Params::InterchangeStaticMeshLodDataNode_RemoveAllConvexCollisionMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveAllMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveAllMeshes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllMeshes");

	Params::InterchangeStaticMeshLodDataNode_RemoveAllMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveAllSphereCollisionMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveAllSphereCollisionMeshes()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveAllSphereCollisionMeshes");

	Params::InterchangeStaticMeshLodDataNode_RemoveAllSphereCollisionMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveBoxCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveBoxCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveBoxCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_RemoveBoxCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveCapsuleCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveCapsuleCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveCapsuleCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_RemoveCapsuleCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveConvexCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveConvexCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveConvexCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_RemoveConvexCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveMeshUid");

	Params::InterchangeStaticMeshLodDataNode_RemoveMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.RemoveSphereCollisionMeshUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MeshName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::RemoveSphereCollisionMeshUid(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RemoveSphereCollisionMeshUid");

	Params::InterchangeStaticMeshLodDataNode_RemoveSphereCollisionMeshUid Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.SetImportCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::SetImportCollision(bool AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetImportCollision");

	Params::InterchangeStaticMeshLodDataNode_SetImportCollision Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.SetOneConvexHullPerUCX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AttributeValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::SetOneConvexHullPerUCX(bool AttributeValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetOneConvexHullPerUCX");

	Params::InterchangeStaticMeshLodDataNode_SetOneConvexHullPerUCX Parms{};

	Parms.AttributeValue = AttributeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetBoxCollisionMeshUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMeshNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshLodDataNode::GetBoxCollisionMeshUids(TArray<class FString>* OutMeshNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBoxCollisionMeshUids");

	Params::InterchangeStaticMeshLodDataNode_GetBoxCollisionMeshUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMeshNames != nullptr)
		*OutMeshNames = std::move(Parms.OutMeshNames);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetBoxCollisionMeshUidsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeStaticMeshLodDataNode::GetBoxCollisionMeshUidsCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBoxCollisionMeshUidsCount");

	Params::InterchangeStaticMeshLodDataNode_GetBoxCollisionMeshUidsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetCapsuleCollisionMeshUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMeshNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshLodDataNode::GetCapsuleCollisionMeshUids(TArray<class FString>* OutMeshNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCapsuleCollisionMeshUids");

	Params::InterchangeStaticMeshLodDataNode_GetCapsuleCollisionMeshUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMeshNames != nullptr)
		*OutMeshNames = std::move(Parms.OutMeshNames);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetCapsuleCollisionMeshUidsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeStaticMeshLodDataNode::GetCapsuleCollisionMeshUidsCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCapsuleCollisionMeshUidsCount");

	Params::InterchangeStaticMeshLodDataNode_GetCapsuleCollisionMeshUidsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetConvexCollisionMeshUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMeshNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshLodDataNode::GetConvexCollisionMeshUids(TArray<class FString>* OutMeshNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetConvexCollisionMeshUids");

	Params::InterchangeStaticMeshLodDataNode_GetConvexCollisionMeshUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMeshNames != nullptr)
		*OutMeshNames = std::move(Parms.OutMeshNames);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetConvexCollisionMeshUidsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeStaticMeshLodDataNode::GetConvexCollisionMeshUidsCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetConvexCollisionMeshUidsCount");

	Params::InterchangeStaticMeshLodDataNode_GetConvexCollisionMeshUidsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetImportCollision
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::GetImportCollision(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetImportCollision");

	Params::InterchangeStaticMeshLodDataNode_GetImportCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetMeshUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMeshNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshLodDataNode::GetMeshUids(TArray<class FString>* OutMeshNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMeshUids");

	Params::InterchangeStaticMeshLodDataNode_GetMeshUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMeshNames != nullptr)
		*OutMeshNames = std::move(Parms.OutMeshNames);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetMeshUidsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeStaticMeshLodDataNode::GetMeshUidsCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMeshUidsCount");

	Params::InterchangeStaticMeshLodDataNode_GetMeshUidsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetOneConvexHullPerUCX
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    AttributeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInterchangeStaticMeshLodDataNode::GetOneConvexHullPerUCX(bool* AttributeValue) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetOneConvexHullPerUCX");

	Params::InterchangeStaticMeshLodDataNode_GetOneConvexHullPerUCX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttributeValue != nullptr)
		*AttributeValue = Parms.AttributeValue;

	return Parms.ReturnValue;
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetSphereCollisionMeshUids
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutMeshNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInterchangeStaticMeshLodDataNode::GetSphereCollisionMeshUids(TArray<class FString>* OutMeshNames) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSphereCollisionMeshUids");

	Params::InterchangeStaticMeshLodDataNode_GetSphereCollisionMeshUids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMeshNames != nullptr)
		*OutMeshNames = std::move(Parms.OutMeshNames);
}


// Function InterchangeFactoryNodes.InterchangeStaticMeshLodDataNode.GetSphereCollisionMeshUidsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInterchangeStaticMeshLodDataNode::GetSphereCollisionMeshUidsCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSphereCollisionMeshUidsCount");

	Params::InterchangeStaticMeshLodDataNode_GetSphereCollisionMeshUidsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

