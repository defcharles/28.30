#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ErrorInfoFlag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ErrorInfoFlag.ErrorInfoFlag_C
// 0x0048 (0x0308 - 0x02C0)
class UErrorInfoFlag_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_ErrorBG;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ErrorBG_Accent;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OptionalIcon;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_UserInformation;                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_Mobile;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           AccentColor;                                       // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     IconMaterial;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_ErrorInfoFlag(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void UpdateAccentColor(const struct FLinearColor& Color);
	void UpdateIconMaterial(class UMaterialInterface* Material);
	void UpdateText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ErrorInfoFlag_C">();
	}
	static class UErrorInfoFlag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UErrorInfoFlag_C>();
	}
};
static_assert(alignof(UErrorInfoFlag_C) == 0x000008, "Wrong alignment on UErrorInfoFlag_C");
static_assert(sizeof(UErrorInfoFlag_C) == 0x000308, "Wrong size on UErrorInfoFlag_C");
static_assert(offsetof(UErrorInfoFlag_C, UberGraphFrame) == 0x0002C0, "Member 'UErrorInfoFlag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, Image_ErrorBG) == 0x0002C8, "Member 'UErrorInfoFlag_C::Image_ErrorBG' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, Image_ErrorBG_Accent) == 0x0002D0, "Member 'UErrorInfoFlag_C::Image_ErrorBG_Accent' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, OptionalIcon) == 0x0002D8, "Member 'UErrorInfoFlag_C::OptionalIcon' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, RichText_UserInformation) == 0x0002E0, "Member 'UErrorInfoFlag_C::RichText_UserInformation' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, ScaleBox_Mobile) == 0x0002E8, "Member 'UErrorInfoFlag_C::ScaleBox_Mobile' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, AccentColor) == 0x0002F0, "Member 'UErrorInfoFlag_C::AccentColor' has a wrong offset!");
static_assert(offsetof(UErrorInfoFlag_C, IconMaterial) == 0x000300, "Member 'UErrorInfoFlag_C::IconMaterial' has a wrong offset!");

}

