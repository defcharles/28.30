#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortVariantOptionDynamicRow

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged");
static_assert(sizeof(FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged");
static_assert(offsetof(FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged");
static_assert(sizeof(FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged");
static_assert(offsetof(FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.CreateRow
// 0x0060 (0x0060 - 0x0000)
struct FortVariantOptionDynamicRow_C_CreateRow final
{
public:
	ECosmeticVariantRowType                       RowType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECosmeticVariantRowType                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_CreateRow) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_CreateRow");
static_assert(sizeof(FortVariantOptionDynamicRow_C_CreateRow) == 0x000060, "Wrong size on FortVariantOptionDynamicRow_C_CreateRow");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, RowType) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_CreateRow::RowType' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_byte_Variable) == 0x000001, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable) == 0x000008, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable_1) == 0x000010, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable_2) == 0x000018, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable_3) == 0x000020, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable_4) == 0x000028, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable_5) == 0x000030, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, Temp_class_Variable_6) == 0x000038, "Member 'FortVariantOptionDynamicRow_C_CreateRow::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, K2Node_Select_Default) == 0x000040, "Member 'FortVariantOptionDynamicRow_C_CreateRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'FortVariantOptionDynamicRow_C_CreateRow::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'FortVariantOptionDynamicRow_C_CreateRow::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_CreateRow, CallFunc_Create_ReturnValue) == 0x000058, "Member 'FortVariantOptionDynamicRow_C_CreateRow::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.ExecuteUbergraph_FortVariantOptionDynamicRow
// 0x0020 (0x0020 - 0x0000)
struct FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortVariantSetVM*                      K2Node_DynamicCast_AsFort_Variant_Set_VM;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow");
static_assert(sizeof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow) == 0x000020, "Wrong size on FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow");
static_assert(offsetof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow, EntryPoint) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow, K2Node_Event_ListItemObject) == 0x000008, "Member 'FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow, K2Node_DynamicCast_AsFort_Variant_Set_VM) == 0x000010, "Member 'FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow::K2Node_DynamicCast_AsFort_Variant_Set_VM' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow, K2Node_Event_bIsExpanded) == 0x000019, "Member 'FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow, K2Node_Event_bIsSelected) == 0x00001A, "Member 'FortVariantOptionDynamicRow_C_ExecuteUbergraph_FortVariantOptionDynamicRow::K2Node_Event_bIsSelected' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct FortVariantOptionDynamicRow_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_OnListItemObjectSet");
static_assert(sizeof(FortVariantOptionDynamicRow_C_OnListItemObjectSet) == 0x000008, "Wrong size on FortVariantOptionDynamicRow_C_OnListItemObjectSet");
static_assert(offsetof(FortVariantOptionDynamicRow_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.OnRotationRequested
// 0x0020 (0x0020 - 0x0000)
struct FortVariantOptionDynamicRow_C_OnRotationRequested final
{
public:
	struct FRotator                               RotationOffset;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          bSnap;                                             // 0x0018(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_OnRotationRequested) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_OnRotationRequested");
static_assert(sizeof(FortVariantOptionDynamicRow_C_OnRotationRequested) == 0x000020, "Wrong size on FortVariantOptionDynamicRow_C_OnRotationRequested");
static_assert(offsetof(FortVariantOptionDynamicRow_C_OnRotationRequested, RotationOffset) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_OnRotationRequested::RotationOffset' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_OnRotationRequested, bSnap) == 0x000018, "Member 'FortVariantOptionDynamicRow_C_OnRotationRequested::bSnap' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.SetFortVariantSetVM
// 0x0028 (0x0028 - 0x0000)
struct FortVariantOptionDynamicRow_C_SetFortVariantSetVM final
{
public:
	class UFortVariantSetVM*                      ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_SetFortVariantSetVM) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_SetFortVariantSetVM");
static_assert(sizeof(FortVariantOptionDynamicRow_C_SetFortVariantSetVM) == 0x000028, "Wrong size on FortVariantOptionDynamicRow_C_SetFortVariantSetVM");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetFortVariantSetVM, ViewModel) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_SetFortVariantSetVM::ViewModel' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetFortVariantSetVM, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'FortVariantOptionDynamicRow_C_SetFortVariantSetVM::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetFortVariantSetVM, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'FortVariantOptionDynamicRow_C_SetFortVariantSetVM::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetFortVariantSetVM, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'FortVariantOptionDynamicRow_C_SetFortVariantSetVM::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.SetupChannel
// 0x00B0 (0x00B0 - 0x0000)
struct FortVariantOptionDynamicRow_C_SetupChannel final
{
public:
	class UFortVariantChannelVM*                  VariantChannelVM;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortVariantNumericChannelVM*           K2Node_DynamicCast_AsFort_Variant_Numeric_Channel_VM; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCosmeticVariantRow_Redirector_C*   K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Redirector; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCosmeticVariantRow_Slider_C*       K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Slider; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCosmeticVariantRow_Texture_C*      K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Texture; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCosmeticVariantRow_RichColor_C*    K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Rich_Color; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCosmeticVariantRow_Tiled_C*        K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Tiled; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCosmeticVariantRow_Numeric_C*      K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Numeric; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantTextureChannelVM*           K2Node_DynamicCast_AsFort_Variant_Texture_Channel_VM; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantSliderChannelVM*            K2Node_DynamicCast_AsFort_Variant_Slider_Channel_VM; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortVariantRichColorChannelVM*         K2Node_DynamicCast_AsFort_Variant_Rich_Color_Channel_VM; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FRotator& RotationOffset, bool bSnap)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_SetupChannel) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_SetupChannel");
static_assert(sizeof(FortVariantOptionDynamicRow_C_SetupChannel) == 0x0000B0, "Wrong size on FortVariantOptionDynamicRow_C_SetupChannel");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, VariantChannelVM) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::VariantChannelVM' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Variant_Numeric_Channel_VM) == 0x000008, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Variant_Numeric_Channel_VM' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Redirector) == 0x000018, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Redirector' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Slider) == 0x000028, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Slider' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Texture) == 0x000038, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Texture' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Rich_Color) == 0x000048, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Rich_Color' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_4) == 0x000050, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Tiled) == 0x000058, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Tiled' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_5) == 0x000060, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Numeric) == 0x000068, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Cosmetic_Variant_Row_Numeric' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_6) == 0x000070, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Variant_Texture_Channel_VM) == 0x000078, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Variant_Texture_Channel_VM' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_7) == 0x000080, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Variant_Slider_Channel_VM) == 0x000088, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Variant_Slider_Channel_VM' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_8) == 0x000090, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_AsFort_Variant_Rich_Color_Channel_VM) == 0x000098, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_AsFort_Variant_Rich_Color_Channel_VM' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_DynamicCast_bSuccess_9) == 0x0000A0, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_SwitchEnum_CmpSuccess) == 0x0000A1, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetupChannel, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'FortVariantOptionDynamicRow_C_SetupChannel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.SetVariantChannels
// 0x0030 (0x0030 - 0x0000)
struct FortVariantOptionDynamicRow_C_SetVariantChannels final
{
public:
	TArray<class UFortVariantChannelVM*>          Channels;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortVariantChannelVM*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_SetVariantChannels) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_SetVariantChannels");
static_assert(sizeof(FortVariantOptionDynamicRow_C_SetVariantChannels) == 0x000030, "Wrong size on FortVariantOptionDynamicRow_C_SetVariantChannels");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, Channels) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::Channels' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, Temp_int_Array_Index_Variable) == 0x000010, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, CallFunc_Array_Get_Item) == 0x000018, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_SetVariantChannels, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'FortVariantOptionDynamicRow_C_SetVariantChannels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function FortVariantOptionDynamicRow.FortVariantOptionDynamicRow_C.GetDesiredFocusTarget
// 0x0028 (0x0028 - 0x0000)
struct FortVariantOptionDynamicRow_C_GetDesiredFocusTarget final
{
public:
	class UWidget*                                FocusTarget;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_VariantRow_FocusTargetWidget_C> K2Node_DynamicCast_AsBPI_Variant_Row_Focus_Target_Widget; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_FocusTarget;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortVariantOptionDynamicRow_C_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on FortVariantOptionDynamicRow_C_GetDesiredFocusTarget");
static_assert(sizeof(FortVariantOptionDynamicRow_C_GetDesiredFocusTarget) == 0x000028, "Wrong size on FortVariantOptionDynamicRow_C_GetDesiredFocusTarget");
static_assert(offsetof(FortVariantOptionDynamicRow_C_GetDesiredFocusTarget, FocusTarget) == 0x000000, "Member 'FortVariantOptionDynamicRow_C_GetDesiredFocusTarget::FocusTarget' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_GetDesiredFocusTarget, K2Node_DynamicCast_AsBPI_Variant_Row_Focus_Target_Widget) == 0x000008, "Member 'FortVariantOptionDynamicRow_C_GetDesiredFocusTarget::K2Node_DynamicCast_AsBPI_Variant_Row_Focus_Target_Widget' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FortVariantOptionDynamicRow_C_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortVariantOptionDynamicRow_C_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_FocusTarget) == 0x000020, "Member 'FortVariantOptionDynamicRow_C_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_FocusTarget' has a wrong offset!");

}

