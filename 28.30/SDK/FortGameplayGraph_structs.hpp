#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortGameplayGraph

#include "Basic.hpp"

#include "GameplayGraph_structs.hpp"


namespace SDK
{

// ScriptStruct FortGameplayGraph.SerializableConnectivityGraphVertex
// 0x0001 (0x0001 - 0x0000)
struct FSerializableConnectivityGraphVertex final
{
public:
	bool                                          bIsIndependentlySupported;                         // 0x0000(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSerializableConnectivityGraphVertex) == 0x000001, "Wrong alignment on FSerializableConnectivityGraphVertex");
static_assert(sizeof(FSerializableConnectivityGraphVertex) == 0x000001, "Wrong size on FSerializableConnectivityGraphVertex");
static_assert(offsetof(FSerializableConnectivityGraphVertex, bIsIndependentlySupported) == 0x000000, "Member 'FSerializableConnectivityGraphVertex::bIsIndependentlySupported' has a wrong offset!");

// ScriptStruct FortGameplayGraph.SerializableConnectivityGraph
// 0x0050 (0x0108 - 0x00B8)
struct FSerializableConnectivityGraph final : public FSerializableGraph
{
public:
	TMap<struct FGraphVertexHandle, struct FSerializableConnectivityGraphVertex> ConnectivityVertexData;                            // 0x00B8(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSerializableConnectivityGraph) == 0x000008, "Wrong alignment on FSerializableConnectivityGraph");
static_assert(sizeof(FSerializableConnectivityGraph) == 0x000108, "Wrong size on FSerializableConnectivityGraph");
static_assert(offsetof(FSerializableConnectivityGraph, ConnectivityVertexData) == 0x0000B8, "Member 'FSerializableConnectivityGraph::ConnectivityVertexData' has a wrong offset!");

}

