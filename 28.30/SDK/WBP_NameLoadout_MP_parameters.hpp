#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NameLoadout_MP

#include "Basic.hpp"

#include "S_UI_Image_structs.hpp"
#include "S_UI_GridCell_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_UI_Placement_structs.hpp"


namespace SDK::Params
{

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_NameLoadout_MP_C_BndEvt__NameLoadout_MP_Button_Cancel_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_Accept2_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Button_CloseTouch_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature");
static_assert(sizeof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature) == 0x000018, "Wrong size on WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature");
static_assert(offsetof(WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature, Text) == 0x000000, "Member 'WBP_NameLoadout_MP_C_BndEvt__WBP_NameLoadout_MP_Text_EditableLoadoutName_K2Node_ComponentBoundEvent_2_OnTextChanged__DelegateSignature::Text' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.ExecuteUbergraph_WBP_NameLoadout_MP
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Sanitizedtext;                        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDialogVM_LockerRename_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0078(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSubGame_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_LockerOperation*       CallFunc_DeleteModularLoadout_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_FilteredInputField_C*        K2Node_DynamicCast_AsWBP_UIKit_Filtered_Input_Field; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP");
static_assert(sizeof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP) == 0x0000C0, "Wrong size on WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, EntryPoint) == 0x000000, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_CustomEvent_Success) == 0x000011, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, Temp_bool_Variable) == 0x000020, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_ComponentBoundEvent_Button_2) == 0x000028, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_Event_bSuccess) == 0x000030, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_Event_Sanitizedtext) == 0x000038, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_Event_Sanitizedtext' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_Event_IsDesignTime) == 0x000060, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_SpawnObject_ReturnValue) == 0x000068, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_ComponentBoundEvent_Button_1) == 0x000070, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_ComponentBoundEvent_Text) == 0x000078, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_IsInSubGame_ReturnValue) == 0x000091, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_IsInSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_GetUINavigationManager_ReturnValue) == 0x000098, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_DeleteModularLoadout_ReturnValue) == 0x0000A0, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_DeleteModularLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_DynamicCast_AsWBP_UIKit_Filtered_Input_Field) == 0x0000A8, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_DynamicCast_AsWBP_UIKit_Filtered_Input_Field' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP, K2Node_ComponentBoundEvent_Button) == 0x0000B8, "Member 'WBP_NameLoadout_MP_C_ExecuteUbergraph_WBP_NameLoadout_MP::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.Initialize
// 0x0020 (0x0020 - 0x0000)
struct WBP_NameLoadout_MP_C_Initialize final
{
public:
	EFortLoadoutActionType                        Loadout_Action_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTypedModularLoadoutVM*             Target_Loadout_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortTypedModularLoadoutsVM*            TypedModularLoadouts;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar;                                       // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_Initialize) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_Initialize");
static_assert(sizeof(WBP_NameLoadout_MP_C_Initialize) == 0x000020, "Wrong size on WBP_NameLoadout_MP_C_Initialize");
static_assert(offsetof(WBP_NameLoadout_MP_C_Initialize, Loadout_Action_0) == 0x000000, "Member 'WBP_NameLoadout_MP_C_Initialize::Loadout_Action_0' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Initialize, Target_Loadout_0) == 0x000008, "Member 'WBP_NameLoadout_MP_C_Initialize::Target_Loadout_0' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Initialize, TypedModularLoadouts) == 0x000010, "Member 'WBP_NameLoadout_MP_C_Initialize::TypedModularLoadouts' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Initialize, NewLocalVar) == 0x000018, "Member 'WBP_NameLoadout_MP_C_Initialize::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Initialize, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WBP_NameLoadout_MP_C_Initialize::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Initialize, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'WBP_NameLoadout_MP_C_Initialize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68
// 0x0001 (0x0001 - 0x0000)
struct WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68 final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68) == 0x000001, "Wrong alignment on WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68");
static_assert(sizeof(WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68) == 0x000001, "Wrong size on WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68");
static_assert(offsetof(WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68, Success) == 0x000000, "Member 'WBP_NameLoadout_MP_C_OnOperationCompleted_AB97A05243EDAA0EBD5FB3B0B1784F68::Success' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.OnSanitizationReady
// 0x0018 (0x0018 - 0x0000)
struct WBP_NameLoadout_MP_C_OnSanitizationReady final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Sanitizedtext;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_OnSanitizationReady) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_OnSanitizationReady");
static_assert(sizeof(WBP_NameLoadout_MP_C_OnSanitizationReady) == 0x000018, "Wrong size on WBP_NameLoadout_MP_C_OnSanitizationReady");
static_assert(offsetof(WBP_NameLoadout_MP_C_OnSanitizationReady, bSuccess) == 0x000000, "Member 'WBP_NameLoadout_MP_C_OnSanitizationReady::bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_OnSanitizationReady, Sanitizedtext) == 0x000008, "Member 'WBP_NameLoadout_MP_C_OnSanitizationReady::Sanitizedtext' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NameLoadout_MP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NameLoadout_MP_C_PreConstruct");
static_assert(sizeof(WBP_NameLoadout_MP_C_PreConstruct) == 0x000001, "Wrong size on WBP_NameLoadout_MP_C_PreConstruct");
static_assert(offsetof(WBP_NameLoadout_MP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NameLoadout_MP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.SetMobileStyle
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_NameLoadout_MP_C_SetMobileStyle final
{
public:
	struct FS_UI_GridCell                         K2Node_MakeStruct_S_UI_GridCell;                   // 0x0000(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FS_UI_Placement                        K2Node_MakeStruct_S_UI_Placement;                  // 0x0038(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UI_Image                            K2Node_MakeStruct_S_UI_Image;                      // 0x0078(0x0058)(NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_SetMobileStyle) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_SetMobileStyle");
static_assert(sizeof(WBP_NameLoadout_MP_C_SetMobileStyle) == 0x0000F8, "Wrong size on WBP_NameLoadout_MP_C_SetMobileStyle");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, K2Node_MakeStruct_S_UI_GridCell) == 0x000000, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::K2Node_MakeStruct_S_UI_GridCell' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, K2Node_MakeStruct_Margin) == 0x000028, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, K2Node_MakeStruct_S_UI_Placement) == 0x000038, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::K2Node_MakeStruct_S_UI_Placement' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, K2Node_MakeStruct_S_UI_Image) == 0x000078, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::K2Node_MakeStruct_S_UI_Image' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x0000D0, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, CallFunc_IsMobileGame_ReturnValue) == 0x0000D8, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, K2Node_MakeStruct_Margin_1) == 0x0000DC, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetMobileStyle, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x0000F0, "Member 'WBP_NameLoadout_MP_C_SetMobileStyle::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.SetupForClear
// 0x0038 (0x0038 - 0x0000)
struct WBP_NameLoadout_MP_C_SetupForClear final
{
public:
	class UFortTypedModularLoadoutVM*             TargetLoadout;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CancelLabel;                                       // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   AcceptLabel;                                       // 0x0020(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(WBP_NameLoadout_MP_C_SetupForClear) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_SetupForClear");
static_assert(sizeof(WBP_NameLoadout_MP_C_SetupForClear) == 0x000038, "Wrong size on WBP_NameLoadout_MP_C_SetupForClear");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForClear, TargetLoadout) == 0x000000, "Member 'WBP_NameLoadout_MP_C_SetupForClear::TargetLoadout' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForClear, CancelLabel) == 0x000008, "Member 'WBP_NameLoadout_MP_C_SetupForClear::CancelLabel' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForClear, AcceptLabel) == 0x000020, "Member 'WBP_NameLoadout_MP_C_SetupForClear::AcceptLabel' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.SetupForDelete
// 0x0038 (0x0038 - 0x0000)
struct WBP_NameLoadout_MP_C_SetupForDelete final
{
public:
	class UFortTypedModularLoadoutVM*             TargetLoadout;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CancelLabel;                                       // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   AcceptLabel;                                       // 0x0020(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(WBP_NameLoadout_MP_C_SetupForDelete) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_SetupForDelete");
static_assert(sizeof(WBP_NameLoadout_MP_C_SetupForDelete) == 0x000038, "Wrong size on WBP_NameLoadout_MP_C_SetupForDelete");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForDelete, TargetLoadout) == 0x000000, "Member 'WBP_NameLoadout_MP_C_SetupForDelete::TargetLoadout' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForDelete, CancelLabel) == 0x000008, "Member 'WBP_NameLoadout_MP_C_SetupForDelete::CancelLabel' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForDelete, AcceptLabel) == 0x000020, "Member 'WBP_NameLoadout_MP_C_SetupForDelete::AcceptLabel' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.SetupForRename
// 0x0020 (0x0020 - 0x0000)
struct WBP_NameLoadout_MP_C_SetupForRename final
{
public:
	class UFortTypedModularLoadoutVM*             Target_Loadout_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
};
static_assert(alignof(WBP_NameLoadout_MP_C_SetupForRename) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_SetupForRename");
static_assert(sizeof(WBP_NameLoadout_MP_C_SetupForRename) == 0x000020, "Wrong size on WBP_NameLoadout_MP_C_SetupForRename");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForRename, Target_Loadout_0) == 0x000000, "Member 'WBP_NameLoadout_MP_C_SetupForRename::Target_Loadout_0' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForRename, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'WBP_NameLoadout_MP_C_SetupForRename::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.SetupForSave
// 0x0040 (0x0040 - 0x0000)
struct WBP_NameLoadout_MP_C_SetupForSave final
{
public:
	class UFortTypedModularLoadoutVM*             Target_Loadout_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Override;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDefaultName_ReturnValue;               // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(WBP_NameLoadout_MP_C_SetupForSave) == 0x000008, "Wrong alignment on WBP_NameLoadout_MP_C_SetupForSave");
static_assert(sizeof(WBP_NameLoadout_MP_C_SetupForSave) == 0x000040, "Wrong size on WBP_NameLoadout_MP_C_SetupForSave");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForSave, Target_Loadout_0) == 0x000000, "Member 'WBP_NameLoadout_MP_C_SetupForSave::Target_Loadout_0' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForSave, Override) == 0x000008, "Member 'WBP_NameLoadout_MP_C_SetupForSave::Override' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForSave, CallFunc_GetDefaultName_ReturnValue) == 0x000010, "Member 'WBP_NameLoadout_MP_C_SetupForSave::CallFunc_GetDefaultName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_SetupForSave, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_NameLoadout_MP_C_SetupForSave::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_NameLoadout_MP.WBP_NameLoadout_MP_C.Use2PresetLayout
// 0x0005 (0x0005 - 0x0000)
struct WBP_NameLoadout_MP_C_Use2PresetLayout final
{
public:
	bool                                          Use_2;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NameLoadout_MP_C_Use2PresetLayout) == 0x000001, "Wrong alignment on WBP_NameLoadout_MP_C_Use2PresetLayout");
static_assert(sizeof(WBP_NameLoadout_MP_C_Use2PresetLayout) == 0x000005, "Wrong size on WBP_NameLoadout_MP_C_Use2PresetLayout");
static_assert(offsetof(WBP_NameLoadout_MP_C_Use2PresetLayout, Use_2) == 0x000000, "Member 'WBP_NameLoadout_MP_C_Use2PresetLayout::Use_2' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Use2PresetLayout, Temp_bool_Variable) == 0x000001, "Member 'WBP_NameLoadout_MP_C_Use2PresetLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Use2PresetLayout, Temp_byte_Variable) == 0x000002, "Member 'WBP_NameLoadout_MP_C_Use2PresetLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Use2PresetLayout, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_NameLoadout_MP_C_Use2PresetLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NameLoadout_MP_C_Use2PresetLayout, K2Node_Select_Default) == 0x000004, "Member 'WBP_NameLoadout_MP_C_Use2PresetLayout::K2Node_Select_Default' has a wrong offset!");

}

