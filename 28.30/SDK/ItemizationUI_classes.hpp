#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "DynamicUI_classes.hpp"


namespace SDK
{

// Class ItemizationUI.GenericInventoryPanel
// 0x00E8 (0x04E8 - 0x0400)
class UGenericInventoryPanel final : public UCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnDropItemInputDelegate;                           // 0x0400(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDropAllInputDelegate;                            // 0x0410(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDropStackInputDelegate;                          // 0x0420(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDropHalfInputDelegate;                           // 0x0430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMakeItemActiveInputDelegate;                     // 0x0440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMakeItemInactiveInputDelegate;                   // 0x0450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    BackInputRowHandle;                                // 0x0460(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    DropItemInputRowHandle;                            // 0x0470(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    DropAllInputRowHandle;                             // 0x0480(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    DropStackInputRowHandle;                           // 0x0490(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    DropHalfInputRowHandle;                            // 0x04A0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    MakeItemActiveInputRowHandle;                      // 0x04B0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    MakeItemInactiveInputRowHandle;                    // 0x04C0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D0[0x18];                                     // 0x04D0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDropAllInput();
	void OnDropHalfInput();
	void OnDropItemInput();
	void OnDropStackInput();
	void OnMakeItemActiveInput();
	void OnMakeItemInactiveInput();
	void UpdateDropInputs(const int32 AmountOfSelectedItem);
	void UpdateMakeItemActiveInput(const bool bCanItemBeMadeActive);
	void UpdateMakeItemInactiveInput(const bool bCanItemBeMadeInactive);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GenericInventoryPanel">();
	}
	static class UGenericInventoryPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericInventoryPanel>();
	}
};
static_assert(alignof(UGenericInventoryPanel) == 0x000008, "Wrong alignment on UGenericInventoryPanel");
static_assert(sizeof(UGenericInventoryPanel) == 0x0004E8, "Wrong size on UGenericInventoryPanel");
static_assert(offsetof(UGenericInventoryPanel, OnDropItemInputDelegate) == 0x000400, "Member 'UGenericInventoryPanel::OnDropItemInputDelegate' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, OnDropAllInputDelegate) == 0x000410, "Member 'UGenericInventoryPanel::OnDropAllInputDelegate' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, OnDropStackInputDelegate) == 0x000420, "Member 'UGenericInventoryPanel::OnDropStackInputDelegate' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, OnDropHalfInputDelegate) == 0x000430, "Member 'UGenericInventoryPanel::OnDropHalfInputDelegate' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, OnMakeItemActiveInputDelegate) == 0x000440, "Member 'UGenericInventoryPanel::OnMakeItemActiveInputDelegate' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, OnMakeItemInactiveInputDelegate) == 0x000450, "Member 'UGenericInventoryPanel::OnMakeItemInactiveInputDelegate' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, BackInputRowHandle) == 0x000460, "Member 'UGenericInventoryPanel::BackInputRowHandle' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, DropItemInputRowHandle) == 0x000470, "Member 'UGenericInventoryPanel::DropItemInputRowHandle' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, DropAllInputRowHandle) == 0x000480, "Member 'UGenericInventoryPanel::DropAllInputRowHandle' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, DropStackInputRowHandle) == 0x000490, "Member 'UGenericInventoryPanel::DropStackInputRowHandle' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, DropHalfInputRowHandle) == 0x0004A0, "Member 'UGenericInventoryPanel::DropHalfInputRowHandle' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, MakeItemActiveInputRowHandle) == 0x0004B0, "Member 'UGenericInventoryPanel::MakeItemActiveInputRowHandle' has a wrong offset!");
static_assert(offsetof(UGenericInventoryPanel, MakeItemInactiveInputRowHandle) == 0x0004C0, "Member 'UGenericInventoryPanel::MakeItemInactiveInputRowHandle' has a wrong offset!");

// Class ItemizationUI.ItemizationDynamicUIDirector
// 0x0018 (0x02C8 - 0x02B0)
class AItemizationDynamicUIDirector final : public ADynamicUIDirectorBase
{
public:
	TArray<class UDynamicUIScene*>                ItemizationScenes;                                 // 0x02B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleInventorySwitched(class AFortPlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationDynamicUIDirector">();
	}
	static class AItemizationDynamicUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<AItemizationDynamicUIDirector>();
	}
};
static_assert(alignof(AItemizationDynamicUIDirector) == 0x000008, "Wrong alignment on AItemizationDynamicUIDirector");
static_assert(sizeof(AItemizationDynamicUIDirector) == 0x0002C8, "Wrong size on AItemizationDynamicUIDirector");
static_assert(offsetof(AItemizationDynamicUIDirector, ItemizationScenes) == 0x0002B0, "Member 'AItemizationDynamicUIDirector::ItemizationScenes' has a wrong offset!");

}

