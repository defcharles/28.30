#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DiscoveryBrowserUI

#include "Basic.hpp"

#include "DiscoveryBrowserUI_classes.hpp"
#include "DiscoveryBrowserUI_parameters.hpp"


namespace SDK
{

// Function DiscoveryBrowserUI.FortDiscoverHomespace.OnPeekPushPercentMobileCVarChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   PeekPushPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDiscoverHomespace::OnPeekPushPercentMobileCVarChanged(float PeekPushPercent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPeekPushPercentMobileCVarChanged");

	Params::FortDiscoverHomespace_OnPeekPushPercentMobileCVarChanged Parms{};

	Parms.PeekPushPercent = PeekPushPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserListView.NavigateToActivityInFirstRow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivityItemIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserListView::NavigateToActivityInFirstRow(int32 ActivityItemIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NavigateToActivityInFirstRow");

	Params::FortActivityBrowserListView_NavigateToActivityInFirstRow Parms{};

	Parms.ActivityItemIndex = ActivityItemIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserListView.HandleVisibleEntriesChanged
// (Final, Native, Protected, BlueprintCallable, Const)

void UFortActivityBrowserListView::HandleVisibleEntriesChanged() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleVisibleEntriesChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.BP_PartyInformationUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsTileSelected                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::BP_PartyInformationUpdated(bool bInIsTileSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_PartyInformationUpdated");

	Params::FortActivityBrowserPlayWithFriendsTile_BP_PartyInformationUpdated Parms{};

	Parms.bInIsTileSelected = bInIsTileSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.GetCTAButtonText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortActivityBrowserPlayWithFriendsTile::GetCTAButtonText()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCTAButtonText");

	Params::FortActivityBrowserPlayWithFriendsTile_GetCTAButtonText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.HandleCTAButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityBrowserPlayWithFriendsTile::HandleCTAButtonClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleCTAButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnGameActivityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortGameActivity*                GameActivity                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::OnGameActivityChanged(class UFortGameActivity* GameActivity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnGameActivityChanged");

	Params::FortActivityBrowserPlayWithFriendsTile_OnGameActivityChanged Parms{};

	Parms.GameActivity = GameActivity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnTextureBeginLoading
// (Event, Protected, BlueprintEvent)

void UFortActivityBrowserPlayWithFriendsTile::OnTextureBeginLoading()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTextureBeginLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnTextureLoadingComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture*                         ThumbnailTexture                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::OnTextureLoadingComplete(const class UTexture* ThumbnailTexture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTextureLoadingComplete");

	Params::FortActivityBrowserPlayWithFriendsTile_OnTextureLoadingComplete Parms{};

	Parms.ThumbnailTexture = ThumbnailTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnTileActiveChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::OnTileActiveChanged(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileActiveChanged");

	Params::FortActivityBrowserPlayWithFriendsTile_OnTileActiveChanged Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnUpdateColumnSize
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewColumnSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::OnUpdateColumnSize(int32 NewColumnSize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateColumnSize");

	Params::FortActivityBrowserPlayWithFriendsTile_OnUpdateColumnSize Parms{};

	Parms.NewColumnSize = NewColumnSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OpenSidebar
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityBrowserPlayWithFriendsTile::OpenSidebar()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenSidebar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateCTAButtonInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InteractionText                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInteractionFound                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateCTAButtonInfo(const class FText& InteractionText, const bool bInteractionFound)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCTAButtonInfo");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateCTAButtonInfo Parms{};

	Parms.InteractionText = std::move(InteractionText);
	Parms.bInteractionFound = bInteractionFound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateCTAButtonInteraction
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInteractionEnabled                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateCTAButtonInteraction(const bool bIsInteractionEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCTAButtonInteraction");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateCTAButtonInteraction Parms{};

	Parms.bIsInteractionEnabled = bIsInteractionEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateIslandThumbnail
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture*                         ThumbnailTexture                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateIslandThumbnail(const class UTexture* ThumbnailTexture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateIslandThumbnail");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateIslandThumbnail Parms{};

	Parms.ThumbnailTexture = ThumbnailTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateLastInteraction
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             LastInteraction                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateLastInteraction(const class FText& LastInteraction)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateLastInteraction");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateLastInteraction Parms{};

	Parms.LastInteraction = std::move(LastInteraction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateOtherPlayersSubText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             OtherPlayersSubText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateOtherPlayersSubText(const class FText& OtherPlayersSubText)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateOtherPlayersSubText");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateOtherPlayersSubText Parms{};

	Parms.OtherPlayersSubText = std::move(OtherPlayersSubText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdatePartyMemberNames
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Names                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdatePartyMemberNames(const class FText& Names)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdatePartyMemberNames");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdatePartyMemberNames Parms{};

	Parms.Names = std::move(Names);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateRichPresence
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             RichPresence                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateRichPresence(const class FText& RichPresence)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateRichPresence");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateRichPresence Parms{};

	Parms.RichPresence = std::move(RichPresence);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateSingleFriendName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             SingleFriendName                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateSingleFriendName(const class FText& SingleFriendName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateSingleFriendName");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateSingleFriendName Parms{};

	Parms.SingleFriendName = std::move(SingleFriendName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.GetMaxPartySize
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UFortActivityBrowserPlayWithFriendsTile::GetMaxPartySize() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMaxPartySize");

	Params::FortActivityBrowserPlayWithFriendsTile_GetMaxPartySize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnCategoryItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPlayAnimation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnCategoryItemChanged(const bool bPlayAnimation)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCategoryItemChanged");

	Params::FortActivityBrowserRow_OnCategoryItemChanged Parms{};

	Parms.bPlayAnimation = bPlayAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowIsActiveChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsActive                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowIsActiveChanged(const bool bIsActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRowIsActiveChanged");

	Params::FortActivityBrowserRow_OnRowIsActiveChanged Parms{};

	Parms.bIsActive = bIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowIsSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowIsSelectedChanged(const bool bIsSelected)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRowIsSelectedChanged");

	Params::FortActivityBrowserRow_OnRowIsSelectedChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowMoveDown
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMovingOffscreen                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowMoveDown(const bool bMovingOffscreen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRowMoveDown");

	Params::FortActivityBrowserRow_OnRowMoveDown Parms{};

	Parms.bMovingOffscreen = bMovingOffscreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowMoveUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMovingOffscreen                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowMoveUp(const bool bMovingOffscreen)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRowMoveUp");

	Params::FortActivityBrowserRow_OnRowMoveUp Parms{};

	Parms.bMovingOffscreen = bMovingOffscreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowPeekStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInPeekState                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowPeekStateChanged(const bool bIsInPeekState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRowPeekStateChanged");

	Params::FortActivityBrowserRow_OnRowPeekStateChanged Parms{};

	Parms.bIsInPeekState = bIsInPeekState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRow::GetIsActive() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsActive");

	Params::FortActivityBrowserRow_GetIsActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.GetIsInPeekState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRow::GetIsInPeekState() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsInPeekState");

	Params::FortActivityBrowserRow_GetIsInPeekState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.GetIsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRow::GetIsSelected() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsSelected");

	Params::FortActivityBrowserRow_GetIsSelected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowList.OnQueryStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowList::OnQueryStatusChanged(bool bIsActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQueryStatusChanged");

	Params::FortActivityBrowserRowList_OnQueryStatusChanged Parms{};

	Parms.bIsActive = bIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserView.OnSurfaceDataDirty
// (Event, Protected, BlueprintEvent)

void UFortActivityBrowserView::OnSurfaceDataDirty()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSurfaceDataDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserView.GetInvalidActivityReason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInvalidActivityReason              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInvalidActivityReason UFortActivityBrowserView::GetInvalidActivityReason() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInvalidActivityReason");

	Params::FortActivityBrowserView_GetInvalidActivityReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.HandleVerticalSwipe
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   Direction                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowView::HandleVerticalSwipe(const int32 Direction)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleVerticalSwipe");

	Params::FortActivityBrowserRowView_HandleVerticalSwipe Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnActivityUpdated
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowView::OnActivityUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActivityUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnListViewScrolled
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ItemOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DistanceRemaining                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowView::OnListViewScrolled(float ItemOffset, float DistanceRemaining)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnListViewScrolled");

	Params::FortActivityBrowserRowView_OnListViewScrolled Parms{};

	Parms.ItemOffset = ItemOffset;
	Parms.DistanceRemaining = DistanceRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnQueryActivitiesFinished
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowView::OnQueryActivitiesFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQueryActivitiesFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnRowChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewCategoryIndex                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowView::OnRowChanged(const int32 NewCategoryIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRowChanged");

	Params::FortActivityBrowserRowView_OnRowChanged Parms{};

	Parms.NewCategoryIndex = NewCategoryIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserTile.HandleActivitySelected
// (Final, Native, Private)

void UFortActivityBrowserTile::HandleActivitySelected()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleActivitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserTile.HandleDisplayTileDetailsHoldTriggered
// (Final, Native, Private)
// Parameters:
// class UCommonButtonBase*                Button                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserTile::HandleDisplayTileDetailsHoldTriggered(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleDisplayTileDetailsHoldTriggered");

	Params::FortActivityBrowserTile_HandleDisplayTileDetailsHoldTriggered Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.BP_OnTileViewUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::BP_OnTileViewUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BP_OnTileViewUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.OnPlayViewIntro
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::OnPlayViewIntro()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayViewIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.OnQueryActivitiesComplete
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::OnQueryActivitiesComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQueryActivitiesComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.OnQueryActivitiesStarted
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::OnQueryActivitiesStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnQueryActivitiesStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.PlayViewIntro
// (Final, Native, Public, BlueprintCallable)

void UFortActivityPlayerBrowserView::PlayViewIntro()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayViewIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityCategoryTile.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityCategoryTile::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileActiveSet");

	Params::FortActivityCategoryTile_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.NavigateFromPanel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortActivityCategoryTilePanel*   NavigatingPanel                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortActivityCategoryTilePanel*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivityCategoryTilePanel* UFortActivityCategoryView::NavigateFromPanel(EUINavigation Direction, class UFortActivityCategoryTilePanel* NavigatingPanel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NavigateFromPanel");

	Params::FortActivityCategoryView_NavigateFromPanel Parms{};

	Parms.Direction = Direction;
	Parms.NavigatingPanel = NavigatingPanel;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.OnCategoryTilePanelSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortActivityCategoryTilePanel*   SelectedPanel                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityCategoryView::OnCategoryTilePanelSelected(const class UFortActivityCategoryTilePanel* SelectedPanel)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCategoryTilePanelSelected");

	Params::FortActivityCategoryView_OnCategoryTilePanelSelected Parms{};

	Parms.SelectedPanel = SelectedPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.OnSurfaceDataReady
// (Event, Protected, BlueprintEvent)

void UFortActivityCategoryView::OnSurfaceDataReady()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSurfaceDataReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.GetCurrentSelectedPanel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFortActivityCategoryTilePanel*ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortActivityCategoryTilePanel* UFortActivityCategoryView::GetCurrentSelectedPanel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSelectedPanel");

	Params::FortActivityCategoryView_GetCurrentSelectedPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.GetTopMostVisiblePanel
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UFortActivityCategoryTilePanel*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivityCategoryTilePanel* UFortActivityCategoryView::GetTopMostVisiblePanel() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTopMostVisiblePanel");

	Params::FortActivityCategoryView_GetTopMostVisiblePanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCreatorPageView.OnCreatorActivitiesQueryFinished
// (Event, Protected, BlueprintEvent)

void UFortActivityCreatorPageView::OnCreatorActivitiesQueryFinished()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCreatorActivitiesQueryFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityCreatorPageView.OnNoContentFoundForCreator
// (Event, Protected, BlueprintEvent)

void UFortActivityCreatorPageView::OnNoContentFoundForCreator()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNoContentFoundForCreator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.CheckUpdateDetailsDelay
// (Final, Native, Private)

void UFortActivityDiscoverView::CheckUpdateDetailsDelay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheckUpdateDetailsDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.HandleMovieWidgetMediaPreEndEvent
// (Final, Native, Private)

void UFortActivityDiscoverView::HandleMovieWidgetMediaPreEndEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMovieWidgetMediaPreEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.HandleMovieWidgetMediaStarted
// (Final, Native, Private)

void UFortActivityDiscoverView::HandleMovieWidgetMediaStarted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMovieWidgetMediaStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnMoviePlayingChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsPlaying                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityDiscoverView::OnMoviePlayingChanged(const bool bIsPlaying)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMoviePlayingChanged");

	Params::FortActivityDiscoverView_OnMoviePlayingChanged Parms{};

	Parms.bIsPlaying = bIsPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnMoviePreEndEvent
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnMoviePreEndEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMoviePreEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnPlayKeyArtIntro
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnPlayKeyArtIntro()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayKeyArtIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnPlayKeyArtOutro
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnPlayKeyArtOutro()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPlayKeyArtOutro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnPreviewImageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityDiscoverView::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewImageChanged");

	Params::FortActivityDiscoverView_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnUpdateDetailsDisplay
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnUpdateDetailsDisplay()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnUpdateDetailsDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetCurrentTexture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class UTexture*                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTexture* UFortActivityDiscoverView::GetCurrentTexture() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentTexture");

	Params::FortActivityDiscoverView_GetCurrentTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetKeyArtOutroAnimation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* UFortActivityDiscoverView::GetKeyArtOutroAnimation() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetKeyArtOutroAnimation");

	Params::FortActivityDiscoverView_GetKeyArtOutroAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetMovieWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortActivatableMovieWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivatableMovieWidget* UFortActivityDiscoverView::GetMovieWidget() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMovieWidget");

	Params::FortActivityDiscoverView_GetMovieWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetPromotedMovieWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortActivatableMovieWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivatableMovieWidget* UFortActivityDiscoverView::GetPromotedMovieWidget() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPromotedMovieWidget");

	Params::FortActivityDiscoverView_GetPromotedMovieWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsImageLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsImageLoading() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsImageLoading");

	Params::FortActivityDiscoverView_IsImageLoading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsInOutroState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsInOutroState() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsInOutroState");

	Params::FortActivityDiscoverView_IsInOutroState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsShowingPromotedContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsShowingPromotedContent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsShowingPromotedContent");

	Params::FortActivityDiscoverView_IsShowingPromotedContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsShowingSeasonalContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsShowingSeasonalContent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsShowingSeasonalContent");

	Params::FortActivityDiscoverView_IsShowingSeasonalContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.DeactivationTransitionCompleted
// (Final, Native, Public, BlueprintCallable)

void UFortActivityDiscoverViewV2::DeactivationTransitionCompleted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DeactivationTransitionCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.FireDiscoverExitedAnalyticEvent
// (Final, Native, Public, BlueprintCallable)

void UFortActivityDiscoverViewV2::FireDiscoverExitedAnalyticEvent()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FireDiscoverExitedAnalyticEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.StartDiscoverAnalyticSession
// (Final, Native, Public, BlueprintCallable)

void UFortActivityDiscoverViewV2::StartDiscoverAnalyticSession()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartDiscoverAnalyticSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.UpdateMiscActionBindingVisibility
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityDiscoverViewV2::UpdateMiscActionBindingVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateMiscActionBindingVisibility");

	Params::FortActivityDiscoverViewV2_UpdateMiscActionBindingVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.IsShowingPromotedContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverViewV2::IsShowingPromotedContent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsShowingPromotedContent");

	Params::FortActivityDiscoverViewV2_IsShowingPromotedContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.IsShowingSeasonalContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverViewV2::IsShowingSeasonalContent() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsShowingSeasonalContent");

	Params::FortActivityDiscoverViewV2_IsShowingSeasonalContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityListView.AddTileType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EActivityBrowserTileStyle               style                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortActivityBrowserTileBase>WidgetClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityListView::AddTileType(EActivityBrowserTileStyle style, TSubclassOf<class UFortActivityBrowserTileBase> WidgetClass)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AddTileType");

	Params::FortActivityListView_AddTileType Parms{};

	Parms.style = style;
	Parms.WidgetClass = WidgetClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityListView.GetInViewCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortActivityListView::GetInViewCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInViewCount");

	Params::FortActivityListView_GetInViewCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnDetailsUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityLobbyTile::OnDetailsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDetailsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityLobbyTile::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewImageChanged");

	Params::FortActivityLobbyTile_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.ShowModeSetSelectionModal
// (Final, Native, Public, BlueprintCallable)

void UFortActivityLobbyTile::ShowModeSetSelectionModal()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShowModeSetSelectionModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.GetChildActivityDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortActivityLobbyTile::GetChildActivityDisplayName() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetChildActivityDisplayName");

	Params::FortActivityLobbyTile_GetChildActivityDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.IsActivityEpicCreated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityLobbyTile::IsActivityEpicCreated() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsActivityEpicCreated");

	Params::FortActivityLobbyTile_IsActivityEpicCreated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.ShouldShowSubmodeSelectButton
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityLobbyTile::ShouldShowSubmodeSelectButton() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldShowSubmodeSelectButton");

	Params::FortActivityLobbyTile_ShouldShowSubmodeSelectButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnActivityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortGameActivity*                GameActivity                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StartingSelectedMnemonic                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityModeSetSelectionModal::OnActivityChanged(const class UFortGameActivity* GameActivity, const class FString& StartingSelectedMnemonic)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnActivityChanged");

	Params::FortActivityModeSetSelectionModal_OnActivityChanged Parms{};

	Parms.GameActivity = GameActivity;
	Parms.StartingSelectedMnemonic = std::move(StartingSelectedMnemonic);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityModeSetSelectionModal::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewImageChanged");

	Params::FortActivityModeSetSelectionModal_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnSubModeSelected
// (Event, Protected, BlueprintEvent)

void UFortActivityModeSetSelectionModal::OnSubModeSelected()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSubModeSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnSubModeSelectionChanged
// (Event, Protected, BlueprintEvent)

void UFortActivityModeSetSelectionModal::OnSubModeSelectionChanged()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSubModeSelectionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.SaveSelectionAndClose
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityModeSetSelectionModal::SaveSelectionAndClose()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SaveSelectionAndClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.SetHabaneroValues
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHabaneroEnabled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHabaneroExists                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityModeSetSelectionModal::SetHabaneroValues(bool bHabaneroEnabled, bool bHabaneroExists)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHabaneroValues");

	Params::FortActivityModeSetSelectionModal_SetHabaneroValues Parms{};

	Parms.bHabaneroEnabled = bHabaneroEnabled;
	Parms.bHabaneroExists = bHabaneroExists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.SetIsRankedSwitchAvailable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsRankedSwitchAvailable                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityModeSetSelectionModal::SetIsRankedSwitchAvailable(const bool bIsRankedSwitchAvailable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsRankedSwitchAvailable");

	Params::FortActivityModeSetSelectionModal_SetIsRankedSwitchAvailable Parms{};

	Parms.bIsRankedSwitchAvailable = bIsRankedSwitchAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.IsCreativeModeSetActivity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityModeSetSelectionModal::IsCreativeModeSetActivity() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsCreativeModeSetActivity");

	Params::FortActivityModeSetSelectionModal_IsCreativeModeSetActivity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserTile.HandleActivitySelected
// (Final, Native, Private)

void UFortActivityPlayerBrowserTile::HandleActivitySelected()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleActivitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivitySelector.ConfirmSelectedActivity
// (Final, Native, Public, BlueprintCallable)

void UFortActivitySelector::ConfirmSelectedActivity()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConfirmSelectedActivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivitySelector.HandleShowActivityDetails
// (Final, Native, Public, BlueprintCallable)

void UFortActivitySelector::HandleShowActivityDetails()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShowActivityDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivitySelector.OnEnableColorScheme
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsColorSchemeActive                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivitySelector::OnEnableColorScheme(const bool bIsColorSchemeActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnEnableColorScheme");

	Params::FortActivitySelector_OnEnableColorScheme Parms{};

	Parms.bIsColorSchemeActive = bIsColorSchemeActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivitySelector.OnSwapColorScheme
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsUsingAlternateColorScheme                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivitySelector::OnSwapColorScheme(const bool bInIsUsingAlternateColorScheme)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSwapColorScheme");

	Params::FortActivitySelector_OnSwapColorScheme Parms{};

	Parms.bInIsUsingAlternateColorScheme = bInIsUsingAlternateColorScheme;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivitySelector.OpenCreatorPage
// (Final, Native, Private, BlueprintCallable)

void UFortActivitySelector::OpenCreatorPage()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OpenCreatorPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivitySelector.ToggleFavorite
// (Final, Native, Public, BlueprintCallable)

void UFortActivitySelector::ToggleFavorite()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleFavorite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.HandleActivitySelected
// (Final, Native, Private)

void UFortActivityTileDetailsDisplay::HandleActivitySelected()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleActivitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.HandleShowActivityDetails
// (Final, Native, Private)

void UFortActivityTileDetailsDisplay::HandleShowActivityDetails()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleShowActivityDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnDetailsUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityTileDetailsDisplay::OnDetailsUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnDetailsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnFriendsPlayingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumPlaying                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnFriendsPlayingChanged(int32 NumPlaying)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnFriendsPlayingChanged");

	Params::FortActivityTileDetailsDisplay_OnFriendsPlayingChanged Parms{};

	Parms.NumPlaying = NumPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnIsFavoriteChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFavorite                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnIsFavoriteChanged(const bool bIsFavorite)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnIsFavoriteChanged");

	Params::FortActivityTileDetailsDisplay_OnIsFavoriteChanged Parms{};

	Parms.bIsFavorite = bIsFavorite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnLocalPlayerDemoted
// (Event, Protected, BlueprintEvent)

void UFortActivityTileDetailsDisplay::OnLocalPlayerDemoted()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLocalPlayerDemoted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnLocalPlayerPromotedToLeader
// (Event, Protected, BlueprintEvent)

void UFortActivityTileDetailsDisplay::OnLocalPlayerPromotedToLeader()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLocalPlayerPromotedToLeader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnLogoImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnLogoImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnLogoImageChanged");

	Params::FortActivityTileDetailsDisplay_OnLogoImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnPartySizeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   PartySize                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnPartySizeChanged(const int32 PartySize)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPartySizeChanged");

	Params::FortActivityTileDetailsDisplay_OnPartySizeChanged Parms{};

	Parms.PartySize = PartySize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPreviewImageChanged");

	Params::FortActivityTileDetailsDisplay_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnRequiresPurchaseChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bRequiresPurchase                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnRequiresPurchaseChanged(const bool bRequiresPurchase)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRequiresPurchaseChanged");

	Params::FortActivityTileDetailsDisplay_OnRequiresPurchaseChanged Parms{};

	Parms.bRequiresPurchase = bRequiresPurchase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnRespondToTileViewVisibilityChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnRespondToTileViewVisibilityChange(bool bIsVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRespondToTileViewVisibilityChange");

	Params::FortActivityTileDetailsDisplay_OnRespondToTileViewVisibilityChange Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileActiveSet");

	Params::FortActivityTileDetailsDisplay_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnTileClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityTileDetailsDisplay::OnTileClicked()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnTileClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.ShouldPlayTileVideo
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bOutResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::ShouldPlayTileVideo(bool* bOutResult)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShouldPlayTileVideo");

	Params::FortActivityTileDetailsDisplay_ShouldPlayTileVideo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutResult != nullptr)
		*bOutResult = Parms.bOutResult;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.StartTileVideo
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityTileDetailsDisplay::StartTileVideo()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StartTileVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.StopTileVideo
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityTileDetailsDisplay::StopTileVideo()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StopTileVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.UpdateActivitySelector
// (Final, Native, Public, BlueprintCallable)

void UFortActivityTileDetailsDisplay::UpdateActivitySelector()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateActivitySelector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.UpdateCCU
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CCUCount                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::UpdateCCU(const int32 CCUCount)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateCCU");

	Params::FortActivityTileDetailsDisplay_UpdateCCU Parms{};

	Parms.CCUCount = CCUCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.UpdateFromFortActivityViewModel
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityTileDetailsDisplay::UpdateFromFortActivityViewModel()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateFromFortActivityViewModel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.UpdateSqueegeeWidgets
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortGameActivity*                GameActivity                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::UpdateSqueegeeWidgets(class UFortGameActivity* GameActivity)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateSqueegeeWidgets");

	Params::FortActivityTileDetailsDisplay_UpdateSqueegeeWidgets Parms{};

	Parms.GameActivity = GameActivity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.BroadcastOnActivityConfirmed
// (Final, Native, Public, BlueprintCallable, Const)

void UFortActivityTileDetailsDisplay::BroadcastOnActivityConfirmed() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BroadcastOnActivityConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.DoesActivityRequirePurchase
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::DoesActivityRequirePurchase() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DoesActivityRequirePurchase");

	Params::FortActivityTileDetailsDisplay_DoesActivityRequirePurchase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.GetActivityCreatorDisplayText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortActivityTileDetailsDisplay::GetActivityCreatorDisplayText() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetActivityCreatorDisplayText");

	Params::FortActivityTileDetailsDisplay_GetActivityCreatorDisplayText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.GetActivitySelector
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortActivitySelector*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivitySelector* UFortActivityTileDetailsDisplay::GetActivitySelector() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetActivitySelector");

	Params::FortActivityTileDetailsDisplay_GetActivitySelector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.GetInvalidActivityReason
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInvalidActivityReason              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInvalidActivityReason UFortActivityTileDetailsDisplay::GetInvalidActivityReason() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInvalidActivityReason");

	Params::FortActivityTileDetailsDisplay_GetInvalidActivityReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.GetIsActivityLockedReason
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortActivityIsLockedReason             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortActivityIsLockedReason UFortActivityTileDetailsDisplay::GetIsActivityLockedReason() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetIsActivityLockedReason");

	Params::FortActivityTileDetailsDisplay_GetIsActivityLockedReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.IsActivityFavorited
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::IsActivityFavorited() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsActivityFavorited");

	Params::FortActivityTileDetailsDisplay_IsActivityFavorited Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.IsActivityLocked
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::IsActivityLocked() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsActivityLocked");

	Params::FortActivityTileDetailsDisplay_IsActivityLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.IsModeSetActivity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::IsModeSetActivity() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsModeSetActivity");

	Params::FortActivityTileDetailsDisplay_IsModeSetActivity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileView.NavigateToTop
// (Final, Native, Public, BlueprintCallable)

void UFortActivityTileView::NavigateToTop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("NavigateToTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileView.RespondToVisibilityChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileView::RespondToVisibilityChange(bool bIsVisible)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("RespondToVisibilityChange");

	Params::FortActivityTileView_RespondToVisibilityChange Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileView.SetListenForMouseWheelInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bListenForInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileView::SetListenForMouseWheelInput(bool bListenForInput)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetListenForMouseWheelInput");

	Params::FortActivityTileView_SetListenForMouseWheelInput Parms{};

	Parms.bListenForInput = bListenForInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortDiscoverItemListView.GetInViewCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UFortDiscoverItemListView::GetInViewCount() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetInViewCount");

	Params::FortDiscoverItemListView_GetInViewCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

