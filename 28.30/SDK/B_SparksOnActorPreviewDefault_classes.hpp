#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SparksOnActorPreviewDefault

#include "Basic.hpp"

#include "SparksCosmeticsRuntime_classes.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SparksOnActorPreviewDefault.B_SparksOnActorPreviewDefault_C
// 0x0150 (0x0850 - 0x0700)
class AB_SparksOnActorPreviewDefault_C final : public ASparksItemPreviewOnPawnActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Temp_IASDerezAbsorbPoint;                          // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow1;                                            // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             Directional_Light_For_Atmosphere_PC;               // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLightPC;                                        // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLightLowMobile;                                 // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLightMobile;                            // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight_StandaloneForSwitch;                      // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight5;                                         // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight6;                                         // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLigh3;                                          // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight2;                                         // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    BounceRear1;                                       // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLowerRight1;                                    // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLeft1;                                          // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimTopRight1;                                      // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimBottomLeft1;                                    // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Bounce1;                                           // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightTransform;                                    // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Sample_Mesh;                                       // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RezInMaterialEffectTimeLine2_NewTrack_0_EE684F644FE38B4A30D17FB8CF917357; // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RezInMaterialEffectTimeLine2__Direction_EE684F644FE38B4A30D17FB8CF917357; // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B5[0x3];                                      // 0x07B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RezInMaterialEffectTimeLine2;                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         RezInMaterialEffectTimeLine_NewTrack_0_9C89220943F4EBA1DF12D38A05B1FC5C; // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RezInMaterialEffectTimeLine__Direction_9C89220943F4EBA1DF12D38A05B1FC5C; // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RezInMaterialEffectTimeLine;                       // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysOn;                                          // 0x07D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x07D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          debugConstructionLighting;                         // 0x07D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D3[0x5];                                      // 0x07D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ObscuringLoopEmitter;                              // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ToonLightRotatio;                                  // 0x07E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsBattlePassReward;                               // 0x07F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LOD_StreamingSafetyTimer;                          // 0x0800(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DefaultFloorMaterial;                              // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CustomFloorMaterial;                               // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStateTransitionPauseRequestHandle     ItemsPendingTransitionOutHandle;                   // 0x0818(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFXSystemComponent*                     IASLoadingFX_LoopFX;                               // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Secondary_Transition_Effects;                  // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Floor;                                        // 0x0831(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_832[0x6];                                      // 0x0832(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           IASLoadingDelayTimer;                              // 0x0838(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           IASLoadingFXDestroyDelayTimer;                     // 0x0840(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           IASResinDelayTimer;                                // 0x0848(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Backup_LODStreamingFailed();
	void DestroyLoadingEffects();
	void ExecuteUbergraph_B_SparksOnActorPreviewDefault(int32 EntryPoint);
	void FinishShowingResOutEffects();
	void Get_LOD_Streaming_Safety_Duration();
	void HandleLightingSettingsChanged();
	void Internal_ItemsPendingTransitionOutComplete(const struct FStateTransitionControllerHandle& TransitionController);
	void IsSkyDiveContrailItem(bool* bSuccess);
	void LightControl(bool Active);
	void OnAllLODStreamingComplete();
	void OnCurrentVisualsCleanedUp();
	void OnItemsPendingTransitionOut(const struct FStateTransitionControllerHandle& TransitionController);
	void OnItemsPendingTransitionOut_EnsureAllResOutEffectsAreCleanedUp();
	void OnItemsPendingTransitionOut_SpawnResOutEffects();
	void OnPreviewVisualsBeginLoading();
	void OnPreviewVisualsSpawned(const bool bUseSecondaryTransitionEffects, const bool bShowFloor);
	void OnSetFloorMaterial(class UMaterialInterface* InMaterialInstance);
	void OnUpdateFloorMaterial(bool bEnableAutotestBackground);
	void OutroAndDestroyLoadingEffects();
	void RezInMaterialEffect();
	void RezInMaterialEffectTimeLine2__FinishedFunc();
	void RezInMaterialEffectTimeLine2__UpdateFunc();
	void RezInMaterialEffectTimeLine__FinishedFunc();
	void RezInMaterialEffectTimeLine__UpdateFunc();
	void SetFloorEnabled(bool Show_Floor_0);
	void SetupFloor();
	void SetupLighting();
	void SpawnLoadingEffects();
	void SpawnResInEffects();
	void SpawnSoundPlayback();
	void SwitchErebusLighting(bool Visibility);
	void SwitchMobileLighting(bool NewParam);
	void SwitchPCLighting(bool Visibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SparksOnActorPreviewDefault_C">();
	}
	static class AB_SparksOnActorPreviewDefault_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SparksOnActorPreviewDefault_C>();
	}
};
static_assert(alignof(AB_SparksOnActorPreviewDefault_C) == 0x000010, "Wrong alignment on AB_SparksOnActorPreviewDefault_C");
static_assert(sizeof(AB_SparksOnActorPreviewDefault_C) == 0x000850, "Wrong size on AB_SparksOnActorPreviewDefault_C");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, UberGraphFrame) == 0x000700, "Member 'AB_SparksOnActorPreviewDefault_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Temp_IASDerezAbsorbPoint) == 0x000708, "Member 'AB_SparksOnActorPreviewDefault_C::Temp_IASDerezAbsorbPoint' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Arrow1) == 0x000710, "Member 'AB_SparksOnActorPreviewDefault_C::Arrow1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Directional_Light_For_Atmosphere_PC) == 0x000718, "Member 'AB_SparksOnActorPreviewDefault_C::Directional_Light_For_Atmosphere_PC' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, SkyLightPC) == 0x000720, "Member 'AB_SparksOnActorPreviewDefault_C::SkyLightPC' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Arrow) == 0x000728, "Member 'AB_SparksOnActorPreviewDefault_C::Arrow' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, SkyLightLowMobile) == 0x000730, "Member 'AB_SparksOnActorPreviewDefault_C::SkyLightLowMobile' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, DirectionalLightMobile) == 0x000738, "Member 'AB_SparksOnActorPreviewDefault_C::DirectionalLightMobile' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, KeyLight_StandaloneForSwitch) == 0x000740, "Member 'AB_SparksOnActorPreviewDefault_C::KeyLight_StandaloneForSwitch' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, KeyLight5) == 0x000748, "Member 'AB_SparksOnActorPreviewDefault_C::KeyLight5' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, KeyLight6) == 0x000750, "Member 'AB_SparksOnActorPreviewDefault_C::KeyLight6' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, KeyLigh3) == 0x000758, "Member 'AB_SparksOnActorPreviewDefault_C::KeyLigh3' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, KeyLight2) == 0x000760, "Member 'AB_SparksOnActorPreviewDefault_C::KeyLight2' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, BounceRear1) == 0x000768, "Member 'AB_SparksOnActorPreviewDefault_C::BounceRear1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RimLowerRight1) == 0x000770, "Member 'AB_SparksOnActorPreviewDefault_C::RimLowerRight1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RimLeft1) == 0x000778, "Member 'AB_SparksOnActorPreviewDefault_C::RimLeft1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RimTopRight1) == 0x000780, "Member 'AB_SparksOnActorPreviewDefault_C::RimTopRight1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RimBottomLeft1) == 0x000788, "Member 'AB_SparksOnActorPreviewDefault_C::RimBottomLeft1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Bounce1) == 0x000790, "Member 'AB_SparksOnActorPreviewDefault_C::Bounce1' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, LightTransform) == 0x000798, "Member 'AB_SparksOnActorPreviewDefault_C::LightTransform' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Plane) == 0x0007A0, "Member 'AB_SparksOnActorPreviewDefault_C::Plane' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Sample_Mesh) == 0x0007A8, "Member 'AB_SparksOnActorPreviewDefault_C::Sample_Mesh' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RezInMaterialEffectTimeLine2_NewTrack_0_EE684F644FE38B4A30D17FB8CF917357) == 0x0007B0, "Member 'AB_SparksOnActorPreviewDefault_C::RezInMaterialEffectTimeLine2_NewTrack_0_EE684F644FE38B4A30D17FB8CF917357' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RezInMaterialEffectTimeLine2__Direction_EE684F644FE38B4A30D17FB8CF917357) == 0x0007B4, "Member 'AB_SparksOnActorPreviewDefault_C::RezInMaterialEffectTimeLine2__Direction_EE684F644FE38B4A30D17FB8CF917357' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RezInMaterialEffectTimeLine2) == 0x0007B8, "Member 'AB_SparksOnActorPreviewDefault_C::RezInMaterialEffectTimeLine2' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RezInMaterialEffectTimeLine_NewTrack_0_9C89220943F4EBA1DF12D38A05B1FC5C) == 0x0007C0, "Member 'AB_SparksOnActorPreviewDefault_C::RezInMaterialEffectTimeLine_NewTrack_0_9C89220943F4EBA1DF12D38A05B1FC5C' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RezInMaterialEffectTimeLine__Direction_9C89220943F4EBA1DF12D38A05B1FC5C) == 0x0007C4, "Member 'AB_SparksOnActorPreviewDefault_C::RezInMaterialEffectTimeLine__Direction_9C89220943F4EBA1DF12D38A05B1FC5C' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, RezInMaterialEffectTimeLine) == 0x0007C8, "Member 'AB_SparksOnActorPreviewDefault_C::RezInMaterialEffectTimeLine' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, AlwaysOn) == 0x0007D0, "Member 'AB_SparksOnActorPreviewDefault_C::AlwaysOn' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, IsActive) == 0x0007D1, "Member 'AB_SparksOnActorPreviewDefault_C::IsActive' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, debugConstructionLighting) == 0x0007D2, "Member 'AB_SparksOnActorPreviewDefault_C::debugConstructionLighting' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, ObscuringLoopEmitter) == 0x0007D8, "Member 'AB_SparksOnActorPreviewDefault_C::ObscuringLoopEmitter' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, ToonLightRotatio) == 0x0007E0, "Member 'AB_SparksOnActorPreviewDefault_C::ToonLightRotatio' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, bIsBattlePassReward) == 0x0007F8, "Member 'AB_SparksOnActorPreviewDefault_C::bIsBattlePassReward' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, LOD_StreamingSafetyTimer) == 0x000800, "Member 'AB_SparksOnActorPreviewDefault_C::LOD_StreamingSafetyTimer' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, DefaultFloorMaterial) == 0x000808, "Member 'AB_SparksOnActorPreviewDefault_C::DefaultFloorMaterial' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, CustomFloorMaterial) == 0x000810, "Member 'AB_SparksOnActorPreviewDefault_C::CustomFloorMaterial' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, ItemsPendingTransitionOutHandle) == 0x000818, "Member 'AB_SparksOnActorPreviewDefault_C::ItemsPendingTransitionOutHandle' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, IASLoadingFX_LoopFX) == 0x000828, "Member 'AB_SparksOnActorPreviewDefault_C::IASLoadingFX_LoopFX' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Use_Secondary_Transition_Effects) == 0x000830, "Member 'AB_SparksOnActorPreviewDefault_C::Use_Secondary_Transition_Effects' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, Show_Floor) == 0x000831, "Member 'AB_SparksOnActorPreviewDefault_C::Show_Floor' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, IASLoadingDelayTimer) == 0x000838, "Member 'AB_SparksOnActorPreviewDefault_C::IASLoadingDelayTimer' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, IASLoadingFXDestroyDelayTimer) == 0x000840, "Member 'AB_SparksOnActorPreviewDefault_C::IASLoadingFXDestroyDelayTimer' has a wrong offset!");
static_assert(offsetof(AB_SparksOnActorPreviewDefault_C, IASResinDelayTimer) == 0x000848, "Member 'AB_SparksOnActorPreviewDefault_C::IASResinDelayTimer' has a wrong offset!");

}

