#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeDynamicUIRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum CreativeDynamicUIRuntime.ECreativeDynamicUIAnchor
// NumValues: 0x0009
enum class ECreativeDynamicUIAnchor : uint8
{
	TopLeft                                  = 0,
	TopCenter                                = 1,
	TopRight                                 = 2,
	CenterLeft                               = 3,
	CenterCenter                             = 4,
	CenterRight                              = 5,
	BottomLeft                               = 6,
	BottomCenter                             = 7,
	BottomRight                              = 8,
};

// Enum CreativeDynamicUIRuntime.ECreativeDynamicUIAlignment
// NumValues: 0x0010
enum class ECreativeDynamicUIAlignment : uint8
{
	TopLeft                                  = 0,
	TopCenter                                = 1,
	TopRight                                 = 2,
	MiddleLeft                               = 3,
	Centered                                 = 4,
	MiddleRight                              = 5,
	BottomLeft                               = 6,
	BottomCenter                             = 7,
	BottomRight                              = 8,
	CenteredFull                             = 9,
	LeftTall                                 = 10,
	CenteredTall                             = 11,
	RightTall                                = 12,
	TopWide                                  = 13,
	CenteredWide                             = 14,
	BottomWide                               = 15,
};

// Enum CreativeDynamicUIRuntime.ECreativeDynamicUIAspectRatioType
// NumValues: 0x0007
enum class ECreativeDynamicUIAspectRatioType : uint8
{
	None                                     = 0,
	AspectRatio_1_1                          = 1,
	AspectRatio_4_3                          = 2,
	AspectRatio_5_4                          = 3,
	AspectRatio_16_9                         = 4,
	AspectRatio_16_10                        = 5,
	AspectRatio_21_9                         = 6,
};

// Enum CreativeDynamicUIRuntime.ECreativeDynamicUILayoutConstraintType
// NumValues: 0x0002
enum class ECreativeDynamicUILayoutConstraintType : uint8
{
	None                                     = 0,
	Alignment                                = 1,
};

// Enum CreativeDynamicUIRuntime.ECreativeDynamicUISizeModifierType
// NumValues: 0x0003
enum class ECreativeDynamicUISizeModifierType : uint8
{
	None                                     = 0,
	Fixed                                    = 1,
	Scale                                    = 2,
};

// ScriptStruct CreativeDynamicUIRuntime.CreativeDynamicUIAlignmentConstraint
// 0x0018 (0x0018 - 0x0000)
struct FCreativeDynamicUIAlignmentConstraint final
{
public:
	ECreativeDynamicUIAlignment                   Alignment;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECreativeDynamicUIAnchor                      Anchor;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECreativeDynamicUIAspectRatioType             AspectRatio;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Offset;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCreativeDynamicUIAlignmentConstraint) == 0x000008, "Wrong alignment on FCreativeDynamicUIAlignmentConstraint");
static_assert(sizeof(FCreativeDynamicUIAlignmentConstraint) == 0x000018, "Wrong size on FCreativeDynamicUIAlignmentConstraint");
static_assert(offsetof(FCreativeDynamicUIAlignmentConstraint, Alignment) == 0x000000, "Member 'FCreativeDynamicUIAlignmentConstraint::Alignment' has a wrong offset!");
static_assert(offsetof(FCreativeDynamicUIAlignmentConstraint, Anchor) == 0x000001, "Member 'FCreativeDynamicUIAlignmentConstraint::Anchor' has a wrong offset!");
static_assert(offsetof(FCreativeDynamicUIAlignmentConstraint, AspectRatio) == 0x000002, "Member 'FCreativeDynamicUIAlignmentConstraint::AspectRatio' has a wrong offset!");
static_assert(offsetof(FCreativeDynamicUIAlignmentConstraint, Offset) == 0x000008, "Member 'FCreativeDynamicUIAlignmentConstraint::Offset' has a wrong offset!");

// ScriptStruct CreativeDynamicUIRuntime.CreativeDynamicUIFixedSizeModifier
// 0x000C (0x000C - 0x0000)
struct FCreativeDynamicUIFixedSizeModifier final
{
public:
	struct FVector2f                              Size;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRenderTransform;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCreativeDynamicUIFixedSizeModifier) == 0x000004, "Wrong alignment on FCreativeDynamicUIFixedSizeModifier");
static_assert(sizeof(FCreativeDynamicUIFixedSizeModifier) == 0x00000C, "Wrong size on FCreativeDynamicUIFixedSizeModifier");
static_assert(offsetof(FCreativeDynamicUIFixedSizeModifier, Size) == 0x000000, "Member 'FCreativeDynamicUIFixedSizeModifier::Size' has a wrong offset!");
static_assert(offsetof(FCreativeDynamicUIFixedSizeModifier, bUseRenderTransform) == 0x000008, "Member 'FCreativeDynamicUIFixedSizeModifier::bUseRenderTransform' has a wrong offset!");

// ScriptStruct CreativeDynamicUIRuntime.CreativeDynamicUIScaleSizeModifier
// 0x000C (0x000C - 0x0000)
struct FCreativeDynamicUIScaleSizeModifier final
{
public:
	struct FVector2f                              Scale;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRenderTransform;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCreativeDynamicUIScaleSizeModifier) == 0x000004, "Wrong alignment on FCreativeDynamicUIScaleSizeModifier");
static_assert(sizeof(FCreativeDynamicUIScaleSizeModifier) == 0x00000C, "Wrong size on FCreativeDynamicUIScaleSizeModifier");
static_assert(offsetof(FCreativeDynamicUIScaleSizeModifier, Scale) == 0x000000, "Member 'FCreativeDynamicUIScaleSizeModifier::Scale' has a wrong offset!");
static_assert(offsetof(FCreativeDynamicUIScaleSizeModifier, bUseRenderTransform) == 0x000008, "Member 'FCreativeDynamicUIScaleSizeModifier::bUseRenderTransform' has a wrong offset!");

}

