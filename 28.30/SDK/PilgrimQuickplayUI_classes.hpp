#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimQuickplayUI

#include "Basic.hpp"

#include "PilgrimCoreRuntime_structs.hpp"
#include "CommonUI_classes.hpp"
#include "DynamicUI_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Class PilgrimQuickplayUI.FestivalPassTrackingWidget
// 0x0010 (0x02F8 - 0x02E8)
class UFestivalPassTrackingWidget final : public UCommonUserWidget
{
public:
	int32                                         CurrentProgress;                                   // 0x02E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPersistentResourceItemDefinition*  TrackedItem;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleMCPInventoryChanged(const TSet<class FString>& ItemChangeFlags, int64 ProfileRevision);
	void OnProgressUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FestivalPassTrackingWidget">();
	}
	static class UFestivalPassTrackingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFestivalPassTrackingWidget>();
	}
};
static_assert(alignof(UFestivalPassTrackingWidget) == 0x000008, "Wrong alignment on UFestivalPassTrackingWidget");
static_assert(sizeof(UFestivalPassTrackingWidget) == 0x0002F8, "Wrong size on UFestivalPassTrackingWidget");
static_assert(offsetof(UFestivalPassTrackingWidget, CurrentProgress) == 0x0002E8, "Member 'UFestivalPassTrackingWidget::CurrentProgress' has a wrong offset!");
static_assert(offsetof(UFestivalPassTrackingWidget, TrackedItem) == 0x0002F0, "Member 'UFestivalPassTrackingWidget::TrackedItem' has a wrong offset!");

// Class PilgrimQuickplayUI.PilgrimDynamicUIDirector
// 0x0028 (0x02D8 - 0x02B0)
class APilgrimDynamicUIDirector final : public ADynamicUIDirectorBase
{
public:
	uint8                                         Pad_2B0[0x28];                                     // 0x02B0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleCursorModeChanging(bool bCursorModeEnabled, class FName ActionName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimDynamicUIDirector">();
	}
	static class APilgrimDynamicUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimDynamicUIDirector>();
	}
};
static_assert(alignof(APilgrimDynamicUIDirector) == 0x000008, "Wrong alignment on APilgrimDynamicUIDirector");
static_assert(sizeof(APilgrimDynamicUIDirector) == 0x0002D8, "Wrong size on APilgrimDynamicUIDirector");

// Class PilgrimQuickplayUI.PilgrimHUDBase
// 0x0020 (0x0478 - 0x0458)
class UPilgrimHUDBase final : public UFortNullHUD
{
public:
	TSoftClassPtr<class UClass>                   EmotePickerClass;                                  // 0x0458(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandlePickerOpenRequest(EFortPickerMode Mode, int32 InitialOption, bool bIgnoreFirstAccept);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimHUDBase">();
	}
	static class UPilgrimHUDBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimHUDBase>();
	}
};
static_assert(alignof(UPilgrimHUDBase) == 0x000008, "Wrong alignment on UPilgrimHUDBase");
static_assert(sizeof(UPilgrimHUDBase) == 0x000478, "Wrong size on UPilgrimHUDBase");
static_assert(offsetof(UPilgrimHUDBase, EmotePickerClass) == 0x000458, "Member 'UPilgrimHUDBase::EmotePickerClass' has a wrong offset!");

// Class PilgrimQuickplayUI.PilgrimPostGameQuestList
// 0x0060 (0x0348 - 0x02E8)
class UPilgrimPostGameQuestList final : public UCommonUserWidget
{
public:
	class UDynamicEntryBox*                       EntryBox_Quests;                                   // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, TWeakObjectPtr<class UPilgrimQuestNotificationEntry>> QuestWidgetMap;                                    // 0x02F0(0x0050)(ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bShowCompletedQuests;                              // 0x0340(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowUpdatedQuests;                                // 0x0341(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowUnchangedQuests;                              // 0x0342(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetShowQuests(const bool bNewShowCompleted, const bool bNewShowUpdated, const bool bNewShowUnchanged);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPostGameQuestList">();
	}
	static class UPilgrimPostGameQuestList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPostGameQuestList>();
	}
};
static_assert(alignof(UPilgrimPostGameQuestList) == 0x000008, "Wrong alignment on UPilgrimPostGameQuestList");
static_assert(sizeof(UPilgrimPostGameQuestList) == 0x000348, "Wrong size on UPilgrimPostGameQuestList");
static_assert(offsetof(UPilgrimPostGameQuestList, EntryBox_Quests) == 0x0002E8, "Member 'UPilgrimPostGameQuestList::EntryBox_Quests' has a wrong offset!");
static_assert(offsetof(UPilgrimPostGameQuestList, QuestWidgetMap) == 0x0002F0, "Member 'UPilgrimPostGameQuestList::QuestWidgetMap' has a wrong offset!");
static_assert(offsetof(UPilgrimPostGameQuestList, bShowCompletedQuests) == 0x000340, "Member 'UPilgrimPostGameQuestList::bShowCompletedQuests' has a wrong offset!");
static_assert(offsetof(UPilgrimPostGameQuestList, bShowUpdatedQuests) == 0x000341, "Member 'UPilgrimPostGameQuestList::bShowUpdatedQuests' has a wrong offset!");
static_assert(offsetof(UPilgrimPostGameQuestList, bShowUnchangedQuests) == 0x000342, "Member 'UPilgrimPostGameQuestList::bShowUnchangedQuests' has a wrong offset!");

// Class PilgrimQuickplayUI.PilgrimQuickplayInfoModal
// 0x0028 (0x0428 - 0x0400)
class UPilgrimQuickplayInfoModal final : public UCommonActivatableWidget
{
public:
	class UVerticalBox*                           Vbox_Panels;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_Close;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_Close_Alt;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_CloseTouch;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaScrollBox*                       ScrollBox_Panels;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_OnScrollCompleted(bool bScrolledDown);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuickplayInfoModal">();
	}
	static class UPilgrimQuickplayInfoModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuickplayInfoModal>();
	}
};
static_assert(alignof(UPilgrimQuickplayInfoModal) == 0x000008, "Wrong alignment on UPilgrimQuickplayInfoModal");
static_assert(sizeof(UPilgrimQuickplayInfoModal) == 0x000428, "Wrong size on UPilgrimQuickplayInfoModal");
static_assert(offsetof(UPilgrimQuickplayInfoModal, Vbox_Panels) == 0x000400, "Member 'UPilgrimQuickplayInfoModal::Vbox_Panels' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplayInfoModal, Button_Close) == 0x000408, "Member 'UPilgrimQuickplayInfoModal::Button_Close' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplayInfoModal, Button_Close_Alt) == 0x000410, "Member 'UPilgrimQuickplayInfoModal::Button_Close_Alt' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplayInfoModal, Button_CloseTouch) == 0x000418, "Member 'UPilgrimQuickplayInfoModal::Button_CloseTouch' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplayInfoModal, ScrollBox_Panels) == 0x000420, "Member 'UPilgrimQuickplayInfoModal::ScrollBox_Panels' has a wrong offset!");

// Class PilgrimQuickplayUI.PilgrimQuickplaySpotlightList
// 0x0020 (0x0308 - 0x02E8)
class UPilgrimQuickplaySpotlightList final : public UCommonUserWidget
{
public:
	TArray<struct FPilgrimSpotlightCompetition>   SpotlightCompetitions;                             // 0x02E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxSpotlights;                                     // 0x02F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SelectedIndex;                                     // 0x02FC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicEntryBox*                       EntryBox_SpotlightCompetitions;                    // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnSpotlightListUpdated();
	void PopulateSpotlightCompetitionList();
	void SelectNextIndex();
	void SelectPrevIndex();
	void SetMaxSpotlights(int32 NewMaxSpotlights);
	void SetSelectedIndex(int32 NewSelectedIndex);
	void UpdateSpotlightList();

	int32 GetSelectedIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuickplaySpotlightList">();
	}
	static class UPilgrimQuickplaySpotlightList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuickplaySpotlightList>();
	}
};
static_assert(alignof(UPilgrimQuickplaySpotlightList) == 0x000008, "Wrong alignment on UPilgrimQuickplaySpotlightList");
static_assert(sizeof(UPilgrimQuickplaySpotlightList) == 0x000308, "Wrong size on UPilgrimQuickplaySpotlightList");
static_assert(offsetof(UPilgrimQuickplaySpotlightList, SpotlightCompetitions) == 0x0002E8, "Member 'UPilgrimQuickplaySpotlightList::SpotlightCompetitions' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightList, MaxSpotlights) == 0x0002F8, "Member 'UPilgrimQuickplaySpotlightList::MaxSpotlights' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightList, SelectedIndex) == 0x0002FC, "Member 'UPilgrimQuickplaySpotlightList::SelectedIndex' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightList, EntryBox_SpotlightCompetitions) == 0x000300, "Member 'UPilgrimQuickplaySpotlightList::EntryBox_SpotlightCompetitions' has a wrong offset!");

// Class PilgrimQuickplayUI.PilgrimQuickplay_UIResultBase
// 0x0008 (0x0408 - 0x0400)
class UPilgrimQuickplay_UIResultBase final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_400[0x8];                                      // 0x0400(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuickplay_UIResultBase">();
	}
	static class UPilgrimQuickplay_UIResultBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuickplay_UIResultBase>();
	}
};
static_assert(alignof(UPilgrimQuickplay_UIResultBase) == 0x000008, "Wrong alignment on UPilgrimQuickplay_UIResultBase");
static_assert(sizeof(UPilgrimQuickplay_UIResultBase) == 0x000408, "Wrong size on UPilgrimQuickplay_UIResultBase");

// Class PilgrimQuickplayUI.PilgrimQuestNotificationEntry
// 0x0030 (0x0318 - 0x02E8)
class UPilgrimQuestNotificationEntry final : public UCommonUserWidget
{
public:
	class UCommonTextBlock*                       Text_Description;                                  // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_CategoryDisplay;                              // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_FlavorText;                                   // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         RichText_ObjectivesCompleted;                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Image_Completion;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaChallengeRewards*                UserWidget_Rewards;                                // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InitializeQuestNotification(TScriptInterface<class IQuestInstanceInterface> InQuest);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuestNotificationEntry">();
	}
	static class UPilgrimQuestNotificationEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuestNotificationEntry>();
	}
};
static_assert(alignof(UPilgrimQuestNotificationEntry) == 0x000008, "Wrong alignment on UPilgrimQuestNotificationEntry");
static_assert(sizeof(UPilgrimQuestNotificationEntry) == 0x000318, "Wrong size on UPilgrimQuestNotificationEntry");
static_assert(offsetof(UPilgrimQuestNotificationEntry, Text_Description) == 0x0002E8, "Member 'UPilgrimQuestNotificationEntry::Text_Description' has a wrong offset!");
static_assert(offsetof(UPilgrimQuestNotificationEntry, Text_CategoryDisplay) == 0x0002F0, "Member 'UPilgrimQuestNotificationEntry::Text_CategoryDisplay' has a wrong offset!");
static_assert(offsetof(UPilgrimQuestNotificationEntry, Text_FlavorText) == 0x0002F8, "Member 'UPilgrimQuestNotificationEntry::Text_FlavorText' has a wrong offset!");
static_assert(offsetof(UPilgrimQuestNotificationEntry, RichText_ObjectivesCompleted) == 0x000300, "Member 'UPilgrimQuestNotificationEntry::RichText_ObjectivesCompleted' has a wrong offset!");
static_assert(offsetof(UPilgrimQuestNotificationEntry, Image_Completion) == 0x000308, "Member 'UPilgrimQuestNotificationEntry::Image_Completion' has a wrong offset!");
static_assert(offsetof(UPilgrimQuestNotificationEntry, UserWidget_Rewards) == 0x000310, "Member 'UPilgrimQuestNotificationEntry::UserWidget_Rewards' has a wrong offset!");

// Class PilgrimQuickplayUI.PilgrimQuickplaySpotlightEntry
// 0x00A8 (0x0390 - 0x02E8)
class UPilgrimQuickplaySpotlightEntry final : public UCommonUserWidget
{
public:
	uint8                                         bEmptySpotlight : 1;                               // 0x02E8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortLazyImage*                         Image_SongArt;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SongTitle;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SongArtist;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_Constraints;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPilgrimSpotlightCompetition           SpotlightData;                                     // 0x0310(0x0070)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<class UPilgrimSongMetadata*>           SpotlightSongMetadatas;                            // 0x0380(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void OnSpotlightInitialized();
	void SetEmptySpotlight();
	void SpotlightEntryUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuickplaySpotlightEntry">();
	}
	static class UPilgrimQuickplaySpotlightEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuickplaySpotlightEntry>();
	}
};
static_assert(alignof(UPilgrimQuickplaySpotlightEntry) == 0x000008, "Wrong alignment on UPilgrimQuickplaySpotlightEntry");
static_assert(sizeof(UPilgrimQuickplaySpotlightEntry) == 0x000390, "Wrong size on UPilgrimQuickplaySpotlightEntry");
static_assert(offsetof(UPilgrimQuickplaySpotlightEntry, Image_SongArt) == 0x0002F0, "Member 'UPilgrimQuickplaySpotlightEntry::Image_SongArt' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightEntry, Text_SongTitle) == 0x0002F8, "Member 'UPilgrimQuickplaySpotlightEntry::Text_SongTitle' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightEntry, Text_SongArtist) == 0x000300, "Member 'UPilgrimQuickplaySpotlightEntry::Text_SongArtist' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightEntry, Text_Constraints) == 0x000308, "Member 'UPilgrimQuickplaySpotlightEntry::Text_Constraints' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightEntry, SpotlightData) == 0x000310, "Member 'UPilgrimQuickplaySpotlightEntry::SpotlightData' has a wrong offset!");
static_assert(offsetof(UPilgrimQuickplaySpotlightEntry, SpotlightSongMetadatas) == 0x000380, "Member 'UPilgrimQuickplaySpotlightEntry::SpotlightSongMetadatas' has a wrong offset!");

}

