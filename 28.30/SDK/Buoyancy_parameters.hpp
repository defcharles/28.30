#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buoyancy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Buoyancy.BuoyancyEventInterface.OnSurfaceTouchBegin
// 0x0050 (0x0050 - 0x0000)
struct BuoyancyEventInterface_OnSurfaceTouchBegin final
{
public:
	class AWaterBody*                             WaterBodyActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    WaterComponent;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    SubmergedComponent;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubmergedVolume;                                   // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SubmergedCenterOfMass;                             // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SubmergedVelocity;                                 // 0x0038(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyEventInterface_OnSurfaceTouchBegin) == 0x000008, "Wrong alignment on BuoyancyEventInterface_OnSurfaceTouchBegin");
static_assert(sizeof(BuoyancyEventInterface_OnSurfaceTouchBegin) == 0x000050, "Wrong size on BuoyancyEventInterface_OnSurfaceTouchBegin");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchBegin, WaterBodyActor) == 0x000000, "Member 'BuoyancyEventInterface_OnSurfaceTouchBegin::WaterBodyActor' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchBegin, WaterComponent) == 0x000008, "Member 'BuoyancyEventInterface_OnSurfaceTouchBegin::WaterComponent' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchBegin, SubmergedComponent) == 0x000010, "Member 'BuoyancyEventInterface_OnSurfaceTouchBegin::SubmergedComponent' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchBegin, SubmergedVolume) == 0x000018, "Member 'BuoyancyEventInterface_OnSurfaceTouchBegin::SubmergedVolume' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchBegin, SubmergedCenterOfMass) == 0x000020, "Member 'BuoyancyEventInterface_OnSurfaceTouchBegin::SubmergedCenterOfMass' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchBegin, SubmergedVelocity) == 0x000038, "Member 'BuoyancyEventInterface_OnSurfaceTouchBegin::SubmergedVelocity' has a wrong offset!");

// Function Buoyancy.BuoyancyEventInterface.OnSurfaceTouchEnd
// 0x0050 (0x0050 - 0x0000)
struct BuoyancyEventInterface_OnSurfaceTouchEnd final
{
public:
	class AWaterBody*                             WaterBodyActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    WaterComponent;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    SubmergedComponent;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubmergedVolume;                                   // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SubmergedCenterOfMass;                             // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SubmergedVelocity;                                 // 0x0038(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyEventInterface_OnSurfaceTouchEnd) == 0x000008, "Wrong alignment on BuoyancyEventInterface_OnSurfaceTouchEnd");
static_assert(sizeof(BuoyancyEventInterface_OnSurfaceTouchEnd) == 0x000050, "Wrong size on BuoyancyEventInterface_OnSurfaceTouchEnd");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchEnd, WaterBodyActor) == 0x000000, "Member 'BuoyancyEventInterface_OnSurfaceTouchEnd::WaterBodyActor' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchEnd, WaterComponent) == 0x000008, "Member 'BuoyancyEventInterface_OnSurfaceTouchEnd::WaterComponent' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchEnd, SubmergedComponent) == 0x000010, "Member 'BuoyancyEventInterface_OnSurfaceTouchEnd::SubmergedComponent' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchEnd, SubmergedVolume) == 0x000018, "Member 'BuoyancyEventInterface_OnSurfaceTouchEnd::SubmergedVolume' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchEnd, SubmergedCenterOfMass) == 0x000020, "Member 'BuoyancyEventInterface_OnSurfaceTouchEnd::SubmergedCenterOfMass' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouchEnd, SubmergedVelocity) == 0x000038, "Member 'BuoyancyEventInterface_OnSurfaceTouchEnd::SubmergedVelocity' has a wrong offset!");

// Function Buoyancy.BuoyancyEventInterface.OnSurfaceTouching
// 0x0050 (0x0050 - 0x0000)
struct BuoyancyEventInterface_OnSurfaceTouching final
{
public:
	class AWaterBody*                             WaterBodyActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    WaterComponent;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    SubmergedComponent;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubmergedVolume;                                   // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SubmergedCenterOfMass;                             // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SubmergedVelocity;                                 // 0x0038(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyEventInterface_OnSurfaceTouching) == 0x000008, "Wrong alignment on BuoyancyEventInterface_OnSurfaceTouching");
static_assert(sizeof(BuoyancyEventInterface_OnSurfaceTouching) == 0x000050, "Wrong size on BuoyancyEventInterface_OnSurfaceTouching");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouching, WaterBodyActor) == 0x000000, "Member 'BuoyancyEventInterface_OnSurfaceTouching::WaterBodyActor' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouching, WaterComponent) == 0x000008, "Member 'BuoyancyEventInterface_OnSurfaceTouching::WaterComponent' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouching, SubmergedComponent) == 0x000010, "Member 'BuoyancyEventInterface_OnSurfaceTouching::SubmergedComponent' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouching, SubmergedVolume) == 0x000018, "Member 'BuoyancyEventInterface_OnSurfaceTouching::SubmergedVolume' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouching, SubmergedCenterOfMass) == 0x000020, "Member 'BuoyancyEventInterface_OnSurfaceTouching::SubmergedCenterOfMass' has a wrong offset!");
static_assert(offsetof(BuoyancyEventInterface_OnSurfaceTouching, SubmergedVelocity) == 0x000038, "Member 'BuoyancyEventInterface_OnSurfaceTouching::SubmergedVelocity' has a wrong offset!");

// Function Buoyancy.BuoyancySubsystem.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct BuoyancySubsystem_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancySubsystem_IsEnabled) == 0x000001, "Wrong alignment on BuoyancySubsystem_IsEnabled");
static_assert(sizeof(BuoyancySubsystem_IsEnabled) == 0x000001, "Wrong size on BuoyancySubsystem_IsEnabled");
static_assert(offsetof(BuoyancySubsystem_IsEnabled, ReturnValue) == 0x000000, "Member 'BuoyancySubsystem_IsEnabled::ReturnValue' has a wrong offset!");

}

