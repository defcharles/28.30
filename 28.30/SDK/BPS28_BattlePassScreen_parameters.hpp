#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS28_BattlePassScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "BattlePassBase_structs.hpp"
#include "Engine_structs.hpp"
#include "BattlePassS28UI_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature final
{
public:
	struct FBattlePassLandingPageButtonDisplayDetails DisplayInfo;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bShowRewardCount;                                  // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ButtonId;                                          // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature");
static_assert(sizeof(BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature) == 0x000088, "Wrong size on BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature");
static_assert(offsetof(BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature, DisplayInfo) == 0x000000, "Member 'BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature::DisplayInfo' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature, bShowRewardCount) == 0x000070, "Member 'BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature::bShowRewardCount' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature, ButtonId) == 0x000078, "Member 'BPS28_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature::ButtonId' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature");
static_assert(sizeof(BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature");
static_assert(offsetof(BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature, InVisibility) == 0x000000, "Member 'BPS28_BattlePassScreen_C_BndEvt__BPS23_BattlePassScreen_Button_PageComplete_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature::InVisibility' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'BPS28_BattlePassScreen_C_BndEvt__BPS24_BattlePassScreen_Button_EquipItem_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'BPS28_BattlePassScreen_C_BndEvt__BPS28_BattlePassScreen_Button_EquipItem_Preview_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.CreateItemVMCard
// 0x0040 (0x0040 - 0x0000)
struct BPS28_BattlePassScreen_C_CreateItemVMCard final
{
public:
	class UFortItemVM*                            ItemVM;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAthenaSeasonItemEntryBase*             ItemSelected;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseItemThumbnail;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_BP_CreateEntry_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_ItemCard_BattlePass_C*       K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Battle_Pass; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              CallFunc_GetPrimaryGrantedItem_ReturnValue;        // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_CreateItemVMCard) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_CreateItemVMCard");
static_assert(sizeof(BPS28_BattlePassScreen_C_CreateItemVMCard) == 0x000040, "Wrong size on BPS28_BattlePassScreen_C_CreateItemVMCard");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, ItemVM) == 0x000000, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::ItemVM' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, ItemSelected) == 0x000008, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::ItemSelected' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, UseItemThumbnail) == 0x000010, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::UseItemThumbnail' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, CallFunc_BP_CreateEntry_ReturnValue) == 0x000020, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::CallFunc_BP_CreateEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Battle_Pass) == 0x000028, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Battle_Pass' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_CreateItemVMCard, CallFunc_GetPrimaryGrantedItem_ReturnValue) == 0x000038, "Member 'BPS28_BattlePassScreen_C_CreateItemVMCard::CallFunc_GetPrimaryGrantedItem_ReturnValue' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.ExecuteUbergraph_BPS28_BattlePassScreen
// 0x0FB0 (0x0FB0 - 0x0000)
struct BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B8(0x0018)()
	EBattlePassView                               Temp_byte_Variable_5;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00E0(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x00F0(0x0010)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0100(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x011C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentIndex;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalNumVariants;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0150(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B0(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0018)()
	EBattlePassView                               K2Node_Event_NewView;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVaultWorld_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0238(0x0010)(ReferenceParm)
	TArray<class AFrontendCamera_VaultRotator_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0248(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayBPVideo_ReturnValue;            // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RowDisplayName;                       // 0x0268(0x0018)(ConstParm)
	class UCommonButtonBase*                      K2Node_Event_Button;                               // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_Button_Regular_C*            K2Node_DynamicCast_AsWBP_UIKit_Button_Regular;     // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVaultWorld_C*                          CallFunc_Array_Get_Item;                           // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    K2Node_Event_Rarity;                               // 0x02B0(0x0080)()
	bool                                          K2Node_Event_bNoReward;                            // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              K2Node_Event_RewardItem;                           // 0x0338(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0343(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346[0x2];                                      // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OwnedRewards_4;                       // 0x0348(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards_4;                       // 0x034C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTransitionForward;                   // 0x0355(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356[0x2];                                      // 0x0356(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB[0x1];                                      // 0x03CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x03CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFrontendCamera_VaultRotator_C*         CallFunc_Array_Get_Item_1;                         // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Event_Delay;                                // 0x03F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BattlePassRequiredVisible;      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CustomizationSkinRequiredVisible; // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ComingSoonVisible;              // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413[0x5];                                      // 0x0413(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortPersistentResourceItemDefinition* K2Node_Event_PersistentResource_1;                 // 0x0418(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0420(0x0018)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0438(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0458(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x04A8(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetLargePreviewImage_ReturnValue;         // 0x04B8(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04D8(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x04F0(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue_1;             // 0x0510(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0530(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0580(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0590(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Cost;                                 // 0x05AC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPersistentResourceItemDefinition* K2Node_Event_PersistentResource;                   // 0x05B0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetQuantityDisplayName_ReturnValue;       // 0x05B8(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue_1;       // 0x05D0(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x05F0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0648(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x06A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x06B0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassLandingPageButtonDisplayDetails K2Node_ComponentBoundEvent_DisplayInfo;            // 0x06D0(0x0070)()
	bool                                          K2Node_ComponentBoundEvent_bShowRewardCount;       // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_ButtonID;               // 0x0748(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_29;                             // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x6];                                      // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0760(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0778(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x07D0(0x0010)(ReferenceParm)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x07E8(0x0018)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0808(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_859[0x7];                                      // 0x0859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0860(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0878(0x0018)()
	class UFortBattlePassContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0890(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDefaultDisclaimerText_ReturnValue;     // 0x08A0(0x0018)()
	class FText                                   K2Node_Event_Description_2;                        // 0x08B8(0x0018)(ConstParm)
	int32                                         K2Node_Event_CurrentAmount;                        // 0x08D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NeededAmount;                         // 0x08D4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassRewardPrerequisiteType             K2Node_Event_PrerequisiteType;                     // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowPrerequisiteLock;                // 0x08D9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsUnlocked_1;                        // 0x08DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsNextMonthRewards;                  // 0x08DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DC[0x4];                                      // 0x08DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_MonthText;                            // 0x08E0(0x0018)(ConstParm)
	struct FTimespan                              K2Node_Event_NextMonthlyRewardTimespan;            // 0x08F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_CharacterDisplayName;                 // 0x0900(0x0018)(ConstParm)
	class FText                                   K2Node_Event_CharacterDescription;                 // 0x0918(0x0018)(ConstParm)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue_1;          // 0x0930(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0948(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0998(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x09E8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x09F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0A08(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x0A20(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0A38(0x0018)()
	bool                                          K2Node_Event_bGiftingAllowed;                      // 0x0A50(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A52[0x6];                                      // 0x0A52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPS28_HorizontalProgress_C*            K2Node_DynamicCast_AsBPS28_Horizontal_Progress;    // 0x0A58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0A62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPassRequiredVisible;                 // 0x0A64(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0A65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A66[0x2];                                      // 0x0A66(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Event_DelayTimespan_2;                      // 0x0A68(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Title;                                // 0x0A78(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Description_1;                        // 0x0A90(0x0018)(ConstParm)
	bool                                          K2Node_Event_bPageComplete;                        // 0x0AA8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_2;                // 0x0AA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_3;                // 0x0AAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0AAB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x0AAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0AAE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x0AAF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_32;                             // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0x7];                                      // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0AB8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_33;                             // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_34;                             // 0x0AD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x0AD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x0AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0AD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0AD6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0AD7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x0AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_BoolToByte_ReturnValue;              // 0x0ADA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0ADB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_10;                          // 0x0AE0(0x0018)()
	int32                                         K2Node_Event_OwnedRewards_3;                       // 0x0AF8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards_3;                       // 0x0AFC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CompletedPages_3;                     // 0x0B00(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPages_3;                         // 0x0B04(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Event_DelayTimespan_1;                      // 0x0B10(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OwnedRewards_2;                       // 0x0B18(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards_2;                       // 0x0B1C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CompletedPages_2;                     // 0x0B20(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPages_2;                         // 0x0B24(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2D[0x3];                                      // 0x0B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue_2;          // 0x0B30(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0B48(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x0BA0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x0BB0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_12;                          // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsUnlocked;                          // 0x0BCA(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCB[0x1];                                      // 0x0BCB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OwnedRewards_1;                       // 0x0BCC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards_1;                       // 0x0BD0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CompletedPages_1;                     // 0x0BD4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPages_1;                         // 0x0BD8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ClaimedOutfits;                       // 0x0BDC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalOutfits;                         // 0x0BE0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_13;                          // 0x0BE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0BE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE6[0x2];                                      // 0x0BE6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_3;          // 0x0BE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_14;                          // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_5;                        // 0x0BF4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x0C04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C05[0x3];                                      // 0x0C05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_36;                             // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0C21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C22[0x2];                                      // 0x0C22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_15;                          // 0x0C24(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C34[0x4];                                      // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Event_DelayTimespan;                        // 0x0C38(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AvailableRewards;                     // 0x0C40(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OwnedRewards;                         // 0x0C44(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards;                         // 0x0C48(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AvailablePages;                       // 0x0C4C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CompletedPages;                       // 0x0C50(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPages;                           // 0x0C54(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_3;               // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C59[0x7];                                      // 0x0C59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_6;                        // 0x0C68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_4;          // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_37;                             // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_ComponentBoundEvent_InVisibility;           // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C82[0x2];                                      // 0x0C82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_7;                        // 0x0C84(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C94[0xC];                                      // 0x0C94(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_GetSafeZonePadding_SafePadding;           // 0x0CA0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSafeZonePadding_SafePaddingScale;      // 0x0CC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_GetSafeZonePadding_SpillOverPadding;      // 0x0CD0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_38;                             // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0D18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_8;                        // 0x0D38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0D48(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_2;      // 0x0D50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_3;      // 0x0D58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_4;      // 0x0D68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_9;                        // 0x0D70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_10;                       // 0x0D88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_11;                       // 0x0DA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_16;                          // 0x0DB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_5;      // 0x0DC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_12;                       // 0x0DD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_6;      // 0x0DE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_13;                       // 0x0DF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0E08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0E10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E19[0x7];                                      // 0x0E19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_7;      // 0x0E20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0E28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E31[0x7];                                      // 0x0E31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_StatusText_1;                         // 0x0E38(0x0018)(ConstParm)
	EBattlePassStatusBarTypeS28                   K2Node_Event_BarType;                              // 0x0E50(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E51[0x7];                                      // 0x0E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0E58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0E60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_39;                             // 0x0E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6A[0x6];                                      // 0x0E6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0E70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBacchusTabNavOnTop_ReturnValue;      // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E79[0x7];                                      // 0x0E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_8;      // 0x0E80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UFortItemVM*                      K2Node_Event_FortItem;                             // 0x0E88(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_40;                             // 0x0E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardWarningTooltipType28                   K2Node_Event_WarningTooltipType;                   // 0x0E91(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E92[0x6];                                      // 0x0E92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x0E98(0x0018)(ConstParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_41;                             // 0x0EB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB2[0x6];                                      // 0x0EB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBonusInfoMiniTagData                  K2Node_Event_BonusInfo;                            // 0x0EB8(0x0018)(ConstParm)
	ESlateVisibility                              Temp_byte_Variable_42;                             // 0x0ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED1[0x7];                                      // 0x0ED1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0ED8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE1[0x7];                                      // 0x0EE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExpandedItemVM                        K2Node_Event_ItemVMs;                              // 0x0EE8(0x0010)(ConstParm, NoDestructor)
	const class UAthenaSeasonItemEntryBase*       K2Node_Event_EntrySelected;                        // 0x0EF8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_2;  // 0x0F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2; // 0x0F08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0F10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F11[0x7];                                      // 0x0F11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_CustomEvent_ItemCardButton;                 // 0x0F18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_UIKit_ItemCard_BattlePass_C*       K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Battle_Pass; // 0x0F20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_43;                             // 0x0F29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_44;                             // 0x0F2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_45;                             // 0x0F2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0F30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_StatusText;                           // 0x0F38(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_4;                // 0x0F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_17;                          // 0x0F51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_46;                             // 0x0F52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnable;                            // 0x0F53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_18;                          // 0x0F54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_47;                             // 0x0F55(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0F56(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0F57(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_19;                          // 0x0F58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F69[0x7];                                      // 0x0F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1; // 0x0F84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast; // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0F8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0F90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast_1;           // 0x0F94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast_2;           // 0x0F98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast_3;           // 0x0F9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast_1;              // 0x0FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast_4;           // 0x0FA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast_2;              // 0x0FA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast_3;              // 0x0FAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen) == 0x000010, "Wrong alignment on BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen");
static_assert(sizeof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen) == 0x000FB0, "Wrong size on BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, EntryPoint) == 0x000000, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable) == 0x000004, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable) == 0x000005, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_1) == 0x000006, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_1) == 0x000007, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_2) == 0x000008, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_3) == 0x000009, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_4) == 0x00000A, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable) == 0x000010, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_1) == 0x000028, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_2) == 0x000040, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_3) == 0x000058, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_4) == 0x000070, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_5) == 0x000088, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_6) == 0x0000A0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_text_Variable_7) == 0x0000B8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_5) == 0x0000D0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_2) == 0x0000D1, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_6) == 0x0000D2, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_7) == 0x0000D3, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_3) == 0x0000D4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_8) == 0x0000D5, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_9) == 0x0000D6, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_4) == 0x0000D7, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_real_Variable) == 0x0000D8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_real_Variable_1) == 0x0000DC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_DataTableRowHandle) == 0x0000E0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_DataTableRowHandle_1) == 0x0000F0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_5) == 0x000118, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_10) == 0x000119, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_11) == 0x00011A, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_MakeLiteralByte_ReturnValue) == 0x00011B, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CreateDelegate_OutputDelegate_2) == 0x00011C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_6) == 0x000128, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_12) == 0x000129, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_13) == 0x00012A, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CurrentIndex) == 0x00012C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalNumVariants) == 0x000130, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalNumVariants' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000140, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000148, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000150, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue) == 0x0001A0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_14) == 0x0001A4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0001A8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_15) == 0x000200, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array) == 0x000208, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue) == 0x000218, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_NewView) == 0x000230, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_NewView' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors) == 0x000238, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000248, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Array_Length_ReturnValue) == 0x000258, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Array_Length_ReturnValue_1) == 0x00025C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_7) == 0x000260, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_ShouldPlayBPVideo_ReturnValue) == 0x000261, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_ShouldPlayBPVideo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_RowDisplayName) == 0x000268, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_RowDisplayName' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Button) == 0x000280, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Button' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_DynamicCast_AsWBP_UIKit_Button_Regular) == 0x000288, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_DynamicCast_AsWBP_UIKit_Button_Regular' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_TextIsEmpty_ReturnValue) == 0x000291, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_int_Array_Index_Variable) == 0x000294, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default) == 0x000298, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Array_Get_Item) == 0x0002A0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue) == 0x0002A8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Rarity) == 0x0002B0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Rarity' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bNoReward) == 0x000330, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bNoReward' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_RewardItem) == 0x000338, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_RewardItem' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable) == 0x000340, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000341, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_16) == 0x000342, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_17) == 0x000343, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_8) == 0x000344, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_9) == 0x000345, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_OwnedRewards_4) == 0x000348, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_OwnedRewards_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalRewards_4) == 0x00034C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalRewards_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_18) == 0x000350, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue) == 0x000351, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_19) == 0x000352, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_10) == 0x000353, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_20) == 0x000354, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bTransitionForward) == 0x000355, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bTransitionForward' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000358, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000360, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin) == 0x000368, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_1) == 0x000378, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_2) == 0x000388, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_3) == 0x000398, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x0003A8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_int_Loop_Counter_Variable) == 0x0003B0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_int_Loop_Counter_Variable_1) == 0x0003B4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue) == 0x0003B8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003BC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003C0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003C4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_BooleanAND_ReturnValue) == 0x0003C8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_21) == 0x0003C9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_1) == 0x0003CA, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_4) == 0x0003CC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_int_Array_Index_Variable_1) == 0x0003DC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x0003E0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Array_Get_Item_1) == 0x0003E8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue_1) == 0x0003F0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Delay) == 0x0003F8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_22) == 0x000400, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000408, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CustomEvent_BattlePassRequiredVisible) == 0x000410, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CustomEvent_BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CustomEvent_CustomizationSkinRequiredVisible) == 0x000411, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CustomEvent_CustomizationSkinRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CustomEvent_ComingSoonVisible) == 0x000412, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CustomEvent_ComingSoonVisible' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_PersistentResource_1) == 0x000418, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_PersistentResource_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetDisplayName_ReturnValue) == 0x000420, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Map_Find_Value) == 0x000438, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Map_Find_ReturnValue) == 0x000450, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_2) == 0x000458, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_1) == 0x0004A8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetLargePreviewImage_ReturnValue) == 0x0004B8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetLargePreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_1) == 0x0004D8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetSmallPreviewImage_ReturnValue) == 0x0004F0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetSmallPreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetDisplayName_ReturnValue_1) == 0x000510, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_23) == 0x000528, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_3) == 0x000530, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_2) == 0x000580, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_2) == 0x000590, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_24) == 0x0005A8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_25) == 0x0005A9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Cost) == 0x0005AC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Cost' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_PersistentResource) == 0x0005B0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_PersistentResource' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetQuantityDisplayName_ReturnValue) == 0x0005B8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetQuantityDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetSmallPreviewImage_ReturnValue_1) == 0x0005D0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetSmallPreviewImage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_4) == 0x0005F0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000640, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_5) == 0x000648, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_26) == 0x000698, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_3) == 0x0006A0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_3) == 0x0006B0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_27) == 0x0006C8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_28) == 0x0006C9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_ComponentBoundEvent_DisplayInfo) == 0x0006D0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_ComponentBoundEvent_DisplayInfo' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_ComponentBoundEvent_bShowRewardCount) == 0x000740, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_ComponentBoundEvent_bShowRewardCount' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_ComponentBoundEvent_ButtonID) == 0x000748, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_ComponentBoundEvent_ButtonID' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_SwitchString_CmpSuccess) == 0x000758, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_29) == 0x000759, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue) == 0x000760, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_6) == 0x000778, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_1) == 0x0007C8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_4) == 0x0007D0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue) == 0x0007E0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_4) == 0x0007E8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000800, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_7) == 0x000808, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000858, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_5) == 0x000860, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x000870, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_5) == 0x000878, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetContext_ReturnValue) == 0x000890, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SelectInt_ReturnValue) == 0x000898, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetDefaultDisclaimerText_ReturnValue) == 0x0008A0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetDefaultDisclaimerText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Description_2) == 0x0008B8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Description_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CurrentAmount) == 0x0008D0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CurrentAmount' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_NeededAmount) == 0x0008D4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_NeededAmount' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_PrerequisiteType) == 0x0008D8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_PrerequisiteType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bShowPrerequisiteLock) == 0x0008D9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bShowPrerequisiteLock' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bIsUnlocked_1) == 0x0008DA, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bIsUnlocked_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bIsNextMonthRewards) == 0x0008DB, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bIsNextMonthRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_MonthText) == 0x0008E0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_MonthText' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_NextMonthlyRewardTimespan) == 0x0008F8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_NextMonthlyRewardTimespan' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CharacterDisplayName) == 0x000900, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CharacterDisplayName' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CharacterDescription) == 0x000918, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CharacterDescription' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue_1) == 0x000930, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_8) == 0x000948, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_9) == 0x000998, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_6) == 0x0009E8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_7) == 0x0009F8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_6) == 0x000A08, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_7) == 0x000A20, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_2) == 0x000A38, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bGiftingAllowed) == 0x000A50, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bGiftingAllowed' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_3) == 0x000A51, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_DynamicCast_AsBPS28_Horizontal_Progress) == 0x000A58, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_DynamicCast_AsBPS28_Horizontal_Progress' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_DynamicCast_bSuccess_1) == 0x000A60, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000A61, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_2) == 0x000A62, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_BooleanAND_ReturnValue_1) == 0x000A63, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bPassRequiredVisible) == 0x000A64, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bPassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_4) == 0x000A65, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_DelayTimespan_2) == 0x000A68, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_DelayTimespan_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_30) == 0x000A70, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Title) == 0x000A78, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Title' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Description_1) == 0x000A90, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Description_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bPageComplete) == 0x000AA8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bPageComplete' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_TextIsEmpty_ReturnValue_2) == 0x000AA9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_TextIsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_TextIsEmpty_ReturnValue_3) == 0x000AAA, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_TextIsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_5) == 0x000AAB, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_6) == 0x000AAC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_31) == 0x000AAD, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_11) == 0x000AAE, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_7) == 0x000AAF, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_32) == 0x000AB0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetText_ReturnValue) == 0x000AB8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_33) == 0x000AD0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_12) == 0x000AD1, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_34) == 0x000AD2, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_8) == 0x000AD3, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_35) == 0x000AD4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000AD5, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_3) == 0x000AD6, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000AD7, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_BooleanAND_ReturnValue_2) == 0x000AD8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_9) == 0x000AD9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Conv_BoolToByte_ReturnValue) == 0x000ADA, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Conv_BoolToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetValidValue_ReturnValue) == 0x000ADB, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_10) == 0x000AE0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_OwnedRewards_3) == 0x000AF8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_OwnedRewards_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalRewards_3) == 0x000AFC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalRewards_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CompletedPages_3) == 0x000B00, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CompletedPages_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalPages_3) == 0x000B04, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalPages_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000B08, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_DelayTimespan_1) == 0x000B10, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_DelayTimespan_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_OwnedRewards_2) == 0x000B18, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_OwnedRewards_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalRewards_2) == 0x000B1C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalRewards_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CompletedPages_2) == 0x000B20, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CompletedPages_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalPages_2) == 0x000B24, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalPages_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x000B28, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000B2C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue_2) == 0x000B30, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_10) == 0x000B48, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_11) == 0x000B98, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeArray_Array_8) == 0x000BA0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Format_ReturnValue_8) == 0x000BB0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_12) == 0x000BC8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_bool_Variable_13) == 0x000BC9, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bIsUnlocked) == 0x000BCA, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bIsUnlocked' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_OwnedRewards_1) == 0x000BCC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_OwnedRewards_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalRewards_1) == 0x000BD0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalRewards_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CompletedPages_1) == 0x000BD4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CompletedPages_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalPages_1) == 0x000BD8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalPages_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_ClaimedOutfits) == 0x000BDC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_ClaimedOutfits' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalOutfits) == 0x000BE0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalOutfits' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_13) == 0x000BE4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000BE5, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_3) == 0x000BE8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_14) == 0x000BF0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_5) == 0x000BF4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_2) == 0x000C04, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SelectFloat_ReturnValue) == 0x000C08, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SelectFloat_ReturnValue_1) == 0x000C10, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SelectFloat_ReturnValue_2) == 0x000C18, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_36) == 0x000C20, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000C21, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_15) == 0x000C24, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_DelayTimespan) == 0x000C38, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_DelayTimespan' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_AvailableRewards) == 0x000C40, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_AvailableRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_OwnedRewards) == 0x000C44, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalRewards) == 0x000C48, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_AvailablePages) == 0x000C4C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_AvailablePages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_CompletedPages) == 0x000C50, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_CompletedPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_TotalPages) == 0x000C54, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_TotalPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_3) == 0x000C58, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SelectFloat_ReturnValue_3) == 0x000C60, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_6) == 0x000C68, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_4) == 0x000C78, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_37) == 0x000C80, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_ComponentBoundEvent_InVisibility) == 0x000C81, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_ComponentBoundEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_7) == 0x000C84, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetSafeZonePadding_SafePadding) == 0x000CA0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetSafeZonePadding_SafePadding' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetSafeZonePadding_SafePaddingScale) == 0x000CC0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetSafeZonePadding_SafePaddingScale' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetSafeZonePadding_SpillOverPadding) == 0x000CD0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetSafeZonePadding_SpillOverPadding' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_38) == 0x000CF0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_BreakVector2D_X) == 0x000CF8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_BreakVector2D_Y) == 0x000D00, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000D08, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000D10, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000D18, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_NormalizeToRange_ReturnValue) == 0x000D20, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_FClamp_ReturnValue) == 0x000D28, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue) == 0x000D30, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_8) == 0x000D38, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000D48, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_2) == 0x000D50, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_3) == 0x000D58, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue_1) == 0x000D60, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_4) == 0x000D68, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_9) == 0x000D70, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue_2) == 0x000D80, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_10) == 0x000D88, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue_3) == 0x000D98, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_11) == 0x000DA0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_16) == 0x000DB0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_5) == 0x000DC0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue_4) == 0x000DC8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue_5) == 0x000DD0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_12) == 0x000DD8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_6) == 0x000DE8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Lerp_ReturnValue_6) == 0x000DF0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Margin_13) == 0x000DF8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Margin_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000E08, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000E10, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsValid_ReturnValue) == 0x000E18, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_7) == 0x000E20, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_ComponentBoundEvent_Button_1) == 0x000E28, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bSuccess) == 0x000E30, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_StatusText_1) == 0x000E38, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_StatusText_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_BarType) == 0x000E50, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_BarType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000E58, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000E60, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsValid_ReturnValue_1) == 0x000E68, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_39) == 0x000E69, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000E70, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_GetIsBacchusTabNavOnTop_ReturnValue) == 0x000E78, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_GetIsBacchusTabNavOnTop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_8) == 0x000E80, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_FortItem) == 0x000E88, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_FortItem' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_40) == 0x000E90, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_WarningTooltipType) == 0x000E91, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_WarningTooltipType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_Description) == 0x000E98, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000EB0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_41) == 0x000EB1, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_BonusInfo) == 0x000EB8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_BonusInfo' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_42) == 0x000ED0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_ComponentBoundEvent_Button) == 0x000ED8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_SwitchEnum_CmpSuccess) == 0x000EE0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_ItemVMs) == 0x000EE8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_ItemVMs' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_EntrySelected) == 0x000EF8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_EntrySelected' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_CreatePlayAnimationProxyObject_Result_2) == 0x000F00, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_CreatePlayAnimationProxyObject_Result_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2) == 0x000F08, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_IsValid_ReturnValue_2) == 0x000F10, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_CustomEvent_ItemCardButton) == 0x000F18, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_CustomEvent_ItemCardButton' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Battle_Pass) == 0x000F20, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_DynamicCast_AsWBP_UIKit_Item_Card_Battle_Pass' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_DynamicCast_bSuccess_2) == 0x000F28, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_43) == 0x000F29, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_44) == 0x000F2A, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_45) == 0x000F2B, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SpawnSound2D_ReturnValue) == 0x000F30, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_StatusText) == 0x000F38, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_StatusText' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_TextIsEmpty_ReturnValue_4) == 0x000F50, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_TextIsEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_17) == 0x000F51, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_46) == 0x000F52, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Event_bIsEnable) == 0x000F53, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Event_bIsEnable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_18) == 0x000F54, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, Temp_byte_Variable_47) == 0x000F55, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000F56, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_4) == 0x000F57, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_Select_Default_19) == 0x000F58, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_BooleanAND_ReturnValue_3) == 0x000F68, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000F70, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000F78, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000F80, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1) == 0x000F84, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast) == 0x000F88, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000F8C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Top_ImplicitCast) == 0x000F90, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Bottom_ImplicitCast_1) == 0x000F94, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Bottom_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Bottom_ImplicitCast_2) == 0x000F98, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Bottom_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Bottom_ImplicitCast_3) == 0x000F9C, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Bottom_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Top_ImplicitCast_1) == 0x000FA0, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Top_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Bottom_ImplicitCast_4) == 0x000FA4, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Bottom_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Top_ImplicitCast_2) == 0x000FA8, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Top_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen, K2Node_MakeStruct_Top_ImplicitCast_3) == 0x000FAC, "Member 'BPS28_BattlePassScreen_C_ExecuteUbergraph_BPS28_BattlePassScreen::K2Node_MakeStruct_Top_ImplicitCast_3' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.HandleMidseasonDropStyling
// 0x0240 (0x0240 - 0x0000)
struct BPS28_BattlePassScreen_C_HandleMidseasonDropStyling final
{
public:
	struct FTimespan                              Timespan;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableRewards;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RewardsClaimed;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RewardsToClaim;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailablePages;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PagesCompleted;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPages;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSeasonBook;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortMcpProfileAthena*                  CallFunc_GetAthenaProfile_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPurchasedSeasonBook_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0208(0x0018)()
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateProgressGrayedOut_Value_ImplicitCast; // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateProgressGrayedOut_Value_ImplicitCast_1; // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_HandleMidseasonDropStyling");
static_assert(sizeof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling) == 0x000240, "Wrong size on BPS28_BattlePassScreen_C_HandleMidseasonDropStyling");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, Timespan) == 0x000000, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::Timespan' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, AvailableRewards) == 0x000008, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::AvailableRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, RewardsClaimed) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::RewardsClaimed' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, RewardsToClaim) == 0x000010, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::RewardsToClaim' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, AvailablePages) == 0x000014, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::AvailablePages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, PagesCompleted) == 0x000018, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::PagesCompleted' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, TotalPages) == 0x00001C, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::TotalPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, HasSeasonBook) == 0x000020, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::HasSeasonBook' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, Temp_bool_Variable) == 0x000021, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, Temp_byte_Variable) == 0x000022, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, Temp_byte_Variable_1) == 0x000023, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_Select_Default) == 0x000031, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_GetContext_ReturnValue) == 0x000038, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_GetAthenaProfile_ReturnValue) == 0x000040, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_GetAthenaProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000048, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_HasPurchasedSeasonBook_ReturnValue) == 0x000049, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_HasPurchasedSeasonBook_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000050, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000058, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000B0, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_SelectInt_ReturnValue) == 0x000108, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_MakeArray_Array) == 0x000110, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000120, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000140, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000148, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000150, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A8, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Format_ReturnValue_1) == 0x000208, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_SelectInt_ReturnValue_1) == 0x000220, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000228, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000230, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_UpdateProgressGrayedOut_Value_ImplicitCast) == 0x000238, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_UpdateProgressGrayedOut_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStyling, CallFunc_UpdateProgressGrayedOut_Value_ImplicitCast_1) == 0x00023C, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStyling::CallFunc_UpdateProgressGrayedOut_Value_ImplicitCast_1' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.HandleMidseasonDropStylingsdf
// 0x0010 (0x0010 - 0x0000)
struct BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf final
{
public:
	bool                                          TimespanValid;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DropsClaimed;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropsToClaim;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestCompleted;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RewardValid;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf) == 0x000004, "Wrong alignment on BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf");
static_assert(sizeof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf) == 0x000010, "Wrong size on BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf, TimespanValid) == 0x000000, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf::TimespanValid' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf, DropsClaimed) == 0x000004, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf::DropsClaimed' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf, DropsToClaim) == 0x000008, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf::DropsToClaim' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf, QuestCompleted) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf::QuestCompleted' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf, RewardValid) == 0x00000D, "Member 'BPS28_BattlePassScreen_C_HandleMidseasonDropStylingsdf::RewardValid' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.HandlePreview
// 0x00F0 (0x00F0 - 0x0000)
struct BPS28_BattlePassScreen_C_HandlePreview final
{
public:
	EBattlePassView                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_HandlePreview) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_HandlePreview");
static_assert(sizeof(BPS28_BattlePassScreen_C_HandlePreview) == 0x0000F0, "Wrong size on BPS28_BattlePassScreen_C_HandlePreview");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_byte_Variable) == 0x000000, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable) == 0x000008, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_1) == 0x000010, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_2) == 0x000018, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_3) == 0x000020, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_4) == 0x000028, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_5) == 0x000030, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_6) == 0x000038, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_7) == 0x000040, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_byte_Variable_1) == 0x000048, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_8) == 0x000050, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_9) == 0x000058, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_10) == 0x000060, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_11) == 0x000068, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_12) == 0x000070, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_13) == 0x000078, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_14) == 0x000080, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_15) == 0x000088, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, Temp_real_Variable_16) == 0x000090, "Member 'BPS28_BattlePassScreen_C_HandlePreview::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, CallFunc_IsMobileGame_ReturnValue) == 0x000098, "Member 'BPS28_BattlePassScreen_C_HandlePreview::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, CallFunc_GetPlatformName_ReturnValue) == 0x0000A0, "Member 'BPS28_BattlePassScreen_C_HandlePreview::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B0, "Member 'BPS28_BattlePassScreen_C_HandlePreview::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, CallFunc_BooleanOR_ReturnValue) == 0x0000B1, "Member 'BPS28_BattlePassScreen_C_HandlePreview::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'BPS28_BattlePassScreen_C_HandlePreview::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, K2Node_Select_Default) == 0x0000C0, "Member 'BPS28_BattlePassScreen_C_HandlePreview::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, K2Node_Select_Default_1) == 0x0000C8, "Member 'BPS28_BattlePassScreen_C_HandlePreview::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000D0, "Member 'BPS28_BattlePassScreen_C_HandlePreview::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, K2Node_MakeStruct_Margin) == 0x0000D8, "Member 'BPS28_BattlePassScreen_C_HandlePreview::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, K2Node_MakeStruct_Top_ImplicitCast) == 0x0000E8, "Member 'BPS28_BattlePassScreen_C_HandlePreview::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandlePreview, K2Node_MakeStruct_Left_ImplicitCast) == 0x0000EC, "Member 'BPS28_BattlePassScreen_C_HandlePreview::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.HandleRewardTimelineAnimation
// 0x0018 (0x0018 - 0x0000)
struct BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation final
{
public:
	bool                                          bAnimateRewardTimeline;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(sizeof(BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000018, "Wrong size on BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation, bAnimateRewardTimeline) == 0x000000, "Member 'BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation::bAnimateRewardTimeline' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'BPS28_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.HandleWatchVideoRequest
// 0x0010 (0x0010 - 0x0000)
struct BPS28_BattlePassScreen_C_HandleWatchVideoRequest final
{
public:
	bool                                          PlayFromDisc;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStreamMediaSource*                 StreamSource;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_HandleWatchVideoRequest) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(sizeof(BPS28_BattlePassScreen_C_HandleWatchVideoRequest) == 0x000010, "Wrong size on BPS28_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleWatchVideoRequest, PlayFromDisc) == 0x000000, "Member 'BPS28_BattlePassScreen_C_HandleWatchVideoRequest::PlayFromDisc' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_HandleWatchVideoRequest, StreamSource) == 0x000008, "Member 'BPS28_BattlePassScreen_C_HandleWatchVideoRequest::StreamSource' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnBattlePassGiftingAllowed
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed final
{
public:
	bool                                          bGiftingAllowed;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed, bGiftingAllowed) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnBattlePassGiftingAllowed::bGiftingAllowed' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnBattlePassViewChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnBattlePassViewChanged final
{
public:
	EBattlePassView                               NewView;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnBattlePassViewChanged, NewView) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnBattlePassViewChanged::NewView' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnGameModeCompatibilityTagUpdate
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate final
{
public:
	const class UFortItemVM*                      FortItem;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate, FortItem) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnGameModeCompatibilityTagUpdate::FortItem' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnInsufficientResource
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnInsufficientResource final
{
public:
	const class UFortPersistentResourceItemDefinition* PersistentResource;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnInsufficientResource) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnInsufficientResource");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnInsufficientResource) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnInsufficientResource");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnInsufficientResource, PersistentResource) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnInsufficientResource::PersistentResource' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnItemDelayed
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnItemDelayed final
{
public:
	struct FTimespan                              Delay;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnItemDelayed");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnItemDelayed");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnItemDelayed, Delay) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnItemDelayed::Delay' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnItemEquipped
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnItemEquipped final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnItemEquipped) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnItemEquipped");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnItemEquipped) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnItemEquipped");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnItemEquipped, bSuccess) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnItemEquipped::bSuccess' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnItemVMCardClicked
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnItemVMCardClicked final
{
public:
	class UCommonButtonBase*                      ItemCardButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnItemVMCardClicked) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnItemVMCardClicked");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnItemVMCardClicked) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnItemVMCardClicked");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnItemVMCardClicked, ItemCardButton) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnItemVMCardClicked::ItemCardButton' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnItemVmCardUpdate
// 0x0018 (0x0018 - 0x0000)
struct BPS28_BattlePassScreen_C_OnItemVmCardUpdate final
{
public:
	struct FExpandedItemVM                        ItemVMs;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	const class UAthenaSeasonItemEntryBase*       EntrySelected;                                     // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnItemVmCardUpdate) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnItemVmCardUpdate");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnItemVmCardUpdate) == 0x000018, "Wrong size on BPS28_BattlePassScreen_C_OnItemVmCardUpdate");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnItemVmCardUpdate, ItemVMs) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnItemVmCardUpdate::ItemVMs' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnItemVmCardUpdate, EntrySelected) == 0x000010, "Member 'BPS28_BattlePassScreen_C_OnItemVmCardUpdate::EntrySelected' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnPreviewActionButtonUpdated
// 0x0020 (0x0020 - 0x0000)
struct BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated final
{
public:
	class FText                                   RowDisplayName;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCommonButtonBase*                      Button;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000020, "Wrong size on BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated, RowDisplayName) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated::RowDisplayName' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated, Button) == 0x000018, "Member 'BPS28_BattlePassScreen_C_OnPreviewActionButtonUpdated::Button' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetBaseRewardsInfo
// 0x0010 (0x0010 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo final
{
public:
	int32                                         OwnedRewards;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedPages;                                    // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPages;                                        // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo) == 0x000004, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo) == 0x000010, "Wrong size on BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo, OwnedRewards) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo, TotalRewards) == 0x000004, "Member 'BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo::TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo, CompletedPages) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo::CompletedPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo, TotalPages) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_OnSetBaseRewardsInfo::TotalPages' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetBonusInfo
// 0x0018 (0x0018 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetBonusInfo final
{
public:
	struct FBonusInfoMiniTagData                  BonusInfo;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetBonusInfo) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetBonusInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetBonusInfo) == 0x000018, "Wrong size on BPS28_BattlePassScreen_C_OnSetBonusInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusInfo, BonusInfo) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetBonusInfo::BonusInfo' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetBonusRewardsInfo
// 0x001C (0x001C - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo final
{
public:
	bool                                          bIsUnlocked;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OwnedRewards;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedPages;                                    // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPages;                                        // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClaimedOutfits;                                    // 0x0014(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalOutfits;                                      // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo) == 0x000004, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo) == 0x00001C, "Wrong size on BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, bIsUnlocked) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::bIsUnlocked' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, OwnedRewards) == 0x000004, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, TotalRewards) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, CompletedPages) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::CompletedPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, TotalPages) == 0x000010, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::TotalPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, ClaimedOutfits) == 0x000014, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::ClaimedOutfits' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo, TotalOutfits) == 0x000018, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsInfo::TotalOutfits' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetBonusRewardsLockedStatus
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus final
{
public:
	bool                                          bIsUnlocked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus, bIsUnlocked) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetBonusRewardsLockedStatus::bIsUnlocked' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetClaimedRewardInfo
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo final
{
public:
	int32                                         OwnedRewards;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000004, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo, OwnedRewards) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo, TotalRewards) == 0x000004, "Member 'BPS28_BattlePassScreen_C_OnSetClaimedRewardInfo::TotalRewards' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetCoverPageData
// 0x0038 (0x0038 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetCoverPageData final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Description;                                       // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bPageComplete;                                     // 0x0030(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetCoverPageData) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetCoverPageData");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetCoverPageData) == 0x000038, "Wrong size on BPS28_BattlePassScreen_C_OnSetCoverPageData");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCoverPageData, Title) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetCoverPageData::Title' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCoverPageData, Description) == 0x000018, "Member 'BPS28_BattlePassScreen_C_OnSetCoverPageData::Description' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCoverPageData, bPageComplete) == 0x000030, "Member 'BPS28_BattlePassScreen_C_OnSetCoverPageData::bPageComplete' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetCrewInfo
// 0x0058 (0x0058 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetCrewInfo final
{
public:
	bool                                          bIsNextMonthRewards;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MonthText;                                         // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FTimespan                              NextMonthlyRewardTimespan;                         // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   CharacterDisplayName;                              // 0x0028(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CharacterDescription;                              // 0x0040(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetCrewInfo) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetCrewInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetCrewInfo) == 0x000058, "Wrong size on BPS28_BattlePassScreen_C_OnSetCrewInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCrewInfo, bIsNextMonthRewards) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetCrewInfo::bIsNextMonthRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCrewInfo, MonthText) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetCrewInfo::MonthText' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCrewInfo, NextMonthlyRewardTimespan) == 0x000020, "Member 'BPS28_BattlePassScreen_C_OnSetCrewInfo::NextMonthlyRewardTimespan' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCrewInfo, CharacterDisplayName) == 0x000028, "Member 'BPS28_BattlePassScreen_C_OnSetCrewInfo::CharacterDisplayName' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetCrewInfo, CharacterDescription) == 0x000040, "Member 'BPS28_BattlePassScreen_C_OnSetCrewInfo::CharacterDescription' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetEquipButtonEnable
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetEquipButtonEnable final
{
public:
	bool                                          bIsEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetEquipButtonEnable) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetEquipButtonEnable");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetEquipButtonEnable) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnSetEquipButtonEnable");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetEquipButtonEnable, bIsEnable) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetEquipButtonEnable::bIsEnable' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetPrerequisiteInfo
// 0x0028 (0x0028 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentAmount;                                     // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeededAmount;                                      // 0x001C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassRewardPrerequisiteType             PrerequisiteType;                                  // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowPrerequisiteLock;                             // 0x0021(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000028, "Wrong size on BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo, Description) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo::Description' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo, CurrentAmount) == 0x000018, "Member 'BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo::CurrentAmount' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo, NeededAmount) == 0x00001C, "Member 'BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo::NeededAmount' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo, PrerequisiteType) == 0x000020, "Member 'BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo::PrerequisiteType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo, bShowPrerequisiteLock) == 0x000021, "Member 'BPS28_BattlePassScreen_C_OnSetPrerequisiteInfo::bShowPrerequisiteLock' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetQuestDelayTimespan
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan final
{
public:
	struct FTimespan                              DelayTimespan;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan, DelayTimespan) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetQuestDelayTimespan::DelayTimespan' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetQuestRewardsInfo
// 0x0018 (0x0018 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo final
{
public:
	struct FTimespan                              DelayTimespan;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         OwnedRewards;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedPages;                                    // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPages;                                        // 0x0014(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo) == 0x000018, "Wrong size on BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo, DelayTimespan) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo::DelayTimespan' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo, OwnedRewards) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo, TotalRewards) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo::TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo, CompletedPages) == 0x000010, "Member 'BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo::CompletedPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo, TotalPages) == 0x000014, "Member 'BPS28_BattlePassScreen_C_OnSetQuestRewardsInfo::TotalPages' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetResourcePrice
// 0x0010 (0x0010 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetResourcePrice final
{
public:
	int32                                         Cost;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortPersistentResourceItemDefinition* PersistentResource;                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetResourcePrice) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetResourcePrice");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetResourcePrice) == 0x000010, "Wrong size on BPS28_BattlePassScreen_C_OnSetResourcePrice");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetResourcePrice, Cost) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetResourcePrice::Cost' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetResourcePrice, PersistentResource) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetResourcePrice::PersistentResource' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetWarningToolTip
// 0x0020 (0x0020 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetWarningToolTip final
{
public:
	ERewardWarningTooltipType28                   WarningTooltipType;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetWarningToolTip) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetWarningToolTip");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetWarningToolTip) == 0x000020, "Wrong size on BPS28_BattlePassScreen_C_OnSetWarningToolTip");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWarningToolTip, WarningTooltipType) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetWarningToolTip::WarningTooltipType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWarningToolTip, Description) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetWarningToolTip::Description' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnSetWeeklyRewardsInfo
// 0x0020 (0x0020 - 0x0000)
struct BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo final
{
public:
	struct FTimespan                              DelayTimespan;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableRewards;                                  // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OwnedRewards;                                      // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailablePages;                                    // 0x0014(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CompletedPages;                                    // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPages;                                        // 0x001C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo) == 0x000020, "Wrong size on BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, DelayTimespan) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::DelayTimespan' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, AvailableRewards) == 0x000008, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::AvailableRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, OwnedRewards) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, TotalRewards) == 0x000010, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, AvailablePages) == 0x000014, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::AvailablePages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, CompletedPages) == 0x000018, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::CompletedPages' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo, TotalPages) == 0x00001C, "Member 'BPS28_BattlePassScreen_C_OnSetWeeklyRewardsInfo::TotalPages' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnTransitionItemDetails
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnTransitionItemDetails final
{
public:
	bool                                          bTransitionForward;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnTransitionItemDetails, bTransitionForward) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnTransitionItemDetails::bTransitionForward' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnUpdateBattlePassRequiredBar
// 0x0001 (0x0001 - 0x0000)
struct BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar final
{
public:
	bool                                          bPassRequiredVisible;                              // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar) == 0x000001, "Wrong size on BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar, bPassRequiredVisible) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnUpdateBattlePassRequiredBar::bPassRequiredVisible' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnUpdateOwnedOrEquippedTag
// 0x0018 (0x0018 - 0x0000)
struct BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag final
{
public:
	class FText                                   StatusText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag) == 0x000018, "Wrong size on BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag, StatusText) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnUpdateOwnedOrEquippedTag::StatusText' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnUpdateStatusBar
// 0x0020 (0x0020 - 0x0000)
struct BPS28_BattlePassScreen_C_OnUpdateStatusBar final
{
public:
	class FText                                   StatusText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EBattlePassStatusBarTypeS28                   BarType;                                           // 0x0018(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnUpdateStatusBar) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnUpdateStatusBar");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnUpdateStatusBar) == 0x000020, "Wrong size on BPS28_BattlePassScreen_C_OnUpdateStatusBar");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnUpdateStatusBar, StatusText) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnUpdateStatusBar::StatusText' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnUpdateStatusBar, BarType) == 0x000018, "Member 'BPS28_BattlePassScreen_C_OnUpdateStatusBar::BarType' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnVariantUpdate
// 0x0008 (0x0008 - 0x0000)
struct BPS28_BattlePassScreen_C_OnVariantUpdate final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumVariants;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnVariantUpdate) == 0x000004, "Wrong alignment on BPS28_BattlePassScreen_C_OnVariantUpdate");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnVariantUpdate) == 0x000008, "Wrong size on BPS28_BattlePassScreen_C_OnVariantUpdate");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnVariantUpdate, CurrentIndex) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnVariantUpdate::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnVariantUpdate, TotalNumVariants) == 0x000004, "Member 'BPS28_BattlePassScreen_C_OnVariantUpdate::TotalNumVariants' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.OnViewReward
// 0x0090 (0x0090 - 0x0000)
struct BPS28_BattlePassScreen_C_OnViewReward final
{
public:
	struct FFortRarityItemData                    Rarity;                                            // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bNoReward;                                         // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              RewardItem;                                        // 0x0088(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_OnViewReward) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_OnViewReward");
static_assert(sizeof(BPS28_BattlePassScreen_C_OnViewReward) == 0x000090, "Wrong size on BPS28_BattlePassScreen_C_OnViewReward");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnViewReward, Rarity) == 0x000000, "Member 'BPS28_BattlePassScreen_C_OnViewReward::Rarity' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnViewReward, bNoReward) == 0x000080, "Member 'BPS28_BattlePassScreen_C_OnViewReward::bNoReward' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_OnViewReward, RewardItem) == 0x000088, "Member 'BPS28_BattlePassScreen_C_OnViewReward::RewardItem' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.Refresh View Details Actions
// 0x0060 (0x0060 - 0x0000)
struct BPS28_BattlePassScreen_C_Refresh_View_Details_Actions final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentRewardEquipped_ReturnValue;      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
	bool                                          CallFunc_IsCurrentRewardOwned_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentRewardEquipped_ReturnValue_1;    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_Refresh_View_Details_Actions");
static_assert(sizeof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions) == 0x000060, "Wrong size on BPS28_BattlePassScreen_C_Refresh_View_Details_Actions");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, Temp_bool_Variable) == 0x000000, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, Temp_text_Variable) == 0x000008, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, Temp_text_Variable_1) == 0x000020, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, Temp_bool_Variable_1) == 0x000038, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, Temp_byte_Variable) == 0x000039, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, Temp_byte_Variable_1) == 0x00003A, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, CallFunc_IsCurrentRewardEquipped_ReturnValue) == 0x00003B, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::CallFunc_IsCurrentRewardEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, K2Node_Select_Default) == 0x000040, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, CallFunc_IsCurrentRewardOwned_ReturnValue) == 0x000058, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::CallFunc_IsCurrentRewardOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, CallFunc_IsCurrentRewardEquipped_ReturnValue_1) == 0x000059, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::CallFunc_IsCurrentRewardEquipped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Refresh_View_Details_Actions, K2Node_Select_Default_1) == 0x00005B, "Member 'BPS28_BattlePassScreen_C_Refresh_View_Details_Actions::K2Node_Select_Default_1' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.Set landing Page text
// 0x0038 (0x0038 - 0x0000)
struct BPS28_BattlePassScreen_C_Set_landing_Page_text final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         State_Index;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_Set_landing_Page_text) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_Set_landing_Page_text");
static_assert(sizeof(BPS28_BattlePassScreen_C_Set_landing_Page_text) == 0x000038, "Wrong size on BPS28_BattlePassScreen_C_Set_landing_Page_text");
static_assert(offsetof(BPS28_BattlePassScreen_C_Set_landing_Page_text, Title) == 0x000000, "Member 'BPS28_BattlePassScreen_C_Set_landing_Page_text::Title' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Set_landing_Page_text, Description) == 0x000018, "Member 'BPS28_BattlePassScreen_C_Set_landing_Page_text::Description' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_Set_landing_Page_text, State_Index) == 0x000030, "Member 'BPS28_BattlePassScreen_C_Set_landing_Page_text::State_Index' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.SetEnableEquipButton
// 0x000C (0x000C - 0x0000)
struct BPS28_BattlePassScreen_C_SetEnableEquipButton final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Visibility_0;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipButtonEnable_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentRewardEquipped_ReturnValue;      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEquipCurrentReward_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_SetEnableEquipButton) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_SetEnableEquipButton");
static_assert(sizeof(BPS28_BattlePassScreen_C_SetEnableEquipButton) == 0x00000C, "Wrong size on BPS28_BattlePassScreen_C_SetEnableEquipButton");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, Enable) == 0x000000, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::Enable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, Visibility_0) == 0x000001, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::Visibility_0' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, Temp_bool_Variable) == 0x000002, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, Temp_byte_Variable) == 0x000003, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, Temp_byte_Variable_1) == 0x000004, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, CallFunc_GetEquipButtonEnable_ReturnValue) == 0x000005, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::CallFunc_GetEquipButtonEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, CallFunc_IsCurrentRewardEquipped_ReturnValue) == 0x000007, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::CallFunc_IsCurrentRewardEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, CallFunc_CanEquipCurrentReward_ReturnValue) == 0x000009, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::CallFunc_CanEquipCurrentReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, CallFunc_BooleanAND_ReturnValue_1) == 0x00000A, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetEnableEquipButton, K2Node_Select_Default) == 0x00000B, "Member 'BPS28_BattlePassScreen_C_SetEnableEquipButton::K2Node_Select_Default' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.SetTagVisibility
// 0x0003 (0x0003 - 0x0000)
struct BPS28_BattlePassScreen_C_SetTagVisibility final
{
public:
	bool                                          BattlePassRequiredVisible;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomizationSkinRequiredVisible;                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ComingSoonVisible;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_SetTagVisibility) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C_SetTagVisibility");
static_assert(sizeof(BPS28_BattlePassScreen_C_SetTagVisibility) == 0x000003, "Wrong size on BPS28_BattlePassScreen_C_SetTagVisibility");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetTagVisibility, BattlePassRequiredVisible) == 0x000000, "Member 'BPS28_BattlePassScreen_C_SetTagVisibility::BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetTagVisibility, CustomizationSkinRequiredVisible) == 0x000001, "Member 'BPS28_BattlePassScreen_C_SetTagVisibility::CustomizationSkinRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_SetTagVisibility, ComingSoonVisible) == 0x000002, "Member 'BPS28_BattlePassScreen_C_SetTagVisibility::ComingSoonVisible' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.UpdateProgressWheel
// 0x0108 (0x0108 - 0x0000)
struct BPS28_BattlePassScreen_C_UpdateProgressWheel final
{
public:
	class UWBP_RewardsProgressWheel_C*            ProgressWheel;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Owned;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Needed;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateProgress_Value_ImplicitCast;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C_UpdateProgressWheel) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_UpdateProgressWheel");
static_assert(sizeof(BPS28_BattlePassScreen_C_UpdateProgressWheel) == 0x000108, "Wrong size on BPS28_BattlePassScreen_C_UpdateProgressWheel");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, ProgressWheel) == 0x000000, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::ProgressWheel' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, Owned) == 0x000008, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::Owned' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, Needed) == 0x00000C, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::Needed' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000068, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D0, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000F0, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateProgressWheel, CallFunc_UpdateProgress_Value_ImplicitCast) == 0x000104, "Member 'BPS28_BattlePassScreen_C_UpdateProgressWheel::CallFunc_UpdateProgress_Value_ImplicitCast' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.UpdateStatusBar
// 0x0170 (0x0170 - 0x0000)
struct BPS28_BattlePassScreen_C_UpdateStatusBar final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EBattlePassStatusBarTypeS28                   BarType;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassStatusBarTypeS28                   Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x015C(0x0014)()
};
static_assert(alignof(BPS28_BattlePassScreen_C_UpdateStatusBar) == 0x000008, "Wrong alignment on BPS28_BattlePassScreen_C_UpdateStatusBar");
static_assert(sizeof(BPS28_BattlePassScreen_C_UpdateStatusBar) == 0x000170, "Wrong size on BPS28_BattlePassScreen_C_UpdateStatusBar");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Text) == 0x000000, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Text' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, BarType) == 0x000018, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::BarType' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_MakeLiteralByte_ReturnValue) == 0x000019, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_byte_Variable) == 0x00001A, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable) == 0x00001C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_1) == 0x00002C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_2) == 0x00003C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_3) == 0x00004C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_4) == 0x00005C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_5) == 0x00006C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_6) == 0x00007C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00008C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_bool_Variable) == 0x00008D, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_7) == 0x000090, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_8) == 0x0000A0, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_bool_Variable_1) == 0x0000B0, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_9) == 0x0000B4, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_bool_Variable_2) == 0x0000C4, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_10) == 0x0000C8, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_struct_Variable_11) == 0x0000D8, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_bool_Variable_3) == 0x0000E8, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_object_Variable) == 0x0000F0, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_object_Variable_1) == 0x0000F8, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_bool_Variable_4) == 0x000100, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_byte_Variable_1) == 0x000101, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, Temp_byte_Variable_2) == 0x000102, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000103, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000104, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000105, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000106, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000107, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000108, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000109, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_Select_Default) == 0x00010A, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00010B, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00010C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_Select_Default_1) == 0x000110, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_Select_Default_2) == 0x000120, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_Select_Default_3) == 0x000130, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_Select_Default_4) == 0x000138, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000148, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_Select_Default_5) == 0x00014C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C_UpdateStatusBar, K2Node_MakeStruct_SlateColor) == 0x00015C, "Member 'BPS28_BattlePassScreen_C_UpdateStatusBar::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BPS28_BattlePassScreen.BPS28_BattlePassScreen_C.__889bd7d9-4213-192a-14dd-cc80eedd6961_SourceToDest
// 0x0002 (0x0002 - 0x0000)
struct BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Conv_BoolToSlateVisibility_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest) == 0x000001, "Wrong alignment on BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest");
static_assert(sizeof(BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest) == 0x000002, "Wrong size on BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest");
static_assert(offsetof(BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest, ReturnValue) == 0x000000, "Member 'BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest, CallFunc_Conv_BoolToSlateVisibility_ReturnValue) == 0x000001, "Member 'BPS28_BattlePassScreen_C___889bd7d9_4213_192a_14dd_cc80eedd6961_SourceToDest::CallFunc_Conv_BoolToSlateVisibility_ReturnValue' has a wrong offset!");

}

