#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoAdventuresRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "StateDrivenActorRuntime_structs.hpp"
#include "CommonConversationRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum JunoAdventuresRuntime.EJunoNPCJoinReason
// NumValues: 0x0002
enum class EJunoNPCJoinReason : uint8
{
	StandardRecruitment                      = 0,
	RemoteRecruitment                        = 1,
};

// Enum JunoAdventuresRuntime.EJunoTokenReceiverType
// NumValues: 0x0002
enum class EJunoTokenReceiverType : uint8
{
	QuestGiver                               = 0,
	QuestGiverBoundPlayspace                 = 1,
};

// Enum JunoAdventuresRuntime.EJunoInsertItemType
// NumValues: 0x0003
enum class EJunoInsertItemType : uint8
{
	Equipped                                 = 0,
	OffHand                                  = 1,
	Any                                      = 2,
};

// Enum JunoAdventuresRuntime.EJunoQuestState
// NumValues: 0x0005
enum class EJunoQuestState : uint8
{
	Invalid                                  = 0,
	Available                                = 1,
	Rolled                                   = 2,
	InProgress                               = 3,
	Completed                                = 4,
};

// ScriptStruct JunoAdventuresRuntime.JunoConversationContextRequirement
// 0x0008 (0x0008 - 0x0000)
struct FJunoConversationContextRequirement final
{
public:
	struct FGameplayTag                           ParticipantID;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           RequirementTag;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoConversationContextRequirement) == 0x000004, "Wrong alignment on FJunoConversationContextRequirement");
static_assert(sizeof(FJunoConversationContextRequirement) == 0x000008, "Wrong size on FJunoConversationContextRequirement");
static_assert(offsetof(FJunoConversationContextRequirement, ParticipantID) == 0x000000, "Member 'FJunoConversationContextRequirement::ParticipantID' has a wrong offset!");
static_assert(offsetof(FJunoConversationContextRequirement, RequirementTag) == 0x000004, "Member 'FJunoConversationContextRequirement::RequirementTag' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoContexualMessageContainer
// 0x0050 (0x0050 - 0x0000)
struct FJunoContexualMessageContainer final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VoiceOverTag;                                      // 0x0018(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MoodReactionTag;                                   // 0x001C(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConversationNodeParameterPair> MetadataParameters;                                // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  MetadataTags;                                      // 0x0030(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoContexualMessageContainer) == 0x000008, "Wrong alignment on FJunoContexualMessageContainer");
static_assert(sizeof(FJunoContexualMessageContainer) == 0x000050, "Wrong size on FJunoContexualMessageContainer");
static_assert(offsetof(FJunoContexualMessageContainer, Message) == 0x000000, "Member 'FJunoContexualMessageContainer::Message' has a wrong offset!");
static_assert(offsetof(FJunoContexualMessageContainer, VoiceOverTag) == 0x000018, "Member 'FJunoContexualMessageContainer::VoiceOverTag' has a wrong offset!");
static_assert(offsetof(FJunoContexualMessageContainer, MoodReactionTag) == 0x00001C, "Member 'FJunoContexualMessageContainer::MoodReactionTag' has a wrong offset!");
static_assert(offsetof(FJunoContexualMessageContainer, MetadataParameters) == 0x000020, "Member 'FJunoContexualMessageContainer::MetadataParameters' has a wrong offset!");
static_assert(offsetof(FJunoContexualMessageContainer, MetadataTags) == 0x000030, "Member 'FJunoContexualMessageContainer::MetadataTags' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoContextualMessageCandidate
// 0x0088 (0x0088 - 0x0000)
struct FJunoContextualMessageCandidate final
{
public:
	EContextRequirementMatchPolicy                RequirementMatchPolicy;                            // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseJunoContextRequirements;                       // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortConversationContextRequirement> ContextRequirements;                               // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FJunoConversationContextRequirement> JunoContextRequirements;                           // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Priority;                                          // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Weight;                                            // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FJunoContexualMessageContainer> Messages;                                          // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoContextualMessageCandidate) == 0x000008, "Wrong alignment on FJunoContextualMessageCandidate");
static_assert(sizeof(FJunoContextualMessageCandidate) == 0x000088, "Wrong size on FJunoContextualMessageCandidate");
static_assert(offsetof(FJunoContextualMessageCandidate, RequirementMatchPolicy) == 0x000000, "Member 'FJunoContextualMessageCandidate::RequirementMatchPolicy' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageCandidate, bUseJunoContextRequirements) == 0x000001, "Member 'FJunoContextualMessageCandidate::bUseJunoContextRequirements' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageCandidate, ContextRequirements) == 0x000008, "Member 'FJunoContextualMessageCandidate::ContextRequirements' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageCandidate, JunoContextRequirements) == 0x000018, "Member 'FJunoContextualMessageCandidate::JunoContextRequirements' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageCandidate, Priority) == 0x000028, "Member 'FJunoContextualMessageCandidate::Priority' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageCandidate, Weight) == 0x000050, "Member 'FJunoContextualMessageCandidate::Weight' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageCandidate, Messages) == 0x000078, "Member 'FJunoContextualMessageCandidate::Messages' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoContextualMessageConfig
// 0x0010 (0x0010 - 0x0000)
struct FJunoContextualMessageConfig final
{
public:
	TArray<struct FJunoContextualMessageCandidate> ContextualMessages;                                // 0x0000(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FJunoContextualMessageConfig) == 0x000008, "Wrong alignment on FJunoContextualMessageConfig");
static_assert(sizeof(FJunoContextualMessageConfig) == 0x000010, "Wrong size on FJunoContextualMessageConfig");
static_assert(offsetof(FJunoContextualMessageConfig, ContextualMessages) == 0x000000, "Member 'FJunoContextualMessageConfig::ContextualMessages' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoContextualMessageConfigTableRow
// 0x0010 (0x0018 - 0x0008)
struct FJunoContextualMessageConfigTableRow final : public FTableRowBase
{
public:
	struct FJunoContextualMessageConfig           MessageConfig;                                     // 0x0008(0x0010)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoContextualMessageConfigTableRow) == 0x000008, "Wrong alignment on FJunoContextualMessageConfigTableRow");
static_assert(sizeof(FJunoContextualMessageConfigTableRow) == 0x000018, "Wrong size on FJunoContextualMessageConfigTableRow");
static_assert(offsetof(FJunoContextualMessageConfigTableRow, MessageConfig) == 0x000008, "Member 'FJunoContextualMessageConfigTableRow::MessageConfig' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoContextualMessageQueryResult
// 0x0058 (0x0058 - 0x0000)
struct FJunoContextualMessageQueryResult final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MoodReactionTag;                                   // 0x0018(0x0004)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VoiceOverTag;                                      // 0x001C(0x0004)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConversationNodeParameterPair> MetadataParameters;                                // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  MetadataTags;                                      // 0x0030(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bAreConsecutiveMessagesPending;                    // 0x0050(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoContextualMessageQueryResult) == 0x000008, "Wrong alignment on FJunoContextualMessageQueryResult");
static_assert(sizeof(FJunoContextualMessageQueryResult) == 0x000058, "Wrong size on FJunoContextualMessageQueryResult");
static_assert(offsetof(FJunoContextualMessageQueryResult, Message) == 0x000000, "Member 'FJunoContextualMessageQueryResult::Message' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageQueryResult, MoodReactionTag) == 0x000018, "Member 'FJunoContextualMessageQueryResult::MoodReactionTag' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageQueryResult, VoiceOverTag) == 0x00001C, "Member 'FJunoContextualMessageQueryResult::VoiceOverTag' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageQueryResult, MetadataParameters) == 0x000020, "Member 'FJunoContextualMessageQueryResult::MetadataParameters' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageQueryResult, MetadataTags) == 0x000030, "Member 'FJunoContextualMessageQueryResult::MetadataTags' has a wrong offset!");
static_assert(offsetof(FJunoContextualMessageQueryResult, bAreConsecutiveMessagesPending) == 0x000050, "Member 'FJunoContextualMessageQueryResult::bAreConsecutiveMessagesPending' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoSpecializedContextualMessageConfig
// 0x00B8 (0x00B8 - 0x0000)
struct FJunoSpecializedContextualMessageConfig final
{
public:
	struct FGameplayTagQuery                      NPCActorTagQuery;                                  // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Priority;                                          // 0x0048(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Weight;                                            // 0x0070(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FJunoContextualMessageConfig           MessageConfig;                                     // 0x0098(0x0010)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    MessageConfigTableRow;                             // 0x00A8(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoSpecializedContextualMessageConfig) == 0x000008, "Wrong alignment on FJunoSpecializedContextualMessageConfig");
static_assert(sizeof(FJunoSpecializedContextualMessageConfig) == 0x0000B8, "Wrong size on FJunoSpecializedContextualMessageConfig");
static_assert(offsetof(FJunoSpecializedContextualMessageConfig, NPCActorTagQuery) == 0x000000, "Member 'FJunoSpecializedContextualMessageConfig::NPCActorTagQuery' has a wrong offset!");
static_assert(offsetof(FJunoSpecializedContextualMessageConfig, Priority) == 0x000048, "Member 'FJunoSpecializedContextualMessageConfig::Priority' has a wrong offset!");
static_assert(offsetof(FJunoSpecializedContextualMessageConfig, Weight) == 0x000070, "Member 'FJunoSpecializedContextualMessageConfig::Weight' has a wrong offset!");
static_assert(offsetof(FJunoSpecializedContextualMessageConfig, MessageConfig) == 0x000098, "Member 'FJunoSpecializedContextualMessageConfig::MessageConfig' has a wrong offset!");
static_assert(offsetof(FJunoSpecializedContextualMessageConfig, MessageConfigTableRow) == 0x0000A8, "Member 'FJunoSpecializedContextualMessageConfig::MessageConfigTableRow' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoConversationGetResourceTaskMemory
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FJunoConversationGetResourceTaskMemory final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoConversationGetResourceTaskMemory) == 0x000004, "Wrong alignment on FJunoConversationGetResourceTaskMemory");
static_assert(sizeof(FJunoConversationGetResourceTaskMemory) == 0x000010, "Wrong size on FJunoConversationGetResourceTaskMemory");

// ScriptStruct JunoAdventuresRuntime.JunoConversationGiftNPCTaskMemory
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FJunoConversationGiftNPCTaskMemory final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoConversationGiftNPCTaskMemory) == 0x000008, "Wrong alignment on FJunoConversationGiftNPCTaskMemory");
static_assert(sizeof(FJunoConversationGiftNPCTaskMemory) == 0x000010, "Wrong size on FJunoConversationGiftNPCTaskMemory");

// ScriptStruct JunoAdventuresRuntime.JunoConversationRemoteCampRecruitmentTaskMemory
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FJunoConversationRemoteCampRecruitmentTaskMemory final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoConversationRemoteCampRecruitmentTaskMemory) == 0x000004, "Wrong alignment on FJunoConversationRemoteCampRecruitmentTaskMemory");
static_assert(sizeof(FJunoConversationRemoteCampRecruitmentTaskMemory) == 0x00000C, "Wrong size on FJunoConversationRemoteCampRecruitmentTaskMemory");

// ScriptStruct JunoAdventuresRuntime.QuestPropSpawnInfo
// 0x0088 (0x0088 - 0x0000)
struct FQuestPropSpawnInfo final
{
public:
	TSoftClassPtr<class UClass>                   ClassToSpawn;                                      // 0x0000(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  RequiredTags;                                      // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ForbiddenTags;                                     // 0x0040(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseMinMaxDistances;                               // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MinMaxDistanceFromOtherQuestPropActors;            // 0x0068(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MinMaxDistanceFromQuestGiver;                      // 0x0078(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQuestPropSpawnInfo) == 0x000008, "Wrong alignment on FQuestPropSpawnInfo");
static_assert(sizeof(FQuestPropSpawnInfo) == 0x000088, "Wrong size on FQuestPropSpawnInfo");
static_assert(offsetof(FQuestPropSpawnInfo, ClassToSpawn) == 0x000000, "Member 'FQuestPropSpawnInfo::ClassToSpawn' has a wrong offset!");
static_assert(offsetof(FQuestPropSpawnInfo, RequiredTags) == 0x000020, "Member 'FQuestPropSpawnInfo::RequiredTags' has a wrong offset!");
static_assert(offsetof(FQuestPropSpawnInfo, ForbiddenTags) == 0x000040, "Member 'FQuestPropSpawnInfo::ForbiddenTags' has a wrong offset!");
static_assert(offsetof(FQuestPropSpawnInfo, bUseMinMaxDistances) == 0x000060, "Member 'FQuestPropSpawnInfo::bUseMinMaxDistances' has a wrong offset!");
static_assert(offsetof(FQuestPropSpawnInfo, MinMaxDistanceFromOtherQuestPropActors) == 0x000068, "Member 'FQuestPropSpawnInfo::MinMaxDistanceFromOtherQuestPropActors' has a wrong offset!");
static_assert(offsetof(FQuestPropSpawnInfo, MinMaxDistanceFromQuestGiver) == 0x000078, "Member 'FQuestPropSpawnInfo::MinMaxDistanceFromQuestGiver' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.QuestPropSpawnInfoContainer
// 0x0010 (0x0010 - 0x0000)
struct FQuestPropSpawnInfoContainer final
{
public:
	TArray<struct FQuestPropSpawnInfo>            QuestPropSpawnInfos;                               // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQuestPropSpawnInfoContainer) == 0x000008, "Wrong alignment on FQuestPropSpawnInfoContainer");
static_assert(sizeof(FQuestPropSpawnInfoContainer) == 0x000010, "Wrong size on FQuestPropSpawnInfoContainer");
static_assert(offsetof(FQuestPropSpawnInfoContainer, QuestPropSpawnInfos) == 0x000000, "Member 'FQuestPropSpawnInfoContainer::QuestPropSpawnInfos' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.QuestTokenMappingContainer
// 0x0050 (0x0050 - 0x0000)
struct FQuestTokenMappingContainer final
{
public:
	TMap<EJunoTokenReceiverType, struct FGameplayTagContainer> QuestTokens;                                       // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQuestTokenMappingContainer) == 0x000008, "Wrong alignment on FQuestTokenMappingContainer");
static_assert(sizeof(FQuestTokenMappingContainer) == 0x000050, "Wrong size on FQuestTokenMappingContainer");
static_assert(offsetof(FQuestTokenMappingContainer, QuestTokens) == 0x000000, "Member 'FQuestTokenMappingContainer::QuestTokens' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.QuestTokenMappings
// 0x0050 (0x0050 - 0x0000)
struct FQuestTokenMappings final
{
public:
	TMap<class FName, struct FQuestTokenMappingContainer> ObjectiveQuestTokensToGrant;                       // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQuestTokenMappings) == 0x000008, "Wrong alignment on FQuestTokenMappings");
static_assert(sizeof(FQuestTokenMappings) == 0x000050, "Wrong size on FQuestTokenMappings");
static_assert(offsetof(FQuestTokenMappings, ObjectiveQuestTokensToGrant) == 0x000000, "Member 'FQuestTokenMappings::ObjectiveQuestTokensToGrant' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoQuestData
// 0x00A8 (0x00A8 - 0x0000)
struct FJunoQuestData final
{
public:
	TMap<class FName, struct FQuestPropSpawnInfoContainer> ObjectiveQuestPropActorsToSpawn;                   // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FQuestTokenMappings                    QuestTokenMappings;                                // 0x0050(0x0050)(Edit, NativeAccessSpecifierPublic)
	int32                                         AwesomePointsToGrant;                              // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoQuestData) == 0x000008, "Wrong alignment on FJunoQuestData");
static_assert(sizeof(FJunoQuestData) == 0x0000A8, "Wrong size on FJunoQuestData");
static_assert(offsetof(FJunoQuestData, ObjectiveQuestPropActorsToSpawn) == 0x000000, "Member 'FJunoQuestData::ObjectiveQuestPropActorsToSpawn' has a wrong offset!");
static_assert(offsetof(FJunoQuestData, QuestTokenMappings) == 0x000050, "Member 'FJunoQuestData::QuestTokenMappings' has a wrong offset!");
static_assert(offsetof(FJunoQuestData, AwesomePointsToGrant) == 0x0000A0, "Member 'FJunoQuestData::AwesomePointsToGrant' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoChangeInventoryEventEntry
// 0x0030 (0x0030 - 0x0000)
struct FJunoChangeInventoryEventEntry final
{
public:
	struct FStateDrivenTagQuery                   ItemTagQuery;                                      // 0x0000(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStateDrivenFloat                      ItemCount;                                         // 0x0018(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoChangeInventoryEventEntry) == 0x000008, "Wrong alignment on FJunoChangeInventoryEventEntry");
static_assert(sizeof(FJunoChangeInventoryEventEntry) == 0x000030, "Wrong size on FJunoChangeInventoryEventEntry");
static_assert(offsetof(FJunoChangeInventoryEventEntry, ItemTagQuery) == 0x000000, "Member 'FJunoChangeInventoryEventEntry::ItemTagQuery' has a wrong offset!");
static_assert(offsetof(FJunoChangeInventoryEventEntry, ItemCount) == 0x000018, "Member 'FJunoChangeInventoryEventEntry::ItemCount' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoStateDrivenEvent_ChangeInventory
// 0x0028 (0x0080 - 0x0058)
struct FJunoStateDrivenEvent_ChangeInventory final : public FStateDrivenEvent_InteractionBase
{
public:
	TArray<struct FJunoChangeInventoryEventEntry> ItemRequirements;                                  // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bExactRequirements;                                // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJunoChangeInventoryHelper*             ChangeInventoryHelper;                             // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortPawn>               SavedInteractingPawn;                              // 0x0078(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FJunoStateDrivenEvent_ChangeInventory) == 0x000008, "Wrong alignment on FJunoStateDrivenEvent_ChangeInventory");
static_assert(sizeof(FJunoStateDrivenEvent_ChangeInventory) == 0x000080, "Wrong size on FJunoStateDrivenEvent_ChangeInventory");
static_assert(offsetof(FJunoStateDrivenEvent_ChangeInventory, ItemRequirements) == 0x000058, "Member 'FJunoStateDrivenEvent_ChangeInventory::ItemRequirements' has a wrong offset!");
static_assert(offsetof(FJunoStateDrivenEvent_ChangeInventory, bExactRequirements) == 0x000068, "Member 'FJunoStateDrivenEvent_ChangeInventory::bExactRequirements' has a wrong offset!");
static_assert(offsetof(FJunoStateDrivenEvent_ChangeInventory, ChangeInventoryHelper) == 0x000070, "Member 'FJunoStateDrivenEvent_ChangeInventory::ChangeInventoryHelper' has a wrong offset!");
static_assert(offsetof(FJunoStateDrivenEvent_ChangeInventory, SavedInteractingPawn) == 0x000078, "Member 'FJunoStateDrivenEvent_ChangeInventory::SavedInteractingPawn' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoStateDrivenEvent_InsertItem
// 0x0050 (0x00A8 - 0x0058)
struct FJunoStateDrivenEvent_InsertItem final : public FStateDrivenEvent_InteractionBase
{
public:
	EJunoInsertItemType                           InsertType;                                        // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateDrivenTagQuery                   EquippedItemTagQuery;                              // 0x0060(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStateDrivenTagQuery                   OffHandItemTagQuery;                               // 0x0078(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStateDrivenTagQuery                   AnyHandItemTagQuery;                               // 0x0090(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJunoStateDrivenEvent_InsertItem) == 0x000008, "Wrong alignment on FJunoStateDrivenEvent_InsertItem");
static_assert(sizeof(FJunoStateDrivenEvent_InsertItem) == 0x0000A8, "Wrong size on FJunoStateDrivenEvent_InsertItem");
static_assert(offsetof(FJunoStateDrivenEvent_InsertItem, InsertType) == 0x000058, "Member 'FJunoStateDrivenEvent_InsertItem::InsertType' has a wrong offset!");
static_assert(offsetof(FJunoStateDrivenEvent_InsertItem, EquippedItemTagQuery) == 0x000060, "Member 'FJunoStateDrivenEvent_InsertItem::EquippedItemTagQuery' has a wrong offset!");
static_assert(offsetof(FJunoStateDrivenEvent_InsertItem, OffHandItemTagQuery) == 0x000078, "Member 'FJunoStateDrivenEvent_InsertItem::OffHandItemTagQuery' has a wrong offset!");
static_assert(offsetof(FJunoStateDrivenEvent_InsertItem, AnyHandItemTagQuery) == 0x000090, "Member 'FJunoStateDrivenEvent_InsertItem::AnyHandItemTagQuery' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoQuestPoolDataAssetEntry
// 0x0010 (0x0010 - 0x0000)
struct FJunoQuestPoolDataAssetEntry final
{
public:
	class UFortQuestItemDefinition*               QuestDefinition;                                   // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRepeatable;                                     // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoQuestPoolDataAssetEntry) == 0x000008, "Wrong alignment on FJunoQuestPoolDataAssetEntry");
static_assert(sizeof(FJunoQuestPoolDataAssetEntry) == 0x000010, "Wrong size on FJunoQuestPoolDataAssetEntry");
static_assert(offsetof(FJunoQuestPoolDataAssetEntry, QuestDefinition) == 0x000000, "Member 'FJunoQuestPoolDataAssetEntry::QuestDefinition' has a wrong offset!");
static_assert(offsetof(FJunoQuestPoolDataAssetEntry, bIsRepeatable) == 0x000008, "Member 'FJunoQuestPoolDataAssetEntry::bIsRepeatable' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.JunoQuestIDListWrapper
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FJunoQuestIDListWrapper final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoQuestIDListWrapper) == 0x000008, "Wrong alignment on FJunoQuestIDListWrapper");
static_assert(sizeof(FJunoQuestIDListWrapper) == 0x000010, "Wrong size on FJunoQuestIDListWrapper");

// ScriptStruct JunoAdventuresRuntime.JunoQuestRuntimeEntry
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FJunoQuestRuntimeEntry final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJunoQuestRuntimeEntry) == 0x000008, "Wrong alignment on FJunoQuestRuntimeEntry");
static_assert(sizeof(FJunoQuestRuntimeEntry) == 0x000018, "Wrong size on FJunoQuestRuntimeEntry");

// ScriptStruct JunoAdventuresRuntime.ActiveQuestInfo
// 0x00D0 (0x00D0 - 0x0000)
struct FActiveQuestInfo final
{
public:
	class AActor*                                 QuestGiver;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0xC8];                                       // 0x0008(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FActiveQuestInfo) == 0x000008, "Wrong alignment on FActiveQuestInfo");
static_assert(sizeof(FActiveQuestInfo) == 0x0000D0, "Wrong size on FActiveQuestInfo");
static_assert(offsetof(FActiveQuestInfo, QuestGiver) == 0x000000, "Member 'FActiveQuestInfo::QuestGiver' has a wrong offset!");

// ScriptStruct JunoAdventuresRuntime.MappedJunoActions
// 0x0010 (0x0010 - 0x0000)
struct FMappedJunoActions final
{
public:
	TArray<class UJunoActionConfig*>              MappedJunoActions;                                 // 0x0000(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMappedJunoActions) == 0x000008, "Wrong alignment on FMappedJunoActions");
static_assert(sizeof(FMappedJunoActions) == 0x000010, "Wrong size on FMappedJunoActions");
static_assert(offsetof(FMappedJunoActions, MappedJunoActions) == 0x000000, "Member 'FMappedJunoActions::MappedJunoActions' has a wrong offset!");

}

