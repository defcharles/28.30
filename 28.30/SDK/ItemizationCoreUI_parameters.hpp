#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationCoreUI

#include "Basic.hpp"

#include "ItemizationCoreRuntime_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ItemizationCoreUI.InventoryCollectionViewModel.InitializeViewModel
// 0x0008 (0x0008 - 0x0000)
struct InventoryCollectionViewModel_InitializeViewModel final
{
public:
	class UObject*                                InitializingObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryCollectionViewModel_InitializeViewModel) == 0x000008, "Wrong alignment on InventoryCollectionViewModel_InitializeViewModel");
static_assert(sizeof(InventoryCollectionViewModel_InitializeViewModel) == 0x000008, "Wrong size on InventoryCollectionViewModel_InitializeViewModel");
static_assert(offsetof(InventoryCollectionViewModel_InitializeViewModel, InitializingObject) == 0x000000, "Member 'InventoryCollectionViewModel_InitializeViewModel::InitializingObject' has a wrong offset!");

// Function ItemizationCoreUI.InventoryCollectionViewModel.UnbindInventoryCollection
// 0x0001 (0x0001 - 0x0000)
struct InventoryCollectionViewModel_UnbindInventoryCollection final
{
public:
	bool                                          bUnusedParam;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryCollectionViewModel_UnbindInventoryCollection) == 0x000001, "Wrong alignment on InventoryCollectionViewModel_UnbindInventoryCollection");
static_assert(sizeof(InventoryCollectionViewModel_UnbindInventoryCollection) == 0x000001, "Wrong size on InventoryCollectionViewModel_UnbindInventoryCollection");
static_assert(offsetof(InventoryCollectionViewModel_UnbindInventoryCollection, bUnusedParam) == 0x000000, "Member 'InventoryCollectionViewModel_UnbindInventoryCollection::bUnusedParam' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.DropAll
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_DropAll final
{
public:
	bool                                          bUnused;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_DropAll) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_DropAll");
static_assert(sizeof(InventoryItemEntryViewModel_DropAll) == 0x000001, "Wrong size on InventoryItemEntryViewModel_DropAll");
static_assert(offsetof(InventoryItemEntryViewModel_DropAll, bUnused) == 0x000000, "Member 'InventoryItemEntryViewModel_DropAll::bUnused' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.DropAmount
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_DropAmount final
{
public:
	int64                                         Amount;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_DropAmount) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_DropAmount");
static_assert(sizeof(InventoryItemEntryViewModel_DropAmount) == 0x000008, "Wrong size on InventoryItemEntryViewModel_DropAmount");
static_assert(offsetof(InventoryItemEntryViewModel_DropAmount, Amount) == 0x000000, "Member 'InventoryItemEntryViewModel_DropAmount::Amount' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.DropHalf
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_DropHalf final
{
public:
	bool                                          bUnused;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_DropHalf) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_DropHalf");
static_assert(sizeof(InventoryItemEntryViewModel_DropHalf) == 0x000001, "Wrong size on InventoryItemEntryViewModel_DropHalf");
static_assert(offsetof(InventoryItemEntryViewModel_DropHalf, bUnused) == 0x000000, "Member 'InventoryItemEntryViewModel_DropHalf::bUnused' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.SetEquippableItemActive
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_SetEquippableItemActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_SetEquippableItemActive) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_SetEquippableItemActive");
static_assert(sizeof(InventoryItemEntryViewModel_SetEquippableItemActive) == 0x000001, "Wrong size on InventoryItemEntryViewModel_SetEquippableItemActive");
static_assert(offsetof(InventoryItemEntryViewModel_SetEquippableItemActive, bActive) == 0x000000, "Member 'InventoryItemEntryViewModel_SetEquippableItemActive::bActive' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.SetItemSlotNumber
// 0x0004 (0x0004 - 0x0000)
struct InventoryItemEntryViewModel_SetItemSlotNumber final
{
public:
	int32                                         SlotNumber;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_SetItemSlotNumber) == 0x000004, "Wrong alignment on InventoryItemEntryViewModel_SetItemSlotNumber");
static_assert(sizeof(InventoryItemEntryViewModel_SetItemSlotNumber) == 0x000004, "Wrong size on InventoryItemEntryViewModel_SetItemSlotNumber");
static_assert(offsetof(InventoryItemEntryViewModel_SetItemSlotNumber, SlotNumber) == 0x000000, "Member 'InventoryItemEntryViewModel_SetItemSlotNumber::SlotNumber' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.ToggleEquippableItemActive
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_ToggleEquippableItemActive final
{
public:
	bool                                          bUnused;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_ToggleEquippableItemActive) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_ToggleEquippableItemActive");
static_assert(sizeof(InventoryItemEntryViewModel_ToggleEquippableItemActive) == 0x000001, "Wrong size on InventoryItemEntryViewModel_ToggleEquippableItemActive");
static_assert(offsetof(InventoryItemEntryViewModel_ToggleEquippableItemActive, bUnused) == 0x000000, "Member 'InventoryItemEntryViewModel_ToggleEquippableItemActive::bUnused' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.UpdateCanSwap
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_UpdateCanSwap final
{
public:
	const class UInventoryItemEntryViewModel*     SwapInventoryItemEntryViewModel;                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_UpdateCanSwap) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_UpdateCanSwap");
static_assert(sizeof(InventoryItemEntryViewModel_UpdateCanSwap) == 0x000008, "Wrong size on InventoryItemEntryViewModel_UpdateCanSwap");
static_assert(offsetof(InventoryItemEntryViewModel_UpdateCanSwap, SwapInventoryItemEntryViewModel) == 0x000000, "Member 'InventoryItemEntryViewModel_UpdateCanSwap::SwapInventoryItemEntryViewModel' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.UseItem
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_UseItem final
{
public:
	bool                                          bUnused;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_UseItem) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_UseItem");
static_assert(sizeof(InventoryItemEntryViewModel_UseItem) == 0x000001, "Wrong size on InventoryItemEntryViewModel_UseItem");
static_assert(offsetof(InventoryItemEntryViewModel_UseItem, bUnused) == 0x000000, "Member 'InventoryItemEntryViewModel_UseItem::bUnused' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.CanItemBeMadeActive
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_CanItemBeMadeActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_CanItemBeMadeActive) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_CanItemBeMadeActive");
static_assert(sizeof(InventoryItemEntryViewModel_CanItemBeMadeActive) == 0x000001, "Wrong size on InventoryItemEntryViewModel_CanItemBeMadeActive");
static_assert(offsetof(InventoryItemEntryViewModel_CanItemBeMadeActive, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_CanItemBeMadeActive::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.CanItemBeMadeInactive
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_CanItemBeMadeInactive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_CanItemBeMadeInactive) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_CanItemBeMadeInactive");
static_assert(sizeof(InventoryItemEntryViewModel_CanItemBeMadeInactive) == 0x000001, "Wrong size on InventoryItemEntryViewModel_CanItemBeMadeInactive");
static_assert(offsetof(InventoryItemEntryViewModel_CanItemBeMadeInactive, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_CanItemBeMadeInactive::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetEquipSlotInputAction
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetEquipSlotInputAction final
{
public:
	class UInputAction*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetEquipSlotInputAction) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetEquipSlotInputAction");
static_assert(sizeof(InventoryItemEntryViewModel_GetEquipSlotInputAction) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetEquipSlotInputAction");
static_assert(offsetof(InventoryItemEntryViewModel_GetEquipSlotInputAction, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetEquipSlotInputAction::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetInventoryID
// 0x0010 (0x0010 - 0x0000)
struct InventoryItemEntryViewModel_GetInventoryID final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetInventoryID) == 0x000004, "Wrong alignment on InventoryItemEntryViewModel_GetInventoryID");
static_assert(sizeof(InventoryItemEntryViewModel_GetInventoryID) == 0x000010, "Wrong size on InventoryItemEntryViewModel_GetInventoryID");
static_assert(offsetof(InventoryItemEntryViewModel_GetInventoryID, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetInventoryID::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemAmount
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetItemAmount final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemAmount) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemAmount");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemAmount) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetItemAmount");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemAmount, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemAmount::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetItemDefinition final
{
public:
	const class UItemDefinitionBase*              ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemDefinition) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemDefinition");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemDefinition) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetItemDefinition");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemDefinition, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemDefinition::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemDescription
// 0x0018 (0x0018 - 0x0000)
struct InventoryItemEntryViewModel_GetItemDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemDescription) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemDescription");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemDescription) == 0x000018, "Wrong size on InventoryItemEntryViewModel_GetItemDescription");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemDescription, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemDescription::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemEntryID
// 0x0010 (0x0010 - 0x0000)
struct InventoryItemEntryViewModel_GetItemEntryID final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemEntryID) == 0x000004, "Wrong alignment on InventoryItemEntryViewModel_GetItemEntryID");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemEntryID) == 0x000010, "Wrong size on InventoryItemEntryViewModel_GetItemEntryID");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemEntryID, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemEntryID::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemIcon
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetItemIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemIcon) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemIcon");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemIcon) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetItemIcon");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemIcon, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemIcon::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemIconDisplayTextType
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_GetItemIconDisplayTextType final
{
public:
	EItemIconDisplayTextType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemIconDisplayTextType) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_GetItemIconDisplayTextType");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemIconDisplayTextType) == 0x000001, "Wrong size on InventoryItemEntryViewModel_GetItemIconDisplayTextType");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemIconDisplayTextType, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemIconDisplayTextType::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemName
// 0x0018 (0x0018 - 0x0000)
struct InventoryItemEntryViewModel_GetItemName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemName) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemName");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemName) == 0x000018, "Wrong size on InventoryItemEntryViewModel_GetItemName");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemName, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemName::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemPrimaryAmmoCount
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetItemPrimaryAmmoCount final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemPrimaryAmmoCount) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemPrimaryAmmoCount");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemPrimaryAmmoCount) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetItemPrimaryAmmoCount");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemPrimaryAmmoCount, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemPrimaryAmmoCount::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemRarity
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetItemRarity final
{
public:
	const class UItemRarity*                      ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemRarity) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemRarity");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemRarity) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetItemRarity");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemRarity, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemRarity::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemSlotNumber
// 0x0004 (0x0004 - 0x0000)
struct InventoryItemEntryViewModel_GetItemSlotNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemSlotNumber) == 0x000004, "Wrong alignment on InventoryItemEntryViewModel_GetItemSlotNumber");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemSlotNumber) == 0x000004, "Wrong size on InventoryItemEntryViewModel_GetItemSlotNumber");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemSlotNumber, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemSlotNumber::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetItemType
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetItemType final
{
public:
	const class UItemType*                        ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetItemType) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetItemType");
static_assert(sizeof(InventoryItemEntryViewModel_GetItemType) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetItemType");
static_assert(offsetof(InventoryItemEntryViewModel_GetItemType, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetItemType::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetSmallItemIcon
// 0x0008 (0x0008 - 0x0000)
struct InventoryItemEntryViewModel_GetSmallItemIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetSmallItemIcon) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetSmallItemIcon");
static_assert(sizeof(InventoryItemEntryViewModel_GetSmallItemIcon) == 0x000008, "Wrong size on InventoryItemEntryViewModel_GetSmallItemIcon");
static_assert(offsetof(InventoryItemEntryViewModel_GetSmallItemIcon, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetSmallItemIcon::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetSoftItemIcon
// 0x0020 (0x0020 - 0x0000)
struct InventoryItemEntryViewModel_GetSoftItemIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetSoftItemIcon) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetSoftItemIcon");
static_assert(sizeof(InventoryItemEntryViewModel_GetSoftItemIcon) == 0x000020, "Wrong size on InventoryItemEntryViewModel_GetSoftItemIcon");
static_assert(offsetof(InventoryItemEntryViewModel_GetSoftItemIcon, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetSoftItemIcon::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.GetSoftSmallItemIcon
// 0x0020 (0x0020 - 0x0000)
struct InventoryItemEntryViewModel_GetSoftSmallItemIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_GetSoftSmallItemIcon) == 0x000008, "Wrong alignment on InventoryItemEntryViewModel_GetSoftSmallItemIcon");
static_assert(sizeof(InventoryItemEntryViewModel_GetSoftSmallItemIcon) == 0x000020, "Wrong size on InventoryItemEntryViewModel_GetSoftSmallItemIcon");
static_assert(offsetof(InventoryItemEntryViewModel_GetSoftSmallItemIcon, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_GetSoftSmallItemIcon::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.IsEquipSlotInputBindingVisible
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible");
static_assert(sizeof(InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible) == 0x000001, "Wrong size on InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible");
static_assert(offsetof(InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_IsEquipSlotInputBindingVisible::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.IsItemActive
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_IsItemActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_IsItemActive) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_IsItemActive");
static_assert(sizeof(InventoryItemEntryViewModel_IsItemActive) == 0x000001, "Wrong size on InventoryItemEntryViewModel_IsItemActive");
static_assert(offsetof(InventoryItemEntryViewModel_IsItemActive, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_IsItemActive::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.IsItemEntryIDValid
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_IsItemEntryIDValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_IsItemEntryIDValid) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_IsItemEntryIDValid");
static_assert(sizeof(InventoryItemEntryViewModel_IsItemEntryIDValid) == 0x000001, "Wrong size on InventoryItemEntryViewModel_IsItemEntryIDValid");
static_assert(offsetof(InventoryItemEntryViewModel_IsItemEntryIDValid, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_IsItemEntryIDValid::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.IsItemIconLoading
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_IsItemIconLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_IsItemIconLoading) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_IsItemIconLoading");
static_assert(sizeof(InventoryItemEntryViewModel_IsItemIconLoading) == 0x000001, "Wrong size on InventoryItemEntryViewModel_IsItemIconLoading");
static_assert(offsetof(InventoryItemEntryViewModel_IsItemIconLoading, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_IsItemIconLoading::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryItemEntryViewModel.IsSmallItemIconLoading
// 0x0001 (0x0001 - 0x0000)
struct InventoryItemEntryViewModel_IsSmallItemIconLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryItemEntryViewModel_IsSmallItemIconLoading) == 0x000001, "Wrong alignment on InventoryItemEntryViewModel_IsSmallItemIconLoading");
static_assert(sizeof(InventoryItemEntryViewModel_IsSmallItemIconLoading) == 0x000001, "Wrong size on InventoryItemEntryViewModel_IsSmallItemIconLoading");
static_assert(offsetof(InventoryItemEntryViewModel_IsSmallItemIconLoading, ReturnValue) == 0x000000, "Member 'InventoryItemEntryViewModel_IsSmallItemIconLoading::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryViewModel.GetInventoryDefinition
// 0x0008 (0x0008 - 0x0000)
struct InventoryViewModel_GetInventoryDefinition final
{
public:
	const class UInventoryDefinition*             ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryViewModel_GetInventoryDefinition) == 0x000008, "Wrong alignment on InventoryViewModel_GetInventoryDefinition");
static_assert(sizeof(InventoryViewModel_GetInventoryDefinition) == 0x000008, "Wrong size on InventoryViewModel_GetInventoryDefinition");
static_assert(offsetof(InventoryViewModel_GetInventoryDefinition, ReturnValue) == 0x000000, "Member 'InventoryViewModel_GetInventoryDefinition::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryViewModel.GetInventoryDescription
// 0x0018 (0x0018 - 0x0000)
struct InventoryViewModel_GetInventoryDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryViewModel_GetInventoryDescription) == 0x000008, "Wrong alignment on InventoryViewModel_GetInventoryDescription");
static_assert(sizeof(InventoryViewModel_GetInventoryDescription) == 0x000018, "Wrong size on InventoryViewModel_GetInventoryDescription");
static_assert(offsetof(InventoryViewModel_GetInventoryDescription, ReturnValue) == 0x000000, "Member 'InventoryViewModel_GetInventoryDescription::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryViewModel.GetInventoryName
// 0x0018 (0x0018 - 0x0000)
struct InventoryViewModel_GetInventoryName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryViewModel_GetInventoryName) == 0x000008, "Wrong alignment on InventoryViewModel_GetInventoryName");
static_assert(sizeof(InventoryViewModel_GetInventoryName) == 0x000018, "Wrong size on InventoryViewModel_GetInventoryName");
static_assert(offsetof(InventoryViewModel_GetInventoryName, ReturnValue) == 0x000000, "Member 'InventoryViewModel_GetInventoryName::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryViewModel.GetTotalSlots
// 0x0004 (0x0004 - 0x0000)
struct InventoryViewModel_GetTotalSlots final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryViewModel_GetTotalSlots) == 0x000004, "Wrong alignment on InventoryViewModel_GetTotalSlots");
static_assert(sizeof(InventoryViewModel_GetTotalSlots) == 0x000004, "Wrong size on InventoryViewModel_GetTotalSlots");
static_assert(offsetof(InventoryViewModel_GetTotalSlots, ReturnValue) == 0x000000, "Member 'InventoryViewModel_GetTotalSlots::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryViewModelAllowedConversionFunctions.FindInventoryViewModel
// 0x0020 (0x0020 - 0x0000)
struct InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel final
{
public:
	const class UInventoryDefinition*             InventoryDefinition;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInventoryViewModel*>            InventoryViewModels;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UInventoryViewModel*                    ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel) == 0x000008, "Wrong alignment on InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel");
static_assert(sizeof(InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel) == 0x000020, "Wrong size on InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel");
static_assert(offsetof(InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel, InventoryDefinition) == 0x000000, "Member 'InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel::InventoryDefinition' has a wrong offset!");
static_assert(offsetof(InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel, InventoryViewModels) == 0x000008, "Member 'InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel::InventoryViewModels' has a wrong offset!");
static_assert(offsetof(InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel, ReturnValue) == 0x000018, "Member 'InventoryViewModelAllowedConversionFunctions_FindInventoryViewModel::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.InventoryViewModelAllowedConversionFunctions.GetInventoryItemEntryViewModels
// 0x0028 (0x0028 - 0x0000)
struct InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels final
{
public:
	TArray<class UInventoryItemEntryViewModel*>   InventoryItemEntryViewModels;                      // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIncludeEmptySlots;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInventoryItemEntryViewModel*>   ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels) == 0x000008, "Wrong alignment on InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels");
static_assert(sizeof(InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels) == 0x000028, "Wrong size on InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels");
static_assert(offsetof(InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels, InventoryItemEntryViewModels) == 0x000000, "Member 'InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels::InventoryItemEntryViewModels' has a wrong offset!");
static_assert(offsetof(InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels, bIncludeEmptySlots) == 0x000010, "Member 'InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels::bIncludeEmptySlots' has a wrong offset!");
static_assert(offsetof(InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels, ReturnValue) == 0x000018, "Member 'InventoryViewModelAllowedConversionFunctions_GetInventoryItemEntryViewModels::ReturnValue' has a wrong offset!");

// Function ItemizationCoreUI.UniformGridEntryPanel.SetGridItems
// 0x0010 (0x0010 - 0x0000)
struct UniformGridEntryPanel_SetGridItems final
{
public:
	TArray<class UObject*>                        GridItems;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UniformGridEntryPanel_SetGridItems) == 0x000008, "Wrong alignment on UniformGridEntryPanel_SetGridItems");
static_assert(sizeof(UniformGridEntryPanel_SetGridItems) == 0x000010, "Wrong size on UniformGridEntryPanel_SetGridItems");
static_assert(offsetof(UniformGridEntryPanel_SetGridItems, GridItems) == 0x000000, "Member 'UniformGridEntryPanel_SetGridItems::GridItems' has a wrong offset!");

// Function ItemizationCoreUI.UniformGridEntryPanel.SetSlotAlignment
// 0x0002 (0x0002 - 0x0000)
struct UniformGridEntryPanel_SetSlotAlignment final
{
public:
	EHorizontalAlignment                          InSlotHorizontalAlignment;                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            InSlotVerticalAlignment;                           // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UniformGridEntryPanel_SetSlotAlignment) == 0x000001, "Wrong alignment on UniformGridEntryPanel_SetSlotAlignment");
static_assert(sizeof(UniformGridEntryPanel_SetSlotAlignment) == 0x000002, "Wrong size on UniformGridEntryPanel_SetSlotAlignment");
static_assert(offsetof(UniformGridEntryPanel_SetSlotAlignment, InSlotHorizontalAlignment) == 0x000000, "Member 'UniformGridEntryPanel_SetSlotAlignment::InSlotHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UniformGridEntryPanel_SetSlotAlignment, InSlotVerticalAlignment) == 0x000001, "Member 'UniformGridEntryPanel_SetSlotAlignment::InSlotVerticalAlignment' has a wrong offset!");

}

