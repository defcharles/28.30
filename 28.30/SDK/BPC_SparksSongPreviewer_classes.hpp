#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_SparksSongPreviewer

#include "Basic.hpp"

#include "EpicMediaBasePlayer_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_SparksSongPreviewer.BPC_SparksSongPreviewer_C
// 0x0050 (0x00F0 - 0x00A0)
class UBPC_SparksSongPreviewer_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortBaseStreamingVideo*                Streamer;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentSong;                                       // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PendingSong;                                       // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeInDuration;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeOutDuration;                                   // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviewDuration;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LoopPointFadeTimerHandle;                          // 0x00D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LoopFadeOutDurationFromEnd;                        // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FadeOutForStopTimerHandle;                         // 0x00E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadingOut;                                       // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Clear_Current_Preview_and_Start_Pending_Preview();
	void DoneFadingOutForStop();
	void ExecuteUbergraph_BPC_SparksSongPreviewer(int32 EntryPoint);
	void Fade_Out_And_Stop();
	void FadeInAfterLoop();
	void FadeOutAtLoop();
	void ForceStopPreviewImmediate();
	void InitPreview();
	void OnPlaybackResumed_Event();
	void OnVideoResumed();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void StartPreview(class FName SongShortName);
	void StopPreview(bool WithFadeout);
	void StopPreviewingSong(bool WithFadeout, class FName SongShortName);
	void VideoOnClosed_Event();
	void VideoOnSuccess_Event();
	void VideoOnTerminalError_Event(EBaseMediaTerminalErrorReason Reason);

	void IsPlayingPreview(class FName Song, bool* Is_Playing_Or_Pending, bool* Is_Playing, bool* Is_Pending) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_SparksSongPreviewer_C">();
	}
	static class UBPC_SparksSongPreviewer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_SparksSongPreviewer_C>();
	}
};
static_assert(alignof(UBPC_SparksSongPreviewer_C) == 0x000008, "Wrong alignment on UBPC_SparksSongPreviewer_C");
static_assert(sizeof(UBPC_SparksSongPreviewer_C) == 0x0000F0, "Wrong size on UBPC_SparksSongPreviewer_C");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_SparksSongPreviewer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, Streamer) == 0x0000A8, "Member 'UBPC_SparksSongPreviewer_C::Streamer' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, CurrentSong) == 0x0000B0, "Member 'UBPC_SparksSongPreviewer_C::CurrentSong' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, PendingSong) == 0x0000B4, "Member 'UBPC_SparksSongPreviewer_C::PendingSong' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, FadeInDuration) == 0x0000B8, "Member 'UBPC_SparksSongPreviewer_C::FadeInDuration' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, FadeOutDuration) == 0x0000C0, "Member 'UBPC_SparksSongPreviewer_C::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, PreviewDuration) == 0x0000C8, "Member 'UBPC_SparksSongPreviewer_C::PreviewDuration' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, LoopPointFadeTimerHandle) == 0x0000D0, "Member 'UBPC_SparksSongPreviewer_C::LoopPointFadeTimerHandle' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, LoopFadeOutDurationFromEnd) == 0x0000D8, "Member 'UBPC_SparksSongPreviewer_C::LoopFadeOutDurationFromEnd' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, FadeOutForStopTimerHandle) == 0x0000E0, "Member 'UBPC_SparksSongPreviewer_C::FadeOutForStopTimerHandle' has a wrong offset!");
static_assert(offsetof(UBPC_SparksSongPreviewer_C, IsFadingOut) == 0x0000E8, "Member 'UBPC_SparksSongPreviewer_C::IsFadingOut' has a wrong offset!");

}

