#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BallisticShieldGameplayRuntime

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "BallisticShieldGameplayRuntime_structs.hpp"
#include "TacticalSprintRuntime_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "TargetingSystem_classes.hpp"


namespace SDK
{

// Class BallisticShieldGameplayRuntime.BallisticShieldItemLayerAnimInstance
// 0x00E0 (0x07D0 - 0x06F0)
class UBallisticShieldItemLayerAnimInstance final : public UFortItemLayerAnimInstance
{
public:
	bool                                          bIsRush;                                           // 0x06F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEquipping;                                      // 0x06F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReloading;                                      // 0x06F2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnterLanding;                                     // 0x06F3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExitLanding;                                      // 0x06F4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShieldBlocking;                                 // 0x06F5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStaggerBuildup;                                 // 0x06F6(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6F7[0x1];                                      // 0x06F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Yaw;                                               // 0x06F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChargeAOAlpha;                                     // 0x06FC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GenderAndSize;                                     // 0x0700(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReloadUBAlpha;                                     // 0x0704(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaskLeftArmAlpha;                                  // 0x0708(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StaggerAmount;                                     // 0x070C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_710[0xC0];                                     // 0x0710(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BallisticShieldItemLayerAnimInstance">();
	}
	static class UBallisticShieldItemLayerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallisticShieldItemLayerAnimInstance>();
	}
};
static_assert(alignof(UBallisticShieldItemLayerAnimInstance) == 0x000010, "Wrong alignment on UBallisticShieldItemLayerAnimInstance");
static_assert(sizeof(UBallisticShieldItemLayerAnimInstance) == 0x0007D0, "Wrong size on UBallisticShieldItemLayerAnimInstance");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bIsRush) == 0x0006F0, "Member 'UBallisticShieldItemLayerAnimInstance::bIsRush' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bIsEquipping) == 0x0006F1, "Member 'UBallisticShieldItemLayerAnimInstance::bIsEquipping' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bIsReloading) == 0x0006F2, "Member 'UBallisticShieldItemLayerAnimInstance::bIsReloading' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bEnterLanding) == 0x0006F3, "Member 'UBallisticShieldItemLayerAnimInstance::bEnterLanding' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bExitLanding) == 0x0006F4, "Member 'UBallisticShieldItemLayerAnimInstance::bExitLanding' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bIsShieldBlocking) == 0x0006F5, "Member 'UBallisticShieldItemLayerAnimInstance::bIsShieldBlocking' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, bIsStaggerBuildup) == 0x0006F6, "Member 'UBallisticShieldItemLayerAnimInstance::bIsStaggerBuildup' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, Yaw) == 0x0006F8, "Member 'UBallisticShieldItemLayerAnimInstance::Yaw' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, ChargeAOAlpha) == 0x0006FC, "Member 'UBallisticShieldItemLayerAnimInstance::ChargeAOAlpha' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, GenderAndSize) == 0x000700, "Member 'UBallisticShieldItemLayerAnimInstance::GenderAndSize' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, ReloadUBAlpha) == 0x000704, "Member 'UBallisticShieldItemLayerAnimInstance::ReloadUBAlpha' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, MaskLeftArmAlpha) == 0x000708, "Member 'UBallisticShieldItemLayerAnimInstance::MaskLeftArmAlpha' has a wrong offset!");
static_assert(offsetof(UBallisticShieldItemLayerAnimInstance, StaggerAmount) == 0x00070C, "Member 'UBallisticShieldItemLayerAnimInstance::StaggerAmount' has a wrong offset!");

// Class BallisticShieldGameplayRuntime.BallisticShieldWeaponInterface
// 0x0000 (0x0028 - 0x0028)
class IBallisticShieldWeaponInterface final : public IInterface
{
public:
	void GetBallisticShieldData(EBallisticShieldPlayerActionState* BallisticShieldPlayerState, float* StaggerBuildupPercent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BallisticShieldWeaponInterface">();
	}
	static class IBallisticShieldWeaponInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBallisticShieldWeaponInterface>();
	}
};
static_assert(alignof(IBallisticShieldWeaponInterface) == 0x000008, "Wrong alignment on IBallisticShieldWeaponInterface");
static_assert(sizeof(IBallisticShieldWeaponInterface) == 0x000028, "Wrong size on IBallisticShieldWeaponInterface");

// Class BallisticShieldGameplayRuntime.FortMovementMode_ELBShieldSprint
// 0x0038 (0x0400 - 0x03C8)
class UFortMovementMode_ELBShieldSprint final : public UFortMovementMode_ELTacSprint
{
public:
	struct FScalableFloat                         ChargeRotationRate;                                // 0x03C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayAbility>           GrantedAbility;                                    // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMovementMode_ELBShieldSprint">();
	}
	static class UFortMovementMode_ELBShieldSprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMovementMode_ELBShieldSprint>();
	}
};
static_assert(alignof(UFortMovementMode_ELBShieldSprint) == 0x000008, "Wrong alignment on UFortMovementMode_ELBShieldSprint");
static_assert(sizeof(UFortMovementMode_ELBShieldSprint) == 0x000400, "Wrong size on UFortMovementMode_ELBShieldSprint");
static_assert(offsetof(UFortMovementMode_ELBShieldSprint, ChargeRotationRate) == 0x0003C8, "Member 'UFortMovementMode_ELBShieldSprint::ChargeRotationRate' has a wrong offset!");
static_assert(offsetof(UFortMovementMode_ELBShieldSprint, GrantedAbility) == 0x0003F0, "Member 'UFortMovementMode_ELBShieldSprint::GrantedAbility' has a wrong offset!");

// Class BallisticShieldGameplayRuntime.TargetingFilterTask_BShieldCharge
// 0x0088 (0x00B0 - 0x0028)
class UTargetingFilterTask_BShieldCharge final : public UTargetingFilterTask_BasicFilterTemplate
{
public:
	TArray<TSubclassOf<class UObject>>            WalkableActorClasses;                              // 0x0028(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BashableActorAngle;                                // 0x0038(0x0028)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MainTraceDistance;                                 // 0x0060(0x0028)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FloorHitZTolerance;                                // 0x0088(0x0028)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TargetingFilterTask_BShieldCharge">();
	}
	static class UTargetingFilterTask_BShieldCharge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetingFilterTask_BShieldCharge>();
	}
};
static_assert(alignof(UTargetingFilterTask_BShieldCharge) == 0x000008, "Wrong alignment on UTargetingFilterTask_BShieldCharge");
static_assert(sizeof(UTargetingFilterTask_BShieldCharge) == 0x0000B0, "Wrong size on UTargetingFilterTask_BShieldCharge");
static_assert(offsetof(UTargetingFilterTask_BShieldCharge, WalkableActorClasses) == 0x000028, "Member 'UTargetingFilterTask_BShieldCharge::WalkableActorClasses' has a wrong offset!");
static_assert(offsetof(UTargetingFilterTask_BShieldCharge, BashableActorAngle) == 0x000038, "Member 'UTargetingFilterTask_BShieldCharge::BashableActorAngle' has a wrong offset!");
static_assert(offsetof(UTargetingFilterTask_BShieldCharge, MainTraceDistance) == 0x000060, "Member 'UTargetingFilterTask_BShieldCharge::MainTraceDistance' has a wrong offset!");
static_assert(offsetof(UTargetingFilterTask_BShieldCharge, FloorHitZTolerance) == 0x000088, "Member 'UTargetingFilterTask_BShieldCharge::FloorHitZTolerance' has a wrong offset!");

}

