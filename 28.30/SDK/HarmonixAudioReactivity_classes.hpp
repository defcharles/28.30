#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixAudioReactivity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "HarmonixAudioReactivity_structs.hpp"


namespace SDK
{

// Class HarmonixAudioReactivity.HarmonixAudioAnalyzerResultsDispatcher
// 0x0078 (0x00A8 - 0x0030)
class UHarmonixAudioAnalyzerResultsDispatcher final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x78];                                      // 0x0030(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool HasProvider(const class FName& Name_0) const;
	bool TryGetResults(const class FName& Name_0, struct FHarmonixAudioAnalyzerResults* Results) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixAudioAnalyzerResultsDispatcher">();
	}
	static class UHarmonixAudioAnalyzerResultsDispatcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixAudioAnalyzerResultsDispatcher>();
	}
};
static_assert(alignof(UHarmonixAudioAnalyzerResultsDispatcher) == 0x000008, "Wrong alignment on UHarmonixAudioAnalyzerResultsDispatcher");
static_assert(sizeof(UHarmonixAudioAnalyzerResultsDispatcher) == 0x0000A8, "Wrong size on UHarmonixAudioAnalyzerResultsDispatcher");

// Class HarmonixAudioReactivity.HarmonixAudioAnalyzerResultsProvider
// 0x0008 (0x0030 - 0x0028)
class UHarmonixAudioAnalyzerResultsProvider final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHarmonixAudioAnalyzerResultsProvider* CreateHarmonixAudioAnalyzerResultsProvider(class FName Name_0);

	void SetArbitraryTextureData(const TArray<float>& ArbitraryTextureData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixAudioAnalyzerResultsProvider">();
	}
	static class UHarmonixAudioAnalyzerResultsProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixAudioAnalyzerResultsProvider>();
	}
};
static_assert(alignof(UHarmonixAudioAnalyzerResultsProvider) == 0x000008, "Wrong alignment on UHarmonixAudioAnalyzerResultsProvider");
static_assert(sizeof(UHarmonixAudioAnalyzerResultsProvider) == 0x000030, "Wrong size on UHarmonixAudioAnalyzerResultsProvider");

// Class HarmonixAudioReactivity.HarmonixAudioAnalyzerSourceEffectPreset
// 0x00C8 (0x0130 - 0x0068)
class UHarmonixAudioAnalyzerSourceEffectPreset final : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_68[0x78];                                      // 0x0068(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHarmonixAudioAnalyzerSourceEffectSettings Settings;                                          // 0x00E0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixAudioAnalyzerSourceEffectPreset">();
	}
	static class UHarmonixAudioAnalyzerSourceEffectPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixAudioAnalyzerSourceEffectPreset>();
	}
};
static_assert(alignof(UHarmonixAudioAnalyzerSourceEffectPreset) == 0x000008, "Wrong alignment on UHarmonixAudioAnalyzerSourceEffectPreset");
static_assert(sizeof(UHarmonixAudioAnalyzerSourceEffectPreset) == 0x000130, "Wrong size on UHarmonixAudioAnalyzerSourceEffectPreset");
static_assert(offsetof(UHarmonixAudioAnalyzerSourceEffectPreset, Settings) == 0x0000E0, "Member 'UHarmonixAudioAnalyzerSourceEffectPreset::Settings' has a wrong offset!");

// Class HarmonixAudioReactivity.HarmonixAudioAnalyzerSubmixEffectPreset
// 0x00C8 (0x0130 - 0x0068)
class UHarmonixAudioAnalyzerSubmixEffectPreset final : public USoundEffectSubmixPreset
{
public:
	uint8                                         Pad_68[0x78];                                      // 0x0068(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHarmonixAudioAnalyzerSubmixEffectSettings Settings;                                          // 0x00E0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixAudioAnalyzerSubmixEffectPreset">();
	}
	static class UHarmonixAudioAnalyzerSubmixEffectPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixAudioAnalyzerSubmixEffectPreset>();
	}
};
static_assert(alignof(UHarmonixAudioAnalyzerSubmixEffectPreset) == 0x000008, "Wrong alignment on UHarmonixAudioAnalyzerSubmixEffectPreset");
static_assert(sizeof(UHarmonixAudioAnalyzerSubmixEffectPreset) == 0x000130, "Wrong size on UHarmonixAudioAnalyzerSubmixEffectPreset");
static_assert(offsetof(UHarmonixAudioAnalyzerSubmixEffectPreset, Settings) == 0x0000E0, "Member 'UHarmonixAudioAnalyzerSubmixEffectPreset::Settings' has a wrong offset!");

// Class HarmonixAudioReactivity.HarmonixTextureBase
// 0x0010 (0x0140 - 0x0130)
class UHarmonixTextureBase : public UTexture
{
public:
	int32                                         Width;                                             // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EHarmonixTextureFilterMode                    TextureFilterMode;                                 // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETextureAddress                               TextureTilingMode;                                 // 0x0139(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetCurrentTextureHeight() const;
	int32 GetCurrentTextureWidth() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixTextureBase">();
	}
	static class UHarmonixTextureBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixTextureBase>();
	}
};
static_assert(alignof(UHarmonixTextureBase) == 0x000008, "Wrong alignment on UHarmonixTextureBase");
static_assert(sizeof(UHarmonixTextureBase) == 0x000140, "Wrong size on UHarmonixTextureBase");
static_assert(offsetof(UHarmonixTextureBase, Width) == 0x000130, "Member 'UHarmonixTextureBase::Width' has a wrong offset!");
static_assert(offsetof(UHarmonixTextureBase, TextureFilterMode) == 0x000138, "Member 'UHarmonixTextureBase::TextureFilterMode' has a wrong offset!");
static_assert(offsetof(UHarmonixTextureBase, TextureTilingMode) == 0x000139, "Member 'UHarmonixTextureBase::TextureTilingMode' has a wrong offset!");

// Class HarmonixAudioReactivity.HarmonixHysteresisTextureBase
// 0x0030 (0x0170 - 0x0140)
class UHarmonixHysteresisTextureBase : public UHarmonixTextureBase
{
public:
	uint8                                         Pad_140[0x8];                                      // 0x0140(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TicksPerShift;                                     // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumHysteresisSamples;                              // 0x0150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0x1C];                                     // 0x0154(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixHysteresisTextureBase">();
	}
	static class UHarmonixHysteresisTextureBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixHysteresisTextureBase>();
	}
};
static_assert(alignof(UHarmonixHysteresisTextureBase) == 0x000008, "Wrong alignment on UHarmonixHysteresisTextureBase");
static_assert(sizeof(UHarmonixHysteresisTextureBase) == 0x000170, "Wrong size on UHarmonixHysteresisTextureBase");
static_assert(offsetof(UHarmonixHysteresisTextureBase, TicksPerShift) == 0x000148, "Member 'UHarmonixHysteresisTextureBase::TicksPerShift' has a wrong offset!");
static_assert(offsetof(UHarmonixHysteresisTextureBase, NumHysteresisSamples) == 0x000150, "Member 'UHarmonixHysteresisTextureBase::NumHysteresisSamples' has a wrong offset!");

// Class HarmonixAudioReactivity.HarmonixAudioAnalysisTexture
// 0x0018 (0x0188 - 0x0170)
class UHarmonixAudioAnalysisTexture final : public UHarmonixHysteresisTextureBase
{
public:
	TWeakObjectPtr<class UMusicClockComponent>    MusicClock;                                        // 0x0170(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHarmonixAudioAnalysisType                    Type;                                              // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InstanceName;                                      // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          ResetMonoPeakOnUpdate;                             // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          WarnIfNotEnabled;                                  // 0x0181(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixAudioAnalysisTexture">();
	}
	static class UHarmonixAudioAnalysisTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixAudioAnalysisTexture>();
	}
};
static_assert(alignof(UHarmonixAudioAnalysisTexture) == 0x000008, "Wrong alignment on UHarmonixAudioAnalysisTexture");
static_assert(sizeof(UHarmonixAudioAnalysisTexture) == 0x000188, "Wrong size on UHarmonixAudioAnalysisTexture");
static_assert(offsetof(UHarmonixAudioAnalysisTexture, MusicClock) == 0x000170, "Member 'UHarmonixAudioAnalysisTexture::MusicClock' has a wrong offset!");
static_assert(offsetof(UHarmonixAudioAnalysisTexture, Type) == 0x000178, "Member 'UHarmonixAudioAnalysisTexture::Type' has a wrong offset!");
static_assert(offsetof(UHarmonixAudioAnalysisTexture, InstanceName) == 0x00017C, "Member 'UHarmonixAudioAnalysisTexture::InstanceName' has a wrong offset!");
static_assert(offsetof(UHarmonixAudioAnalysisTexture, ResetMonoPeakOnUpdate) == 0x000180, "Member 'UHarmonixAudioAnalysisTexture::ResetMonoPeakOnUpdate' has a wrong offset!");
static_assert(offsetof(UHarmonixAudioAnalysisTexture, WarnIfNotEnabled) == 0x000181, "Member 'UHarmonixAudioAnalysisTexture::WarnIfNotEnabled' has a wrong offset!");

// Class HarmonixAudioReactivity.HarmonixPeakTamer
// 0x0020 (0x0048 - 0x0028)
class UHarmonixPeakTamer final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHarmonixPeakTamer* CreateHarmonixPeakTamer();

	void Configure(const struct FHarmonixPeakTamerSettings& Settings);
	void Update(float InputValue, float DeltaTimeSeconds);

	float GetPeak() const;
	float GetValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixPeakTamer">();
	}
	static class UHarmonixPeakTamer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixPeakTamer>();
	}
};
static_assert(alignof(UHarmonixPeakTamer) == 0x000008, "Wrong alignment on UHarmonixPeakTamer");
static_assert(sizeof(UHarmonixPeakTamer) == 0x000048, "Wrong size on UHarmonixPeakTamer");

}

