#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_STI_Label

#include "Basic.hpp"

#include "ETempItemLabelType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_STI_Label.WBP_STI_Label_C.Apply Effect
// 0x0150 (0x0150 - 0x0000)
struct WBP_STI_Label_C_Apply_Effect final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            TextColor;                                         // 0x0018(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      BackgroundMaterial;                                // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              IconVisibility;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              IconMaterial;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconColor;                                         // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0080(0x00C0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_Label_C_Apply_Effect) == 0x000010, "Wrong alignment on WBP_STI_Label_C_Apply_Effect");
static_assert(sizeof(WBP_STI_Label_C_Apply_Effect) == 0x000150, "Wrong size on WBP_STI_Label_C_Apply_Effect");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, Text) == 0x000000, "Member 'WBP_STI_Label_C_Apply_Effect::Text' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, TextColor) == 0x000018, "Member 'WBP_STI_Label_C_Apply_Effect::TextColor' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, BackgroundMaterial) == 0x000030, "Member 'WBP_STI_Label_C_Apply_Effect::BackgroundMaterial' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, IconVisibility) == 0x000038, "Member 'WBP_STI_Label_C_Apply_Effect::IconVisibility' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, IconMaterial) == 0x000040, "Member 'WBP_STI_Label_C_Apply_Effect::IconMaterial' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, IconColor) == 0x000048, "Member 'WBP_STI_Label_C_Apply_Effect::IconColor' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, K2Node_MakeStruct_Margin) == 0x000058, "Member 'WBP_STI_Label_C_Apply_Effect::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'WBP_STI_Label_C_Apply_Effect::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, K2Node_MakeStruct_SlateBrush) == 0x000080, "Member 'WBP_STI_Label_C_Apply_Effect::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Apply_Effect, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000140, "Member 'WBP_STI_Label_C_Apply_Effect::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function WBP_STI_Label.WBP_STI_Label_C.ExecuteUbergraph_WBP_STI_Label
// 0x0028 (0x0028 - 0x0000)
struct WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label) == 0x000008, "Wrong alignment on WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label");
static_assert(sizeof(WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label) == 0x000028, "Wrong size on WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label");
static_assert(offsetof(WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label, EntryPoint) == 0x000000, "Member 'WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label, K2Node_Event_IsDesignTime) == 0x000020, "Member 'WBP_STI_Label_C_ExecuteUbergraph_WBP_STI_Label::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_STI_Label.WBP_STI_Label_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_STI_Label_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_STI_Label_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_STI_Label_C_PreConstruct");
static_assert(sizeof(WBP_STI_Label_C_PreConstruct) == 0x000001, "Wrong size on WBP_STI_Label_C_PreConstruct");
static_assert(offsetof(WBP_STI_Label_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_STI_Label_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_STI_Label.WBP_STI_Label_C.Setup Label
// 0x0060 (0x0060 - 0x0000)
struct WBP_STI_Label_C_Setup_Label final
{
public:
	ETempItemLabelType                            Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0038(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x004C(0x0014)()
};
static_assert(alignof(WBP_STI_Label_C_Setup_Label) == 0x000008, "Wrong alignment on WBP_STI_Label_C_Setup_Label");
static_assert(sizeof(WBP_STI_Label_C_Setup_Label) == 0x000060, "Wrong size on WBP_STI_Label_C_Setup_Label");
static_assert(offsetof(WBP_STI_Label_C_Setup_Label, Selection) == 0x000000, "Member 'WBP_STI_Label_C_Setup_Label::Selection' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Setup_Label, Text) == 0x000008, "Member 'WBP_STI_Label_C_Setup_Label::Text' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Setup_Label, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'WBP_STI_Label_C_Setup_Label::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Setup_Label, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'WBP_STI_Label_C_Setup_Label::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Setup_Label, K2Node_MakeStruct_SlateColor_1) == 0x000038, "Member 'WBP_STI_Label_C_Setup_Label::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_STI_Label_C_Setup_Label, K2Node_MakeStruct_SlateColor_2) == 0x00004C, "Member 'WBP_STI_Label_C_Setup_Label::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

}

