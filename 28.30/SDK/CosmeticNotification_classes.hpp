#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmeticNotification

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CosmeticNotification.CosmeticNotification_C
// 0x0040 (0x0398 - 0x0358)
class UCosmeticNotification_C final : public UFortNotificationEntry_LevelUp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Outro;                                             // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_Content;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reward_Glow;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RewardFlare;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_Mobile;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsQuestCosmetic;                                  // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_CosmeticNotification(int32 EntryPoint);
	void OnIntroFinished();
	void OnOutroFinished();
	void PreConstruct(bool IsDesignTime);
	void SetStyle_LevelUp();
	void SetStyle_QuestCosmetic(EFortRarity Rarity);
	void StartNotificationIntro();
	void StartNotificationOutro();
	void UpdateLevelUpVisuals(const class UFortItemDefinition* RewardItem);
	void UpdateQuestRewardVisuals(const class UItemDefinitionBase* RewardItem, EFortRarity QuestRarity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CosmeticNotification_C">();
	}
	static class UCosmeticNotification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCosmeticNotification_C>();
	}
};
static_assert(alignof(UCosmeticNotification_C) == 0x000008, "Wrong alignment on UCosmeticNotification_C");
static_assert(sizeof(UCosmeticNotification_C) == 0x000398, "Wrong size on UCosmeticNotification_C");
static_assert(offsetof(UCosmeticNotification_C, UberGraphFrame) == 0x000358, "Member 'UCosmeticNotification_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, Outro) == 0x000360, "Member 'UCosmeticNotification_C::Outro' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, Intro) == 0x000368, "Member 'UCosmeticNotification_C::Intro' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, CommonBorder_Content) == 0x000370, "Member 'UCosmeticNotification_C::CommonBorder_Content' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, Reward_Glow) == 0x000378, "Member 'UCosmeticNotification_C::Reward_Glow' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, RewardFlare) == 0x000380, "Member 'UCosmeticNotification_C::RewardFlare' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, ScaleBox_Mobile) == 0x000388, "Member 'UCosmeticNotification_C::ScaleBox_Mobile' has a wrong offset!");
static_assert(offsetof(UCosmeticNotification_C, bIsQuestCosmetic) == 0x000390, "Member 'UCosmeticNotification_C::bIsQuestCosmetic' has a wrong offset!");

}

