#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MudGameplayRuntime

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class MudGameplayRuntime.FortPawnComponent_Mud
// 0x0040 (0x00E8 - 0x00A8)
class UFortPawnComponent_Mud final : public UFortPawnComponent
{
public:
	struct FGameplayTag                           CurieFireTag;                                      // 0x00A8(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           SlidingTag;                                        // 0x00AC(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           SprintingTag;                                      // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           AttachParentCoveredEventTag;                       // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CreatureSprintingTag;                              // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x2C];                                      // 0x00BC(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleASCInitialized(class UFortAbilitySystemComponent* AbilitySystemComponent, class AFortPlayerPawn* AffectedPawn);
	void HandleSurfaceTypeChanged(class AActor* SurfaceActor, EPhysicalSurface CurrentSurfaceType, EPhysicalSurface PrevSurfaceType);
	void OnAttachedParentCoveredInMud(const struct FGameplayEventData& Payload);
	void OnCreatureSprintingTagCountChanged(const struct FGameplayTag& tag, int32 NewCount);
	void OnCurieFireTagCountChanged(const struct FGameplayTag& tag, int32 NewCount);
	void OnEnteredMud();
	void OnExitedMud();
	void OnSlidingTagCountChanged(const struct FGameplayTag& tag, int32 NewCount);
	void OnSprintingTagCountChanged(const struct FGameplayTag& tag, int32 NewCount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPawnComponent_Mud">();
	}
	static class UFortPawnComponent_Mud* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPawnComponent_Mud>();
	}
};
static_assert(alignof(UFortPawnComponent_Mud) == 0x000008, "Wrong alignment on UFortPawnComponent_Mud");
static_assert(sizeof(UFortPawnComponent_Mud) == 0x0000E8, "Wrong size on UFortPawnComponent_Mud");
static_assert(offsetof(UFortPawnComponent_Mud, CurieFireTag) == 0x0000A8, "Member 'UFortPawnComponent_Mud::CurieFireTag' has a wrong offset!");
static_assert(offsetof(UFortPawnComponent_Mud, SlidingTag) == 0x0000AC, "Member 'UFortPawnComponent_Mud::SlidingTag' has a wrong offset!");
static_assert(offsetof(UFortPawnComponent_Mud, SprintingTag) == 0x0000B0, "Member 'UFortPawnComponent_Mud::SprintingTag' has a wrong offset!");
static_assert(offsetof(UFortPawnComponent_Mud, AttachParentCoveredEventTag) == 0x0000B4, "Member 'UFortPawnComponent_Mud::AttachParentCoveredEventTag' has a wrong offset!");
static_assert(offsetof(UFortPawnComponent_Mud, CreatureSprintingTag) == 0x0000B8, "Member 'UFortPawnComponent_Mud::CreatureSprintingTag' has a wrong offset!");

}

