#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Commando_FragGrenade_Cluster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Commando_FragGrenade_Cluster.B_Prj_Commando_FragGrenade_Cluster_C
// 0x0058 (0x0AF8 - 0x0AA0)
class AB_Prj_Commando_FragGrenade_Cluster_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio1;                                            // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BounceSound;                                       // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ExplosionSound;                                    // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ExplosionLocation;                                 // 0x0AD0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinExplosionDelay;                                 // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxExplosionDelay;                                 // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Commando_FragGrenade_Cluster(int32 EntryPoint);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnStop(const struct FHitResult& Hit);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Commando_FragGrenade_Cluster_C">();
	}
	static class AB_Prj_Commando_FragGrenade_Cluster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Commando_FragGrenade_Cluster_C>();
	}
};
static_assert(alignof(AB_Prj_Commando_FragGrenade_Cluster_C) == 0x000008, "Wrong alignment on AB_Prj_Commando_FragGrenade_Cluster_C");
static_assert(sizeof(AB_Prj_Commando_FragGrenade_Cluster_C) == 0x000AF8, "Wrong size on AB_Prj_Commando_FragGrenade_Cluster_C");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, UberGraphFrame) == 0x000AA0, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, ParticleSystem1) == 0x000AA8, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, Audio1) == 0x000AB0, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::Audio1' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, BounceSound) == 0x000AB8, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::BounceSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, P_Explosion) == 0x000AC0, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, ExplosionSound) == 0x000AC8, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, ExplosionLocation) == 0x000AD0, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::ExplosionLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, MinExplosionDelay) == 0x000AE8, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::MinExplosionDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Commando_FragGrenade_Cluster_C, MaxExplosionDelay) == 0x000AF0, "Member 'AB_Prj_Commando_FragGrenade_Cluster_C::MaxExplosionDelay' has a wrong offset!");

}

