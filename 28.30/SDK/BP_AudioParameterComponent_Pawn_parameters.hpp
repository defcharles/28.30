#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioParameterComponent_Pawn

#include "Basic.hpp"

#include "AudioParameterQueryData_structs.hpp"
#include "PlayerWaterDepthEnum_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.PrintParameter
// 0x0070 (0x0070 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_PrintParameter final
{
public:
	struct FAudioParameterQueryData               Parameter;                                         // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_PrintParameter) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_PrintParameter");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_PrintParameter) == 0x000070, "Wrong size on BP_AudioParameterComponent_Pawn_C_PrintParameter");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_PrintParameter, Parameter) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_PrintParameter::Parameter' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_PrintParameter, Condition) == 0x000068, "Member 'BP_AudioParameterComponent_Pawn_C_PrintParameter::Condition' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.OnWaterUpdate
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_OnWaterUpdate final
{
public:
	float                                         CallFunc_GetWaterDepthValue_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurfaceSwimming_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_OnWaterUpdate");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate) == 0x000018, "Wrong size on BP_AudioParameterComponent_Pawn_C_OnWaterUpdate");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_GetWaterDepthValue_ReturnValue) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_GetWaterDepthValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000005, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_IsSurfaceSwimming_ReturnValue) == 0x000007, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_IsSurfaceSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterUpdate, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000010, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterUpdate::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.OnWaterDepthSwitch
// 0x0050 (0x0050 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch final
{
public:
	EPlayerWaterDepthEnum                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioParameterComponent*               CallFunc_GetAudioParameterComponent_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetIntParameter_self_CastInput;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetBoolParameter_self_CastInput;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch) == 0x000050, "Wrong size on BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, Temp_byte_Variable) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, Temp_int_Variable) == 0x000004, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, Temp_int_Variable_1) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, Temp_int_Variable_2) == 0x00000C, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, Temp_int_Variable_3) == 0x000010, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, Temp_int_Variable_4) == 0x000014, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, CallFunc_GetAudioParameterComponent_ReturnValue) == 0x000020, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::CallFunc_GetAudioParameterComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, K2Node_Select_Default) == 0x000028, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, CallFunc_IsCrouching_ReturnValue) == 0x00002C, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, CallFunc_SetIntParameter_self_CastInput) == 0x000030, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::CallFunc_SetIntParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch, CallFunc_SetBoolParameter_self_CastInput) == 0x000040, "Member 'BP_AudioParameterComponent_Pawn_C_OnWaterDepthSwitch::CallFunc_SetBoolParameter_self_CastInput' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.OnViewTargetSet
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_OnViewTargetSet final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_OnViewTargetSet) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_OnViewTargetSet");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_OnViewTargetSet) == 0x000008, "Wrong size on BP_AudioParameterComponent_Pawn_C_OnViewTargetSet");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnViewTargetSet, Actor) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_OnViewTargetSet::Actor' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.OnExitWater
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_OnExitWater final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bPawnIsOutsideOfAllWaterBodies;                    // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_OnExitWater) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_OnExitWater");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_OnExitWater) == 0x000028, "Wrong size on BP_AudioParameterComponent_Pawn_C_OnExitWater");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnExitWater, FortPlayerPawn) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_OnExitWater::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnExitWater, bPawnIsOutsideOfAllWaterBodies) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_OnExitWater::bPawnIsOutsideOfAllWaterBodies' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnExitWater, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_AudioParameterComponent_Pawn_C_OnExitWater::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnExitWater, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_AudioParameterComponent_Pawn_C_OnExitWater::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.OnEnterWater
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_OnEnterWater final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_OnEnterWater) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_OnEnterWater");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_OnEnterWater) == 0x000020, "Wrong size on BP_AudioParameterComponent_Pawn_C_OnEnterWater");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnEnterWater, FortPlayerPawn) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_OnEnterWater::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnEnterWater, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_OnEnterWater::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_OnEnterWater, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_AudioParameterComponent_Pawn_C_OnEnterWater::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.Movement Mode Change
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change) == 0x000010, "Wrong size on BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change, Character) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change::Character' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change, PrevMovementMode) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change, PreviousCustomMode) == 0x000009, "Member 'BP_AudioParameterComponent_Pawn_C_Movement_Mode_Change::PreviousCustomMode' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.GetWaterDepthValue
// 0x0048 (0x0048 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWaterImmersionDepth_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue) == 0x000048, "Wrong size on BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, ReturnValue) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_GetWaterImmersionDepth_ReturnValue) == 0x000018, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_GetWaterImmersionDepth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00001C, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000030, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_SelectFloat_A_ImplicitCast) == 0x000038, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_AudioParameterComponent_Pawn_C_GetWaterDepthValue::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_AudioParameterComponent_Pawn.BP_AudioParameterComponent_Pawn_C.ExecuteUbergraph_BP_AudioParameterComponent_Pawn
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn) == 0x000008, "Wrong alignment on BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn");
static_assert(sizeof(BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn) == 0x000010, "Wrong size on BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn, EntryPoint) == 0x000000, "Member 'BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn, K2Node_Event_Actor) == 0x000008, "Member 'BP_AudioParameterComponent_Pawn_C_ExecuteUbergraph_BP_AudioParameterComponent_Pawn::K2Node_Event_Actor' has a wrong offset!");

}

