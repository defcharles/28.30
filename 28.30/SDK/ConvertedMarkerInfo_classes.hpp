#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConvertedMarkerInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteAI_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ConvertedMarkerInfo.ConvertedMarkerInfo_C
// 0x00F8 (0x03E0 - 0x02E8)
class UConvertedMarkerInfo_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Avatar;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Command;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              ImageSwitcher;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SquadMarker;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           DBNOPulseTimer;                                    // 0x0310(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  RelevantPlaylistTags;                              // 0x0318(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsTalking;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBackgroundOverridden;                         // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnemyVersion;                                     // 0x033A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_33B[0x5];                                      // 0x033B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Icon_Move;                                         // 0x0340(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon_Hold;                                         // 0x0360(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon_BackToMe;                                     // 0x0380(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon_Revive;                                       // 0x03A0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon_Attack;                                       // 0x03C0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ConvertedMarkerInfo(int32 EntryPoint);
	void InitNPCCommandIcon(const struct FLinearColor& Color);
	void InitPlayerIconState(class AFortPlayerStateAthena* PSA);
	void OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3(class UObject* Loaded);
	void OnLoaded_68559753464A154900ECA9BC6BB940C0(class UObject* Loaded);
	void OverrideShowBackground(bool bShowBackground);
	void PreConstruct(bool IsDesignTime);
	void SetBackgroundVisibility(bool bOverride, bool bBackgroundVisible);
	void UpdateCommandIcon(EPingCommandType PingCommand, const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ConvertedMarkerInfo_C">();
	}
	static class UConvertedMarkerInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConvertedMarkerInfo_C>();
	}
};
static_assert(alignof(UConvertedMarkerInfo_C) == 0x000008, "Wrong alignment on UConvertedMarkerInfo_C");
static_assert(sizeof(UConvertedMarkerInfo_C) == 0x0003E0, "Wrong size on UConvertedMarkerInfo_C");
static_assert(offsetof(UConvertedMarkerInfo_C, UberGraphFrame) == 0x0002E8, "Member 'UConvertedMarkerInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Image_Avatar) == 0x0002F0, "Member 'UConvertedMarkerInfo_C::Image_Avatar' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Image_Command) == 0x0002F8, "Member 'UConvertedMarkerInfo_C::Image_Command' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, ImageSwitcher) == 0x000300, "Member 'UConvertedMarkerInfo_C::ImageSwitcher' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, SquadMarker) == 0x000308, "Member 'UConvertedMarkerInfo_C::SquadMarker' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, DBNOPulseTimer) == 0x000310, "Member 'UConvertedMarkerInfo_C::DBNOPulseTimer' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, RelevantPlaylistTags) == 0x000318, "Member 'UConvertedMarkerInfo_C::RelevantPlaylistTags' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, bIsTalking) == 0x000338, "Member 'UConvertedMarkerInfo_C::bIsTalking' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, bShowBackgroundOverridden) == 0x000339, "Member 'UConvertedMarkerInfo_C::bShowBackgroundOverridden' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, bEnemyVersion) == 0x00033A, "Member 'UConvertedMarkerInfo_C::bEnemyVersion' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Icon_Move) == 0x000340, "Member 'UConvertedMarkerInfo_C::Icon_Move' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Icon_Hold) == 0x000360, "Member 'UConvertedMarkerInfo_C::Icon_Hold' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Icon_BackToMe) == 0x000380, "Member 'UConvertedMarkerInfo_C::Icon_BackToMe' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Icon_Revive) == 0x0003A0, "Member 'UConvertedMarkerInfo_C::Icon_Revive' has a wrong offset!");
static_assert(offsetof(UConvertedMarkerInfo_C, Icon_Attack) == 0x0003C0, "Member 'UConvertedMarkerInfo_C::Icon_Attack' has a wrong offset!");

}

