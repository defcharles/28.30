#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Augment_SelectionTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PlayerAugmentsUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Augment_SelectionTimer.WBP_Augment_SelectionTimer_C
// 0x01B8 (0x0538 - 0x0380)
class UWBP_Augment_SelectionTimer_C final : public UFortPlayerAugmentHUDSelectionTimerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_AugmentReady_IncreaseCount;                   // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AugmentReady_Reminder;                        // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AugmentReady;                                 // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_TimerText_CountdownUpdated;                   // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ProgressBar_CountdownUpdated;                 // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_CountdownReveal;                              // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Mobile;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Content;                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MobileButtonBG;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MobileCloseButtonIcon;                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MultiplierBacking;                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Ready_Backing;                               // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Timer_InnerRing;                             // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Timer_ProgressBar;                           // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       Keybind_OpenAugments_Action;                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       Keybind_OpenAugments_Action_Build;                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_AttentionLIne;                             // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_CannotOpenSelector;                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_DeviceAndProgressBar;                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_DeviceAndTimer;                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_FXGlowAndBacking;                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Main;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ReadyOpenPrompt;                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ReadyPrompt;                               // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Keybind;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Timer;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_OverallHeightControl;                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_WidgetOffset;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_OpenAugments_Action;                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_ReadyPrompt;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Alert;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_AugmentMulitplier;                            // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_AugmentReady;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_AugmentTimer;                                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortControllerComponent_SpyTechPerkSystem* OwningPerkComponent;                               // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Pending_Augments_to_Grant;                     // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Select_Augment;                                // 0x04A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextAugmentReady;                                  // 0x04A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly)
	class FText                                   TextAugmentCount;                                  // 0x04C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly)
	double                                        ReminderFrequencyInSeconds;                        // 0x04D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AugmentReadyReminderTimer;                         // 0x04E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MultiplierSound;                                   // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Player_Able_to_Open_Selector;                      // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPaperSprite>            MobileBackgroundSprite;                            // 0x04F8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	TSoftObjectPtr<class UPaperSprite>            MobileCloseButtonSprite;                           // 0x0518(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Augment_SelectionTimer(int32 EntryPoint);
	void ForceAugmentReadyState(bool AugmentSelectionAvailable);
	void IsAugmentSelectionAvailable(bool* IsEnabled);
	void OnAugmentGrantingTimersFinishedForMatch();
	void OnAugmentReadyFadeInFinished();
	void OnCanSelectAugmentChanged(bool bCanSelectAugment);
	void OnCountdownActivated();
	void OnHideTimerEventFinished();
	void OnHUDElementVisibilityChanged(const struct FGameplayTagContainer& HiddenElementTagContainer);
	void OnInitialized();
	void OnLoaded_7B3490DB452F1589FC28169C2C321233(class UObject* Loaded);
	void OnLoaded_A3FED9F64CE5252CEA253EA599ED5B9A(class UObject* Loaded);
	void OnNumPendingAugmentsToGrantUpdated(int32 NumPendingAugmentsToGrant);
	void OnPlayerChangedBuildMode(bool bEnteredBuildMode);
	void PlayReminderAnimation();
	void PreConstruct(bool IsDesignTime);
	void ResetAugmentReadyStateAnims();
	void SetAugmentReadyState(bool AugmentSelectionAvailable);
	void SetMobileVisuals();
	void StartHideTimerEvent();
	void UpdateCanOpenSelector(bool InPlayerAbleToOpenSelector);
	void UpdateMobileIcon(bool IsSelectionToolOpened);
	void UpdateVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Augment_SelectionTimer_C">();
	}
	static class UWBP_Augment_SelectionTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Augment_SelectionTimer_C>();
	}
};
static_assert(alignof(UWBP_Augment_SelectionTimer_C) == 0x000008, "Wrong alignment on UWBP_Augment_SelectionTimer_C");
static_assert(sizeof(UWBP_Augment_SelectionTimer_C) == 0x000538, "Wrong size on UWBP_Augment_SelectionTimer_C");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, UberGraphFrame) == 0x000380, "Member 'UWBP_Augment_SelectionTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Anim_AugmentReady_IncreaseCount) == 0x000388, "Member 'UWBP_Augment_SelectionTimer_C::Anim_AugmentReady_IncreaseCount' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Anim_AugmentReady_Reminder) == 0x000390, "Member 'UWBP_Augment_SelectionTimer_C::Anim_AugmentReady_Reminder' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Anim_AugmentReady) == 0x000398, "Member 'UWBP_Augment_SelectionTimer_C::Anim_AugmentReady' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Anim_TimerText_CountdownUpdated) == 0x0003A0, "Member 'UWBP_Augment_SelectionTimer_C::Anim_TimerText_CountdownUpdated' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Anim_ProgressBar_CountdownUpdated) == 0x0003A8, "Member 'UWBP_Augment_SelectionTimer_C::Anim_ProgressBar_CountdownUpdated' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Anim_CountdownReveal) == 0x0003B0, "Member 'UWBP_Augment_SelectionTimer_C::Anim_CountdownReveal' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Border_Mobile) == 0x0003B8, "Member 'UWBP_Augment_SelectionTimer_C::Border_Mobile' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, HorizontalBox_Content) == 0x0003C0, "Member 'UWBP_Augment_SelectionTimer_C::HorizontalBox_Content' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Image_MobileButtonBG) == 0x0003C8, "Member 'UWBP_Augment_SelectionTimer_C::Image_MobileButtonBG' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Image_MobileCloseButtonIcon) == 0x0003D0, "Member 'UWBP_Augment_SelectionTimer_C::Image_MobileCloseButtonIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Image_MultiplierBacking) == 0x0003D8, "Member 'UWBP_Augment_SelectionTimer_C::Image_MultiplierBacking' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Image_Ready_Backing) == 0x0003E0, "Member 'UWBP_Augment_SelectionTimer_C::Image_Ready_Backing' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Image_Timer_InnerRing) == 0x0003E8, "Member 'UWBP_Augment_SelectionTimer_C::Image_Timer_InnerRing' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Image_Timer_ProgressBar) == 0x0003F0, "Member 'UWBP_Augment_SelectionTimer_C::Image_Timer_ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Keybind_OpenAugments_Action) == 0x0003F8, "Member 'UWBP_Augment_SelectionTimer_C::Keybind_OpenAugments_Action' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Keybind_OpenAugments_Action_Build) == 0x000400, "Member 'UWBP_Augment_SelectionTimer_C::Keybind_OpenAugments_Action_Build' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_AttentionLIne) == 0x000408, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_AttentionLIne' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_CannotOpenSelector) == 0x000410, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_CannotOpenSelector' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_DeviceAndProgressBar) == 0x000418, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_DeviceAndProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_DeviceAndTimer) == 0x000420, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_DeviceAndTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_FXGlowAndBacking) == 0x000428, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_FXGlowAndBacking' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_Main) == 0x000430, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_Main' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_ReadyOpenPrompt) == 0x000438, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_ReadyOpenPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Overlay_ReadyPrompt) == 0x000440, "Member 'UWBP_Augment_SelectionTimer_C::Overlay_ReadyPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, SizeBox_Keybind) == 0x000448, "Member 'UWBP_Augment_SelectionTimer_C::SizeBox_Keybind' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, SizeBox_Timer) == 0x000450, "Member 'UWBP_Augment_SelectionTimer_C::SizeBox_Timer' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Spacer_OverallHeightControl) == 0x000458, "Member 'UWBP_Augment_SelectionTimer_C::Spacer_OverallHeightControl' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Spacer_WidgetOffset) == 0x000460, "Member 'UWBP_Augment_SelectionTimer_C::Spacer_WidgetOffset' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Switcher_OpenAugments_Action) == 0x000468, "Member 'UWBP_Augment_SelectionTimer_C::Switcher_OpenAugments_Action' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Switcher_ReadyPrompt) == 0x000470, "Member 'UWBP_Augment_SelectionTimer_C::Switcher_ReadyPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Text_Alert) == 0x000478, "Member 'UWBP_Augment_SelectionTimer_C::Text_Alert' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Text_AugmentMulitplier) == 0x000480, "Member 'UWBP_Augment_SelectionTimer_C::Text_AugmentMulitplier' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Text_AugmentReady) == 0x000488, "Member 'UWBP_Augment_SelectionTimer_C::Text_AugmentReady' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Text_AugmentTimer) == 0x000490, "Member 'UWBP_Augment_SelectionTimer_C::Text_AugmentTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, OwningPerkComponent) == 0x000498, "Member 'UWBP_Augment_SelectionTimer_C::OwningPerkComponent' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Num_Pending_Augments_to_Grant) == 0x0004A0, "Member 'UWBP_Augment_SelectionTimer_C::Num_Pending_Augments_to_Grant' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Can_Select_Augment) == 0x0004A4, "Member 'UWBP_Augment_SelectionTimer_C::Can_Select_Augment' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, TextAugmentReady) == 0x0004A8, "Member 'UWBP_Augment_SelectionTimer_C::TextAugmentReady' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, TextAugmentCount) == 0x0004C0, "Member 'UWBP_Augment_SelectionTimer_C::TextAugmentCount' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, ReminderFrequencyInSeconds) == 0x0004D8, "Member 'UWBP_Augment_SelectionTimer_C::ReminderFrequencyInSeconds' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, AugmentReadyReminderTimer) == 0x0004E0, "Member 'UWBP_Augment_SelectionTimer_C::AugmentReadyReminderTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, MultiplierSound) == 0x0004E8, "Member 'UWBP_Augment_SelectionTimer_C::MultiplierSound' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, Player_Able_to_Open_Selector) == 0x0004F0, "Member 'UWBP_Augment_SelectionTimer_C::Player_Able_to_Open_Selector' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, MobileBackgroundSprite) == 0x0004F8, "Member 'UWBP_Augment_SelectionTimer_C::MobileBackgroundSprite' has a wrong offset!");
static_assert(offsetof(UWBP_Augment_SelectionTimer_C, MobileCloseButtonSprite) == 0x000518, "Member 'UWBP_Augment_SelectionTimer_C::MobileCloseButtonSprite' has a wrong offset!");

}

