#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksMusicPlayspaceRuntime

#include "Basic.hpp"

#include "SparksMusicPlayspaceRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SparksCoreRuntime_structs.hpp"
#include "FMCoreRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PlayspaceSystem_structs.hpp"


namespace SDK::Params
{

// Function SparksMusicPlayspaceRuntime.PlayspaceComponent_LipSyncAssetManager.TryGetLipSyncAnimAssetForPlayer
// 0x0028 (0x0028 - 0x0000)
struct PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer final
{
public:
	const class APlayerState*                     PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer) == 0x000008, "Wrong alignment on PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer");
static_assert(sizeof(PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer) == 0x000028, "Wrong size on PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer");
static_assert(offsetof(PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer, PlayerState) == 0x000000, "Member 'PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer, ReturnValue) == 0x000008, "Member 'PlayspaceComponent_LipSyncAssetManager_TryGetLipSyncAnimAssetForPlayer::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.PlayspaceComponent_SparksPerfMem.StartTrackingServerPerf
// 0x0020 (0x0020 - 0x0000)
struct PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf final
{
public:
	struct FSparksServerPerfMemSettings           Settings;                                          // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf) == 0x000008, "Wrong alignment on PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf");
static_assert(sizeof(PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf) == 0x000020, "Wrong size on PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf");
static_assert(offsetof(PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf, Settings) == 0x000000, "Member 'PlayspaceComponent_SparksPerfMem_StartTrackingServerPerf::Settings' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.EnteredSparksMusicPlayspace
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace final
{
public:
	class ASparksMusicPlayspace*                  Playspace;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace) == 0x000008, "Wrong alignment on SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace");
static_assert(sizeof(SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace) == 0x000008, "Wrong size on SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace");
static_assert(offsetof(SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace, Playspace) == 0x000000, "Member 'SparksMusicPlayspaceInteractorInterface_EnteredSparksMusicPlayspace::Playspace' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.ExitedSparksMusicPlayspace
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace final
{
public:
	class ASparksMusicPlayspace*                  Playspace;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace) == 0x000008, "Wrong alignment on SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace");
static_assert(sizeof(SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace) == 0x000008, "Wrong size on SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace");
static_assert(offsetof(SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace, Playspace) == 0x000000, "Member 'SparksMusicPlayspaceInteractorInterface_ExitedSparksMusicPlayspace::Playspace' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.AllowedToEnterMusicPlayspace
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace final
{
public:
	class ASparksMusicPlayspace*                  Playspace;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace) == 0x000008, "Wrong alignment on SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace");
static_assert(sizeof(SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace) == 0x000010, "Wrong size on SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace");
static_assert(offsetof(SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace, Playspace) == 0x000000, "Member 'SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace::Playspace' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace, ReturnValue) == 0x000008, "Member 'SparksMusicPlayspaceInteractorInterface_AllowedToEnterMusicPlayspace::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceInteractorInterface.DoesSparksMusicPlayspaceInteratorHaveTag
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag) == 0x000004, "Wrong alignment on SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag");
static_assert(sizeof(SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag) == 0x000008, "Wrong size on SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag");
static_assert(offsetof(SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag, tag) == 0x000000, "Member 'SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag::tag' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag, ReturnValue) == 0x000004, "Member 'SparksMusicPlayspaceInteractorInterface_DoesSparksMusicPlayspaceInteratorHaveTag::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.IsSparksMusicPlayerPlaying
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying) == 0x000001, "Wrong alignment on SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying");
static_assert(sizeof(SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying) == 0x000001, "Wrong size on SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying");
static_assert(offsetof(SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying, ReturnValue) == 0x000000, "Member 'SparksMusicPlayerInterface_IsSparksMusicPlayerPlaying::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.IsSparksMusicPlayerPlayingWithKey
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey) == 0x000001, "Wrong alignment on SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey");
static_assert(sizeof(SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey) == 0x000001, "Wrong size on SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey");
static_assert(offsetof(SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey, ReturnValue) == 0x000000, "Member 'SparksMusicPlayerInterface_IsSparksMusicPlayerPlayingWithKey::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.ShouldAutoRegister
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayerInterface_ShouldAutoRegister final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayerInterface_ShouldAutoRegister) == 0x000001, "Wrong alignment on SparksMusicPlayerInterface_ShouldAutoRegister");
static_assert(sizeof(SparksMusicPlayerInterface_ShouldAutoRegister) == 0x000001, "Wrong size on SparksMusicPlayerInterface_ShouldAutoRegister");
static_assert(offsetof(SparksMusicPlayerInterface_ShouldAutoRegister, ReturnValue) == 0x000000, "Member 'SparksMusicPlayerInterface_ShouldAutoRegister::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.SparksMusicPlayerAddedToMusicPlayspace
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace final
{
public:
	class ASparksMusicPlayspace*                  Playspace;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace) == 0x000008, "Wrong alignment on SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace");
static_assert(sizeof(SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace) == 0x000008, "Wrong size on SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace");
static_assert(offsetof(SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace, Playspace) == 0x000000, "Member 'SparksMusicPlayerInterface_SparksMusicPlayerAddedToMusicPlayspace::Playspace' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayerInterface.SparksMusicPlayerRemovedFromMusicPlayspace
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace final
{
public:
	class ASparksMusicPlayspace*                  Playspace;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace) == 0x000008, "Wrong alignment on SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace");
static_assert(sizeof(SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace) == 0x000008, "Wrong size on SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace");
static_assert(offsetof(SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace, Playspace) == 0x000000, "Member 'SparksMusicPlayerInterface_SparksMusicPlayerRemovedFromMusicPlayspace::Playspace' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetSparksMusicPlayspaceOfClass
// 0x0028 (0x0028 - 0x0000)
struct SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass final
{
public:
	TSubclassOf<class ASparksMusicPlayspace>      PlayspaceType;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          WorldContextObject;                                // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchChildTypes;                                  // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASparksMusicPlayspace*                  ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass) == 0x000008, "Wrong alignment on SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass");
static_assert(sizeof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass) == 0x000028, "Wrong size on SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass, PlayspaceType) == 0x000000, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass::PlayspaceType' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass, WorldContextObject) == 0x000008, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass, Actor) == 0x000010, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass::Actor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass, bMatchChildTypes) == 0x000018, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass::bMatchChildTypes' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass, ReturnValue) == 0x000020, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClass::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetSparksMusicPlayspaceOfClassByLocation
// 0x0038 (0x0038 - 0x0000)
struct SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation final
{
public:
	TSubclassOf<class ASparksMusicPlayspace>      PlayspaceType;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          WorldContextObject;                                // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchChildTypes;                                  // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASparksMusicPlayspace*                  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation) == 0x000008, "Wrong alignment on SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation");
static_assert(sizeof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation) == 0x000038, "Wrong size on SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation, PlayspaceType) == 0x000000, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation::PlayspaceType' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation, WorldContextObject) == 0x000008, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation, Location) == 0x000010, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation::Location' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation, bMatchChildTypes) == 0x000028, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation::bMatchChildTypes' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation, ReturnValue) == 0x000030, "Member 'SparksMusicPlayspace_GetSparksMusicPlayspaceOfClassByLocation::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.AddInteractor
// 0x0018 (0x0018 - 0x0000)
struct SparksMusicPlayspace_AddInteractor final
{
public:
	class UObject*                                Interactor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ForActor;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspace_AddInteractor) == 0x000008, "Wrong alignment on SparksMusicPlayspace_AddInteractor");
static_assert(sizeof(SparksMusicPlayspace_AddInteractor) == 0x000018, "Wrong size on SparksMusicPlayspace_AddInteractor");
static_assert(offsetof(SparksMusicPlayspace_AddInteractor, Interactor) == 0x000000, "Member 'SparksMusicPlayspace_AddInteractor::Interactor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_AddInteractor, ForActor) == 0x000008, "Member 'SparksMusicPlayspace_AddInteractor::ForActor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_AddInteractor, ReturnValue) == 0x000010, "Member 'SparksMusicPlayspace_AddInteractor::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.AddMusicPlayer
// 0x0018 (0x0018 - 0x0000)
struct SparksMusicPlayspace_AddMusicPlayer final
{
public:
	class UObject*                                Interactor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ForActor;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspace_AddMusicPlayer) == 0x000008, "Wrong alignment on SparksMusicPlayspace_AddMusicPlayer");
static_assert(sizeof(SparksMusicPlayspace_AddMusicPlayer) == 0x000018, "Wrong size on SparksMusicPlayspace_AddMusicPlayer");
static_assert(offsetof(SparksMusicPlayspace_AddMusicPlayer, Interactor) == 0x000000, "Member 'SparksMusicPlayspace_AddMusicPlayer::Interactor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_AddMusicPlayer, ForActor) == 0x000008, "Member 'SparksMusicPlayspace_AddMusicPlayer::ForActor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_AddMusicPlayer, ReturnValue) == 0x000010, "Member 'SparksMusicPlayspace_AddMusicPlayer::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BPEvent_OnUserAdded
// 0x0060 (0x0060 - 0x0000)
struct SparksMusicPlayspace_BPEvent_OnUserAdded final
{
public:
	struct FPlayspaceUser                         User;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class APlayerState*                     PlayerState;                                       // 0x0058(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_BPEvent_OnUserAdded) == 0x000008, "Wrong alignment on SparksMusicPlayspace_BPEvent_OnUserAdded");
static_assert(sizeof(SparksMusicPlayspace_BPEvent_OnUserAdded) == 0x000060, "Wrong size on SparksMusicPlayspace_BPEvent_OnUserAdded");
static_assert(offsetof(SparksMusicPlayspace_BPEvent_OnUserAdded, User) == 0x000000, "Member 'SparksMusicPlayspace_BPEvent_OnUserAdded::User' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_BPEvent_OnUserAdded, PlayerState) == 0x000058, "Member 'SparksMusicPlayspace_BPEvent_OnUserAdded::PlayerState' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BPEvent_OnUserRemoved
// 0x0060 (0x0060 - 0x0000)
struct SparksMusicPlayspace_BPEvent_OnUserRemoved final
{
public:
	struct FPlayspaceUser                         User;                                              // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class APlayerState*                     PlayerState;                                       // 0x0058(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_BPEvent_OnUserRemoved) == 0x000008, "Wrong alignment on SparksMusicPlayspace_BPEvent_OnUserRemoved");
static_assert(sizeof(SparksMusicPlayspace_BPEvent_OnUserRemoved) == 0x000060, "Wrong size on SparksMusicPlayspace_BPEvent_OnUserRemoved");
static_assert(offsetof(SparksMusicPlayspace_BPEvent_OnUserRemoved, User) == 0x000000, "Member 'SparksMusicPlayspace_BPEvent_OnUserRemoved::User' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_BPEvent_OnUserRemoved, PlayerState) == 0x000058, "Member 'SparksMusicPlayspace_BPEvent_OnUserRemoved::PlayerState' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.OnBeatEvent
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayspace_OnBeatEvent final
{
public:
	int32                                         BeatNumber;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BeatInBar;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_OnBeatEvent) == 0x000004, "Wrong alignment on SparksMusicPlayspace_OnBeatEvent");
static_assert(sizeof(SparksMusicPlayspace_OnBeatEvent) == 0x000008, "Wrong size on SparksMusicPlayspace_OnBeatEvent");
static_assert(offsetof(SparksMusicPlayspace_OnBeatEvent, BeatNumber) == 0x000000, "Member 'SparksMusicPlayspace_OnBeatEvent::BeatNumber' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_OnBeatEvent, BeatInBar) == 0x000004, "Member 'SparksMusicPlayspace_OnBeatEvent::BeatInBar' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.OnMeasureEvent
// 0x0004 (0x0004 - 0x0000)
struct SparksMusicPlayspace_OnMeasureEvent final
{
public:
	int32                                         MeasureNumber;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_OnMeasureEvent) == 0x000004, "Wrong alignment on SparksMusicPlayspace_OnMeasureEvent");
static_assert(sizeof(SparksMusicPlayspace_OnMeasureEvent) == 0x000004, "Wrong size on SparksMusicPlayspace_OnMeasureEvent");
static_assert(offsetof(SparksMusicPlayspace_OnMeasureEvent, MeasureNumber) == 0x000000, "Member 'SparksMusicPlayspace_OnMeasureEvent::MeasureNumber' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.RemoveInteractor
// 0x0018 (0x0018 - 0x0000)
struct SparksMusicPlayspace_RemoveInteractor final
{
public:
	class UObject*                                Interactor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ForActor;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspace_RemoveInteractor) == 0x000008, "Wrong alignment on SparksMusicPlayspace_RemoveInteractor");
static_assert(sizeof(SparksMusicPlayspace_RemoveInteractor) == 0x000018, "Wrong size on SparksMusicPlayspace_RemoveInteractor");
static_assert(offsetof(SparksMusicPlayspace_RemoveInteractor, Interactor) == 0x000000, "Member 'SparksMusicPlayspace_RemoveInteractor::Interactor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_RemoveInteractor, ForActor) == 0x000008, "Member 'SparksMusicPlayspace_RemoveInteractor::ForActor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_RemoveInteractor, ReturnValue) == 0x000010, "Member 'SparksMusicPlayspace_RemoveInteractor::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.RemoveMusicPlayer
// 0x0018 (0x0018 - 0x0000)
struct SparksMusicPlayspace_RemoveMusicPlayer final
{
public:
	class UObject*                                MusicPlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ForActor;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspace_RemoveMusicPlayer) == 0x000008, "Wrong alignment on SparksMusicPlayspace_RemoveMusicPlayer");
static_assert(sizeof(SparksMusicPlayspace_RemoveMusicPlayer) == 0x000018, "Wrong size on SparksMusicPlayspace_RemoveMusicPlayer");
static_assert(offsetof(SparksMusicPlayspace_RemoveMusicPlayer, MusicPlayer) == 0x000000, "Member 'SparksMusicPlayspace_RemoveMusicPlayer::MusicPlayer' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_RemoveMusicPlayer, ForActor) == 0x000008, "Member 'SparksMusicPlayspace_RemoveMusicPlayer::ForActor' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_RemoveMusicPlayer, ReturnValue) == 0x000010, "Member 'SparksMusicPlayspace_RemoveMusicPlayer::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BP_GetAllPlayerStates
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspace_BP_GetAllPlayerStates final
{
public:
	TArray<class APlayerState*>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_BP_GetAllPlayerStates) == 0x000008, "Wrong alignment on SparksMusicPlayspace_BP_GetAllPlayerStates");
static_assert(sizeof(SparksMusicPlayspace_BP_GetAllPlayerStates) == 0x000010, "Wrong size on SparksMusicPlayspace_BP_GetAllPlayerStates");
static_assert(offsetof(SparksMusicPlayspace_BP_GetAllPlayerStates, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_BP_GetAllPlayerStates::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.BP_GetOwnedEventRouter
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayspace_BP_GetOwnedEventRouter final
{
public:
	class UGameplayEventRouterComponent*          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_BP_GetOwnedEventRouter) == 0x000008, "Wrong alignment on SparksMusicPlayspace_BP_GetOwnedEventRouter");
static_assert(sizeof(SparksMusicPlayspace_BP_GetOwnedEventRouter) == 0x000008, "Wrong size on SparksMusicPlayspace_BP_GetOwnedEventRouter");
static_assert(offsetof(SparksMusicPlayspace_BP_GetOwnedEventRouter, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_BP_GetOwnedEventRouter::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.DoesPlayerHaveInstrument
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspace_DoesPlayerHaveInstrument final
{
public:
	const class APlayerState*                     PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         InstrumentType;                                    // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SparksMusicPlayspace_DoesPlayerHaveInstrument) == 0x000008, "Wrong alignment on SparksMusicPlayspace_DoesPlayerHaveInstrument");
static_assert(sizeof(SparksMusicPlayspace_DoesPlayerHaveInstrument) == 0x000010, "Wrong size on SparksMusicPlayspace_DoesPlayerHaveInstrument");
static_assert(offsetof(SparksMusicPlayspace_DoesPlayerHaveInstrument, PlayerState) == 0x000000, "Member 'SparksMusicPlayspace_DoesPlayerHaveInstrument::PlayerState' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_DoesPlayerHaveInstrument, InstrumentType) == 0x000008, "Member 'SparksMusicPlayspace_DoesPlayerHaveInstrument::InstrumentType' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_DoesPlayerHaveInstrument, ReturnValue) == 0x000009, "Member 'SparksMusicPlayspace_DoesPlayerHaveInstrument::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetAllPlayerControllers
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspace_GetAllPlayerControllers final
{
public:
	TArray<class AController*>                    ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_GetAllPlayerControllers) == 0x000008, "Wrong alignment on SparksMusicPlayspace_GetAllPlayerControllers");
static_assert(sizeof(SparksMusicPlayspace_GetAllPlayerControllers) == 0x000010, "Wrong size on SparksMusicPlayspace_GetAllPlayerControllers");
static_assert(offsetof(SparksMusicPlayspace_GetAllPlayerControllers, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_GetAllPlayerControllers::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetAllPlayerPawns
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspace_GetAllPlayerPawns final
{
public:
	TArray<class APawn*>                          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_GetAllPlayerPawns) == 0x000008, "Wrong alignment on SparksMusicPlayspace_GetAllPlayerPawns");
static_assert(sizeof(SparksMusicPlayspace_GetAllPlayerPawns) == 0x000010, "Wrong size on SparksMusicPlayspace_GetAllPlayerPawns");
static_assert(offsetof(SparksMusicPlayspace_GetAllPlayerPawns, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_GetAllPlayerPawns::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.GetMusicPlayers
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspace_GetMusicPlayers final
{
public:
	TArray<class UObject*>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_GetMusicPlayers) == 0x000008, "Wrong alignment on SparksMusicPlayspace_GetMusicPlayers");
static_assert(sizeof(SparksMusicPlayspace_GetMusicPlayers) == 0x000010, "Wrong size on SparksMusicPlayspace_GetMusicPlayers");
static_assert(offsetof(SparksMusicPlayspace_GetMusicPlayers, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_GetMusicPlayers::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.IsAnyMusicPlaying
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayspace_IsAnyMusicPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_IsAnyMusicPlaying) == 0x000001, "Wrong alignment on SparksMusicPlayspace_IsAnyMusicPlaying");
static_assert(sizeof(SparksMusicPlayspace_IsAnyMusicPlaying) == 0x000001, "Wrong size on SparksMusicPlayspace_IsAnyMusicPlaying");
static_assert(offsetof(SparksMusicPlayspace_IsAnyMusicPlaying, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_IsAnyMusicPlaying::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.IsAnyMusicPlayingWithKey
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayspace_IsAnyMusicPlayingWithKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_IsAnyMusicPlayingWithKey) == 0x000001, "Wrong alignment on SparksMusicPlayspace_IsAnyMusicPlayingWithKey");
static_assert(sizeof(SparksMusicPlayspace_IsAnyMusicPlayingWithKey) == 0x000001, "Wrong size on SparksMusicPlayspace_IsAnyMusicPlayingWithKey");
static_assert(offsetof(SparksMusicPlayspace_IsAnyMusicPlayingWithKey, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_IsAnyMusicPlayingWithKey::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.TryGetMidiEventDriverForPlayerState
// 0x0018 (0x0018 - 0x0000)
struct SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState final
{
public:
	const class APlayerState*                     PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IMidiEventDriverInterface> ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState) == 0x000008, "Wrong alignment on SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState");
static_assert(sizeof(SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState) == 0x000018, "Wrong size on SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState");
static_assert(offsetof(SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState, PlayerState) == 0x000000, "Member 'SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState, ReturnValue) == 0x000008, "Member 'SparksMusicPlayspace_TryGetMidiEventDriverForPlayerState::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.TryGetMidiEventDrivers
// 0x0010 (0x0010 - 0x0000)
struct SparksMusicPlayspace_TryGetMidiEventDrivers final
{
public:
	TArray<TScriptInterface<class IMidiEventDriverInterface>> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_TryGetMidiEventDrivers) == 0x000008, "Wrong alignment on SparksMusicPlayspace_TryGetMidiEventDrivers");
static_assert(sizeof(SparksMusicPlayspace_TryGetMidiEventDrivers) == 0x000010, "Wrong size on SparksMusicPlayspace_TryGetMidiEventDrivers");
static_assert(offsetof(SparksMusicPlayspace_TryGetMidiEventDrivers, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspace_TryGetMidiEventDrivers::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspace.TryGetMusicKeyAndMode
// 0x0003 (0x0003 - 0x0000)
struct SparksMusicPlayspace_TryGetMusicKeyAndMode final
{
public:
	EMusicKey                                     OutMusicKey;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicKeyMode                                 OutMusicKeyMode;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspace_TryGetMusicKeyAndMode) == 0x000001, "Wrong alignment on SparksMusicPlayspace_TryGetMusicKeyAndMode");
static_assert(sizeof(SparksMusicPlayspace_TryGetMusicKeyAndMode) == 0x000003, "Wrong size on SparksMusicPlayspace_TryGetMusicKeyAndMode");
static_assert(offsetof(SparksMusicPlayspace_TryGetMusicKeyAndMode, OutMusicKey) == 0x000000, "Member 'SparksMusicPlayspace_TryGetMusicKeyAndMode::OutMusicKey' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_TryGetMusicKeyAndMode, OutMusicKeyMode) == 0x000001, "Member 'SparksMusicPlayspace_TryGetMusicKeyAndMode::OutMusicKeyMode' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspace_TryGetMusicKeyAndMode, ReturnValue) == 0x000002, "Member 'SparksMusicPlayspace_TryGetMusicKeyAndMode::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.TriggerKeyChange
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayspaceAudioState_TriggerKeyChange final
{
public:
	EMusicKey                                     InKey;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_TriggerKeyChange) == 0x000001, "Wrong alignment on SparksMusicPlayspaceAudioState_TriggerKeyChange");
static_assert(sizeof(SparksMusicPlayspaceAudioState_TriggerKeyChange) == 0x000001, "Wrong size on SparksMusicPlayspaceAudioState_TriggerKeyChange");
static_assert(offsetof(SparksMusicPlayspaceAudioState_TriggerKeyChange, InKey) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_TriggerKeyChange::InKey' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.TriggerModeChange
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayspaceAudioState_TriggerModeChange final
{
public:
	EMusicKeyMode                                 InMode;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_TriggerModeChange) == 0x000001, "Wrong alignment on SparksMusicPlayspaceAudioState_TriggerModeChange");
static_assert(sizeof(SparksMusicPlayspaceAudioState_TriggerModeChange) == 0x000001, "Wrong size on SparksMusicPlayspaceAudioState_TriggerModeChange");
static_assert(offsetof(SparksMusicPlayspaceAudioState_TriggerModeChange, InMode) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_TriggerModeChange::InMode' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.TriggerTempoChange
// 0x0004 (0x0004 - 0x0000)
struct SparksMusicPlayspaceAudioState_TriggerTempoChange final
{
public:
	int32                                         BPM;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_TriggerTempoChange) == 0x000004, "Wrong alignment on SparksMusicPlayspaceAudioState_TriggerTempoChange");
static_assert(sizeof(SparksMusicPlayspaceAudioState_TriggerTempoChange) == 0x000004, "Wrong size on SparksMusicPlayspaceAudioState_TriggerTempoChange");
static_assert(offsetof(SparksMusicPlayspaceAudioState_TriggerTempoChange, BPM) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_TriggerTempoChange::BPM' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentAudioState
// 0x0008 (0x0008 - 0x0000)
struct SparksMusicPlayspaceAudioState_GetCurrentAudioState final
{
public:
	EMusicKey                                     OutKey;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicKeyMode                                 OutKeyMode;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutTempo;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_GetCurrentAudioState) == 0x000004, "Wrong alignment on SparksMusicPlayspaceAudioState_GetCurrentAudioState");
static_assert(sizeof(SparksMusicPlayspaceAudioState_GetCurrentAudioState) == 0x000008, "Wrong size on SparksMusicPlayspaceAudioState_GetCurrentAudioState");
static_assert(offsetof(SparksMusicPlayspaceAudioState_GetCurrentAudioState, OutKey) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_GetCurrentAudioState::OutKey' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspaceAudioState_GetCurrentAudioState, OutKeyMode) == 0x000001, "Member 'SparksMusicPlayspaceAudioState_GetCurrentAudioState::OutKeyMode' has a wrong offset!");
static_assert(offsetof(SparksMusicPlayspaceAudioState_GetCurrentAudioState, OutTempo) == 0x000004, "Member 'SparksMusicPlayspaceAudioState_GetCurrentAudioState::OutTempo' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentKey
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayspaceAudioState_GetCurrentKey final
{
public:
	EMusicKey                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_GetCurrentKey) == 0x000001, "Wrong alignment on SparksMusicPlayspaceAudioState_GetCurrentKey");
static_assert(sizeof(SparksMusicPlayspaceAudioState_GetCurrentKey) == 0x000001, "Wrong size on SparksMusicPlayspaceAudioState_GetCurrentKey");
static_assert(offsetof(SparksMusicPlayspaceAudioState_GetCurrentKey, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_GetCurrentKey::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentKeyMode
// 0x0001 (0x0001 - 0x0000)
struct SparksMusicPlayspaceAudioState_GetCurrentKeyMode final
{
public:
	EMusicKeyMode                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_GetCurrentKeyMode) == 0x000001, "Wrong alignment on SparksMusicPlayspaceAudioState_GetCurrentKeyMode");
static_assert(sizeof(SparksMusicPlayspaceAudioState_GetCurrentKeyMode) == 0x000001, "Wrong size on SparksMusicPlayspaceAudioState_GetCurrentKeyMode");
static_assert(offsetof(SparksMusicPlayspaceAudioState_GetCurrentKeyMode, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_GetCurrentKeyMode::ReturnValue' has a wrong offset!");

// Function SparksMusicPlayspaceRuntime.SparksMusicPlayspaceAudioState.GetCurrentTempo
// 0x0004 (0x0004 - 0x0000)
struct SparksMusicPlayspaceAudioState_GetCurrentTempo final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SparksMusicPlayspaceAudioState_GetCurrentTempo) == 0x000004, "Wrong alignment on SparksMusicPlayspaceAudioState_GetCurrentTempo");
static_assert(sizeof(SparksMusicPlayspaceAudioState_GetCurrentTempo) == 0x000004, "Wrong size on SparksMusicPlayspaceAudioState_GetCurrentTempo");
static_assert(offsetof(SparksMusicPlayspaceAudioState_GetCurrentTempo, ReturnValue) == 0x000000, "Member 'SparksMusicPlayspaceAudioState_GetCurrentTempo::ReturnValue' has a wrong offset!");

}

