#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserTileDetailsDisplay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ColumnSizeToTileSize
// 0x0070 (0x0070 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize final
{
public:
	int32                                         NewColumnSize;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              NewTileSize;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize) == 0x000070, "Wrong size on ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, NewColumnSize) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::NewColumnSize' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, NewTileSize) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::NewTileSize' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_FCeil_ReturnValue) == 0x000050, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000058, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'ActivityBrowserTileDetailsDisplay_C_ColumnSizeToTileSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ExecuteUbergraph_ActivityBrowserTileDetailsDisplay
// 0x01F0 (0x01F0 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFavorite;                          // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLoading_1;                         // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture*                         K2Node_Event_Texture_1;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Discovery_DetailsButton_C*         K2Node_DynamicCast_AsWBP_Discovery_Details_Button; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Discovery_DetailsButton_C*         K2Node_DynamicCast_AsWBP_Discovery_Details_Button_1; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Discovery_DetailsButton_C*         K2Node_DynamicCast_AsWBP_Discovery_Details_Button_2; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsTileActive;                        // 0x008A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PartySize;                            // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00AC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesActivityRequirePurchase_ReturnValue;  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRequiresPurchase;                    // 0x00C2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesActivityRequirePurchase_ReturnValue_1; // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsModeSetActivity_ReturnValue;            // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue_1; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivityFavorited_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivityFavorited_ReturnValue_1;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewColumnSize;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ColumnSizeToTileSize_NewTileSize;         // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLoading;                           // 0x0162(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture*                         K2Node_Event_Texture;                              // 0x0168(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2DDynamic*                      K2Node_DynamicCast_AsTexture_2DDynamic;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayTileVideo_bOutResult;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_193[0x1];                                      // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CCUCount;                             // 0x0194(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_3;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumPlaying;                           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivityLocked_ReturnValue;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivityLocked_ReturnValue_1;           // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetActivityCreatorDisplayText_ReturnValue; // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetActivityCreatorDisplayText_ReturnValue_1; // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortGameActivity*                      K2Node_Event_GameActivity;                         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay) == 0x0001F0, "Wrong size on ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, EntryPoint) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bIsFavorite) == 0x000004, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bIsFavorite' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bIsLoading_1) == 0x000005, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bIsLoading_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_Texture_1) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_Texture_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimation_ReturnValue_2) == 0x000028, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000030, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_ListItemObject) == 0x000040, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bIsSelected) == 0x000048, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bIsExpanded) == 0x000049, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000050, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000058, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_AsWBP_Discovery_Details_Button) == 0x000060, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_AsWBP_Discovery_Details_Button' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000069, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_AsWBP_Discovery_Details_Button_1) == 0x000070, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_AsWBP_Discovery_Details_Button_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_AsWBP_Discovery_Details_Button_2) == 0x000080, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_AsWBP_Discovery_Details_Button_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsMobileGame_ReturnValue) == 0x000089, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bIsTileActive) == 0x00008A, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bIsTileActive' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_PartySize) == 0x00008C, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_PartySize' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_byte_Variable) == 0x000090, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000098, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0000A0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0000A8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x0000AC, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_IsDesignTime) == 0x0000C0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_DoesActivityRequirePurchase_ReturnValue) == 0x0000C1, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_DoesActivityRequirePurchase_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bRequiresPurchase) == 0x0000C2, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bRequiresPurchase' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_byte_Variable_1) == 0x0000C3, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_byte_Variable_2) == 0x0000C4, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_DoesActivityRequirePurchase_ReturnValue_1) == 0x0000C5, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_DoesActivityRequirePurchase_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsModeSetActivity_ReturnValue) == 0x0000C6, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsModeSetActivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x0000C7, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000C8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000D0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x0000D8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x0000E0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_K2_GetTextureParameterValue_ReturnValue_1) == 0x0000E8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_K2_GetTextureParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsActivityFavorited_ReturnValue) == 0x0000F0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsActivityFavorited_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsActivityFavorited_ReturnValue_1) == 0x0000F1, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsActivityFavorited_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsConsolePlatform_ReturnValue) == 0x0000F2, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_bool_Variable) == 0x0000F3, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000F8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_MakeStruct_Margin) == 0x000100, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000110, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_NewColumnSize) == 0x000118, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_NewColumnSize' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_ColumnSizeToTileSize_NewTileSize) == 0x000120, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_ColumnSizeToTileSize_NewTileSize' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_MakeStruct_Margin_1) == 0x000130, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_MakeStruct_Margin_2) == 0x000140, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_MakeStruct_Margin_3) == 0x000150, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_byte_Variable_3) == 0x000160, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_byte_Variable_4) == 0x000161, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_bIsLoading) == 0x000162, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_bIsLoading' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_Texture) == 0x000168, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_Texture' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_bool_Variable_1) == 0x000170, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsValid_ReturnValue_1) == 0x000171, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_AsTexture_2DDynamic) == 0x000178, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_AsTexture_2DDynamic' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_bSuccess_3) == 0x000180, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_AsTexture_2D) == 0x000188, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_DynamicCast_bSuccess_4) == 0x000190, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_Not_PreBool_ReturnValue_1) == 0x000191, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_ShouldPlayTileVideo_bOutResult) == 0x000192, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_ShouldPlayTileVideo_bOutResult' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_CCUCount) == 0x000194, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_CCUCount' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000198, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_SlotAsOverlaySlot_ReturnValue_3) == 0x0001A0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_SlotAsOverlaySlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_bool_Variable_2) == 0x0001A8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, Temp_byte_Variable_5) == 0x0001A9, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Select_Default) == 0x0001AA, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Select_Default_1) == 0x0001AB, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_NumPlaying) == 0x0001AC, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_NumPlaying' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsActivityLocked_ReturnValue) == 0x0001B0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsActivityLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_BooleanOR_ReturnValue) == 0x0001B1, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_IsActivityLocked_ReturnValue_1) == 0x0001B2, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_IsActivityLocked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_GetActivityCreatorDisplayText_ReturnValue) == 0x0001B8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_GetActivityCreatorDisplayText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Select_Default_2) == 0x0001C8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_GetActivityCreatorDisplayText_ReturnValue_1) == 0x0001D0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_GetActivityCreatorDisplayText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, K2Node_Event_GameActivity) == 0x0001E0, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::K2Node_Event_GameActivity' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0001E8, "Member 'ActivityBrowserTileDetailsDisplay_C_ExecuteUbergraph_ActivityBrowserTileDetailsDisplay::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Grow Tile on Select for Non Hero Rows
// 0x0010 (0x0010 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows) == 0x000010, "Wrong size on ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows, Temp_bool_Variable) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows, Temp_byte_Variable) == 0x000001, "Member 'ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows, Temp_byte_Variable_1) == 0x000002, "Member 'ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows, K2Node_Select_Default) == 0x000004, "Member 'ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_Grow_Tile_on_Select_for_Non_Hero_Rows::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnFriendsPlayingChanged
// 0x0004 (0x0004 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged final
{
public:
	int32                                         NumPlaying;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged) == 0x000004, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged) == 0x000004, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged, NumPlaying) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnFriendsPlayingChanged::NumPlaying' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnIsFavoriteChanged
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged final
{
public:
	bool                                          bIsFavorite;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged, bIsFavorite) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnIsFavoriteChanged::bIsFavorite' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet) == 0x000008, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnLogoImageChanged
// 0x0010 (0x0010 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged final
{
public:
	bool                                          bIsLoading;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture*                         Texture;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged) == 0x000010, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged, bIsLoading) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged::bIsLoading' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged, Texture) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_OnLogoImageChanged::Texture' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnPartySizeChanged
// 0x0004 (0x0004 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged final
{
public:
	int32                                         PartySize;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged) == 0x000004, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged) == 0x000004, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged, PartySize) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnPartySizeChanged::PartySize' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnPreviewImageChanged
// 0x0010 (0x0010 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged final
{
public:
	bool                                          bIsLoading;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture*                         Texture;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged) == 0x000010, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged, bIsLoading) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged::bIsLoading' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged, Texture) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_OnPreviewImageChanged::Texture' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnRequiresPurchaseChanged
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged final
{
public:
	bool                                          bRequiresPurchase;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged, bRequiresPurchase) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnRequiresPurchaseChanged::bRequiresPurchase' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnTileActiveSet
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet final
{
public:
	bool                                          bIsTileActive;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet, bIsTileActive) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnTileActiveSet::bIsTileActive' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.OnUpdateColumnSize
// 0x0004 (0x0004 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize final
{
public:
	int32                                         NewColumnSize;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize) == 0x000004, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize) == 0x000004, "Wrong size on ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize, NewColumnSize) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_OnUpdateColumnSize::NewColumnSize' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_PreConstruct");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_PreConstruct) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_PreConstruct");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ResetOnHoverSelectAnimation
// 0x0028 (0x0028 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation) == 0x000028, "Wrong size on ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation, K2Node_MakeStruct_Margin) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnHoverSelectAnimation::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ResetOnImageLoadedAnimation
// 0x0018 (0x0018 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation final
{
public:
	bool                                          IsLoaded;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation) == 0x000018, "Wrong size on ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation, IsLoaded) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation::IsLoaded' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_ResetOnImageLoadedAnimation::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Set Game Mode Text Size
// 0x0070 (0x0070 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size final
{
public:
	int32                                         FontSize;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0058)(HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Size_ImplicitCast;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size) == 0x000070, "Wrong size on ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size, FontSize) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size::FontSize' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size, K2Node_MakeStruct_Size_ImplicitCast) == 0x000068, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size::K2Node_MakeStruct_Size_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.Set Game Mode Text Size Override
// 0x0028 (0x0028 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExperimentContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDecreaseFontSizeInDiscoveryTileTitles_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override) == 0x000028, "Wrong size on ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override, Temp_bool_Variable) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override, CallFunc_ShouldDecreaseFontSizeInDiscoveryTileTitles_ReturnValue) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override::CallFunc_ShouldDecreaseFontSizeInDiscoveryTileTitles_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override, K2Node_Select_Default) == 0x000024, "Member 'ActivityBrowserTileDetailsDisplay_C_Set_Game_Mode_Text_Size_Override::K2Node_Select_Default' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetBannerColorAnimator
// 0x0020 (0x0020 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator final
{
public:
	double                                        NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator) == 0x000020, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator, NewParam) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator::NewParam' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator, CallFunc_LinearColorLerp_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_SetBannerColorAnimator::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetDetailsButtonAvailable
// 0x0003 (0x0003 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable final
{
public:
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable) == 0x000003, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable, CallFunc_IsMobileGame_ReturnValue) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDetailsButtonAvailable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetDisabledText
// 0x00F0 (0x00F0 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetDisabledText final
{
public:
	bool                                          IsActivityPreviouslyValid;                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInvalidActivityReason                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0098(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInvalidActivityReason                    CallFunc_GetInvalidActivityReason_ReturnValue;     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00D0(0x0018)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetDisabledText");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText) == 0x0000F0, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetDisabledText");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, IsActivityPreviouslyValid) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::IsActivityPreviouslyValid' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_byte_Variable) == 0x000001, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable_1) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable_2) == 0x000038, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable_3) == 0x000050, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable_4) == 0x000068, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable_5) == 0x000080, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, Temp_text_Variable_6) == 0x000098, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000B8, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_GetRenderOpacity_ReturnValue) == 0x0000C0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C4, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C5, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_BooleanAND_ReturnValue) == 0x0000C6, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C7, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_GetInvalidActivityReason_ReturnValue) == 0x0000C8, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_GetInvalidActivityReason_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C9, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, K2Node_Select_Default) == 0x0000D0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledText, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledText::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetDisabledThumbnailOverlay
// 0x0020 (0x0020 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay final
{
public:
	bool                                          CallFunc_IsActivityLocked_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInvalidActivityReason                    CallFunc_GetInvalidActivityReason_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay) == 0x000020, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_IsActivityLocked_ReturnValue) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_IsActivityLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_GetInvalidActivityReason_ReturnValue) == 0x000001, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_GetInvalidActivityReason_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_SetDisabledThumbnailOverlay::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetExtraVerticalPaddingOffset
// 0x0030 (0x0030 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset final
{
public:
	double                                        InVerticalTilePadding;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset) == 0x000030, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset, InVerticalTilePadding) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset::InVerticalTilePadding' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset, K2Node_MakeStruct_Margin) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000028, "Member 'ActivityBrowserTileDetailsDisplay_C_SetExtraVerticalPaddingOffset::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetFavoriteVisibility
// 0x0005 (0x0005 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility final
{
public:
	bool                                          IsFavorited;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility) == 0x000005, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility, IsFavorited) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility::IsFavorited' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility, Temp_bool_Variable) == 0x000001, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility, Temp_byte_Variable) == 0x000002, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility, K2Node_Select_Default) == 0x000004, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFavoriteVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetFirstTimeModalStyle
// 0x0028 (0x0028 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Discovery_DetailsButton_C*         K2Node_DynamicCast_AsWBP_Discovery_Details_Button; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle) == 0x000028, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle, K2Node_MakeStruct_Margin) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle, K2Node_DynamicCast_AsWBP_Discovery_Details_Button) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle::K2Node_DynamicCast_AsWBP_Discovery_Details_Button' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_SetFirstTimeModalStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetHideDetails
// 0x0018 (0x0018 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetHideDetails final
{
public:
	bool                                          Hide_Details;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetActivityCreatorDisplayText_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetHideDetails) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetHideDetails");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetHideDetails) == 0x000018, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetHideDetails");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetHideDetails, Hide_Details) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetHideDetails::Hide_Details' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetHideDetails, CallFunc_GetActivityCreatorDisplayText_ReturnValue) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_SetHideDetails::CallFunc_GetActivityCreatorDisplayText_ReturnValue' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetIsPromotedHero
// 0x0001 (0x0001 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero final
{
public:
	bool                                          IsPromotedHeroCarousel;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero) == 0x000001, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero, IsPromotedHeroCarousel) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetIsPromotedHero::IsPromotedHeroCarousel' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.SetTileSize
// 0x00D8 (0x00D8 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_SetTileSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast_1;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_SetTileSize) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_SetTileSize");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_SetTileSize) == 0x0000D8, "Wrong size on ActivityBrowserTileDetailsDisplay_C_SetTileSize");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Size) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Size' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_bool_Variable) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_BreakVector2D_X) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_bool_Variable_1) == 0x000028, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000029, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00002A, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00002B, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_bool_Variable_2) == 0x00002C, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_bool_Variable_3) == 0x00002D, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_IsMobileGame_ReturnValue) == 0x00002E, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_real_Variable) == 0x000030, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_real_Variable_1) == 0x000038, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_bool_Variable_4) == 0x000040, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000044, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Default) == 0x000048, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Default_1) == 0x000050, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_real_Variable_2) == 0x000058, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_FFloor_ReturnValue) == 0x000068, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_real_Variable_3) == 0x000070, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, Temp_bool_Variable_5) == 0x000080, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_IsMobileGame_ReturnValue_1) == 0x000081, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Default_2) == 0x000088, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Default_3) == 0x000090, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Default_4) == 0x000098, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_FFloor_ReturnValue_1) == 0x0000A8, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000B0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Default_5) == 0x0000B8, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Option_0_ImplicitCast) == 0x0000C0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, K2Node_Select_Option_0_ImplicitCast_1) == 0x0000C8, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::K2Node_Select_Option_0_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0000D0, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_SetTileSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0000D4, "Member 'ActivityBrowserTileDetailsDisplay_C_SetTileSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.ShouldPlayTileVideo
// 0x0002 (0x0002 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo final
{
public:
	bool                                          bOutResult;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo) == 0x000001, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo) == 0x000002, "Wrong size on ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo, bOutResult) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo::bOutResult' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ActivityBrowserTileDetailsDisplay_C_ShouldPlayTileVideo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateCCU
// 0x0004 (0x0004 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_UpdateCCU final
{
public:
	int32                                         CCUCount;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_UpdateCCU) == 0x000004, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_UpdateCCU");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_UpdateCCU) == 0x000004, "Wrong size on ActivityBrowserTileDetailsDisplay_C_UpdateCCU");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateCCU, CCUCount) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateCCU::CCUCount' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateEpicActivityStyling
// 0x00E8 (0x00E8 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling final
{
public:
	class FString                                 CreatorDisplayName;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesActivityRequirePurchase_ReturnValue;  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling) == 0x0000E8, "Wrong size on ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CreatorDisplayName) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CreatorDisplayName' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, Temp_bool_Variable) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_IsEmpty_ReturnValue) == 0x000030, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, K2Node_MakeArray_Array) == 0x000090, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, Temp_bool_Variable_1) == 0x0000A0, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, Temp_byte_Variable) == 0x0000C0, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, Temp_byte_Variable_1) == 0x0000C1, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C3, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_BooleanAND_ReturnValue) == 0x0000C4, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C5, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_DoesActivityRequirePurchase_ReturnValue) == 0x0000C6, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_DoesActivityRequirePurchase_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, K2Node_Select_Default) == 0x0000C7, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, K2Node_Select_Default_1) == 0x0000C8, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling, CallFunc_SelectColor_ReturnValue) == 0x0000D8, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateEpicActivityStyling::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateRequiresPurchase
// 0x0028 (0x0028 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase final
{
public:
	bool                                          IsPurchaseRequired_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NewMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PreviousMaterial;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivityLocked_ReturnValue;             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase) == 0x000028, "Wrong size on ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, IsPurchaseRequired_0) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::IsPurchaseRequired_0' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, NewMaterial) == 0x000008, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::NewMaterial' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, PreviousMaterial) == 0x000010, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::PreviousMaterial' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, Temp_bool_Variable) == 0x000018, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, Temp_byte_Variable) == 0x000019, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, Temp_byte_Variable_1) == 0x00001A, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, CallFunc_IsActivityLocked_ReturnValue) == 0x00001B, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::CallFunc_IsActivityLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001D, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, CallFunc_BooleanAND_ReturnValue_1) == 0x00001F, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase, K2Node_Select_Default) == 0x000020, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateRequiresPurchase::K2Node_Select_Default' has a wrong offset!");

// Function ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C.UpdateSqueegeeWidgets
// 0x0008 (0x0008 - 0x0000)
struct ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets final
{
public:
	class UFortGameActivity*                      GameActivity;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets) == 0x000008, "Wrong alignment on ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets");
static_assert(sizeof(ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets) == 0x000008, "Wrong size on ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets");
static_assert(offsetof(ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets, GameActivity) == 0x000000, "Member 'ActivityBrowserTileDetailsDisplay_C_UpdateSqueegeeWidgets::GameActivity' has a wrong offset!");

}

