#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MPItemShop_Content

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MPItemShop_Content.WBP_MPItemShop_Content_C
// 0x00E8 (0x0530 - 0x0448)
class UWBP_MPItemShop_Content_C final : public UFortMPItemShopContent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortItemShopVM*                        FortItemShopVM;                                    // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UButton*                                Button_Hitbox;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MPItemShop_FakeLoadingRow_C*       FakeLoadingRow_Bottom;                             // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MPItemShop_FakeLoadingRow_C*       FakeLoadingRow_Top;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentRowIndex;                                   // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    SectionIndexMap;                                   // 0x0478(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bRowsDirty;                                        // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreNextFeaturedLayoutUpdate;                   // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnContentFocused;                                  // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsContentFocused;                                  // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FocusedOfferId;                                    // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const class FString& OfferId)> OnOfferFocused;                                    // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        RowWidthWith3DPreview;                             // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RowWidthWithout3DPreview;                          // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RowWidthWithWide3DPreview;                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ContentWhoosh_RetractSound;                        // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TouchScrollAccumulator;                            // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_MPItemShop_Content_Button_Hitbox_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BP_OnActivated();
	void BP_OnDeactivated();
	void ExecuteUbergraph_WBP_MPItemShop_Content(int32 EntryPoint);
	void GetRowWidgetByRowIndex(int32 RowIndex, class UWBP_MPItemShop_Row_C** RowWidget);
	void HandleScroll(const double& OffsetAmount);
	bool IsQuickNavCollapsible();
	void On_Update_Offer_Groups(TArray<class UFortItemShopOfferGroupVM*>& AllOfferGroupsWithOffers);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnFeaturedLayoutUpdated(const struct FFortItemShopLayout& FeaturedLayout);
	void OnInitializeRow(class UUserWidget* RowWidget, const int32 RowIndex);
	void OnOfferTileFocused(const class FString& OfferId);
	void OnResetRow(class UUserWidget* RowWidget);
	void OnRowFocused(class UUserWidget* RowWidget);
	void OnRowNavigatedFrom(EUINavigation Direction, const struct FVector2D& FocusedTilePosition);
	void OnScrollComplete(const int32 DestinationIndex);
	void OnScrollInput(float ScrollAmount);
	void OnSoftActivation();
	void OnSoftDeactivation();
	void ScrollDown();
	void ScrollToFeaturedRowIndex(bool bForceRefreshAll);
	void ScrollToIndex(int32 DestinationIndex, bool bRefreshAll);
	void ScrollUp();
	void SetContentFocusedState(bool IsFocused);
	void SetFortItemShopVM(class UFortItemShopVM* ViewModel);
	void SetRowActiveState();
	void Update_Featured_Layout();
	void UpdateFakeLoadingRowsVisibility();
	void UpdateFeaturedOffer();
	void UpdateRowFocusedOffer(int32 RowIndex);
	void UpdateRows();
	void UpdateRowWidth(class UWBP_MPItemShop_Row_C* Row, bool UseWidePreview);
	void UpdateSectionIndexMap();

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetCurrentRowWidget(class UWBP_MPItemShop_Row_C** RowWidget) const;
	void GetFeaturedRowIndex(int32* RowIndex) const;
	void GetFocusedRowIndex(int32* RowIndex) const;
	void GetRowIndexFromWidget(class UWidget* RowWidget, int32* RowIndex) const;
	class UWidget* GetScrollTarget(class UWidget* TargetWidget) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MPItemShop_Content_C">();
	}
	static class UWBP_MPItemShop_Content_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MPItemShop_Content_C>();
	}
};
static_assert(alignof(UWBP_MPItemShop_Content_C) == 0x000008, "Wrong alignment on UWBP_MPItemShop_Content_C");
static_assert(sizeof(UWBP_MPItemShop_Content_C) == 0x000530, "Wrong size on UWBP_MPItemShop_Content_C");
static_assert(offsetof(UWBP_MPItemShop_Content_C, UberGraphFrame) == 0x000448, "Member 'UWBP_MPItemShop_Content_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, FortItemShopVM) == 0x000450, "Member 'UWBP_MPItemShop_Content_C::FortItemShopVM' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, Button_Hitbox) == 0x000458, "Member 'UWBP_MPItemShop_Content_C::Button_Hitbox' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, FakeLoadingRow_Bottom) == 0x000460, "Member 'UWBP_MPItemShop_Content_C::FakeLoadingRow_Bottom' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, FakeLoadingRow_Top) == 0x000468, "Member 'UWBP_MPItemShop_Content_C::FakeLoadingRow_Top' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, CurrentRowIndex) == 0x000470, "Member 'UWBP_MPItemShop_Content_C::CurrentRowIndex' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, SectionIndexMap) == 0x000478, "Member 'UWBP_MPItemShop_Content_C::SectionIndexMap' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, bRowsDirty) == 0x0004C8, "Member 'UWBP_MPItemShop_Content_C::bRowsDirty' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, bIgnoreNextFeaturedLayoutUpdate) == 0x0004C9, "Member 'UWBP_MPItemShop_Content_C::bIgnoreNextFeaturedLayoutUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, OnContentFocused) == 0x0004D0, "Member 'UWBP_MPItemShop_Content_C::OnContentFocused' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, IsContentFocused) == 0x0004E0, "Member 'UWBP_MPItemShop_Content_C::IsContentFocused' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, FocusedOfferId) == 0x0004E8, "Member 'UWBP_MPItemShop_Content_C::FocusedOfferId' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, OnOfferFocused) == 0x0004F8, "Member 'UWBP_MPItemShop_Content_C::OnOfferFocused' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, RowWidthWith3DPreview) == 0x000508, "Member 'UWBP_MPItemShop_Content_C::RowWidthWith3DPreview' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, RowWidthWithout3DPreview) == 0x000510, "Member 'UWBP_MPItemShop_Content_C::RowWidthWithout3DPreview' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, RowWidthWithWide3DPreview) == 0x000518, "Member 'UWBP_MPItemShop_Content_C::RowWidthWithWide3DPreview' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, ContentWhoosh_RetractSound) == 0x000520, "Member 'UWBP_MPItemShop_Content_C::ContentWhoosh_RetractSound' has a wrong offset!");
static_assert(offsetof(UWBP_MPItemShop_Content_C, TouchScrollAccumulator) == 0x000528, "Member 'UWBP_MPItemShop_Content_C::TouchScrollAccumulator' has a wrong offset!");

}

