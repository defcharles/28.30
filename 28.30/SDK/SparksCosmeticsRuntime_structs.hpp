#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCosmeticsRuntime

#include "Basic.hpp"

#include "SparksCoreRuntime_structs.hpp"


namespace SDK
{

// ScriptStruct SparksCosmeticsRuntime.SparksVariantChoice
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FSparksVariantChoice final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksVariantChoice) == 0x000008, "Wrong alignment on FSparksVariantChoice");
static_assert(sizeof(FSparksVariantChoice) == 0x000018, "Wrong size on FSparksVariantChoice");

// ScriptStruct SparksCosmeticsRuntime.SparksVariantChoices
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FSparksVariantChoices final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksVariantChoices) == 0x000008, "Wrong alignment on FSparksVariantChoices");
static_assert(sizeof(FSparksVariantChoices) == 0x000050, "Wrong size on FSparksVariantChoices");

// ScriptStruct SparksCosmeticsRuntime.NameList
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FNameList final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNameList) == 0x000008, "Wrong alignment on FNameList");
static_assert(sizeof(FNameList) == 0x000010, "Wrong size on FNameList");

// ScriptStruct SparksCosmeticsRuntime.SparksCosmeticLoadoutData
// 0x00F0 (0x00F0 - 0x0000)
struct FSparksCosmeticLoadoutData final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSparksVariantChoices                  AuraChoices;                                       // 0x0040(0x0050)(Transient, NativeAccessSpecifierPublic)
	TMap<ESparksInstrumentType, struct FSparksVariantChoices> InstrumentVariantChoices;                          // 0x0090(0x0050)(Transient, NativeAccessSpecifierPublic)
	TArray<class USparksSongItemDefinition*>      JamSongChoices;                                    // 0x00E0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSparksCosmeticLoadoutData) == 0x000008, "Wrong alignment on FSparksCosmeticLoadoutData");
static_assert(sizeof(FSparksCosmeticLoadoutData) == 0x0000F0, "Wrong size on FSparksCosmeticLoadoutData");
static_assert(offsetof(FSparksCosmeticLoadoutData, AuraChoices) == 0x000040, "Member 'FSparksCosmeticLoadoutData::AuraChoices' has a wrong offset!");
static_assert(offsetof(FSparksCosmeticLoadoutData, InstrumentVariantChoices) == 0x000090, "Member 'FSparksCosmeticLoadoutData::InstrumentVariantChoices' has a wrong offset!");
static_assert(offsetof(FSparksCosmeticLoadoutData, JamSongChoices) == 0x0000E0, "Member 'FSparksCosmeticLoadoutData::JamSongChoices' has a wrong offset!");

// ScriptStruct SparksCosmeticsRuntime.SparksCosmeticsEvent_AuraEnable
// 0x000C (0x000C - 0x0000)
struct FSparksCosmeticsEvent_AuraEnable final
{
public:
	TWeakObjectPtr<class AFortPlayerPawn>         ForPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAuraIsEnabled;                                    // 0x0008(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSparksCosmeticsEvent_AuraEnable) == 0x000004, "Wrong alignment on FSparksCosmeticsEvent_AuraEnable");
static_assert(sizeof(FSparksCosmeticsEvent_AuraEnable) == 0x00000C, "Wrong size on FSparksCosmeticsEvent_AuraEnable");
static_assert(offsetof(FSparksCosmeticsEvent_AuraEnable, ForPlayer) == 0x000000, "Member 'FSparksCosmeticsEvent_AuraEnable::ForPlayer' has a wrong offset!");
static_assert(offsetof(FSparksCosmeticsEvent_AuraEnable, bAuraIsEnabled) == 0x000008, "Member 'FSparksCosmeticsEvent_AuraEnable::bAuraIsEnabled' has a wrong offset!");

}

