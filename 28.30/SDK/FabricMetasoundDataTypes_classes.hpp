#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FabricMetasoundDataTypes

#include "Basic.hpp"

#include "FabricMetasoundDataTypes_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class FabricMetasoundDataTypes.FabricMetasoundDrumPlayerSampleBankAsset
// 0x0010 (0x0040 - 0x0030)
class UFabricMetasoundDrumPlayerSampleBankAsset final : public UDataAsset
{
public:
	TArray<struct FFabricMetasoundDrumPlayerSampleData> Samples;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	TArray<class FText> GetSampleLabels() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundDrumPlayerSampleBankAsset">();
	}
	static class UFabricMetasoundDrumPlayerSampleBankAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundDrumPlayerSampleBankAsset>();
	}
};
static_assert(alignof(UFabricMetasoundDrumPlayerSampleBankAsset) == 0x000008, "Wrong alignment on UFabricMetasoundDrumPlayerSampleBankAsset");
static_assert(sizeof(UFabricMetasoundDrumPlayerSampleBankAsset) == 0x000040, "Wrong size on UFabricMetasoundDrumPlayerSampleBankAsset");
static_assert(offsetof(UFabricMetasoundDrumPlayerSampleBankAsset, Samples) == 0x000030, "Member 'UFabricMetasoundDrumPlayerSampleBankAsset::Samples' has a wrong offset!");

// Class FabricMetasoundDataTypes.FabricMetasoundDrumPlayerDataAsset
// 0x0010 (0x0040 - 0x0030)
class UFabricMetasoundDrumPlayerDataAsset final : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UFabricMetasoundDrumPlayerSampleBankAsset>> SampleBanks;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundDrumPlayerDataAsset">();
	}
	static class UFabricMetasoundDrumPlayerDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundDrumPlayerDataAsset>();
	}
};
static_assert(alignof(UFabricMetasoundDrumPlayerDataAsset) == 0x000008, "Wrong alignment on UFabricMetasoundDrumPlayerDataAsset");
static_assert(sizeof(UFabricMetasoundDrumPlayerDataAsset) == 0x000040, "Wrong size on UFabricMetasoundDrumPlayerDataAsset");
static_assert(offsetof(UFabricMetasoundDrumPlayerDataAsset, SampleBanks) == 0x000030, "Member 'UFabricMetasoundDrumPlayerDataAsset::SampleBanks' has a wrong offset!");

// Class FabricMetasoundDataTypes.FabricMetasoundInstrumentPlayerDataAsset
// 0x0008 (0x0038 - 0x0030)
class UFabricMetasoundInstrumentPlayerDataAsset final : public UDataAsset
{
public:
	class UFusionPatch*                           Patch;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundInstrumentPlayerDataAsset">();
	}
	static class UFabricMetasoundInstrumentPlayerDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundInstrumentPlayerDataAsset>();
	}
};
static_assert(alignof(UFabricMetasoundInstrumentPlayerDataAsset) == 0x000008, "Wrong alignment on UFabricMetasoundInstrumentPlayerDataAsset");
static_assert(sizeof(UFabricMetasoundInstrumentPlayerDataAsset) == 0x000038, "Wrong size on UFabricMetasoundInstrumentPlayerDataAsset");
static_assert(offsetof(UFabricMetasoundInstrumentPlayerDataAsset, Patch) == 0x000030, "Member 'UFabricMetasoundInstrumentPlayerDataAsset::Patch' has a wrong offset!");

// Class FabricMetasoundDataTypes.FabricMetasoundInstrumentPlayerDataAssetList
// 0x0010 (0x0040 - 0x0030)
class UFabricMetasoundInstrumentPlayerDataAssetList final : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UFabricMetasoundInstrumentPlayerDataAsset>> InstrumentPlayerData;                              // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundInstrumentPlayerDataAssetList">();
	}
	static class UFabricMetasoundInstrumentPlayerDataAssetList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundInstrumentPlayerDataAssetList>();
	}
};
static_assert(alignof(UFabricMetasoundInstrumentPlayerDataAssetList) == 0x000008, "Wrong alignment on UFabricMetasoundInstrumentPlayerDataAssetList");
static_assert(sizeof(UFabricMetasoundInstrumentPlayerDataAssetList) == 0x000040, "Wrong size on UFabricMetasoundInstrumentPlayerDataAssetList");
static_assert(offsetof(UFabricMetasoundInstrumentPlayerDataAssetList, InstrumentPlayerData) == 0x000030, "Member 'UFabricMetasoundInstrumentPlayerDataAssetList::InstrumentPlayerData' has a wrong offset!");

// Class FabricMetasoundDataTypes.FabricMetaSoundUserOption
// 0x0038 (0x0060 - 0x0028)
class UFabricMetaSoundUserOption final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFabricUserOption                      FabricUserOption;                                  // 0x0030(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundUserOption">();
	}
	static class UFabricMetaSoundUserOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundUserOption>();
	}
};
static_assert(alignof(UFabricMetaSoundUserOption) == 0x000008, "Wrong alignment on UFabricMetaSoundUserOption");
static_assert(sizeof(UFabricMetaSoundUserOption) == 0x000060, "Wrong size on UFabricMetaSoundUserOption");
static_assert(offsetof(UFabricMetaSoundUserOption, FabricUserOption) == 0x000030, "Member 'UFabricMetaSoundUserOption::FabricUserOption' has a wrong offset!");

}

