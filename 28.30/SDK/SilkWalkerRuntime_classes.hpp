#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SilkWalkerRuntime

#include "Basic.hpp"

#include "FortniteAI_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class SilkWalkerRuntime.FortAthenaNpcEvaluator_SilkWalkerGiftTarget
// 0x0068 (0x0110 - 0x00A8)
class UFortAthenaNpcEvaluator_SilkWalkerGiftTarget final : public UFortAthenaAIBotEvaluator
{
public:
	class FName                                   GiftTargetActorName;                               // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GiftTargetStatusKeyName;                           // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinGiftRadius;                                     // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxGiftRadius;                                     // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  UndesiredTags;                                     // 0x00C0(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  DesiredTags;                                       // 0x00E0(0x0020)(Edit, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortGameModeAthena>     CachedGameMode;                                    // 0x0100(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortGameStateComponent_AffiliationManager> CachedAffiliationManager;                          // 0x0108(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaNpcEvaluator_SilkWalkerGiftTarget">();
	}
	static class UFortAthenaNpcEvaluator_SilkWalkerGiftTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAthenaNpcEvaluator_SilkWalkerGiftTarget>();
	}
};
static_assert(alignof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget) == 0x000008, "Wrong alignment on UFortAthenaNpcEvaluator_SilkWalkerGiftTarget");
static_assert(sizeof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget) == 0x000110, "Wrong size on UFortAthenaNpcEvaluator_SilkWalkerGiftTarget");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, GiftTargetActorName) == 0x0000A8, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::GiftTargetActorName' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, GiftTargetStatusKeyName) == 0x0000B0, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::GiftTargetStatusKeyName' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, MinGiftRadius) == 0x0000B8, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::MinGiftRadius' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, MaxGiftRadius) == 0x0000BC, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::MaxGiftRadius' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, UndesiredTags) == 0x0000C0, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::UndesiredTags' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, DesiredTags) == 0x0000E0, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::DesiredTags' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, CachedGameMode) == 0x000100, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::CachedGameMode' has a wrong offset!");
static_assert(offsetof(UFortAthenaNpcEvaluator_SilkWalkerGiftTarget, CachedAffiliationManager) == 0x000108, "Member 'UFortAthenaNpcEvaluator_SilkWalkerGiftTarget::CachedAffiliationManager' has a wrong offset!");

// Class SilkWalkerRuntime.FortAthenaAIBotEvaluator_SilkwalkerInVehicle
// 0x0028 (0x00D0 - 0x00A8)
class UFortAthenaAIBotEvaluator_SilkwalkerInVehicle final : public UFortAthenaAIBotEvaluator
{
public:
	class FName                                   SilkwalkerInVehicleName;                           // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  SilkwalkerTags;                                    // 0x00B0(0x0020)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaAIBotEvaluator_SilkwalkerInVehicle">();
	}
	static class UFortAthenaAIBotEvaluator_SilkwalkerInVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAthenaAIBotEvaluator_SilkwalkerInVehicle>();
	}
};
static_assert(alignof(UFortAthenaAIBotEvaluator_SilkwalkerInVehicle) == 0x000008, "Wrong alignment on UFortAthenaAIBotEvaluator_SilkwalkerInVehicle");
static_assert(sizeof(UFortAthenaAIBotEvaluator_SilkwalkerInVehicle) == 0x0000D0, "Wrong size on UFortAthenaAIBotEvaluator_SilkwalkerInVehicle");
static_assert(offsetof(UFortAthenaAIBotEvaluator_SilkwalkerInVehicle, SilkwalkerInVehicleName) == 0x0000A8, "Member 'UFortAthenaAIBotEvaluator_SilkwalkerInVehicle::SilkwalkerInVehicleName' has a wrong offset!");
static_assert(offsetof(UFortAthenaAIBotEvaluator_SilkwalkerInVehicle, SilkwalkerTags) == 0x0000B0, "Member 'UFortAthenaAIBotEvaluator_SilkwalkerInVehicle::SilkwalkerTags' has a wrong offset!");

// Class SilkWalkerRuntime.FortSilkwalkerComponent_Telemetry
// 0x0010 (0x00B0 - 0x00A0)
class UFortSilkwalkerComponent_Telemetry final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGiftThrown(const class AFortPawn* TargetPawn, const bool bGood);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSilkwalkerComponent_Telemetry">();
	}
	static class UFortSilkwalkerComponent_Telemetry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSilkwalkerComponent_Telemetry>();
	}
};
static_assert(alignof(UFortSilkwalkerComponent_Telemetry) == 0x000008, "Wrong alignment on UFortSilkwalkerComponent_Telemetry");
static_assert(sizeof(UFortSilkwalkerComponent_Telemetry) == 0x0000B0, "Wrong size on UFortSilkwalkerComponent_Telemetry");

}

