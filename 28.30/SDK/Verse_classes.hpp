#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Verse

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Verse_structs.hpp"
#include "VerseConcurrency_classes.hpp"
#include "VerseNative_structs.hpp"


namespace SDK
{

// VerseClass Verse.$SolarisSignatureFunctionOuter
// 0x0000 (0x0028 - 0x0028)
class Verse::U_SolarisSignatureFunctionOuter final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseClass Verse.$SolarisSignatureFunctionOuter", true>();
	}
	static class Verse::U_SolarisSignatureFunctionOuter* GetDefaultObj()
	{
		return GetDefaultObjImpl<Verse::U_SolarisSignatureFunctionOuter>();
	}
};
static_assert(alignof(Verse::U_SolarisSignatureFunctionOuter) == 0x000008, "Wrong alignment on Verse::U_SolarisSignatureFunctionOuter");
static_assert(sizeof(Verse::U_SolarisSignatureFunctionOuter) == 0x000028, "Wrong size on Verse::U_SolarisSignatureFunctionOuter");

// VerseClass Verse.Verse_invalidatable
// 0x0000 (0x0028 - 0x0028)
class UVerse_invalidatable final : public UObject
{
public:
	TOptional<EVerseTrue> _L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_invalidatable">();
	}
	static class UVerse_invalidatable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_invalidatable>();
	}
};
static_assert(alignof(UVerse_invalidatable) == 0x000008, "Wrong alignment on UVerse_invalidatable");
static_assert(sizeof(UVerse_invalidatable) == 0x000028, "Wrong size on UVerse_invalidatable");

// VerseClass Verse.Random
// 0x0000 (0x0028 - 0x0028)
class URandom final : public UObject
{
public:
	static double _L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R(const TArray<FVerseDynamicProperty_>& __verse_0xB2CDDD72_Argument);

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Random">();
	}
	static class URandom* GetDefaultObj()
	{
		return GetDefaultObjImpl<URandom>();
	}
};
static_assert(alignof(URandom) == 0x000008, "Wrong alignment on URandom");
static_assert(sizeof(URandom) == 0x000028, "Wrong size on URandom");

// VerseClass Verse.Verse_disposable
// 0x0000 (0x0028 - 0x0028)
class UVerse_disposable final : public UObject
{
public:
	void _L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_disposable">();
	}
	static class UVerse_disposable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_disposable>();
	}
};
static_assert(alignof(UVerse_disposable) == 0x000008, "Wrong alignment on UVerse_disposable");
static_assert(sizeof(UVerse_disposable) == 0x000028, "Wrong size on UVerse_disposable");

// VerseClass Verse.task_Verse_event$Await
// 0x0020 (0x0170 - 0x0150)
class Utask_Verse_event_Await final : public Utask
{
public:
	class UVerse_event*                           _Self;                                             // 0x0150(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0158(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _RetVal;                                           // 0x0160(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)

public:
	int64 Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"task_Verse_event$Await">();
	}
	static class Utask_Verse_event_Await* GetDefaultObj()
	{
		return GetDefaultObjImpl<Utask_Verse_event_Await>();
	}
};
static_assert(alignof(Utask_Verse_event_Await) == 0x000008, "Wrong alignment on Utask_Verse_event_Await");
static_assert(sizeof(Utask_Verse_event_Await) == 0x000170, "Wrong size on Utask_Verse_event_Await");
static_assert(offsetof(Utask_Verse_event_Await, _Self) == 0x000150, "Member 'Utask_Verse_event_Await::_Self' has a wrong offset!");
static_assert(offsetof(Utask_Verse_event_Await, __verse_0xB2CDDD72_Argument) == 0x000158, "Member 'Utask_Verse_event_Await::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utask_Verse_event_Await, _RetVal) == 0x000160, "Member 'Utask_Verse_event_Await::_RetVal' has a wrong offset!");

// VerseClass Verse.Verse_event
// 0x0058 (0x0080 - 0x0028)
class UVerse_event final : public UObject
{
public:
	FVerseFunctionProperty_                       __verse_0x57187737__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount; // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x319692B4__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R; // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x8DE7DBE5_Await;                          // 0x0048(0x0010)(InstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_58[0x28];                                      // 0x0058(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	int64 _L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R(FVerseDynamicProperty_ __verse_0xB2CDDD72_Argument);
	class Utask* Await(class Utask* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_event">();
	}
	static class UVerse_event* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_event>();
	}
};
static_assert(alignof(UVerse_event) == 0x000008, "Wrong alignment on UVerse_event");
static_assert(sizeof(UVerse_event) == 0x000080, "Wrong size on UVerse_event");
static_assert(offsetof(UVerse_event, __verse_0x57187737__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount) == 0x000028, "Member 'UVerse_event::__verse_0x57187737__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount' has a wrong offset!");
static_assert(offsetof(UVerse_event, __verse_0x319692B4__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R) == 0x000038, "Member 'UVerse_event::__verse_0x319692B4__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R' has a wrong offset!");
static_assert(offsetof(UVerse_event, __verse_0x8DE7DBE5_Await) == 0x000048, "Member 'UVerse_event::__verse_0x8DE7DBE5_Await' has a wrong offset!");

// VerseClass Verse.Verse
// 0x0008 (0x0030 - 0x0028)
class UVerse final : public UObject
{
public:
	double                                        __verse_0x34BB10F0_PiFloat;                        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static double _L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R(const TArray<TArray<FVerseDynamicProperty_>>& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static EVerseFalse _L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Revent(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Revent_L_Nt_20where_20t_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static TOptional<EVerseTrue> _L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R(const struct Ftuple_L_K_Kchar_M_Kchar_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rlistenable(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Npayload_20where_20payload_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_N_QWhere_Nlocale_R(const struct Ftuple_L_Kchar_M_QWhere_Nlocale_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_N_QWhere_Nlocale_R(const struct Ftuple_Lfloat_M_QWhere_Nlocale_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_N_QWhere_Nlocale_R(const struct Ftuple_Lint_M_QWhere_Nlocale_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R(class UVerse_message* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_string* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_float* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_int* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R(int64 __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_message* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nmessage_R(class UVerse_message* __verse_0xB2CDDD72_Argument);
	static class UVerse_message* _L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R(const struct Verse::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Many_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_Lint_M_Kt_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_M_Kany_R_R& __verse_0xB2CDDD72_Argument);
	static TOptional<EVerseTrue> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R(const struct Ftuple_Lfloat_Mtuple_L_R_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static TOptional<double> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_M_Ntuple_L_R_R(const struct Verse::Ftuple_Lfloat_Mtuple_L_R_Mtuple_L_R_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_Lint_Mint_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Many_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mint_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Many_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_L_Kt_M_Kt_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_L_Kany_M_Kany_R_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_Lt_Mt_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lany_Many_R_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_Lint_Mt_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Many_R_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_Lt_Mt_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lany_Many_R_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mint_R& __verse_0xB2CDDD72_Argument);
	static TOptional<TArray<FVerseDynamicProperty_>> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Ntuple_Lint_Mint_R_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TOptional<int64> _L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R(int64 __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Npayload_20where_20payload_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rsubscribable(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nt_20where_20t_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R(int32 __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R(uint8 __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R(int64 __verse_0xB2CDDD72_Argument);
	static struct FVerse_locale Verse_locale_Factory();
	static struct FVerse_locale Verse_locale_OverrideFactory(const TMap<FVerseStringProperty_, uint8>& __verse_0xFB48ED96__InitOverrideMap);

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse">();
	}
	static class UVerse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse>();
	}
};
static_assert(alignof(UVerse) == 0x000008, "Wrong alignment on UVerse");
static_assert(sizeof(UVerse) == 0x000030, "Wrong size on UVerse");
static_assert(offsetof(UVerse, __verse_0x34BB10F0_PiFloat) == 0x000028, "Member 'UVerse::__verse_0x34BB10F0_PiFloat' has a wrong offset!");

// VerseClass Verse.Verse_cancelable
// 0x0000 (0x0028 - 0x0028)
class UVerse_cancelable final : public UObject
{
public:
	void _L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_cancelable">();
	}
	static class UVerse_cancelable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_cancelable>();
	}
};
static_assert(alignof(UVerse_cancelable) == 0x000008, "Wrong alignment on UVerse_cancelable");
static_assert(sizeof(UVerse_cancelable) == 0x000028, "Wrong size on UVerse_cancelable");

// VerseClass Verse.Verse_listenable
// 0x0000 (0x0028 - 0x0028)
class UVerse_listenable final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_listenable">();
	}
	static class UVerse_listenable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_listenable>();
	}
};
static_assert(alignof(UVerse_listenable) == 0x000008, "Wrong alignment on UVerse_listenable");
static_assert(sizeof(UVerse_listenable) == 0x000028, "Wrong size on UVerse_listenable");

// VerseClass Verse.Verse_localizable_value
// 0x0000 (0x0028 - 0x0028)
class UVerse_localizable_value : public UObject
{
public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_value">();
	}
	static class UVerse_localizable_value* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_value>();
	}
};
static_assert(alignof(UVerse_localizable_value) == 0x000008, "Wrong alignment on UVerse_localizable_value");
static_assert(sizeof(UVerse_localizable_value) == 0x000028, "Wrong size on UVerse_localizable_value");

// VerseClass Verse.Verse_localizable_float
// 0x0008 (0x0030 - 0x0028)
class UVerse_localizable_float final : public UVerse_localizable_value
{
public:
	double                                        __verse_0x31A8F10C_Value;                          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_float">();
	}
	static class UVerse_localizable_float* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_float>();
	}
};
static_assert(alignof(UVerse_localizable_float) == 0x000008, "Wrong alignment on UVerse_localizable_float");
static_assert(sizeof(UVerse_localizable_float) == 0x000030, "Wrong size on UVerse_localizable_float");
static_assert(offsetof(UVerse_localizable_float, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_float::__verse_0x31A8F10C_Value' has a wrong offset!");

// VerseClass Verse.Verse_localizable_int
// 0x0008 (0x0030 - 0x0028)
class UVerse_localizable_int final : public UVerse_localizable_value
{
public:
	int64                                         __verse_0x31A8F10C_Value;                          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_int">();
	}
	static class UVerse_localizable_int* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_int>();
	}
};
static_assert(alignof(UVerse_localizable_int) == 0x000008, "Wrong alignment on UVerse_localizable_int");
static_assert(sizeof(UVerse_localizable_int) == 0x000030, "Wrong size on UVerse_localizable_int");
static_assert(offsetof(UVerse_localizable_int, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_int::__verse_0x31A8F10C_Value' has a wrong offset!");

// VerseClass Verse.Verse_localizable_message
// 0x0008 (0x0030 - 0x0028)
class UVerse_localizable_message final : public UVerse_localizable_value
{
public:
	class UVerse_message*                         __verse_0x31A8F10C_Value;                          // 0x0028(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_message">();
	}
	static class UVerse_localizable_message* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_message>();
	}
};
static_assert(alignof(UVerse_localizable_message) == 0x000008, "Wrong alignment on UVerse_localizable_message");
static_assert(sizeof(UVerse_localizable_message) == 0x000030, "Wrong size on UVerse_localizable_message");
static_assert(offsetof(UVerse_localizable_message, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_message::__verse_0x31A8F10C_Value' has a wrong offset!");

// VerseClass Verse.Verse_localizable_string
// 0x0010 (0x0038 - 0x0028)
class UVerse_localizable_string final : public UVerse_localizable_value
{
public:
	FVerseStringProperty_                         __verse_0x31A8F10C_Value;                          // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_string">();
	}
	static class UVerse_localizable_string* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_string>();
	}
};
static_assert(alignof(UVerse_localizable_string) == 0x000008, "Wrong alignment on UVerse_localizable_string");
static_assert(sizeof(UVerse_localizable_string) == 0x000038, "Wrong size on UVerse_localizable_string");
static_assert(offsetof(UVerse_localizable_string, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_string::__verse_0x31A8F10C_Value' has a wrong offset!");

// VerseClass Verse.Verse_message
// 0x0070 (0x0098 - 0x0028)
class UVerse_message final : public UObject
{
public:
	FVerseStringProperty_                         __verse_0x589418B4_Key;                            // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0xEDB05B46_DefaultText;                    // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)
	TMap<FVerseStringProperty_, class UVerse_localizable_value*> __verse_0x85420AD2_Substitutions;                  // 0x0048(0x0050)(InstancedReference, ContainsInstancedReference)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_message">();
	}
	static class UVerse_message* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_message>();
	}
};
static_assert(alignof(UVerse_message) == 0x000008, "Wrong alignment on UVerse_message");
static_assert(sizeof(UVerse_message) == 0x000098, "Wrong size on UVerse_message");
static_assert(offsetof(UVerse_message, __verse_0x589418B4_Key) == 0x000028, "Member 'UVerse_message::__verse_0x589418B4_Key' has a wrong offset!");
static_assert(offsetof(UVerse_message, __verse_0xEDB05B46_DefaultText) == 0x000038, "Member 'UVerse_message::__verse_0xEDB05B46_DefaultText' has a wrong offset!");
static_assert(offsetof(UVerse_message, __verse_0x85420AD2_Substitutions) == 0x000048, "Member 'UVerse_message::__verse_0x85420AD2_Substitutions' has a wrong offset!");

// VerseClass Verse.Verse_signalable
// 0x0000 (0x0028 - 0x0028)
class UVerse_signalable final : public UObject
{
public:
	void _L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R(FVerseDynamicProperty_ __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_signalable">();
	}
	static class UVerse_signalable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_signalable>();
	}
};
static_assert(alignof(UVerse_signalable) == 0x000008, "Wrong alignment on UVerse_signalable");
static_assert(sizeof(UVerse_signalable) == 0x000028, "Wrong size on UVerse_signalable");

// VerseClass Verse.Verse_subscribable
// 0x0000 (0x0028 - 0x0028)
class UVerse_subscribable final : public UObject
{
public:
	class UObject* _L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R(FVerseFunctionProperty_ __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_subscribable">();
	}
	static class UVerse_subscribable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_subscribable>();
	}
};
static_assert(alignof(UVerse_subscribable) == 0x000008, "Wrong alignment on UVerse_subscribable");
static_assert(sizeof(UVerse_subscribable) == 0x000028, "Wrong size on UVerse_subscribable");

}

