#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SparksCosmeticPreviewDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SparksCosmeticPreviewDisplay_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SparksCosmeticPreviewDisplay.B_SparksCosmeticPreviewDisplay_C
// 0x0050 (0x04C0 - 0x0470)
class AB_SparksCosmeticPreviewDisplay_C final : public ABP_SparksCosmeticPreviewDisplay_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 MicMesh;                                           // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LHDrumstick;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 RHDrumstick;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MicStandMesh;                                      // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DrumMesh;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GuitarMesh;                                        // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Is__active;                                        // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              NewEventDispatcher;                                // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CustomizePreviewInstance(const class UFortItemDefinition* InItemDefinition);
	void ExecuteUbergraph_B_SparksCosmeticPreviewDisplay(int32 EntryPoint);
	void FixupMeshAndMaterials(class USkeletalMeshComponent* MeshComponent, class USkeletalMesh* NewMesh, class UMaterialInstance* Material1, class UMaterialInstance* Material2, class UFXSystemAsset* FX);
	void Hide_all();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SparksCosmeticPreviewDisplay_C">();
	}
	static class AB_SparksCosmeticPreviewDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SparksCosmeticPreviewDisplay_C>();
	}
};
static_assert(alignof(AB_SparksCosmeticPreviewDisplay_C) == 0x000008, "Wrong alignment on AB_SparksCosmeticPreviewDisplay_C");
static_assert(sizeof(AB_SparksCosmeticPreviewDisplay_C) == 0x0004C0, "Wrong size on AB_SparksCosmeticPreviewDisplay_C");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, UberGraphFrame) == 0x000470, "Member 'AB_SparksCosmeticPreviewDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, MicMesh) == 0x000478, "Member 'AB_SparksCosmeticPreviewDisplay_C::MicMesh' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, LHDrumstick) == 0x000480, "Member 'AB_SparksCosmeticPreviewDisplay_C::LHDrumstick' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, RHDrumstick) == 0x000488, "Member 'AB_SparksCosmeticPreviewDisplay_C::RHDrumstick' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, MicStandMesh) == 0x000490, "Member 'AB_SparksCosmeticPreviewDisplay_C::MicStandMesh' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, DrumMesh) == 0x000498, "Member 'AB_SparksCosmeticPreviewDisplay_C::DrumMesh' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, GuitarMesh) == 0x0004A0, "Member 'AB_SparksCosmeticPreviewDisplay_C::GuitarMesh' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, Is__active) == 0x0004A8, "Member 'AB_SparksCosmeticPreviewDisplay_C::Is__active' has a wrong offset!");
static_assert(offsetof(AB_SparksCosmeticPreviewDisplay_C, NewEventDispatcher) == 0x0004B0, "Member 'AB_SparksCosmeticPreviewDisplay_C::NewEventDispatcher' has a wrong offset!");

}

