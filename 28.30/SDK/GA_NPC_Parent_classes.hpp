#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_NPC_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Enum_NPC_ModifyAlertLevelReason_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Enum_NPC_AlertLevel_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_NPC_Parent.GA_NPC_Parent_C
// 0x0340 (0x0EA0 - 0x0B60)
class UGA_NPC_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortAIPawn*                            NPC_ActivatingFortAIPawn;                          // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EFortMovementUrgency                          NPC_InitialMovementUrgency;                        // 0x0B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_DebugAbility;                                  // 0x0B71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B72[0x6];                                      // 0x0B72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  NPC_IgnoreDamageAndOnlyDoKnockbackIfTheseAbilitiesAreActive; // 0x0B78(0x0020)(Edit, BlueprintVisible)
	bool                                          NPC_DebugFreezeFrameEnabled;                       // 0x0B98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_DebugFreezeFrameOnlyWhenAbilityTargetHit;      // 0x0B99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_DebugFreezeFrameOnlyWhenWeHaveSomeTarget;      // 0x0B9A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_DamageHitAbilityTargetDuringThisAbilityActivation; // 0x0B9B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9C[0x4];                                      // 0x0B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         NPC_DamageActorsWeHaveHitDuringThisAbilityActivation; // 0x0BA0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeNeutral; // 0x0BB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeFriendly; // 0x0BB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeHostile; // 0x0BB2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB3[0x5];                                      // 0x0BB3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NPC_CanActivateAbility_MaxTargetZDistanceBelow;    // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NPC_CanActivateAbility_MaxTargetZDistanceAbove;    // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NPC_CanActivateAbility_MaxTargetZDistanceAbove_ForIntentionalFailedAttack; // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         BuildingTargetingHitActors;                        // 0x0BD0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_NPC_FrustrationTagsToClearForGoals;             // 0x0BE0(0x0020)(Edit, BlueprintVisible)
	Enum_NPC_AlertLevel                           NPC_AlertLevelGoalIsFortPawn;                      // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_NPC_AlertLevel                           NPC_AlertLevelGoalIsOther;                         // 0x0C01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_NPC_AlertLevel                           NPC_AlertLevelGoalIsNotValid;                      // 0x0C02(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C03[0x5];                                      // 0x0C03(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NPC_DamageKnockbackVelocityHF;                     // 0x0C08(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageKnockbackVerticalAngleHF;                // 0x0C30(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageKnockbackMinimumYawValueHF;              // 0x0C58(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageCanAttackDBNOPlayersHF;                  // 0x0C80(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageKnockbackVelocityVehicleHF;              // 0x0CA8(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageKnockbackVerticalAngleVehicleHF;         // 0x0CD0(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageKnockbackMinimumYawValueVehicleHF;       // 0x0CF8(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_DamageChanceToEjectFromVehicleHF;              // 0x0D20(0x0028)(Edit, BlueprintVisible)
	struct FGameplayTag                           DestroyBuildingGC;                                 // 0x0D48(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DestroyBuildingGE;                                 // 0x0D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_NPC_FrustrationTagsToClearForMovement;          // 0x0D58(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTag                           TC_NPC_FrustrationBuildDueToGoal;                  // 0x0D78(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPC_FrustrationBuildDueToMovement;              // 0x0D7C(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagQuery                      TQ_NPC_RequirementsToBuildFrustrationDueToGoal;    // 0x0D80(0x0048)(Edit, BlueprintVisible)
	struct FGameplayTagQuery                      TQ_NPC_RequirementsToBuildFrustrationDueToMovement; // 0x0DC8(0x0048)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_BodyBumpBuildingsWhenBuildingMovementFrustrationHF; // 0x0E10(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         NPC_FrustrationBodyBumpOnlyDestroyPlayerBuildingsHF; // 0x0E38(0x0028)(Edit, BlueprintVisible)
	struct FGameplayTag                           TC_NPC_EffectContainer_BodyBumpBuildingsWhenBuildingMovementFrustration; // 0x0E60(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x4];                                      // 0x0E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       BuildingTargetingTargetData;                       // 0x0E68(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           BuildingTargetingApplicationTag;                   // 0x0E90(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_BuildingTypePlayer;                             // 0x0E94(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_NPC_MMR_Scaling_AbilityCooldown;                // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void BeginDestroyBuildings(const struct FGameplayTag& TargetSelectionApplicationTag, bool DoContinuousTargetSelection);
	void Cancelled_13B12ED64A3570FC1E117FAC4E3F7961(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_4BB5000E4F2C1DAB20E4FFAAA97E1368(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void DestroyBuilding(class AActor* BuildingActor);
	void ExecuteUbergraph_GA_NPC_Parent(int32 EntryPoint);
	void FilterHitActors(TArray<class AActor*>& HitActors);
	void NPC_AbilityDebugMessage(const class FString& String, bool OnlyWhenDebug);
	void NPC_AbilityTargetIsBuildingWeAreDestroyingToNavigate(bool* IsNavigationBuildingWeAreDestroying, class ABuildingActor** BuildingWeAreDestroying, double* HealthOfBuildingWeAreDestroying);
	void NPC_AbilityTargetIsWithinAngleThreshold(double AngleThreshold, bool* IsWithinAngle);
	void NPC_ApplyGameplayAbilityCooldownWithMMRScaling();
	void NPC_ApplyGameplayEffectContainerAndLaunchTargets(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel, bool AbilityTargetCanBeHitMultipleTimesByThisSelection, bool ForceDebugFreezeFrameForThisSpecificTargeting, bool* HitAbilityTargetRightNow, bool* HitAbilityTargetDuringThisAbilityActivation, TArray<class AActor*>* ActorsWeHaveHitDuringThisAbilityActivation, TArray<class AActor*>* ActorsHitWithThisSpecificTargetSelection);
	void NPC_ApplyGameplayEffectWithMMRScaling(class UClass* GameplayEffectClass, class AActor* Actor);
	void NPC_AttemptBuildFrustrationDueToGoal(const class FString& Reason);
	void NPC_AttemptBuildFrustrationDueToMovement(const class FString& Reason);
	void NPC_ClearFrustrationTagsForGoals(const class FString& Reason);
	void NPC_ClearFrustrationTagsForMovement(const class FString& Reason);
	void NPC_DebugFreezeFrame(bool ForceDebugFreezeFrame, bool HitAbilityTargetRightNow, bool HitAbilityTargetDuringThisAbilityActivation, TArray<class AActor*>& ActorsWeHaveHitDuringThisAbilityActivation, TArray<class AActor*>& ActorsHitWithThisSpecificTargetSelection);
	void NPC_DoIntentionalFailedAttack(bool* DoIntentionalFailedAttack);
	void NPC_EQS_Results(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus, EEnvQueryRunMode EQS_RunMode, bool NumReturnedItemsIsImportant, TArray<class AActor*>* ResultActors, int32* NumValidActorsGenerated, bool* ResultActorsSuccess, TArray<struct FVector>* ResultLocations, int32* NumValidLocationsGenerated, bool* ResultLocationsSuccess, class UEnvQueryInstanceBlueprintWrapper** QueryInstanceOut, EEnvQueryStatus* QueryStatusOut);
	void NPC_GenerateLaunchVelocityWithMinimumAngle(class AActor* ActorWeWantToLaunch, bool Vehicle, struct FVector* LaunchVelocity, class AActor** LaunchActor, bool* LaunchingVehicle);
	class UObject* NPC_GetGoalActor();
	void NPC_GetScalableFloatHotfixValue(const struct FScalableFloat& ScalableFloatHotfix, double AtLevel, bool* AsBool, int32* AsIntRounded, double* AsFloat);
	void NPC_IsMontageInfoValid(const struct FFortGameplayAbilityMontageInfo& MontageInfo_0, bool* IsValid_);
	void NPC_OverrideRotationRate(const struct FScalableFloat& RotationRate);
	void NPC_ResetRotationRate();
	void NPC_ScalableFloatIsValid(const struct FScalableFloat& ScalableFloat, bool* Valid);
	void NPC_SetAlertLevel(Enum_NPC_AlertLevel NPC_AlertLevel, Enum_NPC_ModifyAlertLevelReason Reason);
	void NPC_SetAlertLevelByAIAbilityTargetType();
	void NPC_SetupAbility();
	void NPC_TryResetMovementUrgency();
	void NPC_TrySetMovementUrgency(EFortMovementUrgency MovementUrgency, bool TryResetUrgencyIfInvalid);
	bool NPC_Validate_Can_Knockback_Pawn(bool HitWasVehicle);
	void Targeted_13B12ED64A3570FC1E117FAC4E3F7961(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Targeted_4BB5000E4F2C1DAB20E4FFAAA97E1368(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_NPC_Parent_C">();
	}
	static class UGA_NPC_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_NPC_Parent_C>();
	}
};
static_assert(alignof(UGA_NPC_Parent_C) == 0x000008, "Wrong alignment on UGA_NPC_Parent_C");
static_assert(sizeof(UGA_NPC_Parent_C) == 0x000EA0, "Wrong size on UGA_NPC_Parent_C");
static_assert(offsetof(UGA_NPC_Parent_C, UberGraphFrame) == 0x000B60, "Member 'UGA_NPC_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_ActivatingFortAIPawn) == 0x000B68, "Member 'UGA_NPC_Parent_C::NPC_ActivatingFortAIPawn' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_InitialMovementUrgency) == 0x000B70, "Member 'UGA_NPC_Parent_C::NPC_InitialMovementUrgency' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DebugAbility) == 0x000B71, "Member 'UGA_NPC_Parent_C::NPC_DebugAbility' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_IgnoreDamageAndOnlyDoKnockbackIfTheseAbilitiesAreActive) == 0x000B78, "Member 'UGA_NPC_Parent_C::NPC_IgnoreDamageAndOnlyDoKnockbackIfTheseAbilitiesAreActive' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DebugFreezeFrameEnabled) == 0x000B98, "Member 'UGA_NPC_Parent_C::NPC_DebugFreezeFrameEnabled' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DebugFreezeFrameOnlyWhenAbilityTargetHit) == 0x000B99, "Member 'UGA_NPC_Parent_C::NPC_DebugFreezeFrameOnlyWhenAbilityTargetHit' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DebugFreezeFrameOnlyWhenWeHaveSomeTarget) == 0x000B9A, "Member 'UGA_NPC_Parent_C::NPC_DebugFreezeFrameOnlyWhenWeHaveSomeTarget' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageHitAbilityTargetDuringThisAbilityActivation) == 0x000B9B, "Member 'UGA_NPC_Parent_C::NPC_DamageHitAbilityTargetDuringThisAbilityActivation' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageActorsWeHaveHitDuringThisAbilityActivation) == 0x000BA0, "Member 'UGA_NPC_Parent_C::NPC_DamageActorsWeHaveHitDuringThisAbilityActivation' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeNeutral) == 0x000BB0, "Member 'UGA_NPC_Parent_C::NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeNeutral' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeFriendly) == 0x000BB1, "Member 'UGA_NPC_Parent_C::NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeFriendly' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeHostile) == 0x000BB2, "Member 'UGA_NPC_Parent_C::NPC_CanActivateAbility_AbilityTargetTeamAffiliationCanBeHostile' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_CanActivateAbility_MaxTargetZDistanceBelow) == 0x000BB8, "Member 'UGA_NPC_Parent_C::NPC_CanActivateAbility_MaxTargetZDistanceBelow' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_CanActivateAbility_MaxTargetZDistanceAbove) == 0x000BC0, "Member 'UGA_NPC_Parent_C::NPC_CanActivateAbility_MaxTargetZDistanceAbove' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_CanActivateAbility_MaxTargetZDistanceAbove_ForIntentionalFailedAttack) == 0x000BC8, "Member 'UGA_NPC_Parent_C::NPC_CanActivateAbility_MaxTargetZDistanceAbove_ForIntentionalFailedAttack' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, BuildingTargetingHitActors) == 0x000BD0, "Member 'UGA_NPC_Parent_C::BuildingTargetingHitActors' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TC_NPC_FrustrationTagsToClearForGoals) == 0x000BE0, "Member 'UGA_NPC_Parent_C::TC_NPC_FrustrationTagsToClearForGoals' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_AlertLevelGoalIsFortPawn) == 0x000C00, "Member 'UGA_NPC_Parent_C::NPC_AlertLevelGoalIsFortPawn' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_AlertLevelGoalIsOther) == 0x000C01, "Member 'UGA_NPC_Parent_C::NPC_AlertLevelGoalIsOther' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_AlertLevelGoalIsNotValid) == 0x000C02, "Member 'UGA_NPC_Parent_C::NPC_AlertLevelGoalIsNotValid' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageKnockbackVelocityHF) == 0x000C08, "Member 'UGA_NPC_Parent_C::NPC_DamageKnockbackVelocityHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageKnockbackVerticalAngleHF) == 0x000C30, "Member 'UGA_NPC_Parent_C::NPC_DamageKnockbackVerticalAngleHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageKnockbackMinimumYawValueHF) == 0x000C58, "Member 'UGA_NPC_Parent_C::NPC_DamageKnockbackMinimumYawValueHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageCanAttackDBNOPlayersHF) == 0x000C80, "Member 'UGA_NPC_Parent_C::NPC_DamageCanAttackDBNOPlayersHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageKnockbackVelocityVehicleHF) == 0x000CA8, "Member 'UGA_NPC_Parent_C::NPC_DamageKnockbackVelocityVehicleHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageKnockbackVerticalAngleVehicleHF) == 0x000CD0, "Member 'UGA_NPC_Parent_C::NPC_DamageKnockbackVerticalAngleVehicleHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageKnockbackMinimumYawValueVehicleHF) == 0x000CF8, "Member 'UGA_NPC_Parent_C::NPC_DamageKnockbackMinimumYawValueVehicleHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_DamageChanceToEjectFromVehicleHF) == 0x000D20, "Member 'UGA_NPC_Parent_C::NPC_DamageChanceToEjectFromVehicleHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, DestroyBuildingGC) == 0x000D48, "Member 'UGA_NPC_Parent_C::DestroyBuildingGC' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, DestroyBuildingGE) == 0x000D50, "Member 'UGA_NPC_Parent_C::DestroyBuildingGE' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TC_NPC_FrustrationTagsToClearForMovement) == 0x000D58, "Member 'UGA_NPC_Parent_C::TC_NPC_FrustrationTagsToClearForMovement' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TC_NPC_FrustrationBuildDueToGoal) == 0x000D78, "Member 'UGA_NPC_Parent_C::TC_NPC_FrustrationBuildDueToGoal' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TC_NPC_FrustrationBuildDueToMovement) == 0x000D7C, "Member 'UGA_NPC_Parent_C::TC_NPC_FrustrationBuildDueToMovement' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TQ_NPC_RequirementsToBuildFrustrationDueToGoal) == 0x000D80, "Member 'UGA_NPC_Parent_C::TQ_NPC_RequirementsToBuildFrustrationDueToGoal' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TQ_NPC_RequirementsToBuildFrustrationDueToMovement) == 0x000DC8, "Member 'UGA_NPC_Parent_C::TQ_NPC_RequirementsToBuildFrustrationDueToMovement' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_BodyBumpBuildingsWhenBuildingMovementFrustrationHF) == 0x000E10, "Member 'UGA_NPC_Parent_C::NPC_BodyBumpBuildingsWhenBuildingMovementFrustrationHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, NPC_FrustrationBodyBumpOnlyDestroyPlayerBuildingsHF) == 0x000E38, "Member 'UGA_NPC_Parent_C::NPC_FrustrationBodyBumpOnlyDestroyPlayerBuildingsHF' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TC_NPC_EffectContainer_BodyBumpBuildingsWhenBuildingMovementFrustration) == 0x000E60, "Member 'UGA_NPC_Parent_C::TC_NPC_EffectContainer_BodyBumpBuildingsWhenBuildingMovementFrustration' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, BuildingTargetingTargetData) == 0x000E68, "Member 'UGA_NPC_Parent_C::BuildingTargetingTargetData' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, BuildingTargetingApplicationTag) == 0x000E90, "Member 'UGA_NPC_Parent_C::BuildingTargetingApplicationTag' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, TC_BuildingTypePlayer) == 0x000E94, "Member 'UGA_NPC_Parent_C::TC_BuildingTypePlayer' has a wrong offset!");
static_assert(offsetof(UGA_NPC_Parent_C, GE_NPC_MMR_Scaling_AbilityCooldown) == 0x000E98, "Member 'UGA_NPC_Parent_C::GE_NPC_MMR_Scaling_AbilityCooldown' has a wrong offset!");

}

