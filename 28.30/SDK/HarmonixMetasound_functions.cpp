#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixMetasound

#include "Basic.hpp"

#include "HarmonixMetasound_classes.hpp"
#include "HarmonixMetasound_parameters.hpp"


namespace SDK
{

// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.GetChannel
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMidiEventInfo                   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMidiEventInfoBlueprintLibrary::GetChannel(const struct FMidiEventInfo& Event)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetChannel");

	Params::MidiEventInfoBlueprintLibrary_GetChannel Parms{};

	Parms.Event = std::move(Event);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.GetMidiEventInfo
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMidiEventInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMidiEventInfo UMidiEventInfoBlueprintLibrary::GetMidiEventInfo(const struct FMetaSoundOutput& Output, bool* Success)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMidiEventInfo");

	Params::MidiEventInfoBlueprintLibrary_GetMidiEventInfo Parms{};

	Parms.Output = std::move(Output);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.GetNoteNumber
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMidiEventInfo                   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMidiEventInfoBlueprintLibrary::GetNoteNumber(const struct FMidiEventInfo& Event)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetNoteNumber");

	Params::MidiEventInfoBlueprintLibrary_GetNoteNumber Parms{};

	Parms.Event = std::move(Event);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.GetVelocity
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMidiEventInfo                   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMidiEventInfoBlueprintLibrary::GetVelocity(const struct FMidiEventInfo& Event)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetVelocity");

	Params::MidiEventInfoBlueprintLibrary_GetVelocity Parms{};

	Parms.Event = std::move(Event);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.IsMidiEventInfo
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiEventInfoBlueprintLibrary::IsMidiEventInfo(const struct FMetaSoundOutput& Output)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsMidiEventInfo");

	Params::MidiEventInfoBlueprintLibrary_IsMidiEventInfo Parms{};

	Parms.Output = std::move(Output);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.IsNote
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMidiEventInfo                   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiEventInfoBlueprintLibrary::IsNote(const struct FMidiEventInfo& Event)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsNote");

	Params::MidiEventInfoBlueprintLibrary_IsNote Parms{};

	Parms.Event = std::move(Event);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.IsNoteOff
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMidiEventInfo                   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiEventInfoBlueprintLibrary::IsNoteOff(const struct FMidiEventInfo& Event)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsNoteOff");

	Params::MidiEventInfoBlueprintLibrary_IsNoteOff Parms{};

	Parms.Event = std::move(Event);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiEventInfoBlueprintLibrary.IsNoteOn
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMidiEventInfo                   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiEventInfoBlueprintLibrary::IsNoteOn(const struct FMidiEventInfo& Event)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsNoteOn");

	Params::MidiEventInfoBlueprintLibrary_IsNoteOn Parms{};

	Parms.Event = std::move(Event);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.DisableRowsAbove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FirstDisabledRow                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMidiStepSequence::DisableRowsAbove(int32 FirstDisabledRow)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DisableRowsAbove");

	Params::MidiStepSequence_DisableRowsAbove Parms{};

	Parms.FirstDisabledRow = FirstDisabledRow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MidiStepSequence.GetCell
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::GetCell(int32 Row, int32 Column)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCell");

	Params::MidiStepSequence_GetCell Parms{};

	Parms.Row = Row;
	Parms.Column = Column;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.GetCellOnPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::GetCellOnPage(int32 Page, int32 Row, int32 Column)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCellOnPage");

	Params::MidiStepSequence_GetCellOnPage Parms{};

	Parms.Page = Page;
	Parms.Row = Row;
	Parms.Column = Column;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetCell
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::SetCell(int32 Row, int32 Column, bool State)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCell");

	Params::MidiStepSequence_SetCell Parms{};

	Parms.Row = Row;
	Parms.Column = Column;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetCellContinuation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::SetCellContinuation(int32 Row, int32 Column, bool bState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCellContinuation");

	Params::MidiStepSequence_SetCellContinuation Parms{};

	Parms.Row = Row;
	Parms.Column = Column;
	Parms.bState = bState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetCellContinuationOnPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::SetCellContinuationOnPage(int32 Page, int32 Row, int32 Column, bool bState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCellContinuationOnPage");

	Params::MidiStepSequence_SetCellContinuationOnPage Parms{};

	Parms.Page = Page;
	Parms.Row = Row;
	Parms.Column = Column;
	Parms.bState = bState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetCellOnPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::SetCellOnPage(int32 Page, int32 Row, int32 Column, bool State)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCellOnPage");

	Params::MidiStepSequence_SetCellOnPage Parms{};

	Parms.Page = Page;
	Parms.Row = Row;
	Parms.Column = Column;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetNumColumns
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMidiStepSequence::SetNumColumns(int32 Count)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNumColumns");

	Params::MidiStepSequence_SetNumColumns Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MidiStepSequence.SetNumPages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMidiStepSequence::SetNumPages(int32 Count)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNumPages");

	Params::MidiStepSequence_SetNumPages Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MidiStepSequence.SetNumRows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMidiStepSequence::SetNumRows(int32 Count)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetNumRows");

	Params::MidiStepSequence_SetNumRows Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MidiStepSequence.SetRowNoteNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RowIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MidiNoteNumber                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiStepSequence::SetRowNoteNumber(int32 RowIndex, int32 MidiNoteNumber)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRowNoteNumber");

	Params::MidiStepSequence_SetRowNoteNumber Parms{};

	Parms.RowIndex = RowIndex;
	Parms.MidiNoteNumber = MidiNoteNumber;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetRowVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RowIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MidiVelocoty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiStepSequence::SetRowVelocity(int32 RowIndex, int32 MidiVelocoty)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRowVelocity");

	Params::MidiStepSequence_SetRowVelocity Parms{};

	Parms.RowIndex = RowIndex;
	Parms.MidiVelocoty = MidiVelocoty;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetStepSkipIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   StepIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMidiStepSequence::SetStepSkipIndex(int32 StepIndex)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetStepSkipIndex");

	Params::MidiStepSequence_SetStepSkipIndex Parms{};

	Parms.StepIndex = StepIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.SetStepTable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FStepSequenceTable               NewStepTable                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMidiStepSequence::SetStepTable(const struct FStepSequenceTable& NewStepTable)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetStepTable");

	Params::MidiStepSequence_SetStepTable Parms{};

	Parms.NewStepTable = std::move(NewStepTable);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MidiStepSequence.ToggleCell
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::ToggleCell(int32 Row, int32 Column)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleCell");

	Params::MidiStepSequence_ToggleCell Parms{};

	Parms.Row = Row;
	Parms.Column = Column;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.ToggleCellOnPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStepSequenceCell                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStepSequenceCell UMidiStepSequence::ToggleCellOnPage(int32 Page, int32 Row, int32 Column)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ToggleCellOnPage");

	Params::MidiStepSequence_ToggleCellOnPage Parms{};

	Parms.Page = Page;
	Parms.Row = Row;
	Parms.Column = Column;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MidiStepSequence.GetStepTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FStepSequenceTable         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FStepSequenceTable UMidiStepSequence::GetStepTable() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetStepTable");

	Params::MidiStepSequence_GetStepTable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.SetMusicLoopConfiguration
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicLoopConfiguration          Value                                                  (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ESetParamResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OnlyIfExists                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicParameterBlueprintLibrary::SetMusicLoopConfiguration(class UMetasoundParameterPack* Target, class FName ParameterName, struct FMusicLoopConfiguration& Value, ESetParamResult* Result, bool OnlyIfExists)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("SetMusicLoopConfiguration");

	Params::MusicParameterBlueprintLibrary_SetMusicLoopConfiguration Parms{};

	Parms.Target = Target;
	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);
	Parms.OnlyIfExists = OnlyIfExists;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	Value = std::move(Parms.Value);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.SetMusicSeekRequest
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicSeekRequest                Value                                                  (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ESetParamResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OnlyIfExists                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicParameterBlueprintLibrary::SetMusicSeekRequest(class UMetasoundParameterPack* Target, class FName ParameterName, struct FMusicSeekRequest& Value, ESetParamResult* Result, bool OnlyIfExists)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("SetMusicSeekRequest");

	Params::MusicParameterBlueprintLibrary_SetMusicSeekRequest Parms{};

	Parms.Target = Target;
	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);
	Parms.OnlyIfExists = OnlyIfExists;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	Value = std::move(Parms.Value);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.SetMusicTimestamp
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicTimestamp                  Value                                                  (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ESetParamResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OnlyIfExists                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicParameterBlueprintLibrary::SetMusicTimestamp(class UMetasoundParameterPack* Target, class FName ParameterName, struct FMusicTimestamp& Value, ESetParamResult* Result, bool OnlyIfExists)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("SetMusicTimestamp");

	Params::MusicParameterBlueprintLibrary_SetMusicTimestamp Parms{};

	Parms.Target = Target;
	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);
	Parms.OnlyIfExists = OnlyIfExists;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	Value = std::move(Parms.Value);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.GetMusicLoopConfiguration
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetParamResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicLoopConfiguration          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMusicLoopConfiguration UMusicParameterBlueprintLibrary::GetMusicLoopConfiguration(class UMetasoundParameterPack* Target, class FName ParameterName, ESetParamResult* Result)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicLoopConfiguration");

	Params::MusicParameterBlueprintLibrary_GetMusicLoopConfiguration Parms{};

	Parms.Target = Target;
	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.GetMusicSeekRequest
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetParamResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicSeekRequest                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMusicSeekRequest UMusicParameterBlueprintLibrary::GetMusicSeekRequest(class UMetasoundParameterPack* Target, class FName ParameterName, ESetParamResult* Result)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicSeekRequest");

	Params::MusicParameterBlueprintLibrary_GetMusicSeekRequest Parms{};

	Parms.Target = Target;
	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.GetMusicTimestamp
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetParamResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicTimestamp                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMusicTimestamp UMusicParameterBlueprintLibrary::GetMusicTimestamp(class UMetasoundParameterPack* Target, class FName ParameterName, ESetParamResult* Result)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMusicTimestamp");

	Params::MusicParameterBlueprintLibrary_GetMusicTimestamp Parms{};

	Parms.Target = Target;
	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.HasMusicLoopConfiguration
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicParameterBlueprintLibrary::HasMusicLoopConfiguration(class UMetasoundParameterPack* Target, class FName Name_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasMusicLoopConfiguration");

	Params::MusicParameterBlueprintLibrary_HasMusicLoopConfiguration Parms{};

	Parms.Target = Target;
	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.HasMusicSeekRequest
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicParameterBlueprintLibrary::HasMusicSeekRequest(class UMetasoundParameterPack* Target, class FName Name_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasMusicSeekRequest");

	Params::MusicParameterBlueprintLibrary_HasMusicSeekRequest Parms{};

	Parms.Target = Target;
	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicParameterBlueprintLibrary.HasMusicTimestamp
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UMetasoundParameterPack*          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicParameterBlueprintLibrary::HasMusicTimestamp(class UMetasoundParameterPack* Target, class FName Name_0)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HasMusicTimestamp");

	Params::MusicParameterBlueprintLibrary_HasMusicTimestamp Parms{};

	Parms.Target = Target;
	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTimestampBlueprintLibrary.GetMusicTimestamp
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicTimestamp                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMusicTimestamp UMusicTimestampBlueprintLibrary::GetMusicTimestamp(const struct FMetaSoundOutput& Output, bool* Success)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetMusicTimestamp");

	Params::MusicTimestampBlueprintLibrary_GetMusicTimestamp Parms{};

	Parms.Output = std::move(Output);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTimestampBlueprintLibrary.IsMusicTimestamp
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicTimestampBlueprintLibrary::IsMusicTimestamp(const struct FMetaSoundOutput& Output)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsMusicTimestamp");

	Params::MusicTimestampBlueprintLibrary_IsMusicTimestamp Parms{};

	Parms.Output = std::move(Output);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.TimeSignatureBlueprintLibrary.GetTimeSignature
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimeSignature                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTimeSignature UTimeSignatureBlueprintLibrary::GetTimeSignature(const struct FMetaSoundOutput& Output, bool* Success)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("GetTimeSignature");

	Params::TimeSignatureBlueprintLibrary_GetTimeSignature Parms{};

	Parms.Output = std::move(Output);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.TimeSignatureBlueprintLibrary.IsTimeSignature
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMetaSoundOutput                 Output                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTimeSignatureBlueprintLibrary::IsTimeSignature(const struct FMetaSoundOutput& Output)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("IsTimeSignature");

	Params::TimeSignatureBlueprintLibrary_IsTimeSignature Parms{};

	Parms.Output = std::move(Output);

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.CreateMetasoundDrivenMusicClock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  InAudioComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MetasoundOuputPinName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Start_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* UMusicClockComponent::CreateMetasoundDrivenMusicClock(class UObject* WorldContextObject, class UAudioComponent* InAudioComponent, class FName MetasoundOuputPinName, bool Start_0)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("CreateMetasoundDrivenMusicClock");

	Params::MusicClockComponent_CreateMetasoundDrivenMusicClock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InAudioComponent = InAudioComponent;
	Parms.MetasoundOuputPinName = MetasoundOuputPinName;
	Parms.Start_0 = Start_0;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.CreateWallClockDrivenMusicClock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMidiFile*                        WithTempoMap                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Start_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* UMusicClockComponent::CreateWallClockDrivenMusicClock(class UObject* WorldContextObject, class UMidiFile* WithTempoMap, bool Start_0)
{
	static class UFunction* Func = nullptr;
	class UClass* StaticClss = StaticClass();

	if (Func == nullptr)
		Func = StaticClss->FindFunction("CreateWallClockDrivenMusicClock");

	Params::MusicClockComponent_CreateWallClockDrivenMusicClock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WithTempoMap = WithTempoMap;
	Parms.Start_0 = Start_0;

	StaticClss->DefaultObject->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.ConnectToMetasoundOnAudioComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  InAudioComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicClockComponent::ConnectToMetasoundOnAudioComponent(class UAudioComponent* InAudioComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToMetasoundOnAudioComponent");

	Params::MusicClockComponent_ConnectToMetasoundOnAudioComponent Parms{};

	Parms.InAudioComponent = InAudioComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.ConnectToWallClockForMidi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMidiFile*                        InTempoMap                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicClockComponent::ConnectToWallClockForMidi(class UMidiFile* InTempoMap)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ConnectToWallClockForMidi");

	Params::MusicClockComponent_ConnectToWallClockForMidi Parms{};

	Parms.InTempoMap = InTempoMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MusicClockComponent.Continue
// (Final, Native, Public, BlueprintCallable)

void UMusicClockComponent::Continue()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Continue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HarmonixMetasound.MusicClockComponent.Pause
// (Final, Native, Public, BlueprintCallable)

void UMusicClockComponent::Pause()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Pause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HarmonixMetasound.MusicClockComponent.Start
// (Final, Native, Public, BlueprintCallable)

void UMusicClockComponent::Start()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HarmonixMetasound.MusicClockComponent.Stop
// (Final, Native, Public, BlueprintCallable)

void UMusicClockComponent::Stop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HarmonixMetasound.MusicClockComponent.BarToMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Bar                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::BarToMs(float Bar) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BarToMs");

	Params::MusicClockComponent_BarToMs Parms{};

	Parms.Bar = Bar;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.BeatToMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Beat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::BeatToMs(float Beat) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BeatToMs");

	Params::MusicClockComponent_BeatToMs Parms{};

	Parms.Beat = Beat;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetBarsIncludingCountIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetBarsIncludingCountIn(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBarsIncludingCountIn");

	Params::MusicClockComponent_GetBarsIncludingCountIn Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetBeatInBarAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetBeatInBarAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBeatInBarAtMs");

	Params::MusicClockComponent_GetBeatInBarAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetBeatsIncludingCountIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetBeatsIncludingCountIn(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBeatsIncludingCountIn");

	Params::MusicClockComponent_GetBeatsIncludingCountIn Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCountInSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetCountInSeconds() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCountInSeconds");

	Params::MusicClockComponent_GetCountInSeconds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentPlayerExperiencedSongPos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMidiSongPos                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMidiSongPos UMusicClockComponent::GetCurrentPlayerExperiencedSongPos() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPlayerExperiencedSongPos");

	Params::MusicClockComponent_GetCurrentPlayerExperiencedSongPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentSectionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMusicClockComponent::GetCurrentSectionIndex(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSectionIndex");

	Params::MusicClockComponent_GetCurrentSectionIndex Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentSectionLengthMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetCurrentSectionLengthMs(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSectionLengthMs");

	Params::MusicClockComponent_GetCurrentSectionLengthMs Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentSectionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMusicClockComponent::GetCurrentSectionName(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSectionName");

	Params::MusicClockComponent_GetCurrentSectionName Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentSectionStartMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetCurrentSectionStartMs(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSectionStartMs");

	Params::MusicClockComponent_GetCurrentSectionStartMs Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentSmoothedAudioRenderSongPos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMidiSongPos                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMidiSongPos UMusicClockComponent::GetCurrentSmoothedAudioRenderSongPos() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSmoothedAudioRenderSongPos");

	Params::MusicClockComponent_GetCurrentSmoothedAudioRenderSongPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentTimestamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMusicTimestamp                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMusicTimestamp UMusicClockComponent::GetCurrentTimestamp(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentTimestamp");

	Params::MusicClockComponent_GetCurrentTimestamp Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetCurrentVideoRenderSongPos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMidiSongPos                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMidiSongPos UMusicClockComponent::GetCurrentVideoRenderSongPos() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentVideoRenderSongPos");

	Params::MusicClockComponent_GetCurrentVideoRenderSongPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDeltaBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDeltaBar(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDeltaBar");

	Params::MusicClockComponent_GetDeltaBar Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDeltaBeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDeltaBeat(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDeltaBeat");

	Params::MusicClockComponent_GetDeltaBeat Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDistanceFromCurrentBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDistanceFromCurrentBar(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDistanceFromCurrentBar");

	Params::MusicClockComponent_GetDistanceFromCurrentBar Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDistanceFromCurrentBeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDistanceFromCurrentBeat(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDistanceFromCurrentBeat");

	Params::MusicClockComponent_GetDistanceFromCurrentBeat Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDistanceToClosestBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDistanceToClosestBar(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDistanceToClosestBar");

	Params::MusicClockComponent_GetDistanceToClosestBar Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDistanceToClosestBeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDistanceToClosestBeat(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDistanceToClosestBeat");

	Params::MusicClockComponent_GetDistanceToClosestBeat Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDistanceToNextBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDistanceToNextBar(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDistanceToNextBar");

	Params::MusicClockComponent_GetDistanceToNextBar Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetDistanceToNextBeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetDistanceToNextBeat(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDistanceToNextBeat");

	Params::MusicClockComponent_GetDistanceToNextBeat Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetMsPerBarAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetMsPerBarAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMsPerBarAtMs");

	Params::MusicClockComponent_GetMsPerBarAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetMsPerBeatAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetMsPerBeatAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMsPerBeatAtMs");

	Params::MusicClockComponent_GetMsPerBeatAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetNumBeatsInBarAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetNumBeatsInBarAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumBeatsInBarAtMs");

	Params::MusicClockComponent_GetNumBeatsInBarAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetNumSections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMusicClockComponent::GetNumSections() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumSections");

	Params::MusicClockComponent_GetNumSections Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSecondsFromBarOne
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSecondsFromBarOne(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSecondsFromBarOne");

	Params::MusicClockComponent_GetSecondsFromBarOne Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSecondsIncludingCountIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSecondsIncludingCountIn(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSecondsIncludingCountIn");

	Params::MusicClockComponent_GetSecondsIncludingCountIn Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSectionEndMsAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSectionEndMsAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSectionEndMsAtMs");

	Params::MusicClockComponent_GetSectionEndMsAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSectionLengthMsAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSectionLengthMsAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSectionLengthMsAtMs");

	Params::MusicClockComponent_GetSectionLengthMsAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSectionNameAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMusicClockComponent::GetSectionNameAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSectionNameAtMs");

	Params::MusicClockComponent_GetSectionNameAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSectionStartMsAtMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Ms                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSectionStartMsAtMs(float Ms) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSectionStartMsAtMs");

	Params::MusicClockComponent_GetSectionStartMsAtMs Parms{};

	Parms.Ms = Ms;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSongLengthBars
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMusicClockComponent::GetSongLengthBars() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongLengthBars");

	Params::MusicClockComponent_GetSongLengthBars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSongLengthBeats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSongLengthBeats() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongLengthBeats");

	Params::MusicClockComponent_GetSongLengthBeats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSongLengthMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSongLengthMs() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongLengthMs");

	Params::MusicClockComponent_GetSongLengthMs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSongPos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMidiSongPos               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMidiSongPos UMusicClockComponent::GetSongPos(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongPos");

	Params::MusicClockComponent_GetSongPos Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSongRemainingMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::GetSongRemainingMs(ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongRemainingMs");

	Params::MusicClockComponent_GetSongRemainingMs Parms{};

	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetSongSections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FSongSection>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FSongSection> UMusicClockComponent::GetSongSections() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongSections");

	Params::MusicClockComponent_GetSongSections Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMusicClockState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMusicClockState UMusicClockComponent::GetState() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetState");

	Params::MusicClockComponent_GetState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.MeasureSpanProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMusicalTimeSpan                 Span                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ECalibratedMusicTimebase                Timebase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::MeasureSpanProgress(const struct FMusicalTimeSpan& Span, ECalibratedMusicTimebase Timebase) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("MeasureSpanProgress");

	Params::MusicClockComponent_MeasureSpanProgress Parms{};

	Parms.Span = std::move(Span);
	Parms.Timebase = Timebase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicClockComponent.TickToMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Tick                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicClockComponent::TickToMs(float Tick) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("TickToMs");

	Params::MusicClockComponent_TickToMs Parms{};

	Parms.Tick = Tick;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.SetClock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicClockComponent*             InClockComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicTempometerComponent::SetClock(class UMusicClockComponent* InClockComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetClock");

	Params::MusicTempometerComponent_SetClock Parms{};

	Parms.InClockComponent = InClockComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MusicTempometerComponent.SetClockFromActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicTempometerComponent::SetClockFromActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetClockFromActor");

	Params::MusicTempometerComponent_SetClockFromActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MusicTempometerComponent.SetMaterialParameterCollection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialParameterCollection*     InMaterialParameterCollection                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMusicTempometerComponent::SetMaterialParameterCollection(class UMaterialParameterCollection* InMaterialParameterCollection)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetMaterialParameterCollection");

	Params::MusicTempometerComponent_SetMaterialParameterCollection Parms{};

	Parms.InMaterialParameterCollection = InMaterialParameterCollection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HarmonixMetasound.MusicTempometerComponent.GetBarProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetBarProgress() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBarProgress");

	Params::MusicTempometerComponent_GetBarProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetBarsIncludingCountIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetBarsIncludingCountIn() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBarsIncludingCountIn");

	Params::MusicTempometerComponent_GetBarsIncludingCountIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetBeatProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetBeatProgress() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBeatProgress");

	Params::MusicTempometerComponent_GetBeatProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetBeatsIncludingCountIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetBeatsIncludingCountIn() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetBeatsIncludingCountIn");

	Params::MusicTempometerComponent_GetBeatsIncludingCountIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetClock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UMusicClockComponent*       ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UMusicClockComponent* UMusicTempometerComponent::GetClock() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClock");

	Params::MusicTempometerComponent_GetClock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetClockNoMutex
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UMusicClockComponent*       ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UMusicClockComponent* UMusicTempometerComponent::GetClockNoMutex() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetClockNoMutex");

	Params::MusicTempometerComponent_GetClockNoMutex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetMaterialParameterCollection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialParameterCollection*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialParameterCollection* UMusicTempometerComponent::GetMaterialParameterCollection() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMaterialParameterCollection");

	Params::MusicTempometerComponent_GetMaterialParameterCollection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetSecondsFromBarOne
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetSecondsFromBarOne() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSecondsFromBarOne");

	Params::MusicTempometerComponent_GetSecondsFromBarOne Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetSecondsIncludingCountIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetSecondsIncludingCountIn() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSecondsIncludingCountIn");

	Params::MusicTempometerComponent_GetSecondsIncludingCountIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetSongPos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMidiSongPos               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMidiSongPos UMusicTempometerComponent::GetSongPos() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSongPos");

	Params::MusicTempometerComponent_GetSongPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetTempo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetTempo() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTempo");

	Params::MusicTempometerComponent_GetTempo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetTimeSignatureDenominator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetTimeSignatureDenominator() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTimeSignatureDenominator");

	Params::MusicTempometerComponent_GetTimeSignatureDenominator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetTimeSignatureNumerator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMusicTempometerComponent::GetTimeSignatureNumerator() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTimeSignatureNumerator");

	Params::MusicTempometerComponent_GetTimeSignatureNumerator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HarmonixMetasound.MusicTempometerComponent.GetTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMusicTimestamp                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMusicTimestamp UMusicTempometerComponent::GetTimeStamp() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTimeStamp");

	Params::MusicTempometerComponent_GetTimeStamp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

