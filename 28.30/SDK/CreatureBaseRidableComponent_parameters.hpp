#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreatureBaseRidableComponent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "RidingCodeRuntime_structs.hpp"


namespace SDK::Params
{

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ApplyCollisionResponse
// 0x0048 (0x0048 - 0x0000)
struct CreatureBaseRidableComponent_C_ApplyCollisionResponse final
{
public:
	TArray<ECollisionChannel>                     Channels;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ECollisionResponse                            Response;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_Array_Get_Item;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ApplyCollisionResponse) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ApplyCollisionResponse");
static_assert(sizeof(CreatureBaseRidableComponent_C_ApplyCollisionResponse) == 0x000048, "Wrong size on CreatureBaseRidableComponent_C_ApplyCollisionResponse");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, Channels) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::Channels' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, Response) == 0x000010, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::Response' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, Temp_int_Array_Index_Variable) == 0x000014, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_Array_Get_Item) == 0x00001C, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyCollisionResponse, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000041, "Member 'CreatureBaseRidableComponent_C_ApplyCollisionResponse::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ApplyGEToSelf
// 0x0030 (0x0030 - 0x0000)
struct CreatureBaseRidableComponent_C_ApplyGEToSelf final
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsValidClass;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ApplyGEToSelf) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ApplyGEToSelf");
static_assert(sizeof(CreatureBaseRidableComponent_C_ApplyGEToSelf) == 0x000030, "Wrong size on CreatureBaseRidableComponent_C_ApplyGEToSelf");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyGEToSelf, GameplayEffectClass) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ApplyGEToSelf::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyGEToSelf, IsValidClass) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ApplyGEToSelf::IsValidClass' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyGEToSelf, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_ApplyGEToSelf::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyGEToSelf, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_ApplyGEToSelf::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyGEToSelf, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_ApplyGEToSelf::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ApplyGEToSelf, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_ApplyGEToSelf::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.CanJumpExit
// 0x0080 (0x0080 - 0x0000)
struct CreatureBaseRidableComponent_C_CanJumpExit final
{
public:
	bool                                          CanJumpExit_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         JumpExitDurationThreshold;                         // 0x0008(0x0028)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_CanJumpExit) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_CanJumpExit");
static_assert(sizeof(CreatureBaseRidableComponent_C_CanJumpExit) == 0x000080, "Wrong size on CreatureBaseRidableComponent_C_CanJumpExit");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CanJumpExit_0) == 0x000000, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CanJumpExit_0' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, JumpExitDurationThreshold) == 0x000008, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::JumpExitDurationThreshold' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_GetValueAtLevel_ReturnValue) == 0x000034, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_IsFalling_ReturnValue) == 0x000039, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_GetTimeSeconds_ReturnValue) == 0x000040, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_K2_SetTimer_ReturnValue) == 0x000060, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanJumpExit, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000078, "Member 'CreatureBaseRidableComponent_C_CanJumpExit::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.CheatSetStaminaPercent
// 0x0004 (0x0004 - 0x0000)
struct CreatureBaseRidableComponent_C_CheatSetStaminaPercent final
{
public:
	float                                         StaminaPercent;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_CheatSetStaminaPercent) == 0x000004, "Wrong alignment on CreatureBaseRidableComponent_C_CheatSetStaminaPercent");
static_assert(sizeof(CreatureBaseRidableComponent_C_CheatSetStaminaPercent) == 0x000004, "Wrong size on CreatureBaseRidableComponent_C_CheatSetStaminaPercent");
static_assert(offsetof(CreatureBaseRidableComponent_C_CheatSetStaminaPercent, StaminaPercent) == 0x000000, "Member 'CreatureBaseRidableComponent_C_CheatSetStaminaPercent::StaminaPercent' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.CommitEnergyCosts
// 0x0018 (0x0018 - 0x0000)
struct CreatureBaseRidableComponent_C_CommitEnergyCosts final
{
public:
	bool                                          RequireAllEnergy;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EnergyCost;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_CommitEnergyCosts) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_CommitEnergyCosts");
static_assert(sizeof(CreatureBaseRidableComponent_C_CommitEnergyCosts) == 0x000018, "Wrong size on CreatureBaseRidableComponent_C_CommitEnergyCosts");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, RequireAllEnergy) == 0x000000, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::RequireAllEnergy' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, EnergyCost) == 0x000008, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::EnergyCost' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, Success) == 0x000010, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::Success' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000012, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000013, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CommitEnergyCosts, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'CreatureBaseRidableComponent_C_CommitEnergyCosts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ConvertedDispatcher_Event_0
// 0x0010 (0x0010 - 0x0000)
struct CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0 final
{
public:
	bool                                          Converted;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatorPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0");
static_assert(sizeof(CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0) == 0x000010, "Wrong size on CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0");
static_assert(offsetof(CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0, Converted) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0::Converted' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0, InstigatorPawn) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ConvertedDispatcher_Event_0::InstigatorPawn' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.DetermineRateOfChange
// 0x0058 (0x0058 - 0x0000)
struct CreatureBaseRidableComponent_C_DetermineRateOfChange final
{
public:
	double                                        rateOfChange;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvaluateCurveTableRow_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvaluateCurveTableRow_ReturnValue_1;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_RateOfChange_ImplicitCast;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_RateOfChange_ImplicitCast_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_DetermineRateOfChange) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_DetermineRateOfChange");
static_assert(sizeof(CreatureBaseRidableComponent_C_DetermineRateOfChange) == 0x000058, "Wrong size on CreatureBaseRidableComponent_C_DetermineRateOfChange");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, rateOfChange) == 0x000000, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::rateOfChange' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_IsSprinting_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_EvaluateCurveTableRow_OutXY) == 0x00000C, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_EvaluateCurveTableRow_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_EvaluateCurveTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x000014, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_EvaluateCurveTableRow_ReturnValue_1) == 0x000018, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_EvaluateCurveTableRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_IsBeingRidden_ReturnValue) == 0x000019, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_IsBeingRidden_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, K2Node_FunctionResult_RateOfChange_ImplicitCast) == 0x000048, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::K2Node_FunctionResult_RateOfChange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_DetermineRateOfChange, K2Node_FunctionResult_RateOfChange_ImplicitCast_1) == 0x000050, "Member 'CreatureBaseRidableComponent_C_DetermineRateOfChange::K2Node_FunctionResult_RateOfChange_ImplicitCast_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ExecuteUbergraph_CreatureBaseRidableComponent
// 0x07C0 (0x07C0 - 0x0000)
struct CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRiderLocation_Location;                // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_JumpPitchInterpSpeed;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn_1;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_AIPawn;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_InteractingPlayerPawn;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToggleRiding_bChangedRiding;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_Pawn_Wildlife_Parent_C*            K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent;     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ForceTaming_IsTamingEnabled;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_Pawn_Parent_C*                     K2Node_DynamicCast_AsNPC_Pawn_Parent;              // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_UpdateInteract_EnabledInteract;       // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn_2;                // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Converted;                      // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_CustomEvent_InstigatorPawn;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Converted, class AFortPawn* InstigatorPawn)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0170(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0194(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue_1;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestThreshold_crossedThreshold;           // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue_2;              // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue_3;              // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestThreshold_crossedThreshold_1;         // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue_4;              // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_EnergyCost_1;                   // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DetermineRateOfChange_RateOfChange;       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateValue_updatedValue;                 // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateValue_energyDepleted;               // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_9;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn_3;                // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGEToSelf_isValidClass;               // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGEToSelf_isValidClass_1;             // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGEToSelf_isValidClass_2;             // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_10;                  // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_2;                  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_11;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAbilityInputHeld;                    // 0x0228(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bForceCancel;                         // 0x0229(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwimming_IsSwimming;                    // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F[0x1];                                      // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0230(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRidden_ReturnValue_5;              // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerRiderComponent_C*                K2Node_DynamicCast_AsPlayer_Rider_Component;       // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_12;                  // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayTagRemoved*   CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue; // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprintToggleable_ReturnValue;           // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprintToggleable_ReturnValue_1;         // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprintToggleable_ReturnValue_2;         // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26F[0x1];                                      // 0x026F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprintToggleable_ReturnValue_3;         // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_StaminaPercent;                       // 0x0288(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URiderComponent*                        K2Node_Event_Rider;                                // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Energy;                         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWarningActive;                 // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double Energy, bool bIsResting)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x02A4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URiderComponent*                        K2Node_Event_Rider_1;                              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_13;                  // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_EnergyCost;                     // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_14;                  // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ANPC_Pawn_Parent_C*                     K2Node_DynamicCast_AsNPC_Pawn_Parent_1;            // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_Pawn_Parent_C*                     K2Node_DynamicCast_AsNPC_Pawn_Parent_2;            // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_UpdateInteract_EnabledInteract_1;     // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_CanBeInteractedWith_CanInteract;      // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x5];                                      // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_UpdateInteract_EnabledInteract_2;     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue; // 0x031C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_15;                  // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_16;                  // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0343(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_17;                  // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353[0x1];                                      // 0x0353(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0354(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJumpExit_CanJumpExit;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0364(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartSprinting_ReturnValue;            // 0x0373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartSprinting_ReturnValue_1;          // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGEToSelf_isValidClass_3;             // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377[0x1];                                      // 0x0377(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0378(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvaluateCurveTableRow_ReturnValue;        // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B[0x5];                                      // 0x038B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_18;                  // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue;    // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayTagRemoved*   CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue_1; // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x03BC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2[0x6];                                      // 0x03D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_19;                  // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBufferJumpExitToRetryJump_Output;   // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn_4;                // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit_1;                          // 0x03F8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x04E0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_Convert_Jump_Exit_to_Jump_Out;     // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE[0x2];                                      // 0x04EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default;                             // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue_1; // 0x04F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0500(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_1; // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBufferJumpExitToRetryJump_Output_1; // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x2];                                      // 0x05F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x05F4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_2;             // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_602[0x6];                                      // 0x0602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRidingPettingData                     CallFunc_GetPettingData_ReturnValue;               // 0x0608(0x0110)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   K2Node_MakeStruct_CurveTableRowHandle;             // 0x0720(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   K2Node_MakeStruct_CurveTableRowHandle_1;           // 0x0730(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         K2Node_MakeStruct_ScalableFloat;                   // 0x0740(0x0028)()
	struct FScalableFloat                         K2Node_MakeStruct_ScalableFloat_1;                 // 0x0768(0x0028)()
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_currentEnergyValue_ImplicitCast; // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentEnergyRateOfRecharge_ImplicitCast; // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast;  // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast_1; // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent");
static_assert(sizeof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent) == 0x0007C0, "Wrong size on CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, EntryPoint) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsServer_ReturnValue) == 0x000005, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Vector_IsZero_ReturnValue) == 0x000006, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue) == 0x000011, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetRiderLocation_Location) == 0x000018, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetRiderLocation_Location' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000038, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000040, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_3) == 0x000048, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_4) == 0x000049, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x00004A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_2) == 0x00004B, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000050, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_5) == 0x000058, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_6) == 0x000059, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_3) == 0x00005A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_7) == 0x00005B, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_4) == 0x000060, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000068, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_8) == 0x000078, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_VSize2D_ReturnValue) == 0x000080, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_4) == 0x000089, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValidClass_ReturnValue) == 0x00008A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_MakeArray_Array) == 0x000090, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_5) == 0x0000A0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_Pawn) == 0x0000A8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_Pawn_1) == 0x0000B8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_JumpPitchInterpSpeed) == 0x0000C8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_JumpPitchInterpSpeed' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_6) == 0x0000D0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_AIPawn) == 0x0000E8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_7) == 0x0000F8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000100, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_AIPawn_1) == 0x000108, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_AIPawn_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_AIPawn) == 0x000118, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_AIPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_InteractingPlayerPawn) == 0x000120, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_InteractingPlayerPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_8) == 0x000128, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ToggleRiding_bChangedRiding) == 0x000130, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ToggleRiding_bChangedRiding' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent) == 0x000138, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ForceTaming_IsTamingEnabled) == 0x000141, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ForceTaming_IsTamingEnabled' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsNPC_Pawn_Parent) == 0x000148, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsNPC_Pawn_Parent' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_5) == 0x000150, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NPC_UpdateInteract_EnabledInteract) == 0x000151, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NPC_UpdateInteract_EnabledInteract' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_AIPawn_2) == 0x000158, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_AIPawn_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_6) == 0x000160, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000161, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Event_EndPlayReason) == 0x000162, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_Converted) == 0x000163, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_Converted' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_InstigatorPawn) == 0x000168, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_InstigatorPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000170, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetTimeSeconds_ReturnValue) == 0x000180, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000188, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsBeingRidden_ReturnValue) == 0x000190, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsBeingRidden_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_9) == 0x000191, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000194, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsBeingRidden_ReturnValue_1) == 0x0001A0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsBeingRidden_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_TestThreshold_crossedThreshold) == 0x0001A1, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_TestThreshold_crossedThreshold' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsBeingRidden_ReturnValue_2) == 0x0001A2, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsBeingRidden_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsBeingRidden_ReturnValue_3) == 0x0001A3, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsBeingRidden_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_TestThreshold_crossedThreshold_1) == 0x0001A4, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_TestThreshold_crossedThreshold_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsBeingRidden_ReturnValue_4) == 0x0001A5, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsBeingRidden_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x0001A8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_EnergyCost_1) == 0x0001B0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_EnergyCost_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001C0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001C1, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_DetermineRateOfChange_RateOfChange) == 0x0001C8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_DetermineRateOfChange_RateOfChange' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_10) == 0x0001D1, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_UpdateValue_updatedValue) == 0x0001D8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_UpdateValue_updatedValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_UpdateValue_energyDepleted) == 0x0001E0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_UpdateValue_energyDepleted' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanAND_ReturnValue) == 0x0001E1, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_11) == 0x0001E2, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_9) == 0x0001E8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_AIPawn_3) == 0x0001F0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_AIPawn_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_7) == 0x0001F8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F9, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ApplyGEToSelf_isValidClass) == 0x0001FA, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ApplyGEToSelf_isValidClass' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ApplyGEToSelf_isValidClass_1) == 0x0001FB, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ApplyGEToSelf_isValidClass_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ApplyGEToSelf_isValidClass_2) == 0x0001FC, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ApplyGEToSelf_isValidClass_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_12) == 0x0001FD, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_10) == 0x000200, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_13) == 0x000208, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_Pawn_2) == 0x000210, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_Pawn_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_8) == 0x000218, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_11) == 0x000220, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Event_bAbilityInputHeld) == 0x000228, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Event_bAbilityInputHeld' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Event_bForceCancel) == 0x000229, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Event_bForceCancel' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00022A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_14) == 0x00022B, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, Temp_bool_Has_Been_Initd_Variable) == 0x00022C, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_15) == 0x00022D, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsSwimming_IsSwimming) == 0x00022E, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsSwimming_IsSwimming' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000230, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EvaluateCurveTableRow_OutResult) == 0x00023C, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000240, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000244, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000245, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsBeingRidden_ReturnValue_5) == 0x000246, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsBeingRidden_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000247, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsPlayer_Rider_Component) == 0x000248, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsPlayer_Rider_Component' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_9) == 0x000250, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_12) == 0x000258, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue) == 0x000260, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_16) == 0x000268, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsSprintToggleable_ReturnValue) == 0x000269, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsSprintToggleable_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsSprintToggleable_ReturnValue_1) == 0x00026A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsSprintToggleable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x00026B, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_17) == 0x00026C, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsSprintToggleable_ReturnValue_2) == 0x00026D, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsSprintToggleable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Not_PreBool_ReturnValue_2) == 0x00026E, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000270, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000280, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x000281, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsSprintToggleable_ReturnValue_3) == 0x000282, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsSprintToggleable_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanOR_ReturnValue) == 0x000283, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x000284, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Event_StaminaPercent) == 0x000288, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Event_StaminaPercent' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, Temp_bool_IsClosed_Variable) == 0x00028C, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Event_Rider) == 0x000290, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Event_Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_Energy) == 0x000298, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_Energy' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_bWarningActive) == 0x0002A0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_bWarningActive' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002A4, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Event_Rider_1) == 0x0002B0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Event_Rider_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0002B8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_18) == 0x0002B9, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_13) == 0x0002C0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_19) == 0x0002C8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0002D0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_10) == 0x0002D8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_EnergyCost) == 0x0002E0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_EnergyCost' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_14) == 0x0002E8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsNPC_Pawn_Parent_1) == 0x0002F0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsNPC_Pawn_Parent_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_11) == 0x0002F8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsNPC_Pawn_Parent_2) == 0x000300, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsNPC_Pawn_Parent_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_12) == 0x000308, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NPC_UpdateInteract_EnabledInteract_1) == 0x000309, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NPC_UpdateInteract_EnabledInteract_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NPC_CanBeInteractedWith_CanInteract) == 0x00030A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NPC_CanBeInteractedWith_CanInteract' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000310, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_NPC_UpdateInteract_EnabledInteract_2) == 0x000318, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_NPC_UpdateInteract_EnabledInteract_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue) == 0x00031C, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000324, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1) == 0x000328, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_15) == 0x000330, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_16) == 0x000338, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_20) == 0x000340, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_21) == 0x000341, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_5) == 0x000342, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_6) == 0x000343, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_17) == 0x000348, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_22) == 0x000350, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_HasAuthority_ReturnValue_7) == 0x000351, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_23) == 0x000352, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_5) == 0x000354, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_CanJumpExit_CanJumpExit) == 0x000360, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_CanJumpExit_CanJumpExit' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_6) == 0x000364, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_24) == 0x000370, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_25) == 0x000371, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsFalling_ReturnValue) == 0x000372, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_CanStartSprinting_ReturnValue) == 0x000373, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_CanStartSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_CanStartSprinting_ReturnValue_1) == 0x000374, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_CanStartSprinting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ApplyGEToSelf_isValidClass_3) == 0x000375, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ApplyGEToSelf_isValidClass_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000376, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_7) == 0x000378, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x000384, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EvaluateCurveTableRow_ReturnValue) == 0x000388, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EvaluateCurveTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanAND_ReturnValue_3) == 0x000389, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00038A, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_18) == 0x000390, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BooleanAND_ReturnValue_4) == 0x000398, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_WaitGameplayTagAddToActor_ReturnValue) == 0x0003A0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_WaitGameplayTagAddToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_26) == 0x0003A8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue_1) == 0x0003B0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_IsValid_ReturnValue_27) == 0x0003B8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_8) == 0x0003BC, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x0003C8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x0003CC, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003D1, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetOwner_ReturnValue_19) == 0x0003D8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetOwner_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ShouldBufferJumpExitToRetryJump_Output) == 0x0003E0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ShouldBufferJumpExitToRetryJump_Output' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_AsFort_AIPawn_4) == 0x0003E8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_AsFort_AIPawn_4' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_DynamicCast_bSuccess_13) == 0x0003F0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_Hit_1) == 0x0003F8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_9) == 0x0004E0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Should_Convert_Jump_Exit_to_Jump_Out) == 0x0004EC, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Should_Convert_Jump_Exit_to_Jump_Out' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, Temp_bool_Variable) == 0x0004ED, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_Select_Default) == 0x0004F0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue_1) == 0x0004F8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CustomEvent_Hit) == 0x000500, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_1) == 0x0005E8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_ShouldBufferJumpExitToRetryJump_Output_1) == 0x0005F0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_ShouldBufferJumpExitToRetryJump_Output_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetValueAsBool_ReturnValue) == 0x0005F1, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_CreateDelegate_OutputDelegate_10) == 0x0005F4, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetValueAsBool_ReturnValue_1) == 0x000600, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetValueAsBool_ReturnValue_2) == 0x000601, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetValueAsBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetPettingData_ReturnValue) == 0x000608, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetPettingData_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_Not_PreBool_ReturnValue_3) == 0x000718, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_MakeStruct_CurveTableRowHandle) == 0x000720, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_MakeStruct_CurveTableRowHandle' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_MakeStruct_CurveTableRowHandle_1) == 0x000730, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_MakeStruct_CurveTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_MakeStruct_ScalableFloat) == 0x000740, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_MakeStruct_ScalableFloat' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_MakeStruct_ScalableFloat_1) == 0x000768, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_MakeStruct_ScalableFloat_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetValueAtLevel_ReturnValue) == 0x000790, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000794, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_VariableSet_currentEnergyValue_ImplicitCast) == 0x000798, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_VariableSet_currentEnergyValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, K2Node_VariableSet_CurrentEnergyRateOfRecharge_ImplicitCast) == 0x0007A0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::K2Node_VariableSet_CurrentEnergyRateOfRecharge_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0007A8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast) == 0x0007B0, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent, CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast_1) == 0x0007B8, "Member 'CreatureBaseRidableComponent_C_ExecuteUbergraph_CreatureBaseRidableComponent::CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ForceTaming
// 0x0078 (0x0078 - 0x0000)
struct CreatureBaseRidableComponent_C_ForceTaming final
{
public:
	class AActor*                                 PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CreaturePawn;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTamingEnabled;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CreativeAllowTamingTags;                           // 0x0018(0x0020)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ForceTaming) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ForceTaming");
static_assert(sizeof(CreatureBaseRidableComponent_C_ForceTaming) == 0x000078, "Wrong size on CreatureBaseRidableComponent_C_ForceTaming");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, PlayerPawn) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ForceTaming::PlayerPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, CreaturePawn) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ForceTaming::CreaturePawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, IsTamingEnabled) == 0x000010, "Member 'CreatureBaseRidableComponent_C_ForceTaming::IsTamingEnabled' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, CreativeAllowTamingTags) == 0x000018, "Member 'CreatureBaseRidableComponent_C_ForceTaming::CreativeAllowTamingTags' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, Temp_bool_Variable) == 0x000038, "Member 'CreatureBaseRidableComponent_C_ForceTaming::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, K2Node_DynamicCast_AsFort_Pawn) == 0x000040, "Member 'CreatureBaseRidableComponent_C_ForceTaming::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'CreatureBaseRidableComponent_C_ForceTaming::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, K2Node_DynamicCast_AsFort_Pawn_1) == 0x000050, "Member 'CreatureBaseRidableComponent_C_ForceTaming::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'CreatureBaseRidableComponent_C_ForceTaming::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000060, "Member 'CreatureBaseRidableComponent_C_ForceTaming::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'CreatureBaseRidableComponent_C_ForceTaming::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ForceTaming, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000071, "Member 'CreatureBaseRidableComponent_C_ForceTaming::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.GetRiderLocation
// 0x0060 (0x0060 - 0x0000)
struct CreatureBaseRidableComponent_C_GetRiderLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_GetRiderLocation) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_GetRiderLocation");
static_assert(sizeof(CreatureBaseRidableComponent_C_GetRiderLocation) == 0x000060, "Wrong size on CreatureBaseRidableComponent_C_GetRiderLocation");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderLocation, Location) == 0x000000, "Member 'CreatureBaseRidableComponent_C_GetRiderLocation::Location' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderLocation, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_GetRiderLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_GetRiderLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderLocation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_GetRiderLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderLocation, CallFunc_GetOwner_ReturnValue_1) == 0x000040, "Member 'CreatureBaseRidableComponent_C_GetRiderLocation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'CreatureBaseRidableComponent_C_GetRiderLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.GetRidingInfoFromTarget
// 0x0018 (0x0018 - 0x0000)
struct CreatureBaseRidableComponent_C_GetRidingInfoFromTarget final
{
public:
	double                                        JumpAttachGroundHeightMin;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpAttachGroundHeightBuffer;                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesAltRidingMessage;                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_GetRidingInfoFromTarget) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_GetRidingInfoFromTarget");
static_assert(sizeof(CreatureBaseRidableComponent_C_GetRidingInfoFromTarget) == 0x000018, "Wrong size on CreatureBaseRidableComponent_C_GetRidingInfoFromTarget");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingInfoFromTarget, JumpAttachGroundHeightMin) == 0x000000, "Member 'CreatureBaseRidableComponent_C_GetRidingInfoFromTarget::JumpAttachGroundHeightMin' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingInfoFromTarget, JumpAttachGroundHeightBuffer) == 0x000008, "Member 'CreatureBaseRidableComponent_C_GetRidingInfoFromTarget::JumpAttachGroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingInfoFromTarget, UsesAltRidingMessage) == 0x000010, "Member 'CreatureBaseRidableComponent_C_GetRidingInfoFromTarget::UsesAltRidingMessage' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.HandleCancelSprint
// 0x0002 (0x0002 - 0x0000)
struct CreatureBaseRidableComponent_C_HandleCancelSprint final
{
public:
	bool                                          bAbilityInputHeld;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceCancel;                                      // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_HandleCancelSprint) == 0x000001, "Wrong alignment on CreatureBaseRidableComponent_C_HandleCancelSprint");
static_assert(sizeof(CreatureBaseRidableComponent_C_HandleCancelSprint) == 0x000002, "Wrong size on CreatureBaseRidableComponent_C_HandleCancelSprint");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleCancelSprint, bAbilityInputHeld) == 0x000000, "Member 'CreatureBaseRidableComponent_C_HandleCancelSprint::bAbilityInputHeld' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleCancelSprint, bForceCancel) == 0x000001, "Member 'CreatureBaseRidableComponent_C_HandleCancelSprint::bForceCancel' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.HandleEnemyFoleySoundLibrary
// 0x0048 (0x0048 - 0x0000)
struct CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary final
{
public:
	class UActorComponent*                        Rider;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRiding;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundLibrarySubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFootstepComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxFootstepDistance_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary");
static_assert(sizeof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary) == 0x000048, "Wrong size on CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, bIsRiding) == 0x000008, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::bIsRiding' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, K2Node_DynamicCast_AsFort_Pawn) == 0x000028, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue) == 0x000031, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, K2Node_SwitchEnum_CmpSuccess) == 0x000032, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary, K2Node_VariableSet_MaxFootstepDistance_ImplicitCast) == 0x000044, "Member 'CreatureBaseRidableComponent_C_HandleEnemyFoleySoundLibrary::K2Node_VariableSet_MaxFootstepDistance_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.HandleRiderStartedRiding
// 0x0008 (0x0008 - 0x0000)
struct CreatureBaseRidableComponent_C_HandleRiderStartedRiding final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_HandleRiderStartedRiding) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_HandleRiderStartedRiding");
static_assert(sizeof(CreatureBaseRidableComponent_C_HandleRiderStartedRiding) == 0x000008, "Wrong size on CreatureBaseRidableComponent_C_HandleRiderStartedRiding");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleRiderStartedRiding, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_HandleRiderStartedRiding::Rider' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.HandleRiderStoppedRiding
// 0x0008 (0x0008 - 0x0000)
struct CreatureBaseRidableComponent_C_HandleRiderStoppedRiding final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_HandleRiderStoppedRiding) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_HandleRiderStoppedRiding");
static_assert(sizeof(CreatureBaseRidableComponent_C_HandleRiderStoppedRiding) == 0x000008, "Wrong size on CreatureBaseRidableComponent_C_HandleRiderStoppedRiding");
static_assert(offsetof(CreatureBaseRidableComponent_C_HandleRiderStoppedRiding, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_HandleRiderStoppedRiding::Rider' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.JumpFatigue_CheckApplyFatigue
// 0x0028 (0x0028 - 0x0000)
struct CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValueAsInteger_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue; // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue");
static_assert(sizeof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue) == 0x000028, "Wrong size on CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, K2Node_DynamicCast_AsFort_AIPawn) == 0x000008, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_GetValueAsBool_ReturnValue) == 0x000011, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_GetValueAsInteger_ReturnValue) == 0x000014, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_GetValueAsInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue) == 0x00001C, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CheckApplyFatigue::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.JumpFatigue_CountJumps
// 0x0040 (0x0040 - 0x0000)
struct CreatureBaseRidableComponent_C_JumpFatigue_CountJumps final
{
public:
	int32                                         CallFunc_GetActiveGameplayEffectStackCount_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_JumpFatigue_CountJumps");
static_assert(sizeof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps) == 0x000040, "Wrong size on CreatureBaseRidableComponent_C_JumpFatigue_CountJumps");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_GetActiveGameplayEffectStackCount_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_GetActiveGameplayEffectStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_GetValueAtLevel_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, Temp_int_Variable) == 0x00002C, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_GetValueAsBool_ReturnValue) == 0x000031, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_CountJumps, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_CountJumps::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.JumpFatigue_Landed
// 0x0020 (0x0020 - 0x0000)
struct CreatureBaseRidableComponent_C_JumpFatigue_Landed final
{
public:
	int32                                         CallFunc_GetActiveGameplayEffectStackCount_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_JumpFatigue_Landed) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_JumpFatigue_Landed");
static_assert(sizeof(CreatureBaseRidableComponent_C_JumpFatigue_Landed) == 0x000020, "Wrong size on CreatureBaseRidableComponent_C_JumpFatigue_Landed");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_GetActiveGameplayEffectStackCount_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_GetActiveGameplayEffectStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_GetValueAtLevel_ReturnValue) == 0x000004, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_GetValueAsBool_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_Landed, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_Landed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.JumpFatigue_LandTimeStamp
// 0x0008 (0x0008 - 0x0000)
struct CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp final
{
public:
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp");
static_assert(sizeof(CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp) == 0x000008, "Wrong size on CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_LandTimeStamp::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.JumpFatigue_RemoveFatigue
// 0x0018 (0x0018 - 0x0000)
struct CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue");
static_assert(sizeof(CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue) == 0x000018, "Wrong size on CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue, K2Node_DynamicCast_AsFort_AIPawn) == 0x000008, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000011, "Member 'CreatureBaseRidableComponent_C_JumpFatigue_RemoveFatigue::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.KickRiderOffSelf
// 0x0018 (0x0018 - 0x0000)
struct CreatureBaseRidableComponent_C_KickRiderOffSelf final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToggleRiding_bChangedRiding;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_KickRiderOffSelf) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_KickRiderOffSelf");
static_assert(sizeof(CreatureBaseRidableComponent_C_KickRiderOffSelf) == 0x000018, "Wrong size on CreatureBaseRidableComponent_C_KickRiderOffSelf");
static_assert(offsetof(CreatureBaseRidableComponent_C_KickRiderOffSelf, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_KickRiderOffSelf::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_KickRiderOffSelf, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'CreatureBaseRidableComponent_C_KickRiderOffSelf::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_KickRiderOffSelf, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_KickRiderOffSelf::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_KickRiderOffSelf, CallFunc_ToggleRiding_bChangedRiding) == 0x000011, "Member 'CreatureBaseRidableComponent_C_KickRiderOffSelf::CallFunc_ToggleRiding_bChangedRiding' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.MountLandedClient
// 0x00E8 (0x00E8 - 0x0000)
struct CreatureBaseRidableComponent_C_MountLandedClient final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CreatureBaseRidableComponent_C_MountLandedClient) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_MountLandedClient");
static_assert(sizeof(CreatureBaseRidableComponent_C_MountLandedClient) == 0x0000E8, "Wrong size on CreatureBaseRidableComponent_C_MountLandedClient");
static_assert(offsetof(CreatureBaseRidableComponent_C_MountLandedClient, Hit) == 0x000000, "Member 'CreatureBaseRidableComponent_C_MountLandedClient::Hit' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.MountLandedServer_JumpFatigue
// 0x00E8 (0x00E8 - 0x0000)
struct CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue");
static_assert(sizeof(CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue) == 0x0000E8, "Wrong size on CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue");
static_assert(offsetof(CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue, Hit) == 0x000000, "Member 'CreatureBaseRidableComponent_C_MountLandedServer_JumpFatigue::Hit' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.NPCPawnInteractWithDispatcher_Event_0
// 0x0010 (0x0010 - 0x0000)
struct CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0 final
{
public:
	class AActor*                                 AIPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        InteractingPlayerPawn;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0");
static_assert(sizeof(CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0) == 0x000010, "Wrong size on CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0");
static_assert(offsetof(CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0, AIPawn) == 0x000000, "Member 'CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0::AIPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0, InteractingPlayerPawn) == 0x000008, "Member 'CreatureBaseRidableComponent_C_NPCPawnInteractWithDispatcher_Event_0::InteractingPlayerPawn' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.OnEatToRefuel
// 0x0008 (0x0008 - 0x0000)
struct CreatureBaseRidableComponent_C_OnEatToRefuel final
{
public:
	double                                        EnergyCost;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_OnEatToRefuel) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_OnEatToRefuel");
static_assert(sizeof(CreatureBaseRidableComponent_C_OnEatToRefuel) == 0x000008, "Wrong size on CreatureBaseRidableComponent_C_OnEatToRefuel");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnEatToRefuel, EnergyCost) == 0x000000, "Member 'CreatureBaseRidableComponent_C_OnEatToRefuel::EnergyCost' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.OnEnergyUpdate
// 0x0010 (0x0010 - 0x0000)
struct CreatureBaseRidableComponent_C_OnEnergyUpdate final
{
public:
	double                                        Energy;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWarningActive;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_OnEnergyUpdate) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_OnEnergyUpdate");
static_assert(sizeof(CreatureBaseRidableComponent_C_OnEnergyUpdate) == 0x000010, "Wrong size on CreatureBaseRidableComponent_C_OnEnergyUpdate");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnEnergyUpdate, Energy) == 0x000000, "Member 'CreatureBaseRidableComponent_C_OnEnergyUpdate::Energy' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnEnergyUpdate, bWarningActive) == 0x000008, "Member 'CreatureBaseRidableComponent_C_OnEnergyUpdate::bWarningActive' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.OnJumping
// 0x0008 (0x0008 - 0x0000)
struct CreatureBaseRidableComponent_C_OnJumping final
{
public:
	double                                        JumpPitchInterpSpeed;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_OnJumping) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_OnJumping");
static_assert(sizeof(CreatureBaseRidableComponent_C_OnJumping) == 0x000008, "Wrong size on CreatureBaseRidableComponent_C_OnJumping");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnJumping, JumpPitchInterpSpeed) == 0x000000, "Member 'CreatureBaseRidableComponent_C_OnJumping::JumpPitchInterpSpeed' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.OnMovementModeChanged
// 0x0038 (0x0038 - 0x0000)
struct CreatureBaseRidableComponent_C_OnMovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurfaceSwimming_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_OnMovementModeChanged) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_OnMovementModeChanged");
static_assert(sizeof(CreatureBaseRidableComponent_C_OnMovementModeChanged) == 0x000038, "Wrong size on CreatureBaseRidableComponent_C_OnMovementModeChanged");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, Character) == 0x000000, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, PrevMovementMode) == 0x000008, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, K2Node_DynamicCast_AsFort_Pawn) == 0x000010, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, CallFunc_IsSurfaceSwimming_ReturnValue) == 0x000019, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::CallFunc_IsSurfaceSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, CallFunc_IsFalling_ReturnValue) == 0x00001A, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, CallFunc_GetTimeSeconds_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnMovementModeChanged, CallFunc_HasAuthority_ReturnValue) == 0x000031, "Member 'CreatureBaseRidableComponent_C_OnMovementModeChanged::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.OnRep_currentEnergyValue
// 0x0001 (0x0001 - 0x0000)
struct CreatureBaseRidableComponent_C_OnRep_currentEnergyValue final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_OnRep_currentEnergyValue) == 0x000001, "Wrong alignment on CreatureBaseRidableComponent_C_OnRep_currentEnergyValue");
static_assert(sizeof(CreatureBaseRidableComponent_C_OnRep_currentEnergyValue) == 0x000001, "Wrong size on CreatureBaseRidableComponent_C_OnRep_currentEnergyValue");
static_assert(offsetof(CreatureBaseRidableComponent_C_OnRep_currentEnergyValue, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_OnRep_currentEnergyValue::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.Propagate Immunity Fall Damage
// 0x00B0 (0x00B0 - 0x0000)
struct CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage final
{
public:
	struct FScalableFloat                         CanProbagateImmunityFallDanage;                    // 0x0000(0x0028)(Edit, BlueprintVisible)
	class AActor*                                 RiderActor;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class UGameplayEffect>>    GE_ImmunityFallDamage;                             // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<TSubclassOf<class UGameplayEffect>>    K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage");
static_assert(sizeof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage) == 0x0000B0, "Wrong size on CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CanProbagateImmunityFallDanage) == 0x000000, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CanProbagateImmunityFallDanage' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, RiderActor) == 0x000028, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::RiderActor' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, GE_ImmunityFallDamage) == 0x000030, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::GE_ImmunityFallDamage' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, K2Node_MakeArray_Array) == 0x000040, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_GetValueAsBool_ReturnValue) == 0x000050, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_GetOwner_ReturnValue_1) == 0x000080, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, K2Node_DynamicCast_AsFort_Pawn) == 0x000088, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000098, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000A8, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, CallFunc_BooleanOR_ReturnValue) == 0x0000A9, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage, K2Node_SwitchEnum_CmpSuccess) == 0x0000AA, "Member 'CreatureBaseRidableComponent_C_Propagate_Immunity_Fall_Damage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct CreatureBaseRidableComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on CreatureBaseRidableComponent_C_ReceiveEndPlay");
static_assert(sizeof(CreatureBaseRidableComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on CreatureBaseRidableComponent_C_ReceiveEndPlay");
static_assert(offsetof(CreatureBaseRidableComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.RemoveGEByTag
// 0x0038 (0x0038 - 0x0000)
struct CreatureBaseRidableComponent_C_RemoveGEByTag final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_RemoveGEByTag) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_RemoveGEByTag");
static_assert(sizeof(CreatureBaseRidableComponent_C_RemoveGEByTag) == 0x000038, "Wrong size on CreatureBaseRidableComponent_C_RemoveGEByTag");
static_assert(offsetof(CreatureBaseRidableComponent_C_RemoveGEByTag, Tags) == 0x000000, "Member 'CreatureBaseRidableComponent_C_RemoveGEByTag::Tags' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RemoveGEByTag, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_RemoveGEByTag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RemoveGEByTag, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_RemoveGEByTag::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RemoveGEByTag, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_RemoveGEByTag::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.RestoreCollisionResponses
// 0x0040 (0x0040 - 0x0000)
struct CreatureBaseRidableComponent_C_RestoreCollisionResponses final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_Array_Get_Item;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	ECollisionResponse                            CallFunc_Map_Find_Value;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_RestoreCollisionResponses) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_RestoreCollisionResponses");
static_assert(sizeof(CreatureBaseRidableComponent_C_RestoreCollisionResponses) == 0x000040, "Wrong size on CreatureBaseRidableComponent_C_RestoreCollisionResponses");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Array_Get_Item) == 0x000024, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, K2Node_MakeArray_Array) == 0x000028, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Map_Find_Value) == 0x000038, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_RestoreCollisionResponses, CallFunc_Map_Find_ReturnValue) == 0x000039, "Member 'CreatureBaseRidableComponent_C_RestoreCollisionResponses::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.SetInfiniteStaminaBuff
// 0x01B8 (0x01B8 - 0x0000)
struct CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0010(0x00D0)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x00E0(0x00D0)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff");
static_assert(sizeof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff) == 0x0001B8, "Wrong size on CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff, Enabled) == 0x000000, "Member 'CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff::Enabled' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x0000E0, "Member 'CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff, CallFunc_GetOwner_ReturnValue_1) == 0x0001B0, "Member 'CreatureBaseRidableComponent_C_SetInfiniteStaminaBuff::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.SetWildlifeHealth
// 0x0028 (0x0028 - 0x0000)
struct CreatureBaseRidableComponent_C_SetWildlifeHealth final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_SetWildlifeHealth) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_SetWildlifeHealth");
static_assert(sizeof(CreatureBaseRidableComponent_C_SetWildlifeHealth) == 0x000028, "Wrong size on CreatureBaseRidableComponent_C_SetWildlifeHealth");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_GetHealth_ReturnValue) == 0x000004, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_GetMaxHealth_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_SetWildlifeHealth, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'CreatureBaseRidableComponent_C_SetWildlifeHealth::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.Should Convert Jump Exit to Jump
// 0x0028 (0x0028 - 0x0000)
struct CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump final
{
public:
	bool                                          Out;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump");
static_assert(sizeof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump) == 0x000028, "Wrong size on CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump");
static_assert(offsetof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump, Out) == 0x000000, "Member 'CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump::Out' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump, CallFunc_GetValueAtLevel_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00001C, "Member 'CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'CreatureBaseRidableComponent_C_Should_Convert_Jump_Exit_to_Jump::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ShouldBufferJumpExitToRetryJump
// 0x01C0 (0x01C0 - 0x0000)
struct CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump final
{
public:
	bool                                          Output;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump");
static_assert(sizeof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump) == 0x0001C0, "Wrong size on CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, Output) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::Output' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_GetValueAtLevel_ReturnValue) == 0x000004, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x00002C, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_K2_SetTimer_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_GetTimeSeconds_ReturnValue) == 0x000050, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, Temp_object_Variable) == 0x000058, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_BreakVector_X) == 0x000070, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_BreakVector_Y) == 0x000078, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_BreakVector_Z) == 0x000080, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_SphereTraceSingle_OutHit) == 0x0000C0, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_SphereTraceSingle_ReturnValue) == 0x0001A8, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0001B0, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001B8, "Member 'CreatureBaseRidableComponent_C_ShouldBufferJumpExitToRetryJump::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.StopSprinting
// 0x0040 (0x0040 - 0x0000)
struct CreatureBaseRidableComponent_C_StopSprinting final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_StopSprinting) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_StopSprinting");
static_assert(sizeof(CreatureBaseRidableComponent_C_StopSprinting) == 0x000040, "Wrong size on CreatureBaseRidableComponent_C_StopSprinting");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_GetOwner_ReturnValue_2) == 0x000020, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_StopSprinting, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'CreatureBaseRidableComponent_C_StopSprinting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.TestThreshold
// 0x0020 (0x0020 - 0x0000)
struct CreatureBaseRidableComponent_C_TestThreshold final
{
public:
	bool                                          isDecaying;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentValue;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        testTreshold;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousState;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          crossedThreshold;                                  // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_TestThreshold) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_TestThreshold");
static_assert(sizeof(CreatureBaseRidableComponent_C_TestThreshold) == 0x000020, "Wrong size on CreatureBaseRidableComponent_C_TestThreshold");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, isDecaying) == 0x000000, "Member 'CreatureBaseRidableComponent_C_TestThreshold::isDecaying' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, CurrentValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_TestThreshold::CurrentValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, testTreshold) == 0x000010, "Member 'CreatureBaseRidableComponent_C_TestThreshold::testTreshold' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, PreviousState) == 0x000018, "Member 'CreatureBaseRidableComponent_C_TestThreshold::PreviousState' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, crossedThreshold) == 0x000019, "Member 'CreatureBaseRidableComponent_C_TestThreshold::crossedThreshold' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'CreatureBaseRidableComponent_C_TestThreshold::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00001B, "Member 'CreatureBaseRidableComponent_C_TestThreshold::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00001C, "Member 'CreatureBaseRidableComponent_C_TestThreshold::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'CreatureBaseRidableComponent_C_TestThreshold::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_TestThreshold, CallFunc_BooleanAND_ReturnValue_1) == 0x00001E, "Member 'CreatureBaseRidableComponent_C_TestThreshold::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ToggleRiding
// 0x0068 (0x0068 - 0x0000)
struct CreatureBaseRidableComponent_C_ToggleRiding final
{
public:
	class AActor*                                 PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRide;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangedRiding;                                    // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URiderComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartRidingActor_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UControllingRiderComponent*             K2Node_DynamicCast_AsControlling_Rider_Component;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ToggleRiding) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ToggleRiding");
static_assert(sizeof(CreatureBaseRidableComponent_C_ToggleRiding) == 0x000068, "Wrong size on CreatureBaseRidableComponent_C_ToggleRiding");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, PlayerPawn) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::PlayerPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, Target) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::Target' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, ShouldRide) == 0x000010, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::ShouldRide' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, bChangedRiding) == 0x000011, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::bChangedRiding' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000018, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1) == 0x000030, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_StopRidingActor_ReturnValue) == 0x000051, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_StopRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_StartRidingActor_ReturnValue) == 0x000052, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_StartRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, K2Node_DynamicCast_AsControlling_Rider_Component) == 0x000058, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::K2Node_DynamicCast_AsControlling_Rider_Component' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, Temp_bool_Variable) == 0x000062, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000063, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, Temp_bool_Variable_1) == 0x000065, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ToggleRiding, CallFunc_Not_PreBool_ReturnValue_1) == 0x000066, "Member 'CreatureBaseRidableComponent_C_ToggleRiding::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.UpdateAnimInputBool
// 0x0018 (0x0018 - 0x0000)
struct CreatureBaseRidableComponent_C_UpdateAnimInputBool final
{
public:
	class AFortPawn*                              FortPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingRidden_0;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAnimInputEvent_Bool*               CallFunc_CreateAnimInputEvent_Bool_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_UpdateAnimInputBool) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_UpdateAnimInputBool");
static_assert(sizeof(CreatureBaseRidableComponent_C_UpdateAnimInputBool) == 0x000018, "Wrong size on CreatureBaseRidableComponent_C_UpdateAnimInputBool");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateAnimInputBool, FortPawn) == 0x000000, "Member 'CreatureBaseRidableComponent_C_UpdateAnimInputBool::FortPawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateAnimInputBool, IsBeingRidden_0) == 0x000008, "Member 'CreatureBaseRidableComponent_C_UpdateAnimInputBool::IsBeingRidden_0' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateAnimInputBool, CallFunc_CreateAnimInputEvent_Bool_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_UpdateAnimInputBool::CallFunc_CreateAnimInputEvent_Bool_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.UpdateLootAnimalGlow
// 0x0070 (0x0070 - 0x0000)
struct CreatureBaseRidableComponent_C_UpdateLootAnimalGlow final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0010(0x0020)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_GetComponentsByTag_ReturnValue;           // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_UpdateLootAnimalGlow");
static_assert(sizeof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow) == 0x000070, "Wrong size on CreatureBaseRidableComponent_C_UpdateLootAnimalGlow");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, Scale) == 0x000000, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::Scale' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, Temp_bool_Variable) == 0x000008, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, CallFunc_GetComponentsByTag_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000048, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, CallFunc_Array_Get_Item) == 0x000060, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000068, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateLootAnimalGlow, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00006C, "Member 'CreatureBaseRidableComponent_C_UpdateLootAnimalGlow::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.UpdateValue
// 0x0040 (0x0040 - 0x0000)
struct CreatureBaseRidableComponent_C_UpdateValue final
{
public:
	double                                        TargetValue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        rateOfChange;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        updatedValue;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnergyDepleted;                                    // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_UpdateValue) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_UpdateValue");
static_assert(sizeof(CreatureBaseRidableComponent_C_UpdateValue) == 0x000040, "Wrong size on CreatureBaseRidableComponent_C_UpdateValue");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, TargetValue) == 0x000000, "Member 'CreatureBaseRidableComponent_C_UpdateValue::TargetValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, rateOfChange) == 0x000008, "Member 'CreatureBaseRidableComponent_C_UpdateValue::rateOfChange' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, DeltaTime) == 0x000010, "Member 'CreatureBaseRidableComponent_C_UpdateValue::DeltaTime' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, updatedValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_UpdateValue::updatedValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, EnergyDepleted) == 0x000020, "Member 'CreatureBaseRidableComponent_C_UpdateValue::EnergyDepleted' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_UpdateValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_UpdateValue::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'CreatureBaseRidableComponent_C_UpdateValue::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_UpdateValue, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000039, "Member 'CreatureBaseRidableComponent_C_UpdateValue::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.UseEnergyAmountServer
// 0x0008 (0x0008 - 0x0000)
struct CreatureBaseRidableComponent_C_UseEnergyAmountServer final
{
public:
	double                                        EnergyCost;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_UseEnergyAmountServer) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_UseEnergyAmountServer");
static_assert(sizeof(CreatureBaseRidableComponent_C_UseEnergyAmountServer) == 0x000008, "Wrong size on CreatureBaseRidableComponent_C_UseEnergyAmountServer");
static_assert(offsetof(CreatureBaseRidableComponent_C_UseEnergyAmountServer, EnergyCost) == 0x000000, "Member 'CreatureBaseRidableComponent_C_UseEnergyAmountServer::EnergyCost' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.CanBePet
// 0x0068 (0x0068 - 0x0000)
struct CreatureBaseRidableComponent_C_CanBePet final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurfaceSwimming_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UControllingRiderComponent*             K2Node_DynamicCast_AsControlling_Rider_Component;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTryingToMove_ReturnValue;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBePet_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_CanBePet) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_CanBePet");
static_assert(sizeof(CreatureBaseRidableComponent_C_CanBePet) == 0x000068, "Wrong size on CreatureBaseRidableComponent_C_CanBePet");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_CanBePet::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_CanBePet::ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, K2Node_DynamicCast_AsFort_Pawn) == 0x000020, "Member 'CreatureBaseRidableComponent_C_CanBePet::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'CreatureBaseRidableComponent_C_CanBePet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000030, "Member 'CreatureBaseRidableComponent_C_CanBePet::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'CreatureBaseRidableComponent_C_CanBePet::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_IsSurfaceSwimming_ReturnValue) == 0x000039, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_IsSurfaceSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, K2Node_DynamicCast_AsControlling_Rider_Component) == 0x000040, "Member 'CreatureBaseRidableComponent_C_CanBePet::K2Node_DynamicCast_AsControlling_Rider_Component' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'CreatureBaseRidableComponent_C_CanBePet::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_IsTryingToMove_ReturnValue) == 0x00004A, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_IsTryingToMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_IsFalling_ReturnValue) == 0x00004B, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_CanBePet_ReturnValue) == 0x00004C, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_CanBePet_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_BooleanOR_ReturnValue) == 0x00004D, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000050, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanBePet, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000060, "Member 'CreatureBaseRidableComponent_C_CanBePet::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.CanRiderPlayEmote
// 0x0010 (0x0010 - 0x0000)
struct CreatureBaseRidableComponent_C_CanRiderPlayEmote final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_CanRiderPlayEmote) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_CanRiderPlayEmote");
static_assert(sizeof(CreatureBaseRidableComponent_C_CanRiderPlayEmote) == 0x000010, "Wrong size on CreatureBaseRidableComponent_C_CanRiderPlayEmote");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanRiderPlayEmote, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_CanRiderPlayEmote::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_CanRiderPlayEmote, ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_CanRiderPlayEmote::ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.GetRiderCapsuleSize
// 0x0050 (0x0050 - 0x0000)
struct CreatureBaseRidableComponent_C_GetRiderCapsuleSize final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RiderCapsuleRadius;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RiderCapsuleHH;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleSize_OutRadius;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleSize_OutHalfHeight;     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_RiderCapsuleRadius_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_RiderCapsuleHH_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_GetRiderCapsuleSize");
static_assert(sizeof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize) == 0x000050, "Wrong size on CreatureBaseRidableComponent_C_GetRiderCapsuleSize");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, RiderCapsuleRadius) == 0x000008, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::RiderCapsuleRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, RiderCapsuleHH) == 0x000010, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::RiderCapsuleHH' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, CallFunc_GetUnscaledCapsuleSize_OutRadius) == 0x000038, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::CallFunc_GetUnscaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, CallFunc_GetUnscaledCapsuleSize_OutHalfHeight) == 0x00003C, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::CallFunc_GetUnscaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, K2Node_FunctionResult_RiderCapsuleRadius_ImplicitCast) == 0x000040, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::K2Node_FunctionResult_RiderCapsuleRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRiderCapsuleSize, K2Node_FunctionResult_RiderCapsuleHH_ImplicitCast) == 0x000048, "Member 'CreatureBaseRidableComponent_C_GetRiderCapsuleSize::K2Node_FunctionResult_RiderCapsuleHH_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.GetRidingCapsuleSize
// 0x0060 (0x0060 - 0x0000)
struct CreatureBaseRidableComponent_C_GetRidingCapsuleSize final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalRadius;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalHalfHeight;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutRadius;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutHalfHeight;                                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRiderCapsuleSize_RiderCapsuleRadius;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRiderCapsuleSize_RiderCapsuleHH;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutRadius_ImplicitCast;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutHalfHeight_ImplicitCast;  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_GetRidingCapsuleSize");
static_assert(sizeof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize) == 0x000060, "Wrong size on CreatureBaseRidableComponent_C_GetRidingCapsuleSize");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, OriginalRadius) == 0x000008, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::OriginalRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, OriginalHalfHeight) == 0x00000C, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::OriginalHalfHeight' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, OutRadius) == 0x000010, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::OutRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, OutHalfHeight) == 0x000014, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::OutHalfHeight' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_GetRiderCapsuleSize_RiderCapsuleRadius) == 0x000018, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_GetRiderCapsuleSize_RiderCapsuleRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_GetRiderCapsuleSize_RiderCapsuleHH) == 0x000020, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_GetRiderCapsuleSize_RiderCapsuleHH' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_FMax_ReturnValue_1) == 0x000040, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000050, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, K2Node_FunctionResult_OutRadius_ImplicitCast) == 0x000058, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::K2Node_FunctionResult_OutRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingCapsuleSize, K2Node_FunctionResult_OutHalfHeight_ImplicitCast) == 0x00005C, "Member 'CreatureBaseRidableComponent_C_GetRidingCapsuleSize::K2Node_FunctionResult_OutHalfHeight_ImplicitCast' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.GetRidingEmoteCapsuleSize
// 0x0048 (0x0048 - 0x0000)
struct CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalRadius;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalHalfHeight;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutRadius;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutHalfHeight;                                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRidingCapsuleSize_OutRadius;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRidingCapsuleSize_OutHalfHeight;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutRadius_ImplicitCast;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutHalfHeight_ImplicitCast;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize");
static_assert(sizeof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize) == 0x000048, "Wrong size on CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, OriginalRadius) == 0x000008, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::OriginalRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, OriginalHalfHeight) == 0x00000C, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::OriginalHalfHeight' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, OutRadius) == 0x000010, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::OutRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, OutHalfHeight) == 0x000014, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::OutHalfHeight' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, CallFunc_GetRidingCapsuleSize_OutRadius) == 0x000018, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::CallFunc_GetRidingCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, CallFunc_GetRidingCapsuleSize_OutHalfHeight) == 0x00001C, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::CallFunc_GetRidingCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, K2Node_FunctionResult_OutRadius_ImplicitCast) == 0x000030, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::K2Node_FunctionResult_OutRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, K2Node_FunctionResult_OutHalfHeight_ImplicitCast) == 0x000034, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::K2Node_FunctionResult_OutHalfHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000040, "Member 'CreatureBaseRidableComponent_C_GetRidingEmoteCapsuleSize::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.IsSwimming
// 0x0020 (0x0020 - 0x0000)
struct CreatureBaseRidableComponent_C_IsSwimming final
{
public:
	bool                                          IsSwimming_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurfaceSwimming_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_IsSwimming) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_IsSwimming");
static_assert(sizeof(CreatureBaseRidableComponent_C_IsSwimming) == 0x000020, "Wrong size on CreatureBaseRidableComponent_C_IsSwimming");
static_assert(offsetof(CreatureBaseRidableComponent_C_IsSwimming, IsSwimming_0) == 0x000000, "Member 'CreatureBaseRidableComponent_C_IsSwimming::IsSwimming_0' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_IsSwimming, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_IsSwimming::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_IsSwimming, K2Node_DynamicCast_AsFort_Pawn) == 0x000010, "Member 'CreatureBaseRidableComponent_C_IsSwimming::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_IsSwimming, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CreatureBaseRidableComponent_C_IsSwimming::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_IsSwimming, CallFunc_IsSurfaceSwimming_ReturnValue) == 0x000019, "Member 'CreatureBaseRidableComponent_C_IsSwimming::CallFunc_IsSurfaceSwimming_ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ShouldCameraFocusOnRidable
// 0x0010 (0x0010 - 0x0000)
struct CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable");
static_assert(sizeof(CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable) == 0x000010, "Wrong size on CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable, ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ShouldCameraFocusOnRidable::ReturnValue' has a wrong offset!");

// Function CreatureBaseRidableComponent.CreatureBaseRidableComponent_C.ShouldSetAsViewTarget
// 0x0010 (0x0010 - 0x0000)
struct CreatureBaseRidableComponent_C_ShouldSetAsViewTarget final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreatureBaseRidableComponent_C_ShouldSetAsViewTarget) == 0x000008, "Wrong alignment on CreatureBaseRidableComponent_C_ShouldSetAsViewTarget");
static_assert(sizeof(CreatureBaseRidableComponent_C_ShouldSetAsViewTarget) == 0x000010, "Wrong size on CreatureBaseRidableComponent_C_ShouldSetAsViewTarget");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldSetAsViewTarget, Rider) == 0x000000, "Member 'CreatureBaseRidableComponent_C_ShouldSetAsViewTarget::Rider' has a wrong offset!");
static_assert(offsetof(CreatureBaseRidableComponent_C_ShouldSetAsViewTarget, ReturnValue) == 0x000008, "Member 'CreatureBaseRidableComponent_C_ShouldSetAsViewTarget::ReturnValue' has a wrong offset!");

}

