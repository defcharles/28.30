#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicRollTablesRuntime

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DataRegistry_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class DynamicRollTablesRuntime.FortControllerComponent_DynamicRollPlayerComponent
// 0x00F8 (0x01A0 - 0x00A8)
class UFortControllerComponent_DynamicRollPlayerComponent : public UFortControllerComponent
{
public:
	TSubclassOf<class UFortGamestateComponent_DynamicRollTableManager> AssociatedManagerClass;                            // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Enabled;                                           // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortGamestateComponent_DynamicRollTableManager* TableManager;                                      // 0x00D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x64];                                      // 0x00E0(0x0064)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          SeededRNG;                                         // 0x0144(0x0008)(ZeroConstructor, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14C[0x54];                                     // 0x014C(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FFortDynamicRollResult> AuthorityRollChoices(const int32 NumChoices, const TArray<class UFortItemDefinition*>& IgnoreItems);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortControllerComponent_DynamicRollPlayerComponent">();
	}
	static class UFortControllerComponent_DynamicRollPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortControllerComponent_DynamicRollPlayerComponent>();
	}
};
static_assert(alignof(UFortControllerComponent_DynamicRollPlayerComponent) == 0x000008, "Wrong alignment on UFortControllerComponent_DynamicRollPlayerComponent");
static_assert(sizeof(UFortControllerComponent_DynamicRollPlayerComponent) == 0x0001A0, "Wrong size on UFortControllerComponent_DynamicRollPlayerComponent");
static_assert(offsetof(UFortControllerComponent_DynamicRollPlayerComponent, AssociatedManagerClass) == 0x0000A8, "Member 'UFortControllerComponent_DynamicRollPlayerComponent::AssociatedManagerClass' has a wrong offset!");
static_assert(offsetof(UFortControllerComponent_DynamicRollPlayerComponent, Enabled) == 0x0000B0, "Member 'UFortControllerComponent_DynamicRollPlayerComponent::Enabled' has a wrong offset!");
static_assert(offsetof(UFortControllerComponent_DynamicRollPlayerComponent, TableManager) == 0x0000D8, "Member 'UFortControllerComponent_DynamicRollPlayerComponent::TableManager' has a wrong offset!");
static_assert(offsetof(UFortControllerComponent_DynamicRollPlayerComponent, SeededRNG) == 0x000144, "Member 'UFortControllerComponent_DynamicRollPlayerComponent::SeededRNG' has a wrong offset!");

// Class DynamicRollTablesRuntime.FortGamestateComponent_DynamicRollTableManager
// 0x0238 (0x02D8 - 0x00A0)
class UFortGamestateComponent_DynamicRollTableManager : public UFortGameStateComponent
{
public:
	uint8                                         Pad_A0[0x30];                                      // 0x00A0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataRegistryType                      DataRegistryType_BaseWeights;                      // 0x00D0(0x0004)(ZeroConstructor, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataRegistryType                      DataRegistryType_WeightModifiers;                  // 0x00D4(0x0004)(ZeroConstructor, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Enabled;                                           // 0x00D8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_100[0x1D8];                                    // 0x0100(0x01D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandlePlaylistDataReady(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGamestateComponent_DynamicRollTableManager">();
	}
	static class UFortGamestateComponent_DynamicRollTableManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGamestateComponent_DynamicRollTableManager>();
	}
};
static_assert(alignof(UFortGamestateComponent_DynamicRollTableManager) == 0x000008, "Wrong alignment on UFortGamestateComponent_DynamicRollTableManager");
static_assert(sizeof(UFortGamestateComponent_DynamicRollTableManager) == 0x0002D8, "Wrong size on UFortGamestateComponent_DynamicRollTableManager");
static_assert(offsetof(UFortGamestateComponent_DynamicRollTableManager, DataRegistryType_BaseWeights) == 0x0000D0, "Member 'UFortGamestateComponent_DynamicRollTableManager::DataRegistryType_BaseWeights' has a wrong offset!");
static_assert(offsetof(UFortGamestateComponent_DynamicRollTableManager, DataRegistryType_WeightModifiers) == 0x0000D4, "Member 'UFortGamestateComponent_DynamicRollTableManager::DataRegistryType_WeightModifiers' has a wrong offset!");
static_assert(offsetof(UFortGamestateComponent_DynamicRollTableManager, Enabled) == 0x0000D8, "Member 'UFortGamestateComponent_DynamicRollTableManager::Enabled' has a wrong offset!");

}

