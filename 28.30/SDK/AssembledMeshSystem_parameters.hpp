#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AssembledMeshSystem

#include "Basic.hpp"


namespace SDK::Params
{

// Function AssembledMeshSystem.AssembledMeshUserComponent.CustomizationCompleted
// 0x0004 (0x0004 - 0x0000)
struct AssembledMeshUserComponent_CustomizationCompleted final
{
public:
	int32                                         PartIndex;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssembledMeshUserComponent_CustomizationCompleted) == 0x000004, "Wrong alignment on AssembledMeshUserComponent_CustomizationCompleted");
static_assert(sizeof(AssembledMeshUserComponent_CustomizationCompleted) == 0x000004, "Wrong size on AssembledMeshUserComponent_CustomizationCompleted");
static_assert(offsetof(AssembledMeshUserComponent_CustomizationCompleted, PartIndex) == 0x000000, "Member 'AssembledMeshUserComponent_CustomizationCompleted::PartIndex' has a wrong offset!");

// Function AssembledMeshSystem.AssembledMeshUserComponent.GetAttachToComponent
// 0x0008 (0x0008 - 0x0000)
struct AssembledMeshUserComponent_GetAttachToComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssembledMeshUserComponent_GetAttachToComponent) == 0x000008, "Wrong alignment on AssembledMeshUserComponent_GetAttachToComponent");
static_assert(sizeof(AssembledMeshUserComponent_GetAttachToComponent) == 0x000008, "Wrong size on AssembledMeshUserComponent_GetAttachToComponent");
static_assert(offsetof(AssembledMeshUserComponent_GetAttachToComponent, ReturnValue) == 0x000000, "Member 'AssembledMeshUserComponent_GetAttachToComponent::ReturnValue' has a wrong offset!");

// Function AssembledMeshSystem.AssembledMeshUserComponent.SetMeshPart
// 0x0008 (0x0008 - 0x0000)
struct AssembledMeshUserComponent_SetMeshPart final
{
public:
	class UAssembledMeshSchema*                   InMeshPart;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssembledMeshUserComponent_SetMeshPart) == 0x000008, "Wrong alignment on AssembledMeshUserComponent_SetMeshPart");
static_assert(sizeof(AssembledMeshUserComponent_SetMeshPart) == 0x000008, "Wrong size on AssembledMeshUserComponent_SetMeshPart");
static_assert(offsetof(AssembledMeshUserComponent_SetMeshPart, InMeshPart) == 0x000000, "Member 'AssembledMeshUserComponent_SetMeshPart::InMeshPart' has a wrong offset!");

// Function AssembledMeshSystem.AssembledMeshUserComponent.GetMeshPart
// 0x0008 (0x0008 - 0x0000)
struct AssembledMeshUserComponent_GetMeshPart final
{
public:
	class UAssembledMeshSchema*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssembledMeshUserComponent_GetMeshPart) == 0x000008, "Wrong alignment on AssembledMeshUserComponent_GetMeshPart");
static_assert(sizeof(AssembledMeshUserComponent_GetMeshPart) == 0x000008, "Wrong size on AssembledMeshUserComponent_GetMeshPart");
static_assert(offsetof(AssembledMeshUserComponent_GetMeshPart, ReturnValue) == 0x000000, "Member 'AssembledMeshUserComponent_GetMeshPart::ReturnValue' has a wrong offset!");

}

