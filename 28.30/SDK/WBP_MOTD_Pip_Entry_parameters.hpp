#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MOTD_Pip_Entry

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.ExecuteUbergraph_WBP_MOTD_Pip_Entry
// 0x0030 (0x0030 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry) == 0x000008, "Wrong alignment on WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry) == 0x000030, "Wrong size on WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, EntryPoint) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, Temp_bool_Variable) == 0x000004, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, K2Node_Event_bIsExpanded) == 0x000005, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, K2Node_Event_bIsSelected) == 0x000006, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, K2Node_Event_ListItemObject) == 0x000008, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, K2Node_CustomEvent_Active) == 0x000010, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, K2Node_Select_Default) == 0x000018, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'WBP_MOTD_Pip_Entry_C_ExecuteUbergraph_WBP_MOTD_Pip_Entry::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_MOTD_Pip_Entry_C_OnListItemObjectSet");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_MOTD_Pip_Entry_C_OnListItemObjectSet");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetActive
// 0x0001 (0x0001 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_SetActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_SetActive) == 0x000001, "Wrong alignment on WBP_MOTD_Pip_Entry_C_SetActive");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_SetActive) == 0x000001, "Wrong size on WBP_MOTD_Pip_Entry_C_SetActive");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetActive, Active) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_SetActive::Active' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetDisplayTimer
// 0x0002 (0x0002 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_SetDisplayTimer final
{
public:
	bool                                          DisplayTimer_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Progressbar_0;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_SetDisplayTimer) == 0x000001, "Wrong alignment on WBP_MOTD_Pip_Entry_C_SetDisplayTimer");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_SetDisplayTimer) == 0x000002, "Wrong size on WBP_MOTD_Pip_Entry_C_SetDisplayTimer");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetDisplayTimer, DisplayTimer_0) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_SetDisplayTimer::DisplayTimer_0' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetDisplayTimer, Show_Progressbar_0) == 0x000001, "Member 'WBP_MOTD_Pip_Entry_C_SetDisplayTimer::Show_Progressbar_0' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetDuration
// 0x0008 (0x0008 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_SetDuration final
{
public:
	double                                        DurationValue;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_SetDuration) == 0x000008, "Wrong alignment on WBP_MOTD_Pip_Entry_C_SetDuration");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_SetDuration) == 0x000008, "Wrong size on WBP_MOTD_Pip_Entry_C_SetDuration");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetDuration, DurationValue) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_SetDuration::DurationValue' has a wrong offset!");

// Function WBP_MOTD_Pip_Entry.WBP_MOTD_Pip_Entry_C.SetTimerAnimPlaying
// 0x0028 (0x0028 - 0x0000)
struct WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying final
{
public:
	bool                                          IsPaused;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying) == 0x000008, "Wrong alignment on WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying");
static_assert(sizeof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying) == 0x000028, "Wrong size on WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying, IsPaused) == 0x000000, "Member 'WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying::IsPaused' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying, CallFunc_PauseAnimation_ReturnValue) == 0x000020, "Member 'WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying::CallFunc_PauseAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000024, "Member 'WBP_MOTD_Pip_Entry_C_SetTimerAnimPlaying::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

}

