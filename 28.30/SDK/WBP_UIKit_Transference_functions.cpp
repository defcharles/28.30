#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Transference

#include "Basic.hpp"

#include "WBP_UIKit_Transference_classes.hpp"
#include "WBP_UIKit_Transference_parameters.hpp"


namespace SDK
{

// Function WBP_UIKit_Transference.WBP_UIKit_Transference_C.SetHasTransference
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Has_Transference                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Transference_C::SetHasTransference(bool Has_Transference)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHasTransference");

	Params::WBP_UIKit_Transference_C_SetHasTransference Parms{};

	Parms.Has_Transference = Has_Transference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Transference.WBP_UIKit_Transference_C.SetHasTransferenceModes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<ECosmeticCompatibleMode>           Compatible_Modes                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_Transference_C::SetHasTransferenceModes(const TSet<ECosmeticCompatibleMode>& Compatible_Modes)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetHasTransferenceModes");

	Params::WBP_UIKit_Transference_C_SetHasTransferenceModes Parms{};

	Parms.Compatible_Modes = std::move(Compatible_Modes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Transference.WBP_UIKit_Transference_C.SetIsEnhanced
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Enhanced                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Transference_C::SetIsEnhanced(bool Is_Enhanced)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIsEnhanced");

	Params::WBP_UIKit_Transference_C_SetIsEnhanced Parms{};

	Parms.Is_Enhanced = Is_Enhanced;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Transference.WBP_UIKit_Transference_C.SetRoundedCorners
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Rounded                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Transference_C::SetRoundedCorners(bool Is_Rounded)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetRoundedCorners");

	Params::WBP_UIKit_Transference_C_SetRoundedCorners Parms{};

	Parms.Is_Rounded = Is_Rounded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Transference.WBP_UIKit_Transference_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Transference_C::SetSize(const struct FVector2D& Size)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetSize");

	Params::WBP_UIKit_Transference_C_SetSize Parms{};

	Parms.Size = std::move(Size);

	UObject::ProcessEvent(Func, &Parms);
}

}

