#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_VideoSchedule

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum CRD_VideoSchedule.EVideoScheduleDeviceRepeat
// NumValues: 0x0003
enum class EVideoScheduleDeviceRepeat : uint8
{
	None                                     = 0,
	Hourly                                   = 1,
	Daily                                    = 2,
};

// ScriptStruct CRD_VideoSchedule.VideoScheduleDeviceEntryHourly
// 0x0028 (0x0028 - 0x0000)
struct FVideoScheduleDeviceEntryHourly final
{
public:
	int32                                         Minutes;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seconds;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VUID;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DurationSeconds;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         Sequence;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVideoScheduleDeviceEntryHourly) == 0x000008, "Wrong alignment on FVideoScheduleDeviceEntryHourly");
static_assert(sizeof(FVideoScheduleDeviceEntryHourly) == 0x000028, "Wrong size on FVideoScheduleDeviceEntryHourly");
static_assert(offsetof(FVideoScheduleDeviceEntryHourly, Minutes) == 0x000000, "Member 'FVideoScheduleDeviceEntryHourly::Minutes' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryHourly, Seconds) == 0x000004, "Member 'FVideoScheduleDeviceEntryHourly::Seconds' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryHourly, VUID) == 0x000008, "Member 'FVideoScheduleDeviceEntryHourly::VUID' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryHourly, DurationSeconds) == 0x000018, "Member 'FVideoScheduleDeviceEntryHourly::DurationSeconds' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryHourly, Sequence) == 0x000020, "Member 'FVideoScheduleDeviceEntryHourly::Sequence' has a wrong offset!");

// ScriptStruct CRD_VideoSchedule.VideoScheduleDeviceEntryDaily
// 0x0030 (0x0030 - 0x0000)
struct FVideoScheduleDeviceEntryDaily final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minutes;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seconds;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VUID;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DurationSeconds;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         Sequence;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVideoScheduleDeviceEntryDaily) == 0x000008, "Wrong alignment on FVideoScheduleDeviceEntryDaily");
static_assert(sizeof(FVideoScheduleDeviceEntryDaily) == 0x000030, "Wrong size on FVideoScheduleDeviceEntryDaily");
static_assert(offsetof(FVideoScheduleDeviceEntryDaily, Hours) == 0x000000, "Member 'FVideoScheduleDeviceEntryDaily::Hours' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryDaily, Minutes) == 0x000004, "Member 'FVideoScheduleDeviceEntryDaily::Minutes' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryDaily, Seconds) == 0x000008, "Member 'FVideoScheduleDeviceEntryDaily::Seconds' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryDaily, VUID) == 0x000010, "Member 'FVideoScheduleDeviceEntryDaily::VUID' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryDaily, DurationSeconds) == 0x000020, "Member 'FVideoScheduleDeviceEntryDaily::DurationSeconds' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryDaily, Sequence) == 0x000028, "Member 'FVideoScheduleDeviceEntryDaily::Sequence' has a wrong offset!");

// ScriptStruct CRD_VideoSchedule.VideoScheduleDeviceEntryAbsolute
// 0x0030 (0x0030 - 0x0000)
struct FVideoScheduleDeviceEntryAbsolute final
{
public:
	class FString                                 IsoStartTime;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VUID;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DurationSeconds;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         Sequence;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVideoScheduleDeviceEntryAbsolute) == 0x000008, "Wrong alignment on FVideoScheduleDeviceEntryAbsolute");
static_assert(sizeof(FVideoScheduleDeviceEntryAbsolute) == 0x000030, "Wrong size on FVideoScheduleDeviceEntryAbsolute");
static_assert(offsetof(FVideoScheduleDeviceEntryAbsolute, IsoStartTime) == 0x000000, "Member 'FVideoScheduleDeviceEntryAbsolute::IsoStartTime' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryAbsolute, VUID) == 0x000010, "Member 'FVideoScheduleDeviceEntryAbsolute::VUID' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryAbsolute, DurationSeconds) == 0x000020, "Member 'FVideoScheduleDeviceEntryAbsolute::DurationSeconds' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceEntryAbsolute, Sequence) == 0x000028, "Member 'FVideoScheduleDeviceEntryAbsolute::Sequence' has a wrong offset!");

// ScriptStruct CRD_VideoSchedule.VideoScheduleDeviceScheduleInfo
// 0x0028 (0x0028 - 0x0000)
struct FVideoScheduleDeviceScheduleInfo final
{
public:
	struct FDateTime                              StartTime;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              RelativeStartTime;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VUID;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         Sequence;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVideoScheduleDeviceScheduleInfo) == 0x000008, "Wrong alignment on FVideoScheduleDeviceScheduleInfo");
static_assert(sizeof(FVideoScheduleDeviceScheduleInfo) == 0x000028, "Wrong size on FVideoScheduleDeviceScheduleInfo");
static_assert(offsetof(FVideoScheduleDeviceScheduleInfo, StartTime) == 0x000000, "Member 'FVideoScheduleDeviceScheduleInfo::StartTime' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceScheduleInfo, RelativeStartTime) == 0x000008, "Member 'FVideoScheduleDeviceScheduleInfo::RelativeStartTime' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceScheduleInfo, VUID) == 0x000010, "Member 'FVideoScheduleDeviceScheduleInfo::VUID' has a wrong offset!");
static_assert(offsetof(FVideoScheduleDeviceScheduleInfo, Sequence) == 0x000020, "Member 'FVideoScheduleDeviceScheduleInfo::Sequence' has a wrong offset!");

}

