#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ORS

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct ORS.ClassTuple
// 0x0040 (0x0040 - 0x0000)
struct FClassTuple final
{
public:
	class UClass*                                 _Classes[0x7];                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FClassTuple) == 0x000008, "Wrong alignment on FClassTuple");
static_assert(sizeof(FClassTuple) == 0x000040, "Wrong size on FClassTuple");
static_assert(offsetof(FClassTuple, _Classes) == 0x000000, "Member 'FClassTuple::_Classes' has a wrong offset!");

// ScriptStruct ORS.ORSClassTupleList
// 0x0010 (0x0010 - 0x0000)
struct FORSClassTupleList final
{
public:
	TArray<class UORSClassTuple*>                 ClassTuples;                                       // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FORSClassTupleList) == 0x000008, "Wrong alignment on FORSClassTupleList");
static_assert(sizeof(FORSClassTupleList) == 0x000010, "Wrong size on FORSClassTupleList");
static_assert(offsetof(FORSClassTupleList, ClassTuples) == 0x000000, "Member 'FORSClassTupleList::ClassTuples' has a wrong offset!");

// ScriptStruct ORS.ORSGroupObjectList
// 0x0010 (0x0010 - 0x0000)
struct FORSGroupObjectList final
{
public:
	TArray<class UObject*>                        BuiltObjects;                                      // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FORSGroupObjectList) == 0x000008, "Wrong alignment on FORSGroupObjectList");
static_assert(sizeof(FORSGroupObjectList) == 0x000010, "Wrong size on FORSGroupObjectList");
static_assert(offsetof(FORSGroupObjectList, BuiltObjects) == 0x000000, "Member 'FORSGroupObjectList::BuiltObjects' has a wrong offset!");

// ScriptStruct ORS.ORSGroupRef
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x04) FORSGroupRef final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FORSGroupRef) == 0x000004, "Wrong alignment on FORSGroupRef");
static_assert(sizeof(FORSGroupRef) == 0x000018, "Wrong size on FORSGroupRef");

// ScriptStruct ORS.ORSInstanceRef
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FORSInstanceRef final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FORSInstanceRef) == 0x000004, "Wrong alignment on FORSInstanceRef");
static_assert(sizeof(FORSInstanceRef) == 0x000010, "Wrong size on FORSInstanceRef");

// ScriptStruct ORS.ORSNetSerializableReplicationProxy
// 0x0038 (0x0038 - 0x0000)
struct FORSNetSerializableReplicationProxy final
{
public:
	TScriptInterface<class IORSNetSerializable>   Object;                                            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UObject>                    ObjectClass;                                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                 ObjectData;                                        // 0x0018(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UPackageMap*                            ClientPackageMap;                                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FORSNetSerializableReplicationProxy) == 0x000008, "Wrong alignment on FORSNetSerializableReplicationProxy");
static_assert(sizeof(FORSNetSerializableReplicationProxy) == 0x000038, "Wrong size on FORSNetSerializableReplicationProxy");
static_assert(offsetof(FORSNetSerializableReplicationProxy, Object) == 0x000000, "Member 'FORSNetSerializableReplicationProxy::Object' has a wrong offset!");
static_assert(offsetof(FORSNetSerializableReplicationProxy, ObjectClass) == 0x000010, "Member 'FORSNetSerializableReplicationProxy::ObjectClass' has a wrong offset!");
static_assert(offsetof(FORSNetSerializableReplicationProxy, ObjectData) == 0x000018, "Member 'FORSNetSerializableReplicationProxy::ObjectData' has a wrong offset!");
static_assert(offsetof(FORSNetSerializableReplicationProxy, ClientPackageMap) == 0x000028, "Member 'FORSNetSerializableReplicationProxy::ClientPackageMap' has a wrong offset!");

// ScriptStruct ORS.ORSObjectArray
// 0x0038 (0x0038 - 0x0000)
struct FORSObjectArray final
{
public:
	class UObject*                                _Objects[0x7];                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FORSObjectArray) == 0x000008, "Wrong alignment on FORSObjectArray");
static_assert(sizeof(FORSObjectArray) == 0x000038, "Wrong size on FORSObjectArray");
static_assert(offsetof(FORSObjectArray, _Objects) == 0x000000, "Member 'FORSObjectArray::_Objects' has a wrong offset!");

// ScriptStruct ORS.ORSObjectTuple
// 0x0040 (0x0040 - 0x0000)
struct FORSObjectTuple final
{
public:
	struct FORSObjectArray                        _Objects;                                          // 0x0000(0x0038)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FORSObjectTuple) == 0x000008, "Wrong alignment on FORSObjectTuple");
static_assert(sizeof(FORSObjectTuple) == 0x000040, "Wrong size on FORSObjectTuple");
static_assert(offsetof(FORSObjectTuple, _Objects) == 0x000000, "Member 'FORSObjectTuple::_Objects' has a wrong offset!");

// ScriptStruct ORS.ORSTransactionCache
// 0x0028 (0x0028 - 0x0000)
struct FORSTransactionCache final
{
public:
	class UORSInstance*                           Instance;                                          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x20];                                       // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FORSTransactionCache) == 0x000008, "Wrong alignment on FORSTransactionCache");
static_assert(sizeof(FORSTransactionCache) == 0x000028, "Wrong size on FORSTransactionCache");
static_assert(offsetof(FORSTransactionCache, Instance) == 0x000000, "Member 'FORSTransactionCache::Instance' has a wrong offset!");

}

